/* A Bison parser, made by GNU Bison 2.7.  */

/* Bison implementation for Yacc-like parsers in C
   
      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.7"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yylval          MYSQLlval
#define yychar          MYSQLchar
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs
#define yylloc          MYSQLlloc

/* Copy the first part of user declarations.  */
/* Line 371 of yacc.c  */
#line 24 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()
#include "auth_common.h"                      /* *_ACL */
#include "binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "dd/info_schema/show.h"             // build_show_...
#include "dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "derror.h"
#include "event_parse_data.h"
#include "item_cmpfunc.h"
#include "item_create.h"
#include "item_geofunc.h"
#include "item_json_func.h"
#include "key_spec.h"
#include "keycaches.h"
#include "lex_symbol.h"
#include "lex_token.h"
#include "log_event.h"
#include "my_dbug.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysqld.h"        // slave_net_timeout national_charset_info ...
#include "opt_explain_json.h"
#include "opt_explain_traditional.h"
#include "parse_location.h"
#include "parse_tree_helpers.h"
#include "parse_tree_hints.h"
#include "partition_info.h"                   /* partition_info */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "rpl_filter.h"
#include "rpl_msr.h"       /* multisource replication */
#include "rpl_slave.h"
#include "rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "set_var.h"
#include "sp.h"
#include "sp_head.h"
#include "sp_instr.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_base.h"                        // find_temporary_table
#include "sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql_component.h"
#include "sql_import.h"                        // Sql_cmd_import_table
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_partition.h"                    /* mem_alloc_error */
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_plugin.h"                      // plugin_is_ready
#include "sql_select.h"                        // Sql_cmd_select...
#include "sql_servers.h"
#include "sql_show_status.h"                 // build_show_session_status, ...
#include "sql_signal.h"
#include "sql_table.h"                        /* primary_key_name */
#include "sql_trigger.h"                     // Sql_cmd_create_trigger,
                                             // Sql_cmd_create_trigger
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
                                             // used in RESET_MASTER parsing check
/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, (char*) (A));      \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_syntax_error(YYTHD, ER_THD(YYTHD,ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize_() function call wrapper
*/
#define TMP_CONTEXTUALIZE(x)        \
  do                                \
  {                                 \
    Parse_context pc(YYTHD, Select);\
    if ((x)->contextualize_(&pc))   \
      MYSQL_YYABORT;                \
  } while(0)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    Parse_context pc(YYTHD, Select);                    \
    if (YYTHD->is_error() || (x)->contextualize(&pc))   \
      MYSQL_YYABORT;                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                  \
  do                                                   \
  {                                                    \
    Parse_context pc(YYTHD, Select);                   \
    if (YYTHD->is_error() || (x)->itemize(&pc, (y)))   \
      MYSQL_YYABORT;                                   \
  } while(0)

/**
  PT_statement::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                     \
  do                                                    \
  {                                                     \
    if (YYTHD->is_error() ||                            \
        (Lex->m_sql_cmd= (x)->make_cmd(YYTHD)) == NULL) \
      MYSQL_YYABORT;                                    \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif

/**
  The word DEFAULT is a reserved word, but it is treated as an identifier by
  both parser and the AST. In order to make the interfaces match up, there has
  to be a LEX_STRING for DEFAULT.
*/
static const LEX_STRING default_word =
{ STRING_WITH_LEN(const_cast<char*>("DEFAULT")) };


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use my_syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static void MYSQLerror(YYLTYPE *, THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  my_syntax_error(thd, s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "parse_tree_column_attrs.h"
#include "parse_tree_items.h"
#include "parse_tree_nodes.h"
#include "parse_tree_partitions.h"


/* Line 371 of yacc.c  */
#line 463 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/dist_GPL/sql/sql_yacc.cc"

# ifndef YY_NULL
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULL nullptr
#  else
#   define YY_NULL 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_EXPORT_HOME2_PB2_BUILD_SB_2_22823765_1490244772_57_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_EXPORT_HOME2_PB2_BUILD_SB_2_22823765_1490244772_57_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACCOUNT_SYM = 260,
     ACTION = 261,
     ADD = 262,
     ADDDATE_SYM = 263,
     AFTER_SYM = 264,
     AGAINST = 265,
     AGGREGATE_SYM = 266,
     ALGORITHM_SYM = 267,
     ALL = 268,
     ALTER = 269,
     ALWAYS_SYM = 270,
     OBSOLETE_TOKEN_271 = 271,
     ANALYZE_SYM = 272,
     AND_AND_SYM = 273,
     AND_SYM = 274,
     ANY_SYM = 275,
     AS = 276,
     ASC = 277,
     ASCII_SYM = 278,
     ASENSITIVE_SYM = 279,
     AT_SYM = 280,
     AUTOEXTEND_SIZE_SYM = 281,
     AUTO_INC = 282,
     AVG_ROW_LENGTH = 283,
     AVG_SYM = 284,
     BACKUP_SYM = 285,
     BEFORE_SYM = 286,
     BEGIN_SYM = 287,
     BETWEEN_SYM = 288,
     BIGINT_SYM = 289,
     BINARY_SYM = 290,
     BINLOG_SYM = 291,
     BIN_NUM = 292,
     BIT_AND = 293,
     BIT_OR = 294,
     BIT_SYM = 295,
     BIT_XOR = 296,
     BLOB_SYM = 297,
     BLOCK_SYM = 298,
     BOOLEAN_SYM = 299,
     BOOL_SYM = 300,
     BOTH = 301,
     BTREE_SYM = 302,
     BY = 303,
     BYTE_SYM = 304,
     CACHE_SYM = 305,
     CALL_SYM = 306,
     CASCADE = 307,
     CASCADED = 308,
     CASE_SYM = 309,
     CAST_SYM = 310,
     CATALOG_NAME_SYM = 311,
     CHAIN_SYM = 312,
     CHANGE = 313,
     CHANGED = 314,
     CHANNEL_SYM = 315,
     CHARSET = 316,
     CHAR_SYM = 317,
     CHECKSUM_SYM = 318,
     CHECK_SYM = 319,
     CIPHER_SYM = 320,
     CLASS_ORIGIN_SYM = 321,
     CLIENT_SYM = 322,
     CLOSE_SYM = 323,
     COALESCE = 324,
     CODE_SYM = 325,
     COLLATE_SYM = 326,
     COLLATION_SYM = 327,
     COLUMNS = 328,
     COLUMN_SYM = 329,
     COLUMN_FORMAT_SYM = 330,
     COLUMN_NAME_SYM = 331,
     COMMENT_SYM = 332,
     COMMITTED_SYM = 333,
     COMMIT_SYM = 334,
     COMPACT_SYM = 335,
     COMPLETION_SYM = 336,
     COMPRESSED_SYM = 337,
     COMPRESSION_SYM = 338,
     ENCRYPTION_SYM = 339,
     CONCURRENT = 340,
     CONDITION_SYM = 341,
     CONNECTION_SYM = 342,
     CONSISTENT_SYM = 343,
     CONSTRAINT = 344,
     CONSTRAINT_CATALOG_SYM = 345,
     CONSTRAINT_NAME_SYM = 346,
     CONSTRAINT_SCHEMA_SYM = 347,
     CONTAINS_SYM = 348,
     CONTEXT_SYM = 349,
     CONTINUE_SYM = 350,
     CONVERT_SYM = 351,
     COUNT_SYM = 352,
     CPU_SYM = 353,
     CREATE = 354,
     CROSS = 355,
     CUBE_SYM = 356,
     CURDATE = 357,
     CURRENT_SYM = 358,
     CURRENT_USER = 359,
     CURSOR_SYM = 360,
     CURSOR_NAME_SYM = 361,
     CURTIME = 362,
     DATABASE = 363,
     DATABASES = 364,
     DATAFILE_SYM = 365,
     DATA_SYM = 366,
     DATETIME_SYM = 367,
     DATE_ADD_INTERVAL = 368,
     DATE_SUB_INTERVAL = 369,
     DATE_SYM = 370,
     DAY_HOUR_SYM = 371,
     DAY_MICROSECOND_SYM = 372,
     DAY_MINUTE_SYM = 373,
     DAY_SECOND_SYM = 374,
     DAY_SYM = 375,
     DEALLOCATE_SYM = 376,
     DECIMAL_NUM = 377,
     DECIMAL_SYM = 378,
     DECLARE_SYM = 379,
     DEFAULT_SYM = 380,
     DEFAULT_AUTH_SYM = 381,
     DEFINER_SYM = 382,
     DELAYED_SYM = 383,
     DELAY_KEY_WRITE_SYM = 384,
     DELETE_SYM = 385,
     DESC = 386,
     DESCRIBE = 387,
     DES_KEY_FILE = 388,
     DETERMINISTIC_SYM = 389,
     DIAGNOSTICS_SYM = 390,
     DIRECTORY_SYM = 391,
     DISABLE_SYM = 392,
     DISCARD = 393,
     DISK_SYM = 394,
     DISTINCT = 395,
     DIV_SYM = 396,
     DOUBLE_SYM = 397,
     DO_SYM = 398,
     DROP = 399,
     DUAL_SYM = 400,
     DUMPFILE = 401,
     DUPLICATE_SYM = 402,
     DYNAMIC_SYM = 403,
     EACH_SYM = 404,
     ELSE = 405,
     ELSEIF_SYM = 406,
     ENABLE_SYM = 407,
     ENCLOSED = 408,
     END = 409,
     ENDS_SYM = 410,
     END_OF_INPUT = 411,
     ENGINES_SYM = 412,
     ENGINE_SYM = 413,
     ENUM_SYM = 414,
     EQ = 415,
     EQUAL_SYM = 416,
     ERROR_SYM = 417,
     ERRORS = 418,
     ESCAPED = 419,
     ESCAPE_SYM = 420,
     EVENTS_SYM = 421,
     EVENT_SYM = 422,
     EVERY_SYM = 423,
     EXCHANGE_SYM = 424,
     EXECUTE_SYM = 425,
     EXISTS = 426,
     EXIT_SYM = 427,
     EXPANSION_SYM = 428,
     EXPIRE_SYM = 429,
     EXPORT_SYM = 430,
     EXTENDED_SYM = 431,
     EXTENT_SIZE_SYM = 432,
     EXTRACT_SYM = 433,
     FALSE_SYM = 434,
     FAST_SYM = 435,
     FAULTS_SYM = 436,
     FETCH_SYM = 437,
     FILE_SYM = 438,
     FILE_BLOCK_SIZE_SYM = 439,
     FILTER_SYM = 440,
     FIRST_SYM = 441,
     FIXED_SYM = 442,
     FLOAT_NUM = 443,
     FLOAT_SYM = 444,
     FLUSH_SYM = 445,
     FOLLOWS_SYM = 446,
     FORCE_SYM = 447,
     FOREIGN = 448,
     FOR_SYM = 449,
     FORMAT_SYM = 450,
     FOUND_SYM = 451,
     FROM = 452,
     FULL = 453,
     FULLTEXT_SYM = 454,
     FUNCTION_SYM = 455,
     GE = 456,
     GENERAL = 457,
     GENERATED = 458,
     GROUP_REPLICATION = 459,
     GEOMETRYCOLLECTION_SYM = 460,
     GEOMETRY_SYM = 461,
     GET_FORMAT = 462,
     GET_SYM = 463,
     GLOBAL_SYM = 464,
     GRANT = 465,
     GRANTS = 466,
     GROUP_SYM = 467,
     GROUP_CONCAT_SYM = 468,
     GT_SYM = 469,
     HANDLER_SYM = 470,
     HASH_SYM = 471,
     HAVING = 472,
     HELP_SYM = 473,
     HEX_NUM = 474,
     HIGH_PRIORITY = 475,
     HOST_SYM = 476,
     HOSTS_SYM = 477,
     HOUR_MICROSECOND_SYM = 478,
     HOUR_MINUTE_SYM = 479,
     HOUR_SECOND_SYM = 480,
     HOUR_SYM = 481,
     IDENT = 482,
     IDENTIFIED_SYM = 483,
     IDENT_QUOTED = 484,
     IF = 485,
     IGNORE_SYM = 486,
     IGNORE_SERVER_IDS_SYM = 487,
     IMPORT = 488,
     INDEXES = 489,
     INDEX_SYM = 490,
     INFILE = 491,
     INITIAL_SIZE_SYM = 492,
     INNER_SYM = 493,
     INOUT_SYM = 494,
     INSENSITIVE_SYM = 495,
     INSERT_SYM = 496,
     INSERT_METHOD = 497,
     INSTANCE_SYM = 498,
     INSTALL_SYM = 499,
     INTERVAL_SYM = 500,
     INTO = 501,
     INT_SYM = 502,
     INVOKER_SYM = 503,
     IN_SYM = 504,
     IO_AFTER_GTIDS = 505,
     IO_BEFORE_GTIDS = 506,
     IO_SYM = 507,
     IPC_SYM = 508,
     IS = 509,
     ISOLATION = 510,
     ISSUER_SYM = 511,
     ITERATE_SYM = 512,
     JOIN_SYM = 513,
     JSON_SEPARATOR_SYM = 514,
     JSON_SYM = 515,
     KEYS = 516,
     KEY_BLOCK_SIZE = 517,
     KEY_SYM = 518,
     KILL_SYM = 519,
     LANGUAGE_SYM = 520,
     LAST_SYM = 521,
     LE = 522,
     LEADING = 523,
     LEAVES = 524,
     LEAVE_SYM = 525,
     LEFT = 526,
     LESS_SYM = 527,
     LEVEL_SYM = 528,
     LEX_HOSTNAME = 529,
     LIKE = 530,
     LIMIT = 531,
     LINEAR_SYM = 532,
     LINES = 533,
     LINESTRING_SYM = 534,
     LIST_SYM = 535,
     LOAD = 536,
     LOCAL_SYM = 537,
     LOCATOR_SYM = 538,
     LOCKS_SYM = 539,
     LOCK_SYM = 540,
     LOGFILE_SYM = 541,
     LOGS_SYM = 542,
     LONGBLOB_SYM = 543,
     LONGTEXT_SYM = 544,
     LONG_NUM = 545,
     LONG_SYM = 546,
     LOOP_SYM = 547,
     LOW_PRIORITY = 548,
     LT = 549,
     MASTER_AUTO_POSITION_SYM = 550,
     MASTER_BIND_SYM = 551,
     MASTER_CONNECT_RETRY_SYM = 552,
     MASTER_DELAY_SYM = 553,
     MASTER_HOST_SYM = 554,
     MASTER_LOG_FILE_SYM = 555,
     MASTER_LOG_POS_SYM = 556,
     MASTER_PASSWORD_SYM = 557,
     MASTER_PORT_SYM = 558,
     MASTER_RETRY_COUNT_SYM = 559,
     MASTER_SERVER_ID_SYM = 560,
     MASTER_SSL_CAPATH_SYM = 561,
     MASTER_TLS_VERSION_SYM = 562,
     MASTER_SSL_CA_SYM = 563,
     MASTER_SSL_CERT_SYM = 564,
     MASTER_SSL_CIPHER_SYM = 565,
     MASTER_SSL_CRL_SYM = 566,
     MASTER_SSL_CRLPATH_SYM = 567,
     MASTER_SSL_KEY_SYM = 568,
     MASTER_SSL_SYM = 569,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
     MASTER_SYM = 571,
     MASTER_USER_SYM = 572,
     MASTER_HEARTBEAT_PERIOD_SYM = 573,
     MATCH = 574,
     MAX_CONNECTIONS_PER_HOUR = 575,
     MAX_QUERIES_PER_HOUR = 576,
     MAX_ROWS = 577,
     MAX_SIZE_SYM = 578,
     MAX_SYM = 579,
     MAX_UPDATES_PER_HOUR = 580,
     MAX_USER_CONNECTIONS_SYM = 581,
     MAX_VALUE_SYM = 582,
     MEDIUMBLOB_SYM = 583,
     MEDIUMINT_SYM = 584,
     MEDIUMTEXT_SYM = 585,
     MEDIUM_SYM = 586,
     MEMORY_SYM = 587,
     MERGE_SYM = 588,
     MESSAGE_TEXT_SYM = 589,
     MICROSECOND_SYM = 590,
     MIGRATE_SYM = 591,
     MINUTE_MICROSECOND_SYM = 592,
     MINUTE_SECOND_SYM = 593,
     MINUTE_SYM = 594,
     MIN_ROWS = 595,
     MIN_SYM = 596,
     MODE_SYM = 597,
     MODIFIES_SYM = 598,
     MODIFY_SYM = 599,
     MOD_SYM = 600,
     MONTH_SYM = 601,
     MULTILINESTRING_SYM = 602,
     MULTIPOINT_SYM = 603,
     MULTIPOLYGON_SYM = 604,
     MUTEX_SYM = 605,
     MYSQL_ERRNO_SYM = 606,
     NAMES_SYM = 607,
     NAME_SYM = 608,
     NATIONAL_SYM = 609,
     NATURAL = 610,
     NCHAR_STRING = 611,
     NCHAR_SYM = 612,
     NDBCLUSTER_SYM = 613,
     NE = 614,
     NEG = 615,
     NEVER_SYM = 616,
     NEW_SYM = 617,
     NEXT_SYM = 618,
     NODEGROUP_SYM = 619,
     NONE_SYM = 620,
     NOT2_SYM = 621,
     NOT_SYM = 622,
     NOW_SYM = 623,
     NO_SYM = 624,
     NO_WAIT_SYM = 625,
     NO_WRITE_TO_BINLOG = 626,
     NULL_SYM = 627,
     NUM = 628,
     NUMBER_SYM = 629,
     NUMERIC_SYM = 630,
     NVARCHAR_SYM = 631,
     OFFSET_SYM = 632,
     ON_SYM = 633,
     ONE_SYM = 634,
     ONLY_SYM = 635,
     OPEN_SYM = 636,
     OPTIMIZE = 637,
     OPTIMIZER_COSTS_SYM = 638,
     OPTIONS_SYM = 639,
     OPTION = 640,
     OPTIONALLY = 641,
     OR2_SYM = 642,
     ORDER_SYM = 643,
     OR_OR_SYM = 644,
     OR_SYM = 645,
     OUTER = 646,
     OUTFILE = 647,
     OUT_SYM = 648,
     OWNER_SYM = 649,
     PACK_KEYS_SYM = 650,
     PAGE_SYM = 651,
     PARAM_MARKER = 652,
     PARSER_SYM = 653,
     OBSOLETE_TOKEN_654 = 654,
     PARTIAL = 655,
     PARTITION_SYM = 656,
     PARTITIONS_SYM = 657,
     PARTITIONING_SYM = 658,
     PASSWORD = 659,
     PHASE_SYM = 660,
     PLUGIN_DIR_SYM = 661,
     PLUGIN_SYM = 662,
     PLUGINS_SYM = 663,
     POINT_SYM = 664,
     POLYGON_SYM = 665,
     PORT_SYM = 666,
     POSITION_SYM = 667,
     PRECEDES_SYM = 668,
     PRECISION = 669,
     PREPARE_SYM = 670,
     PRESERVE_SYM = 671,
     PREV_SYM = 672,
     PRIMARY_SYM = 673,
     PRIVILEGES = 674,
     PROCEDURE_SYM = 675,
     PROCESS = 676,
     PROCESSLIST_SYM = 677,
     PROFILE_SYM = 678,
     PROFILES_SYM = 679,
     PROXY_SYM = 680,
     PURGE = 681,
     QUARTER_SYM = 682,
     QUERY_SYM = 683,
     QUICK = 684,
     RANGE_SYM = 685,
     READS_SYM = 686,
     READ_ONLY_SYM = 687,
     READ_SYM = 688,
     READ_WRITE_SYM = 689,
     REAL_SYM = 690,
     REBUILD_SYM = 691,
     RECOVER_SYM = 692,
     REDOFILE_SYM = 693,
     REDO_BUFFER_SIZE_SYM = 694,
     REDUNDANT_SYM = 695,
     REFERENCES = 696,
     REGEXP = 697,
     RELAY = 698,
     RELAYLOG_SYM = 699,
     RELAY_LOG_FILE_SYM = 700,
     RELAY_LOG_POS_SYM = 701,
     RELAY_THREAD = 702,
     RELEASE_SYM = 703,
     RELOAD = 704,
     REMOVE_SYM = 705,
     RENAME = 706,
     REORGANIZE_SYM = 707,
     REPAIR = 708,
     REPEATABLE_SYM = 709,
     REPEAT_SYM = 710,
     REPLACE_SYM = 711,
     REPLICATION = 712,
     REPLICATE_DO_DB = 713,
     REPLICATE_IGNORE_DB = 714,
     REPLICATE_DO_TABLE = 715,
     REPLICATE_IGNORE_TABLE = 716,
     REPLICATE_WILD_DO_TABLE = 717,
     REPLICATE_WILD_IGNORE_TABLE = 718,
     REPLICATE_REWRITE_DB = 719,
     REQUIRE_SYM = 720,
     RESET_SYM = 721,
     RESIGNAL_SYM = 722,
     RESOURCES = 723,
     RESTORE_SYM = 724,
     RESTRICT = 725,
     RESUME_SYM = 726,
     RETURNED_SQLSTATE_SYM = 727,
     RETURNS_SYM = 728,
     RETURN_SYM = 729,
     REVERSE_SYM = 730,
     REVOKE = 731,
     RIGHT = 732,
     ROLLBACK_SYM = 733,
     ROLLUP_SYM = 734,
     ROTATE_SYM = 735,
     ROUTINE_SYM = 736,
     ROWS_SYM = 737,
     ROW_FORMAT_SYM = 738,
     ROW_SYM = 739,
     ROW_COUNT_SYM = 740,
     RTREE_SYM = 741,
     SAVEPOINT_SYM = 742,
     SCHEDULE_SYM = 743,
     SCHEMA_NAME_SYM = 744,
     SECOND_MICROSECOND_SYM = 745,
     SECOND_SYM = 746,
     SECURITY_SYM = 747,
     SELECT_SYM = 748,
     SENSITIVE_SYM = 749,
     SEPARATOR_SYM = 750,
     SERIALIZABLE_SYM = 751,
     SERIAL_SYM = 752,
     SESSION_SYM = 753,
     SERVER_SYM = 754,
     SERVER_OPTIONS = 755,
     SET_SYM = 756,
     SET_VAR = 757,
     SHARE_SYM = 758,
     SHIFT_LEFT = 759,
     SHIFT_RIGHT = 760,
     SHOW = 761,
     SHUTDOWN = 762,
     SIGNAL_SYM = 763,
     SIGNED_SYM = 764,
     SIMPLE_SYM = 765,
     SLAVE = 766,
     SLOW = 767,
     SMALLINT_SYM = 768,
     SNAPSHOT_SYM = 769,
     SOCKET_SYM = 770,
     SONAME_SYM = 771,
     SOUNDS_SYM = 772,
     SOURCE_SYM = 773,
     SPATIAL_SYM = 774,
     SPECIFIC_SYM = 775,
     SQLEXCEPTION_SYM = 776,
     SQLSTATE_SYM = 777,
     SQLWARNING_SYM = 778,
     SQL_AFTER_GTIDS = 779,
     SQL_AFTER_MTS_GAPS = 780,
     SQL_BEFORE_GTIDS = 781,
     SQL_BIG_RESULT = 782,
     SQL_BUFFER_RESULT = 783,
     SQL_CACHE_SYM = 784,
     SQL_CALC_FOUND_ROWS = 785,
     SQL_NO_CACHE_SYM = 786,
     SQL_SMALL_RESULT = 787,
     SQL_SYM = 788,
     SQL_THREAD = 789,
     SSL_SYM = 790,
     STACKED_SYM = 791,
     STARTING = 792,
     STARTS_SYM = 793,
     START_SYM = 794,
     STATS_AUTO_RECALC_SYM = 795,
     STATS_PERSISTENT_SYM = 796,
     STATS_SAMPLE_PAGES_SYM = 797,
     STATUS_SYM = 798,
     STDDEV_SAMP_SYM = 799,
     STD_SYM = 800,
     STOP_SYM = 801,
     STORAGE_SYM = 802,
     STORED_SYM = 803,
     STRAIGHT_JOIN = 804,
     STRING_SYM = 805,
     SUBCLASS_ORIGIN_SYM = 806,
     SUBDATE_SYM = 807,
     SUBJECT_SYM = 808,
     SUBPARTITIONS_SYM = 809,
     SUBPARTITION_SYM = 810,
     SUBSTRING = 811,
     SUM_SYM = 812,
     SUPER_SYM = 813,
     SUSPEND_SYM = 814,
     SWAPS_SYM = 815,
     SWITCHES_SYM = 816,
     SYSDATE = 817,
     TABLES = 818,
     TABLESPACE_SYM = 819,
     OBSOLETE_TOKEN_820 = 820,
     TABLE_SYM = 821,
     TABLE_CHECKSUM_SYM = 822,
     TABLE_NAME_SYM = 823,
     TEMPORARY = 824,
     TEMPTABLE_SYM = 825,
     TERMINATED = 826,
     TEXT_STRING = 827,
     TEXT_SYM = 828,
     THAN_SYM = 829,
     THEN_SYM = 830,
     TIMESTAMP_SYM = 831,
     TIMESTAMP_ADD = 832,
     TIMESTAMP_DIFF = 833,
     TIME_SYM = 834,
     TINYBLOB_SYM = 835,
     TINYINT_SYM = 836,
     TINYTEXT_SYN = 837,
     TO_SYM = 838,
     TRAILING = 839,
     TRANSACTION_SYM = 840,
     TRIGGERS_SYM = 841,
     TRIGGER_SYM = 842,
     TRIM = 843,
     TRUE_SYM = 844,
     TRUNCATE_SYM = 845,
     TYPES_SYM = 846,
     TYPE_SYM = 847,
     UDF_RETURNS_SYM = 848,
     ULONGLONG_NUM = 849,
     UNCOMMITTED_SYM = 850,
     UNDEFINED_SYM = 851,
     UNDERSCORE_CHARSET = 852,
     UNDOFILE_SYM = 853,
     UNDO_BUFFER_SIZE_SYM = 854,
     UNDO_SYM = 855,
     UNICODE_SYM = 856,
     UNINSTALL_SYM = 857,
     UNION_SYM = 858,
     UNIQUE_SYM = 859,
     UNKNOWN_SYM = 860,
     UNLOCK_SYM = 861,
     UNSIGNED_SYM = 862,
     UNTIL_SYM = 863,
     UPDATE_SYM = 864,
     UPGRADE_SYM = 865,
     USAGE = 866,
     USER = 867,
     USE_FRM = 868,
     USE_SYM = 869,
     USING = 870,
     UTC_DATE_SYM = 871,
     UTC_TIMESTAMP_SYM = 872,
     UTC_TIME_SYM = 873,
     VALIDATION_SYM = 874,
     VALUES = 875,
     VALUE_SYM = 876,
     VARBINARY_SYM = 877,
     VARCHAR_SYM = 878,
     VARIABLES = 879,
     VARIANCE_SYM = 880,
     VARYING = 881,
     VAR_SAMP_SYM = 882,
     VIEW_SYM = 883,
     VIRTUAL_SYM = 884,
     WAIT_SYM = 885,
     WARNINGS = 886,
     WEEK_SYM = 887,
     WEIGHT_STRING_SYM = 888,
     WHEN_SYM = 889,
     WHERE = 890,
     WHILE_SYM = 891,
     WITH = 892,
     OBSOLETE_TOKEN_893 = 893,
     WITH_ROLLUP_SYM = 894,
     WITHOUT_SYM = 895,
     WORK_SYM = 896,
     WRAPPER_SYM = 897,
     WRITE_SYM = 898,
     X509_SYM = 899,
     XA_SYM = 900,
     XID_SYM = 901,
     XML_SYM = 902,
     XOR = 903,
     YEAR_MONTH_SYM = 904,
     YEAR_SYM = 905,
     ZEROFILL_SYM = 906,
     JSON_UNQUOTED_SEPARATOR_SYM = 907,
     PERSIST_SYM = 908,
     ROLE_SYM = 909,
     ADMIN_SYM = 910,
     INVISIBLE_SYM = 911,
     VISIBLE_SYM = 912,
     EXCEPT_SYM = 913,
     COMPONENT_SYM = 914,
     RECURSIVE_SYM = 915,
     GRAMMAR_SELECTOR_EXPR = 916,
     GRAMMAR_SELECTOR_GCOL = 917,
     GRAMMAR_SELECTOR_PART = 918,
     GRAMMAR_SELECTOR_CTE = 919,
     JSON_OBJECTAGG = 920,
     JSON_ARRAYAGG = 921,
     OF_SYM = 922,
     SKIP_SYM = 923,
     LOCKED_SYM = 924,
     NOWAIT_SYM = 925,
     GROUPING_SYM = 926,
     CONDITIONLESS_JOIN = 927,
     SUBQUERY_AS_EXPR = 928,
     EMPTY_FROM_CLAUSE = 929
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND 293
#define BIT_OR 294
#define BIT_SYM 295
#define BIT_XOR 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define DES_KEY_FILE 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define LOCATOR_SYM 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define REDOFILE_SYM 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define SERVER_OPTIONS 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define SQL_CACHE_SYM 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define UDF_RETURNS_SYM 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define CONDITIONLESS_JOIN 927
#define SUBQUERY_AS_EXPR 928
#define EMPTY_FROM_CLAUSE 929



#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED

# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (void *YYPARSE_PARAM);
#else
int MYSQLparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (class THD *YYTHD);
#else
int MYSQLparse ();
#endif
#endif /* ! YYPARSE_PARAM */

#endif /* !YY_MYSQL_EXPORT_HOME2_PB2_BUILD_SB_2_22823765_1490244772_57_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

/* Line 390 of yacc.c  */
#line 1888 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/dist_GPL/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(N) (N)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int yyi)
#else
static int
YYID (yyi)
    int yyi;
#endif
{
  return yyi;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
	Stack = &yyptr->Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (YYID (0))
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  861
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   72401

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  694
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  840
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2680
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4612

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   929

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   687,     2,     2,     2,   679,   674,     2,
     683,   684,   677,   676,   686,   675,   692,   678,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   693,   690,
       2,     2,     2,     2,   691,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   680,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   688,   673,   689,   681,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   682,   685
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    13,    20,    24,    26,    27,
      32,    35,    36,    38,    40,    42,    44,    46,    48,    50,
      52,    54,    56,    58,    60,    62,    64,    66,    68,    70,
      72,    74,    76,    78,    80,    82,    84,    86,    88,    90,
      92,    94,    96,    98,   100,   102,   104,   106,   108,   110,
     112,   114,   116,   118,   120,   122,   124,   126,   128,   130,
     132,   134,   136,   138,   140,   142,   144,   146,   148,   150,
     152,   156,   158,   160,   165,   167,   170,   171,   176,   177,
     180,   184,   186,   189,   190,   194,   195,   202,   203,   210,
     212,   216,   220,   224,   228,   232,   236,   240,   244,   247,
     251,   253,   257,   259,   262,   266,   272,   280,   283,   287,
     289,   293,   297,   300,   304,   306,   310,   312,   314,   318,
     322,   326,   330,   334,   338,   342,   346,   350,   354,   358,
     362,   366,   370,   374,   378,   382,   386,   390,   394,   400,
     404,   406,   407,   409,   413,   415,   419,   423,   427,   431,
     432,   436,   446,   453,   461,   471,   473,   475,   476,   483,
     484,   488,   496,   501,   506,   510,   522,   534,   546,   558,
     560,   564,   567,   570,   573,   576,   579,   582,   585,   586,
     599,   600,   607,   610,   611,   613,   617,   619,   620,   623,
     624,   627,   628,   630,   634,   639,   640,   643,   644,   647,
     649,   651,   653,   655,   657,   659,   661,   663,   665,   667,
     669,   671,   673,   677,   679,   680,   683,   684,   687,   690,
     693,   696,   699,   703,   707,   709,   711,   713,   716,   720,
     724,   728,   729,   733,   734,   736,   740,   742,   746,   747,
     749,   753,   755,   760,   761,   763,   765,   767,   768,   772,
     775,   779,   780,   784,   790,   796,   797,   805,   806,   813,
     815,   817,   819,   823,   825,   827,   829,   833,   834,   836,
     838,   840,   842,   845,   847,   851,   853,   855,   856,   858,
     859,   862,   866,   872,   874,   876,   878,   880,   882,   884,
     886,   888,   890,   892,   894,   896,   898,   900,   902,   906,
     911,   912,   914,   916,   918,   922,   924,   928,   932,   934,
     937,   939,   941,   943,   945,   949,   953,   955,   957,   959,
     961,   963,   965,   967,   969,   971,   973,   975,   977,   979,
     981,   985,   986,   989,   991,   993,   995,   997,   999,  1001,
    1003,  1005,  1007,  1009,  1011,  1013,  1015,  1016,  1022,  1023,
    1026,  1027,  1031,  1032,  1035,  1038,  1041,  1044,  1045,  1052,
    1055,  1056,  1059,  1061,  1063,  1067,  1068,  1069,  1070,  1078,
    1079,  1082,  1085,  1087,  1089,  1090,  1091,  1100,  1101,  1108,
    1110,  1113,  1115,  1118,  1119,  1120,  1127,  1128,  1129,  1136,
    1137,  1140,  1141,  1147,  1148,  1150,  1151,  1157,  1158,  1161,
    1162,  1168,  1173,  1174,  1175,  1184,  1185,  1186,  1195,  1197,
    1199,  1201,  1203,  1205,  1208,  1213,  1219,  1220,  1225,  1230,
    1235,  1239,  1243,  1246,  1249,  1250,  1253,  1255,  1258,  1262,
    1264,  1266,  1268,  1269,  1271,  1273,  1277,  1279,  1281,  1283,
    1285,  1287,  1289,  1291,  1293,  1295,  1296,  1298,  1300,  1304,
    1306,  1308,  1310,  1312,  1314,  1315,  1317,  1319,  1323,  1325,
    1327,  1329,  1331,  1333,  1335,  1337,  1338,  1340,  1342,  1346,
    1348,  1350,  1352,  1355,  1358,  1361,  1363,  1365,  1367,  1369,
    1372,  1376,  1380,  1384,  1388,  1392,  1396,  1400,  1404,  1409,
    1413,  1415,  1417,  1419,  1421,  1424,  1426,  1429,  1431,  1432,
    1435,  1437,  1440,  1442,  1449,  1456,  1462,  1467,  1473,  1478,
    1484,  1485,  1487,  1488,  1492,  1493,  1496,  1497,  1506,  1516,
    1517,  1519,  1521,  1525,  1526,  1529,  1530,  1534,  1536,  1540,
    1546,  1547,  1552,  1556,  1558,  1560,  1562,  1566,  1568,  1572,
    1573,  1578,  1580,  1584,  1586,  1588,  1589,  1593,  1595,  1599,
    1603,  1604,  1606,  1609,  1611,  1615,  1620,  1624,  1628,  1632,
    1637,  1642,  1646,  1647,  1649,  1651,  1654,  1656,  1658,  1659,
    1663,  1665,  1668,  1670,  1674,  1675,  1677,  1681,  1685,  1689,
    1693,  1697,  1701,  1705,  1709,  1713,  1717,  1721,  1725,  1729,
    1733,  1737,  1741,  1745,  1749,  1755,  1757,  1759,  1763,  1768,
    1773,  1777,  1780,  1783,  1787,  1791,  1793,  1795,  1800,  1805,
    1807,  1809,  1811,  1813,  1815,  1817,  1819,  1821,  1823,  1825,
    1827,  1829,  1831,  1833,  1837,  1839,  1841,  1845,  1846,  1848,
    1850,  1857,  1865,  1873,  1881,  1890,  1893,  1898,  1899,  1901,
    1904,  1907,  1917,  1918,  1921,  1922,  1924,  1926,  1930,  1934,
    1938,  1940,  1943,  1945,  1947,  1951,  1954,  1958,  1961,  1964,
    1966,  1970,  1974,  1977,  1981,  1983,  1986,  1989,  1992,  1994,
    1997,  1999,  2001,  2003,  2006,  2010,  2013,  2017,  2020,  2023,
    2029,  2035,  2038,  2040,  2042,  2044,  2046,  2048,  2050,  2052,
    2054,  2056,  2058,  2060,  2063,  2066,  2068,  2071,  2073,  2076,
    2080,  2083,  2085,  2087,  2089,  2091,  2093,  2095,  2098,  2099,
    2101,  2103,  2105,  2107,  2109,  2110,  2112,  2114,  2120,  2121,
    2125,  2126,  2129,  2133,  2134,  2136,  2139,  2141,  2143,  2145,
    2147,  2151,  2155,  2159,  2163,  2164,  2166,  2167,  2169,  2170,
    2172,  2175,  2177,  2179,  2182,  2185,  2189,  2191,  2195,  2198,
    2200,  2203,  2206,  2209,  2212,  2215,  2217,  2219,  2221,  2223,
    2225,  2227,  2230,  2232,  2234,  2237,  2239,  2241,  2243,  2245,
    2247,  2248,  2251,  2253,  2255,  2257,  2259,  2261,  2262,  2265,
    2266,  2269,  2271,  2273,  2274,  2276,  2278,  2281,  2284,  2286,
    2289,  2292,  2293,  2295,  2297,  2299,  2303,  2305,  2309,  2310,
    2312,  2313,  2318,  2319,  2321,  2327,  2328,  2332,  2336,  2338,
    2339,  2342,  2345,  2348,  2349,  2353,  2357,  2364,  2371,  2373,
    2375,  2378,  2381,  2384,  2386,  2389,  2392,  2394,  2396,  2397,
    2399,  2401,  2403,  2405,  2406,  2408,  2410,  2411,  2413,  2415,
    2418,  2420,  2424,  2425,  2427,  2429,  2432,  2434,  2435,  2437,
    2439,  2442,  2444,  2446,  2450,  2453,  2455,  2457,  2461,  2465,
    2468,  2471,  2473,  2475,  2477,  2479,  2481,  2485,  2487,  2490,
    2496,  2497,  2499,  2500,  2503,  2505,  2509,  2510,  2516,  2517,
    2523,  2524,  2530,  2531,  2537,  2538,  2544,  2545,  2550,  2551,
    2562,  2566,  2571,  2575,  2579,  2587,  2593,  2599,  2601,  2607,
    2613,  2619,  2623,  2624,  2626,  2628,  2631,  2634,  2637,  2640,
    2646,  2650,  2654,  2655,  2658,  2661,  2663,  2666,  2669,  2672,
    2675,  2679,  2680,  2684,  2686,  2691,  2692,  2696,  2697,  2700,
    2701,  2703,  2705,  2708,  2711,  2713,  2717,  2718,  2720,  2722,
    2726,  2729,  2732,  2734,  2738,  2743,  2744,  2751,  2756,  2761,
    2767,  2772,  2776,  2778,  2786,  2791,  2796,  2797,  2799,  2802,
    2805,  2808,  2810,  2812,  2816,  2823,  2829,  2833,  2842,  2844,
    2848,  2852,  2854,  2858,  2861,  2867,  2870,  2875,  2882,  2888,
    2893,  2898,  2902,  2906,  2909,  2912,  2919,  2924,  2930,  2934,
    2940,  2946,  2948,  2950,  2952,  2954,  2956,  2958,  2959,  2961,
    2963,  2966,  2969,  2973,  2977,  2981,  2985,  2986,  2988,  2989,
    2991,  2992,  2994,  2996,  2997,  3000,  3002,  3003,  3005,  3007,
    3009,  3012,  3015,  3018,  3023,  3027,  3028,  3033,  3037,  3038,
    3040,  3042,  3046,  3050,  3053,  3056,  3061,  3062,  3066,  3067,
    3071,  3072,  3076,  3077,  3081,  3082,  3084,  3086,  3090,  3092,
    3094,  3095,  3098,  3100,  3104,  3108,  3112,  3114,  3119,  3120,
    3122,  3124,  3130,  3131,  3133,  3135,  3138,  3140,  3142,  3144,
    3149,  3152,  3157,  3158,  3160,  3162,  3165,  3167,  3169,  3171,
    3173,  3175,  3178,  3183,  3184,  3186,  3188,  3189,  3194,  3198,
    3202,  3208,  3210,  3214,  3218,  3219,  3226,  3228,  3230,  3232,
    3236,  3239,  3243,  3245,  3247,  3248,  3255,  3257,  3259,  3261,
    3265,  3269,  3274,  3275,  3281,  3283,  3284,  3289,  3290,  3293,
    3295,  3297,  3299,  3303,  3306,  3311,  3317,  3322,  3328,  3332,
    3337,  3341,  3343,  3348,  3353,  3358,  3363,  3367,  3371,  3373,
    3382,  3390,  3391,  3393,  3396,  3398,  3400,  3402,  3406,  3407,
    3409,  3412,  3414,  3416,  3418,  3420,  3421,  3423,  3426,  3428,
    3432,  3437,  3442,  3444,  3446,  3449,  3450,  3452,  3455,  3457,
    3461,  3463,  3465,  3467,  3470,  3471,  3474,  3477,  3479,  3481,
    3482,  3485,  3489,  3493,  3497,  3500,  3504,  3509,  3513,  3518,
    3522,  3527,  3529,  3533,  3538,  3542,  3547,  3549,  3553,  3558,
    3564,  3572,  3579,  3588,  3594,  3601,  3606,  3611,  3617,  3621,
    3626,  3628,  3632,  3636,  3640,  3644,  3648,  3652,  3658,  3664,
    3668,  3672,  3676,  3680,  3684,  3688,  3690,  3692,  3694,  3696,
    3698,  3700,  3702,  3704,  3706,  3708,  3710,  3712,  3714,  3716,
    3718,  3720,  3722,  3724,  3726,  3728,  3730,  3732,  3734,  3738,
    3740,  3742,  3744,  3746,  3750,  3753,  3756,  3759,  3762,  3764,
    3768,  3774,  3781,  3784,  3789,  3797,  3800,  3807,  3813,  3820,
    3827,  3832,  3837,  3843,  3847,  3851,  3856,  3863,  3866,  3871,
    3876,  3881,  3892,  3899,  3908,  3915,  3920,  3925,  3932,  3937,
    3942,  3947,  3954,  3959,  3967,  3975,  3983,  3990,  3997,  4004,
    4011,  4015,  4020,  4027,  4036,  4039,  4042,  4051,  4060,  4067,
    4074,  4076,  4083,  4090,  4099,  4108,  4115,  4124,  4131,  4134,
    4143,  4152,  4155,  4158,  4161,  4166,  4171,  4176,  4181,  4185,
    4194,  4201,  4210,  4215,  4222,  4227,  4232,  4239,  4248,  4253,
    4257,  4264,  4269,  4276,  4281,  4289,  4297,  4308,  4310,  4315,
    4320,  4325,  4330,  4335,  4342,  4347,  4352,  4359,  4362,  4366,
    4367,  4372,  4373,  4377,  4378,  4380,  4382,  4386,  4389,  4391,
    4393,  4398,  4404,  4409,  4414,  4419,  4426,  4431,  4437,  4442,
    4448,  4453,  4459,  4464,  4470,  4475,  4480,  4485,  4490,  4495,
    4501,  4509,  4514,  4517,  4521,  4523,  4528,  4529,  4531,  4532,
    4535,  4536,  4540,  4544,  4546,  4549,  4552,  4556,  4559,  4561,
    4564,  4566,  4569,  4571,  4574,  4577,  4580,  4582,  4583,  4585,
    4587,  4591,  4593,  4597,  4599,  4603,  4604,  4606,  4607,  4610,
    4615,  4621,  4623,  4625,  4630,  4632,  4634,  4640,  4648,  4654,
    4662,  4666,  4670,  4674,  4679,  4684,  4686,  4689,  4692,  4694,
    4698,  4702,  4703,  4705,  4706,  4708,  4709,  4711,  4716,  4718,
    4720,  4722,  4724,  4726,  4730,  4736,  4740,  4744,  4749,  4753,
    4757,  4761,  4762,  4765,  4769,  4773,  4775,  4777,  4784,  4791,
    4793,  4796,  4797,  4799,  4801,  4802,  4804,  4806,  4808,  4810,
    4814,  4816,  4818,  4822,  4824,  4826,  4828,  4830,  4832,  4834,
    4836,  4838,  4840,  4842,  4844,  4846,  4848,  4850,  4852,  4854,
    4856,  4858,  4860,  4862,  4864,  4866,  4868,  4870,  4872,  4873,
    4875,  4877,  4878,  4881,  4882,  4884,  4886,  4887,  4890,  4891,
    4894,  4897,  4901,  4905,  4907,  4912,  4913,  4917,  4919,  4923,
    4926,  4927,  4928,  4933,  4937,  4939,  4940,  4942,  4946,  4950,
    4952,  4955,  4956,  4958,  4962,  4966,  4968,  4969,  4971,  4973,
    4974,  4976,  4979,  4981,  4985,  4989,  4991,  4993,  4995,  4997,
    4999,  5000,  5003,  5005,  5007,  5009,  5011,  5013,  5015,  5017,
    5019,  5021,  5023,  5025,  5027,  5029,  5031,  5033,  5035,  5037,
    5039,  5041,  5043,  5045,  5047,  5049,  5053,  5055,  5058,  5060,
    5063,  5069,  5072,  5074,  5078,  5079,  5086,  5087,  5088,  5097,
    5102,  5109,  5114,  5119,  5124,  5130,  5135,  5140,  5145,  5151,
    5156,  5161,  5163,  5167,  5169,  5171,  5175,  5176,  5179,  5180,
    5182,  5183,  5185,  5187,  5191,  5193,  5195,  5204,  5214,  5223,
    5230,  5238,  5245,  5246,  5248,  5250,  5252,  5254,  5256,  5257,
    5259,  5261,  5265,  5270,  5272,  5276,  5281,  5285,  5287,  5290,
    5292,  5294,  5296,  5298,  5302,  5304,  5306,  5308,  5309,  5311,
    5315,  5316,  5318,  5322,  5324,  5326,  5328,  5329,  5335,  5346,
    5347,  5349,  5353,  5355,  5359,  5360,  5362,  5372,  5380,  5389,
    5390,  5393,  5394,  5397,  5399,  5401,  5403,  5404,  5409,  5410,
    5412,  5413,  5415,  5417,  5421,  5423,  5425,  5428,  5431,  5434,
    5436,  5438,  5440,  5442,  5443,  5447,  5448,  5452,  5455,  5460,
    5465,  5469,  5474,  5479,  5481,  5485,  5489,  5496,  5499,  5502,
    5503,  5510,  5511,  5519,  5525,  5528,  5534,  5540,  5543,  5546,
    5548,  5553,  5557,  5560,  5564,  5567,  5570,  5572,  5574,  5578,
    5584,  5589,  5593,  5597,  5600,  5604,  5608,  5612,  5616,  5620,
    5624,  5628,  5632,  5636,  5640,  5642,  5644,  5646,  5648,  5650,
    5651,  5653,  5654,  5657,  5658,  5660,  5662,  5664,  5665,  5668,
    5669,  5672,  5673,  5676,  5679,  5680,  5683,  5686,  5690,  5691,
    5696,  5698,  5700,  5702,  5704,  5706,  5710,  5712,  5714,  5715,
    5717,  5719,  5723,  5724,  5726,  5728,  5729,  5734,  5735,  5740,
    5742,  5743,  5747,  5748,  5752,  5756,  5758,  5761,  5764,  5767,
    5770,  5773,  5777,  5780,  5782,  5784,  5786,  5788,  5790,  5792,
    5794,  5795,  5797,  5798,  5802,  5806,  5810,  5812,  5813,  5816,
    5817,  5822,  5823,  5827,  5830,  5831,  5833,  5834,  5837,  5838,
    5842,  5846,  5849,  5852,  5856,  5857,  5859,  5861,  5864,  5865,
    5866,  5867,  5889,  5891,  5893,  5894,  5896,  5897,  5899,  5901,
    5902,  5904,  5906,  5908,  5909,  5912,  5915,  5917,  5921,  5926,
    5930,  5934,  5935,  5938,  5941,  5943,  5947,  5951,  5952,  5957,
    5958,  5962,  5964,  5966,  5967,  5971,  5974,  5978,  5980,  5982,
    5985,  5986,  5989,  5993,  5995,  5999,  6001,  6003,  6006,  6009,
    6011,  6013,  6015,  6017,  6019,  6022,  6025,  6027,  6029,  6031,
    6033,  6035,  6037,  6039,  6041,  6044,  6047,  6049,  6051,  6053,
    6055,  6057,  6060,  6063,  6066,  6068,  6070,  6074,  6080,  6083,
    6085,  6087,  6089,  6091,  6095,  6100,  6106,  6108,  6114,  6118,
    6121,  6123,  6127,  6130,  6133,  6138,  6140,  6142,  6144,  6146,
    6148,  6150,  6152,  6154,  6156,  6158,  6160,  6162,  6164,  6166,
    6168,  6170,  6172,  6174,  6176,  6178,  6180,  6184,  6187,  6189,
    6193,  6195,  6197,  6199,  6201,  6203,  6205,  6207,  6209,  6211,
    6213,  6215,  6217,  6219,  6221,  6223,  6225,  6227,  6229,  6231,
    6233,  6235,  6237,  6239,  6241,  6243,  6245,  6247,  6249,  6251,
    6253,  6255,  6257,  6259,  6261,  6263,  6265,  6267,  6269,  6271,
    6273,  6275,  6277,  6279,  6281,  6283,  6285,  6287,  6289,  6291,
    6293,  6295,  6297,  6299,  6301,  6303,  6305,  6307,  6309,  6311,
    6313,  6315,  6317,  6319,  6321,  6323,  6325,  6327,  6329,  6331,
    6333,  6335,  6337,  6339,  6341,  6343,  6345,  6347,  6349,  6351,
    6353,  6355,  6357,  6359,  6361,  6363,  6365,  6367,  6369,  6371,
    6373,  6375,  6377,  6379,  6381,  6383,  6385,  6387,  6389,  6391,
    6393,  6395,  6397,  6399,  6401,  6403,  6405,  6407,  6409,  6411,
    6413,  6415,  6417,  6419,  6421,  6423,  6425,  6427,  6429,  6431,
    6433,  6435,  6437,  6439,  6441,  6443,  6445,  6447,  6449,  6451,
    6453,  6455,  6457,  6459,  6461,  6463,  6465,  6467,  6469,  6471,
    6473,  6475,  6477,  6479,  6481,  6483,  6485,  6487,  6489,  6491,
    6493,  6495,  6497,  6499,  6501,  6503,  6505,  6507,  6509,  6511,
    6513,  6515,  6517,  6519,  6521,  6523,  6525,  6527,  6529,  6531,
    6533,  6535,  6537,  6539,  6541,  6543,  6545,  6547,  6549,  6551,
    6553,  6555,  6557,  6559,  6561,  6563,  6565,  6567,  6569,  6571,
    6573,  6575,  6577,  6579,  6581,  6583,  6585,  6587,  6589,  6591,
    6593,  6595,  6597,  6599,  6601,  6603,  6605,  6607,  6609,  6611,
    6613,  6615,  6617,  6619,  6621,  6623,  6625,  6627,  6629,  6631,
    6633,  6635,  6637,  6639,  6641,  6643,  6645,  6647,  6649,  6651,
    6653,  6655,  6657,  6659,  6661,  6663,  6665,  6667,  6669,  6671,
    6673,  6675,  6677,  6679,  6681,  6683,  6685,  6687,  6689,  6691,
    6693,  6695,  6697,  6699,  6701,  6703,  6705,  6707,  6709,  6711,
    6713,  6715,  6717,  6719,  6721,  6723,  6725,  6727,  6729,  6731,
    6733,  6735,  6737,  6739,  6741,  6743,  6745,  6747,  6749,  6751,
    6753,  6755,  6757,  6759,  6761,  6763,  6765,  6767,  6769,  6771,
    6773,  6775,  6777,  6779,  6781,  6783,  6785,  6787,  6789,  6791,
    6793,  6795,  6797,  6799,  6801,  6803,  6805,  6807,  6809,  6811,
    6813,  6815,  6817,  6819,  6821,  6823,  6825,  6827,  6829,  6831,
    6833,  6835,  6837,  6839,  6841,  6843,  6845,  6847,  6849,  6851,
    6853,  6855,  6857,  6859,  6861,  6863,  6865,  6867,  6869,  6871,
    6873,  6875,  6877,  6879,  6881,  6883,  6885,  6887,  6889,  6891,
    6893,  6895,  6897,  6899,  6901,  6903,  6905,  6907,  6909,  6911,
    6913,  6915,  6917,  6919,  6921,  6923,  6925,  6927,  6929,  6931,
    6933,  6935,  6937,  6939,  6941,  6943,  6945,  6947,  6949,  6951,
    6953,  6955,  6957,  6959,  6961,  6964,  6967,  6970,  6973,  6977,
    6984,  6990,  6999,  7003,  7007,  7011,  7018,  7025,  7032,  7037,
    7038,  7041,  7044,  7047,  7048,  7051,  7053,  7057,  7060,  7062,
    7064,  7066,  7068,  7070,  7071,  7073,  7075,  7077,  7078,  7081,
    7084,  7087,  7088,  7091,  7094,  7097,  7100,  7104,  7108,  7113,
    7120,  7123,  7127,  7131,  7133,  7137,  7141,  7144,  7147,  7149,
    7150,  7153,  7157,  7158,  7161,  7164,  7167,  7170,  7173,  7176,
    7178,  7180,  7182,  7184,  7186,  7188,  7190,  7191,  7196,  7198,
    7200,  7202,  7206,  7210,  7212,  7214,  7217,  7220,  7221,  7225,
    7227,  7231,  7236,  7241,  7245,  7246,  7254,  7256,  7259,  7261,
    7263,  7265,  7267,  7269,  7271,  7272,  7278,  7280,  7282,  7284,
    7286,  7288,  7293,  7301,  7302,  7312,  7321,  7328,  7334,  7344,
    7345,  7357,  7365,  7366,  7368,  7370,  7372,  7373,  7375,  7377,
    7381,  7384,  7388,  7391,  7394,  7397,  7400,  7402,  7404,  7406,
    7408,  7410,  7412,  7414,  7416,  7418,  7420,  7422,  7425,  7428,
    7430,  7434,  7437,  7440,  7443,  7446,  7449,  7452,  7455,  7458,
    7460,  7462,  7465,  7468,  7471,  7472,  7476,  7477,  7479,  7483,
    7485,  7488,  7491,  7494,  7496,  7500,  7504,  7506,  7508,  7512,
    7514,  7518,  7520,  7524,  7529,  7535,  7540,  7547,  7554,  7556,
    7557,  7561,  7563,  7567,  7568,  7571,  7574,  7577,  7580,  7581,
    7584,  7585,  7589,  7592,  7594,  7597,  7600,  7603,  7606,  7609,
    7610,  7614,  7615,  7617,  7618,  7622,  7625,  7626,  7628,  7631,
    7632,  7634,  7639,  7644,  7650,  7653,  7657,  7658,  7660,  7662,
    7664,  7666,  7668,  7670,  7672,  7674,  7676,  7678,  7680,  7682,
    7684,  7687,  7690,  7694,  7696,  7698,  7700,  7702,  7704,  7706,
    7708,  7710,  7712,  7714,  7716,  7718,  7720,  7721,  7725,  7727,
    7730,  7732,  7735,  7739,  7743,  7747,  7748,  7752,  7756,  7757,
    7765,  7768,  7769,  7773,  7778,  7783,  7785,  7787,  7788,  7791,
    7792,  7805,  7813,  7820,  7821,  7822,  7823,  7824,  7839,  7840,
    7841,  7842,  7843,  7855,  7860,  7865,  7869,  7874,  7878,  7882,
    7883,  7886,  7888,  7892,  7898,  7900,  7902,  7903,  7905,  7907,
    7908,  7911,  7912,  7914,  7918,  7924,  7928,  7932,  7936,  7938,
    7942
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     695,     0,    -1,   696,    -1,   661,  1156,   156,    -1,   663,
     902,   156,    -1,   662,  1395,   683,  1153,   684,   156,    -1,
     664,  1491,   156,    -1,   156,    -1,    -1,   699,   697,   690,
     698,    -1,   699,   156,    -1,    -1,   156,    -1,   700,    -1,
    1479,    -1,  1029,    -1,  1097,    -1,  1098,    -1,   760,    -1,
     712,    -1,  1099,    -1,  1091,    -1,  1485,    -1,   735,    -1,
     701,    -1,  1297,    -1,  1323,    -1,  1260,    -1,  1262,    -1,
     705,    -1,  1329,    -1,   790,    -1,  1072,    -1,  1457,    -1,
    1448,    -1,   710,    -1,  1533,    -1,  1273,    -1,  1530,    -1,
    1351,    -1,  1354,    -1,  1437,    -1,  1103,    -1,  1110,    -1,
    1117,    -1,   703,    -1,  1347,    -1,  1488,    -1,  1105,    -1,
    1093,    -1,  1274,    -1,  1338,    -1,   789,    -1,  1455,    -1,
    1486,    -1,  1487,    -1,  1128,    -1,  1413,    -1,  1415,    -1,
     782,    -1,  1308,    -1,  1445,    -1,  1073,    -1,  1077,    -1,
    1301,    -1,  1531,    -1,  1443,    -1,  1292,    -1,  1353,    -1,
    1523,    -1,   702,   415,  1401,    -1,   121,    -1,   144,    -1,
     415,  1401,   197,   704,    -1,  1398,    -1,   691,  1404,    -1,
      -1,   170,  1401,   706,   707,    -1,    -1,   615,   708,    -1,
     708,   686,   709,    -1,   709,    -1,   691,  1404,    -1,    -1,
     218,   711,  1404,    -1,    -1,    58,   316,   583,   713,   728,
     733,    -1,    -1,    58,   457,   185,   714,   715,   733,    -1,
     716,    -1,   715,   686,   716,    -1,   458,   160,   717,    -1,
     459,   160,   717,    -1,   460,   160,   722,    -1,   461,   160,
     722,    -1,   462,   160,   725,    -1,   463,   160,   725,    -1,
     464,   160,   720,    -1,   683,   684,    -1,   683,   718,   684,
      -1,   719,    -1,   718,   686,   719,    -1,  1401,    -1,   683,
     684,    -1,   683,   721,   684,    -1,   683,   719,   686,   719,
     684,    -1,   721,   686,   683,   719,   686,   719,   684,    -1,
     683,   684,    -1,   683,   723,   684,    -1,   724,    -1,   723,
     686,   724,    -1,  1401,   692,  1401,    -1,   683,   684,    -1,
     683,   726,   684,    -1,   727,    -1,   726,   686,   727,    -1,
    1397,    -1,   729,    -1,   728,   686,   729,    -1,   299,   160,
    1396,    -1,   296,   160,  1396,    -1,   317,   160,  1396,    -1,
     302,   160,  1396,    -1,   303,   160,  1250,    -1,   297,   160,
    1250,    -1,   304,   160,  1250,    -1,   298,   160,  1250,    -1,
     314,   160,  1250,    -1,   308,   160,  1396,    -1,   306,   160,
    1396,    -1,   307,   160,  1396,    -1,   309,   160,  1396,    -1,
     310,   160,  1396,    -1,   313,   160,  1396,    -1,   315,   160,
    1250,    -1,   311,   160,  1396,    -1,   312,   160,  1396,    -1,
     318,   160,  1383,    -1,   232,   160,   683,   730,   684,    -1,
     295,   160,  1250,    -1,   732,    -1,    -1,   731,    -1,   730,
     686,   731,    -1,  1250,    -1,   300,   160,  1396,    -1,   301,
     160,  1252,    -1,   445,   160,  1396,    -1,   446,   160,  1250,
      -1,    -1,   194,    60,  1396,    -1,    99,  1269,   566,   931,
    1392,   683,   942,   684,   898,    -1,    99,  1269,   566,   931,
    1392,   898,    -1,    99,  1269,   566,   931,  1392,   275,  1392,
      -1,    99,  1269,   566,   931,  1392,   683,   275,  1392,   684,
      -1,   734,    -1,   738,    -1,    -1,    99,   108,   931,  1401,
     736,   928,    -1,    -1,    99,   737,  1494,    -1,    99,   612,
     931,  1470,  1474,  1041,  1038,    -1,    99,   654,   931,  1469,
      -1,    99,   286,   212,   861,    -1,    99,   564,   858,    -1,
      99,   499,  1404,   193,   111,   642,  1404,   384,   683,   739,
     684,    -1,    99,  1008,   235,  1020,   378,  1392,   683,  1024,
     684,  1016,  1064,    -1,    99,   199,   235,  1401,   378,  1392,
     683,  1024,   684,  1010,  1064,    -1,    99,   519,   235,  1401,
     378,  1392,   683,  1024,   684,  1013,  1064,    -1,   740,    -1,
     739,   686,   740,    -1,   612,  1398,    -1,   221,  1398,    -1,
     108,  1398,    -1,   394,  1398,    -1,   404,  1398,    -1,   515,
    1398,    -1,   411,  1250,    -1,    -1,   167,   931,   754,   742,
     378,   488,   743,   748,   745,   750,   143,   751,    -1,    -1,
     168,  1153,  1220,   744,   746,   747,    -1,    25,  1153,    -1,
      -1,   152,    -1,   137,   378,   511,    -1,   137,    -1,    -1,
     538,  1153,    -1,    -1,   155,  1153,    -1,    -1,   749,    -1,
     378,    81,   416,    -1,   378,    81,   367,   416,    -1,    -1,
      77,  1398,    -1,    -1,   752,   753,    -1,   806,    -1,   808,
      -1,   804,    -1,   825,    -1,   843,    -1,   845,    -1,   840,
      -1,   810,    -1,   812,    -1,   813,    -1,   814,    -1,   815,
      -1,   817,    -1,  1401,   692,  1401,    -1,  1401,    -1,    -1,
     755,   757,    -1,    -1,   756,   758,    -1,    77,  1398,    -1,
     265,   533,    -1,   369,   533,    -1,    93,   533,    -1,   431,
     533,   111,    -1,   343,   533,   111,    -1,   759,    -1,   757,
      -1,   134,    -1,  1159,   134,    -1,   533,   492,   127,    -1,
     533,   492,   248,    -1,    51,   754,   761,    -1,    -1,   683,
    1186,   684,    -1,    -1,   763,    -1,   763,   686,   764,    -1,
     764,    -1,  1401,   953,   986,    -1,    -1,   766,    -1,   766,
     686,   767,    -1,   767,    -1,   768,  1401,   953,   986,    -1,
      -1,   249,    -1,   393,    -1,   239,    -1,    -1,   769,   803,
     690,    -1,   803,   690,    -1,   770,   803,   690,    -1,    -1,
     771,   772,   690,    -1,   124,   801,   953,   986,   802,    -1,
     124,  1401,    86,   194,   778,    -1,    -1,   124,   775,   215,
     194,   773,   776,   803,    -1,    -1,   124,  1401,   105,   194,
     774,  1128,    -1,   172,    -1,    95,    -1,   777,    -1,   776,
     686,   777,    -1,   781,    -1,  1250,    -1,   779,    -1,   522,
     780,  1399,    -1,    -1,   621,    -1,   778,    -1,  1401,    -1,
     523,    -1,  1159,   196,    -1,   521,    -1,   508,   783,   785,
      -1,  1401,    -1,   779,    -1,    -1,   783,    -1,    -1,   501,
     786,    -1,   788,   160,   787,    -1,   786,   686,   788,   160,
     787,    -1,  1382,    -1,  1178,    -1,  1388,    -1,    66,    -1,
     551,    -1,    90,    -1,    92,    -1,    91,    -1,    56,    -1,
     489,    -1,   568,    -1,    76,    -1,   106,    -1,   334,    -1,
     351,    -1,   467,   784,   785,    -1,   208,   791,   135,   792,
      -1,    -1,   103,    -1,   536,    -1,   793,    -1,    86,   797,
     798,    -1,   794,    -1,   793,   686,   794,    -1,   795,   160,
     796,    -1,  1401,    -1,   691,  1404,    -1,   374,    -1,   485,
      -1,   787,    -1,   799,    -1,   798,   686,   799,    -1,   795,
     160,   800,    -1,    66,    -1,   551,    -1,    90,    -1,    92,
      -1,    91,    -1,    56,    -1,   489,    -1,   568,    -1,    76,
      -1,   106,    -1,   334,    -1,   351,    -1,   472,    -1,  1401,
      -1,   801,   686,  1401,    -1,    -1,   125,  1153,    -1,   806,
      -1,   808,    -1,   804,    -1,   825,    -1,   843,    -1,   845,
      -1,   840,    -1,   810,    -1,   812,    -1,   813,    -1,   814,
      -1,   815,    -1,   817,    -1,    -1,   230,   805,   820,   154,
     230,    -1,    -1,   807,   700,    -1,    -1,   474,   809,  1153,
      -1,    -1,   811,   849,    -1,   270,  1403,    -1,   257,  1403,
      -1,   381,  1401,    -1,    -1,   182,   818,  1401,   246,   816,
     819,    -1,    68,  1401,    -1,    -1,   363,   197,    -1,   197,
      -1,  1401,    -1,   819,   686,  1401,    -1,    -1,    -1,    -1,
     821,  1153,   822,   575,   770,   823,   824,    -1,    -1,   151,
     820,    -1,   150,   770,    -1,   826,    -1,   829,    -1,    -1,
      -1,    54,   827,  1153,   828,   831,   839,   154,    54,    -1,
      -1,    54,   830,   832,   839,   154,    54,    -1,   833,    -1,
     831,   833,    -1,   836,    -1,   832,   836,    -1,    -1,    -1,
     634,   834,  1153,   835,   575,   770,    -1,    -1,    -1,   634,
     837,  1153,   838,   575,   770,    -1,    -1,   150,   770,    -1,
      -1,  1403,   693,   841,   849,   842,    -1,    -1,  1403,    -1,
      -1,  1403,   693,   844,   847,   842,    -1,    -1,   846,   847,
      -1,    -1,    32,   848,   771,   769,   154,    -1,   292,   770,
     154,   292,    -1,    -1,    -1,   636,   850,  1153,   851,   143,
     770,   154,   636,    -1,    -1,    -1,   455,   770,   608,   852,
    1153,   853,   154,   455,    -1,    31,    -1,     9,    -1,   241,
      -1,   609,    -1,   130,    -1,   883,   885,    -1,   883,    58,
     880,   864,    -1,   883,     7,   880,   859,   868,    -1,    -1,
     614,   286,   212,  1401,    -1,   883,     7,   880,   871,    -1,
     883,   144,   880,   871,    -1,   884,   863,   874,    -1,   884,
     863,   877,    -1,     7,   881,    -1,     7,   882,    -1,    -1,
     865,   866,    -1,   867,    -1,   866,   867,    -1,   866,   686,
     867,    -1,   886,    -1,   887,    -1,   888,    -1,    -1,   869,
      -1,   870,    -1,   869,   934,   870,    -1,   886,    -1,   887,
      -1,   888,    -1,   889,    -1,   892,    -1,   894,    -1,   896,
      -1,   893,    -1,   895,    -1,    -1,   872,    -1,   873,    -1,
     872,   934,   873,    -1,   886,    -1,   887,    -1,   888,    -1,
     894,    -1,   896,    -1,    -1,   875,    -1,   876,    -1,   875,
     934,   876,    -1,   886,    -1,   890,    -1,   891,    -1,   892,
      -1,   894,    -1,   896,    -1,   893,    -1,    -1,   878,    -1,
     879,    -1,   878,   934,   879,    -1,   886,    -1,   894,    -1,
     896,    -1,   110,  1398,    -1,   598,  1398,    -1,   438,  1398,
      -1,  1401,    -1,  1401,    -1,   432,    -1,   434,    -1,   367,
       4,    -1,   237,  1286,   897,    -1,    26,  1286,   897,    -1,
     323,  1286,   897,    -1,   177,  1286,   897,    -1,   599,  1286,
     897,    -1,   439,  1286,   897,    -1,   364,  1286,  1251,    -1,
      77,  1286,  1398,    -1,  1315,   158,  1286,  1404,    -1,   184,
    1286,   897,    -1,   630,    -1,   370,    -1,  1253,    -1,  1395,
      -1,   933,   899,    -1,   899,    -1,   902,   900,    -1,   900,
      -1,    -1,  1362,   901,    -1,   901,    -1,    21,  1282,    -1,
    1282,    -1,   401,    48,   903,   906,   907,   911,    -1,   904,
     263,   905,   683,   908,   684,    -1,   904,   216,   683,  1156,
     684,    -1,   430,   683,  1156,   684,    -1,   430,    73,   683,
     909,   684,    -1,   280,   683,  1156,   684,    -1,   280,    73,
     683,   909,   684,    -1,    -1,   277,    -1,    -1,    12,   160,
    1251,    -1,    -1,   402,  1251,    -1,    -1,   555,    48,   904,
     216,   683,  1156,   684,   910,    -1,   555,    48,   904,   263,
     905,   683,   909,   684,   910,    -1,    -1,   909,    -1,  1401,
      -1,   909,   686,  1401,    -1,    -1,   554,  1251,    -1,    -1,
     683,   912,   684,    -1,   913,    -1,   912,   686,   913,    -1,
     401,  1401,   914,   925,   922,    -1,    -1,   620,   272,   574,
     915,    -1,   620,   249,   916,    -1,   327,    -1,   918,    -1,
     918,    -1,   683,   917,   684,    -1,   918,    -1,   917,   686,
     918,    -1,    -1,   683,   919,   920,   684,    -1,   921,    -1,
     920,   686,   921,    -1,   327,    -1,  1156,    -1,    -1,   683,
     923,   684,    -1,   924,    -1,   923,   686,   924,    -1,   555,
    1404,   925,    -1,    -1,   926,    -1,   926,   927,    -1,   927,
      -1,   564,  1286,  1401,    -1,  1315,   158,  1286,  1404,    -1,
     364,  1286,  1251,    -1,   322,  1286,  1253,    -1,   340,  1286,
    1253,    -1,   111,   136,  1286,  1398,    -1,   235,   136,  1286,
    1398,    -1,    77,  1286,  1398,    -1,    -1,   929,    -1,   930,
      -1,   929,   930,    -1,   938,    -1,   937,    -1,    -1,   230,
    1159,   171,    -1,   935,    -1,   932,   935,    -1,   935,    -1,
     933,   934,   935,    -1,    -1,   686,    -1,   158,  1286,  1404,
      -1,   322,  1286,  1252,    -1,   340,  1286,  1252,    -1,    28,
    1286,  1250,    -1,   404,  1286,  1398,    -1,    77,  1286,  1398,
      -1,    83,  1286,  1398,    -1,    84,  1286,  1398,    -1,    27,
    1286,  1252,    -1,   395,  1286,   936,    -1,   540,  1286,   936,
      -1,   541,  1286,   936,    -1,   542,  1286,  1250,    -1,   542,
    1286,   125,    -1,    63,  1286,  1250,    -1,   567,  1286,  1250,
      -1,   129,  1286,  1250,    -1,   483,  1286,   939,    -1,   603,
    1286,   683,  1337,   684,    -1,   937,    -1,   938,    -1,   242,
    1286,   940,    -1,   111,   136,  1286,  1398,    -1,   235,   136,
    1286,  1398,    -1,   564,  1286,  1401,    -1,   547,   139,    -1,
     547,   332,    -1,    87,  1286,  1398,    -1,   262,  1286,  1250,
      -1,  1250,    -1,   125,    -1,   989,   979,  1286,   981,    -1,
     989,    71,  1286,   988,    -1,   125,    -1,   187,    -1,   148,
      -1,    82,    -1,   440,    -1,    80,    -1,   369,    -1,   186,
      -1,   266,    -1,   550,    -1,   435,    -1,   123,    -1,   247,
      -1,   943,    -1,   942,   686,   943,    -1,   944,    -1,   946,
      -1,  1391,   950,   945,    -1,    -1,   947,    -1,   997,    -1,
    1003,  1020,   683,  1024,   684,  1016,    -1,   199,  1006,  1026,
     683,  1024,   684,  1010,    -1,  1009,  1006,  1026,   683,  1024,
     684,  1013,    -1,   948,  1004,  1020,   683,  1024,   684,  1016,
      -1,   948,   193,   263,  1026,   683,  1024,   684,   997,    -1,
     948,   947,    -1,    64,   683,  1153,   684,    -1,    -1,   949,
      -1,    89,  1026,    -1,   953,   972,    -1,   953,   987,   951,
      21,   683,  1153,   684,   952,   972,    -1,    -1,   203,    15,
      -1,    -1,   629,    -1,   548,    -1,   958,   970,   966,    -1,
     959,   971,   966,    -1,   961,   962,   966,    -1,    40,    -1,
      40,   969,    -1,    45,    -1,    44,    -1,    62,   969,   992,
      -1,    62,   992,    -1,   955,   969,   993,    -1,   955,   993,
      -1,    35,   969,    -1,    35,    -1,   956,   969,   992,    -1,
     957,   969,   993,    -1,   622,   969,    -1,   650,   970,   966,
      -1,   115,    -1,   579,   964,    -1,   576,   964,    -1,   112,
     964,    -1,   580,    -1,    42,   970,    -1,   954,    -1,   328,
      -1,   288,    -1,   291,   622,    -1,   291,   956,   992,    -1,
     582,   992,    -1,   573,   970,   992,    -1,   330,   992,    -1,
     289,   992,    -1,   159,   683,  1028,   684,   992,    -1,   501,
     683,  1028,   684,   992,    -1,   291,   992,    -1,   497,    -1,
     260,    -1,   206,    -1,   205,    -1,   409,    -1,   348,    -1,
     279,    -1,   347,    -1,   410,    -1,   349,    -1,   357,    -1,
     354,    62,    -1,    62,   626,    -1,   623,    -1,   354,   623,
      -1,   376,    -1,   357,   623,    -1,   354,    62,   626,    -1,
     357,   626,    -1,   247,    -1,   581,    -1,   513,    -1,   329,
      -1,    34,    -1,   435,    -1,   142,   960,    -1,    -1,   414,
      -1,   189,    -1,   123,    -1,   375,    -1,   187,    -1,    -1,
     969,    -1,   963,    -1,   683,   373,   686,   373,   684,    -1,
      -1,   683,   373,   684,    -1,    -1,   683,   684,    -1,   683,
     373,   684,    -1,    -1,   967,    -1,   967,   968,    -1,   968,
      -1,   509,    -1,   607,    -1,   651,    -1,   683,   290,   684,
      -1,   683,   594,   684,    -1,   683,   122,   684,    -1,   683,
     373,   684,    -1,    -1,   969,    -1,    -1,   963,    -1,    -1,
     973,    -1,   973,   974,    -1,   974,    -1,   372,    -1,  1159,
     372,    -1,   125,   978,    -1,   378,   609,   977,    -1,    27,
      -1,   497,   125,   621,    -1,   996,   263,    -1,   604,    -1,
     604,   263,    -1,    77,  1398,    -1,    71,   985,    -1,    75,
     975,    -1,   547,   976,    -1,   125,    -1,   187,    -1,   148,
      -1,   125,    -1,   139,    -1,   332,    -1,   368,   965,    -1,
     977,    -1,  1381,    -1,    62,   501,    -1,    61,    -1,  1404,
      -1,    35,    -1,   980,    -1,   125,    -1,    -1,   979,   981,
      -1,  1404,    -1,    35,    -1,   983,    -1,   125,    -1,  1404,
      -1,    -1,    71,   988,    -1,    -1,    71,   985,    -1,   985,
      -1,   125,    -1,    -1,   125,    -1,    23,    -1,    35,    23,
      -1,    23,    35,    -1,   601,    -1,   601,    35,    -1,    35,
     601,    -1,    -1,   990,    -1,   991,    -1,    49,    -1,   979,
     980,   993,    -1,    35,    -1,    35,   979,   980,    -1,    -1,
      35,    -1,    -1,   683,  1251,   995,   684,    -1,    -1,   418,
      -1,   441,  1392,   998,  1000,  1001,    -1,    -1,   683,   999,
     684,    -1,   999,   686,  1401,    -1,  1401,    -1,    -1,   319,
     198,    -1,   319,   400,    -1,   319,   510,    -1,    -1,   378,
     609,  1002,    -1,   378,   130,  1002,    -1,   378,   609,  1002,
     378,   130,  1002,    -1,   378,   130,  1002,   378,   609,  1002,
      -1,   470,    -1,    52,    -1,   501,   372,    -1,   369,     6,
      -1,   501,   125,    -1,  1005,    -1,   418,   263,    -1,   604,
    1006,    -1,   263,    -1,   235,    -1,    -1,  1005,    -1,   261,
      -1,   235,    -1,   234,    -1,    -1,   604,    -1,   519,    -1,
      -1,  1011,    -1,  1012,    -1,  1011,  1012,    -1,  1019,    -1,
     637,   398,  1395,    -1,    -1,  1014,    -1,  1015,    -1,  1014,
    1015,    -1,  1019,    -1,    -1,  1017,    -1,  1018,    -1,  1017,
    1018,    -1,  1019,    -1,  1021,    -1,   262,  1286,  1250,    -1,
      77,  1398,    -1,  1022,    -1,  1026,    -1,  1026,   615,  1023,
      -1,  1401,   592,  1023,    -1,   615,  1023,    -1,   592,  1023,
      -1,   657,    -1,   656,    -1,    47,    -1,   486,    -1,   216,
      -1,  1024,   686,  1025,    -1,  1025,    -1,  1401,  1244,    -1,
    1401,   683,   373,   684,  1244,    -1,    -1,  1391,    -1,    -1,
     692,  1401,    -1,  1379,    -1,  1028,   686,  1379,    -1,    -1,
      14,   566,  1392,  1030,  1049,    -1,    -1,    14,   108,  1048,
    1031,   929,    -1,    -1,    14,   420,   754,  1032,   755,    -1,
      -1,    14,   200,   754,  1033,   755,    -1,    -1,    14,  1502,
    1497,  1034,  1504,    -1,    -1,    14,  1497,  1035,  1504,    -1,
      -1,    14,  1497,   167,   754,  1036,  1045,  1046,   745,   750,
    1047,    -1,    14,   564,   860,    -1,    14,   286,   212,   862,
      -1,    14,   564,   857,    -1,    14,   564,   856,    -1,    14,
     499,  1404,   384,   683,   739,   684,    -1,  1037,  1470,  1474,
    1041,  1038,    -1,  1037,  1044,   228,    48,   572,    -1,  1446,
      -1,  1037,  1406,   125,   654,    13,    -1,  1037,  1406,   125,
     654,   365,    -1,  1037,  1406,   125,   654,  1469,    -1,    14,
     612,  1268,    -1,    -1,  1039,    -1,  1040,    -1,  1039,  1040,
      -1,     5,   606,    -1,     5,   285,    -1,   404,   174,    -1,
     404,   174,   245,  1251,   120,    -1,   404,   174,   361,    -1,
     404,   174,   125,    -1,    -1,   637,  1042,    -1,  1042,  1043,
      -1,  1043,    -1,   321,  1250,    -1,   325,  1250,    -1,   320,
    1250,    -1,   326,  1250,    -1,   612,   683,   684,    -1,    -1,
     378,   488,   743,    -1,   749,    -1,   378,   488,   743,   749,
      -1,    -1,   451,   583,   754,    -1,    -1,   143,   751,    -1,
      -1,  1401,    -1,  1050,    -1,  1050,   902,    -1,  1050,  1055,
      -1,  1051,    -1,  1060,   686,  1051,    -1,    -1,  1060,    -1,
    1059,    -1,  1060,   686,  1059,    -1,   138,   564,    -1,   233,
     564,    -1,  1057,    -1,   144,   401,  1219,    -1,   436,   401,
    1104,  1056,    -1,    -1,   382,   401,  1104,  1056,  1052,  1104,
      -1,    17,   401,  1104,  1056,    -1,    64,   401,  1056,  1100,
      -1,   453,   401,  1104,  1056,  1094,    -1,    69,   401,  1104,
    1251,    -1,   590,   401,  1056,    -1,  1058,    -1,   169,   401,
    1401,   637,   566,  1392,  1053,    -1,   138,   401,  1056,   564,
      -1,   233,   401,  1056,   564,    -1,    -1,  1054,    -1,   637,
     619,    -1,   640,   619,    -1,   450,   403,    -1,    13,    -1,
    1219,    -1,     7,   401,  1104,    -1,     7,   401,  1104,   683,
     912,   684,    -1,     7,   401,  1104,   402,  1251,    -1,   452,
     401,  1104,    -1,   452,   401,  1104,  1219,   246,   683,   912,
     684,    -1,  1062,    -1,  1059,   686,  1062,    -1,  1059,   686,
    1063,    -1,  1063,    -1,  1060,   686,  1063,    -1,     7,  1067,
      -1,  1061,  1391,   950,   945,  1070,    -1,     7,   946,    -1,
    1061,   683,   942,   684,    -1,    58,  1067,  1391,  1391,   950,
    1070,    -1,   344,  1067,  1391,   950,  1070,    -1,   144,  1067,
    1391,  1069,    -1,   144,   193,   263,  1391,    -1,   144,   418,
     263,    -1,   144,  1005,  1391,    -1,   137,   261,    -1,   152,
     261,    -1,    14,  1067,  1391,   501,   125,  1381,    -1,    14,
     235,  1401,  1022,    -1,    14,  1067,  1391,   144,   125,    -1,
     451,  1071,  1392,    -1,   451,  1005,  1391,   583,  1391,    -1,
      96,   583,   979,   981,   986,    -1,   932,    -1,   192,    -1,
    1238,    -1,  1065,    -1,  1066,    -1,  1054,    -1,    -1,  1066,
      -1,  1065,    -1,  1066,  1065,    -1,  1065,  1066,    -1,    12,
    1286,   125,    -1,    12,  1286,  1401,    -1,   285,  1286,   125,
      -1,   285,  1286,  1401,    -1,    -1,    74,    -1,    -1,   231,
      -1,    -1,   470,    -1,    52,    -1,    -1,     9,  1401,    -1,
     186,    -1,    -1,   583,    -1,   160,    -1,    21,    -1,   539,
     204,    -1,   546,   204,    -1,  1074,  1075,    -1,   546,   511,
    1086,   733,    -1,   539,   511,  1086,    -1,    -1,  1089,  1081,
    1076,   733,    -1,   539,   585,  1078,    -1,    -1,  1079,    -1,
    1080,    -1,  1079,   686,  1080,    -1,   637,    88,   514,    -1,
     433,   380,    -1,   433,   643,    -1,  1082,  1083,  1084,  1085,
      -1,    -1,   612,   160,  1398,    -1,    -1,   404,   160,  1398,
      -1,    -1,   126,   160,  1398,    -1,    -1,   406,   160,  1398,
      -1,    -1,  1087,    -1,  1088,    -1,  1087,   686,  1088,    -1,
     534,    -1,   447,    -1,    -1,   608,  1090,    -1,   732,    -1,
    1090,   686,   732,    -1,   526,   160,  1398,    -1,   524,   160,
    1398,    -1,   525,    -1,    63,  1439,  1265,  1092,    -1,    -1,
     429,    -1,   176,    -1,   453,  1104,  1439,  1265,  1094,    -1,
      -1,  1095,    -1,  1096,    -1,  1095,  1096,    -1,   429,    -1,
     176,    -1,   613,    -1,    17,  1104,  1439,  1265,    -1,    36,
    1398,    -1,    64,  1439,  1265,  1100,    -1,    -1,  1101,    -1,
    1102,    -1,  1102,  1101,    -1,   429,    -1,   180,    -1,   331,
      -1,   176,    -1,    59,    -1,   194,   610,    -1,   382,  1104,
    1439,  1265,    -1,    -1,   371,    -1,   282,    -1,    -1,   451,
    1439,  1106,  1108,    -1,   451,   612,  1107,    -1,  1406,   583,
    1406,    -1,  1107,   686,  1406,   583,  1406,    -1,  1109,    -1,
    1108,   686,  1109,    -1,  1392,   583,  1392,    -1,    -1,    50,
     235,  1111,  1112,   249,  1116,    -1,  1113,    -1,  1115,    -1,
    1114,    -1,  1113,   686,  1114,    -1,  1392,  1125,    -1,  1392,
    1123,  1125,    -1,  1401,    -1,   125,    -1,    -1,   281,   235,
     246,    50,  1118,  1119,    -1,  1122,    -1,  1120,    -1,  1121,
      -1,  1120,   686,  1121,    -1,  1392,  1125,  1127,    -1,  1392,
    1123,  1125,  1127,    -1,    -1,   401,  1124,   683,  1056,   684,
      -1,  1126,    -1,    -1,  1005,   683,  1215,   684,    -1,    -1,
     231,   269,    -1,  1130,    -1,  1132,    -1,  1129,    -1,   683,
    1129,   684,    -1,  1130,  1258,    -1,  1131,  1241,  1245,  1142,
      -1,  1229,  1131,  1241,  1245,  1142,    -1,  1132,  1242,  1245,
    1142,    -1,  1229,  1132,  1242,  1245,  1142,    -1,  1132,  1246,
    1142,    -1,  1229,  1132,  1246,  1142,    -1,  1229,  1132,  1142,
      -1,  1133,    -1,  1131,   603,  1489,  1133,    -1,  1132,   603,
    1489,  1133,    -1,  1131,   603,  1489,  1132,    -1,  1132,   603,
    1489,  1132,    -1,   683,  1132,   684,    -1,   683,  1130,   684,
      -1,  1134,    -1,   493,  1139,  1149,  1258,  1135,  1226,  1235,
    1228,    -1,   493,  1139,  1149,  1135,  1226,  1235,  1228,    -1,
      -1,  1136,    -1,   197,  1137,    -1,   145,    -1,  1138,    -1,
    1193,    -1,  1138,   686,  1193,    -1,    -1,  1140,    -1,  1140,
    1141,    -1,  1141,    -1,  1493,    -1,   531,    -1,   529,    -1,
      -1,  1143,    -1,  1143,  1144,    -1,  1144,    -1,   194,  1145,
    1147,    -1,   194,  1145,  1146,  1147,    -1,   285,   249,   503,
     342,    -1,   609,    -1,   503,    -1,   667,  1267,    -1,    -1,
    1148,    -1,   668,   669,    -1,   670,    -1,  1149,   686,  1150,
      -1,  1150,    -1,   677,    -1,  1386,    -1,  1153,  1151,    -1,
      -1,    21,  1401,    -1,    21,  1398,    -1,  1401,    -1,  1398,
      -1,    -1,   683,   684,    -1,  1153,  1157,  1153,    -1,  1153,
     648,  1153,    -1,  1153,  1158,  1153,    -1,   367,  1153,    -1,
    1154,   254,   589,    -1,  1154,   254,  1159,   589,    -1,  1154,
     254,   179,    -1,  1154,   254,  1159,   179,    -1,  1154,   254,
     605,    -1,  1154,   254,  1159,   605,    -1,  1154,    -1,  1154,
     254,   372,    -1,  1154,   254,  1159,   372,    -1,  1154,  1161,
    1155,    -1,  1154,  1161,  1162,  1491,    -1,  1155,    -1,  1156,
     249,  1491,    -1,  1156,  1159,   249,  1491,    -1,  1156,   249,
     683,  1153,   684,    -1,  1156,   249,   683,  1153,   686,  1187,
     684,    -1,  1156,  1159,   249,   683,  1153,   684,    -1,  1156,
    1159,   249,   683,  1153,   686,  1187,   684,    -1,  1156,    33,
    1156,    19,  1155,    -1,  1156,  1159,    33,  1156,    19,  1155,
      -1,  1156,   517,   275,  1156,    -1,  1156,   275,  1163,  1234,
      -1,  1156,  1159,   275,  1163,  1234,    -1,  1156,   442,  1156,
      -1,  1156,  1159,   442,  1156,    -1,  1156,    -1,  1156,   673,
    1156,    -1,  1156,   674,  1156,    -1,  1156,   504,  1156,    -1,
    1156,   505,  1156,    -1,  1156,   676,  1156,    -1,  1156,   675,
    1156,    -1,  1156,   676,   245,  1153,  1220,    -1,  1156,   675,
     245,  1153,  1220,    -1,  1156,   677,  1156,    -1,  1156,   678,
    1156,    -1,  1156,   679,  1156,    -1,  1156,   141,  1156,    -1,
    1156,   345,  1156,    -1,  1156,   680,  1156,    -1,  1163,    -1,
     390,    -1,   387,    -1,    19,    -1,    18,    -1,   367,    -1,
     366,    -1,   687,    -1,   366,    -1,   160,    -1,   161,    -1,
     201,    -1,   214,    -1,   267,    -1,   294,    -1,   359,    -1,
      13,    -1,    20,    -1,  1388,    -1,  1164,    -1,  1165,    -1,
    1168,    -1,  1166,    -1,  1163,    71,  1404,    -1,  1382,    -1,
    1380,    -1,  1178,    -1,  1175,    -1,  1163,   389,  1163,    -1,
     676,  1163,    -1,   675,  1163,    -1,   681,  1163,    -1,  1160,
    1163,    -1,  1490,    -1,   683,  1153,   684,    -1,   683,  1153,
     686,  1187,   684,    -1,   484,   683,  1153,   686,  1187,   684,
      -1,   171,  1491,    -1,   688,  1401,  1153,   689,    -1,   319,
    1188,    10,   683,  1156,  1169,   684,    -1,    35,  1163,    -1,
      55,   683,  1153,    21,  1185,   684,    -1,    54,  1190,  1192,
    1191,   154,    -1,    96,   683,  1153,   686,  1185,   684,    -1,
      96,   683,  1153,   615,   980,   684,    -1,   125,   683,  1388,
     684,    -1,   620,   683,  1389,   684,    -1,   245,  1153,  1220,
     676,  1153,    -1,  1388,   259,  1399,    -1,  1388,   652,  1399,
      -1,    62,   683,  1187,   684,    -1,    62,   683,  1187,   615,
     980,   684,    -1,   104,  1152,    -1,   115,   683,  1153,   684,
      -1,   120,   683,  1153,   684,    -1,   226,   683,  1153,   684,
      -1,   241,   683,  1153,   686,  1153,   686,  1153,   686,  1153,
     684,    -1,   245,   683,  1153,   686,  1153,   684,    -1,   245,
     683,  1153,   686,  1153,   686,  1187,   684,    -1,   271,   683,
    1153,   686,  1153,   684,    -1,   339,   683,  1153,   684,    -1,
     346,   683,  1153,   684,    -1,   477,   683,  1153,   686,  1153,
     684,    -1,   491,   683,  1153,   684,    -1,   579,   683,  1153,
     684,    -1,   576,   683,  1153,   684,    -1,   576,   683,  1153,
     686,  1153,   684,    -1,   588,   683,  1153,   684,    -1,   588,
     683,   268,  1153,   197,  1153,   684,    -1,   588,   683,   584,
    1153,   197,  1153,   684,    -1,   588,   683,    46,  1153,   197,
    1153,   684,    -1,   588,   683,   268,   197,  1153,   684,    -1,
     588,   683,   584,   197,  1153,   684,    -1,   588,   683,    46,
     197,  1153,   684,    -1,   588,   683,  1153,   197,  1153,   684,
      -1,   612,   683,   684,    -1,   650,   683,  1153,   684,    -1,
       8,   683,  1153,   686,  1153,   684,    -1,     8,   683,  1153,
     686,   245,  1153,  1220,   684,    -1,   102,  1152,    -1,   107,
     965,    -1,   113,   683,  1153,   686,   245,  1153,  1220,   684,
      -1,   114,   683,  1153,   686,   245,  1153,  1220,   684,    -1,
     178,   683,  1220,   197,  1153,   684,    -1,   207,   683,  1222,
     686,  1153,   684,    -1,   977,    -1,   412,   683,  1156,   249,
    1153,   684,    -1,   552,   683,  1153,   686,  1153,   684,    -1,
     552,   683,  1153,   686,   245,  1153,  1220,   684,    -1,   556,
     683,  1153,   686,  1153,   686,  1153,   684,    -1,   556,   683,
    1153,   686,  1153,   684,    -1,   556,   683,  1153,   197,  1153,
     194,  1153,   684,    -1,   556,   683,  1153,   197,  1153,   684,
      -1,   562,   965,    -1,   577,   683,  1221,   686,  1153,   686,
    1153,   684,    -1,   578,   683,  1221,   686,  1153,   686,  1153,
     684,    -1,   616,  1152,    -1,   618,   965,    -1,   617,   965,
      -1,    23,   683,  1153,   684,    -1,    61,   683,  1153,   684,
      -1,    69,   683,  1187,   684,    -1,    72,   683,  1153,   684,
      -1,   108,   683,   684,    -1,   230,   683,  1153,   686,  1153,
     686,  1153,   684,    -1,   195,   683,  1153,   686,  1153,   684,
      -1,   195,   683,  1153,   686,  1153,   686,  1153,   684,    -1,
     335,   683,  1153,   684,    -1,   345,   683,  1153,   686,  1153,
     684,    -1,   404,   683,  1153,   684,    -1,   427,   683,  1153,
     684,    -1,   455,   683,  1153,   686,  1153,   684,    -1,   456,
     683,  1153,   686,  1153,   686,  1153,   684,    -1,   475,   683,
    1153,   684,    -1,   485,   683,   684,    -1,   590,   683,  1153,
     686,  1153,   684,    -1,   632,   683,  1153,   684,    -1,   632,
     683,  1153,   686,  1153,   684,    -1,   633,   683,  1153,   684,
      -1,   633,   683,  1153,    21,    62,   994,   684,    -1,   633,
     683,  1153,    21,    35,   994,   684,    -1,   633,   683,  1153,
     686,  1250,   686,  1250,   686,  1250,   684,    -1,  1167,    -1,
     205,   683,  1186,   684,    -1,   279,   683,  1187,   684,    -1,
     347,   683,  1187,   684,    -1,   348,   683,  1187,   684,    -1,
     349,   683,  1187,   684,    -1,   409,   683,  1153,   686,  1153,
     684,    -1,   410,   683,  1187,   684,    -1,  1395,   683,  1172,
     684,    -1,  1401,   692,  1401,   683,  1186,   684,    -1,  1170,
    1171,    -1,   249,    44,   342,    -1,    -1,   249,   355,   265,
     342,    -1,    -1,   637,   428,   173,    -1,    -1,  1173,    -1,
    1174,    -1,  1173,   686,  1174,    -1,  1153,  1151,    -1,  1176,
      -1,  1177,    -1,    29,   683,  1184,   684,    -1,    29,   683,
     140,  1184,   684,    -1,    38,   683,  1184,   684,    -1,    39,
     683,  1184,   684,    -1,   666,   683,  1184,   684,    -1,   665,
     683,  1184,   686,  1184,   684,    -1,    41,   683,  1184,   684,
      -1,    97,   683,  1225,   677,   684,    -1,    97,   683,  1184,
     684,    -1,    97,   683,   140,  1187,   684,    -1,   341,   683,
    1184,   684,    -1,   341,   683,   140,  1184,   684,    -1,   324,
     683,  1184,   684,    -1,   324,   683,   140,  1184,   684,    -1,
     545,   683,  1184,   684,    -1,   625,   683,  1184,   684,    -1,
     544,   683,  1184,   684,    -1,   627,   683,  1184,   684,    -1,
     557,   683,  1184,   684,    -1,   557,   683,   140,  1184,   684,
      -1,   213,   683,  1180,  1187,  1182,  1181,   684,    -1,   671,
     683,  1187,   684,    -1,   691,  1179,    -1,  1404,   502,  1153,
      -1,  1404,    -1,   691,  1423,  1404,  1027,    -1,    -1,   140,
      -1,    -1,   495,  1379,    -1,    -1,   388,    48,  1183,    -1,
    1183,   686,  1387,    -1,  1387,    -1,  1225,  1153,    -1,    35,
     970,    -1,    62,   970,   992,    -1,   955,   970,    -1,   509,
      -1,   509,   247,    -1,   607,    -1,   607,   247,    -1,   115,
      -1,   579,   964,    -1,   112,   964,    -1,   123,   962,    -1,
     260,    -1,    -1,  1187,    -1,  1153,    -1,  1187,   686,  1153,
      -1,  1189,    -1,   683,  1189,   684,    -1,  1388,    -1,  1189,
     686,  1388,    -1,    -1,  1153,    -1,    -1,   150,  1153,    -1,
     634,  1153,   575,  1153,    -1,  1192,   634,  1153,   575,  1153,
      -1,  1203,    -1,  1195,    -1,   688,  1401,  1194,   689,    -1,
    1203,    -1,  1195,    -1,  1193,  1197,  1193,   378,  1153,    -1,
    1193,  1197,  1193,   615,   683,  1218,   684,    -1,  1193,  1198,
    1193,   378,  1153,    -1,  1193,  1198,  1193,   615,   683,  1218,
     684,    -1,  1193,  1197,  1193,    -1,  1193,  1196,  1203,    -1,
     355,  1199,   258,    -1,   355,   477,  1200,   258,    -1,   355,
     271,  1200,   258,    -1,   258,    -1,   238,   258,    -1,   100,
     258,    -1,   549,    -1,   271,  1200,   258,    -1,   477,  1200,
     258,    -1,    -1,   238,    -1,    -1,   391,    -1,    -1,  1202,
      -1,   401,   683,  1218,   684,    -1,  1206,    -1,  1205,    -1,
    1208,    -1,  1207,    -1,  1204,    -1,   683,  1204,   684,    -1,
     683,  1138,   686,  1193,   684,    -1,   683,  1205,   684,    -1,
     683,  1206,   684,    -1,  1392,  1201,  1224,  1214,    -1,   683,
    1207,   684,    -1,   683,  1195,   684,    -1,  1491,  1224,  1232,
      -1,    -1,   194,   258,    -1,   194,   388,    48,    -1,   194,
     212,    48,    -1,   192,    -1,   231,    -1,  1210,  1005,  1209,
     683,  1217,   684,    -1,   614,  1005,  1209,   683,  1215,   684,
      -1,  1211,    -1,  1212,  1211,    -1,    -1,  1212,    -1,  1213,
      -1,    -1,  1217,    -1,  1401,    -1,   418,    -1,  1216,    -1,
    1217,   686,  1216,    -1,  1219,    -1,  1401,    -1,  1219,   686,
    1401,    -1,  1221,    -1,   116,    -1,   117,    -1,   118,    -1,
     119,    -1,   223,    -1,   224,    -1,   225,    -1,   337,    -1,
     338,    -1,   490,    -1,   649,    -1,   120,    -1,   632,    -1,
     226,    -1,   339,    -1,   346,    -1,   427,    -1,   491,    -1,
     335,    -1,   650,    -1,   115,    -1,   579,    -1,   576,    -1,
     112,    -1,    -1,    21,    -1,   160,    -1,    -1,  1223,  1401,
      -1,    -1,    13,    -1,  1227,    -1,    -1,   635,  1153,    -1,
      -1,   217,  1153,    -1,   637,  1230,    -1,   637,   660,  1230,
      -1,  1230,   686,  1231,    -1,  1231,    -1,  1401,  1232,    21,
    1491,    -1,    -1,   683,  1233,   684,    -1,  1401,    -1,  1233,
     686,  1401,    -1,   165,  1163,    -1,    -1,    -1,   212,    48,
    1236,  1237,    -1,  1236,   686,  1387,    -1,  1387,    -1,    -1,
     639,    -1,   388,    48,  1239,    -1,  1239,   686,  1240,    -1,
    1240,    -1,  1389,  1244,    -1,    -1,  1242,    -1,   388,    48,
    1243,    -1,  1243,   686,  1387,    -1,  1387,    -1,    -1,    22,
      -1,   131,    -1,    -1,  1246,    -1,   276,  1247,    -1,  1248,
      -1,  1248,   686,  1248,    -1,  1248,   377,  1248,    -1,  1401,
      -1,  1380,    -1,   594,    -1,   290,    -1,   373,    -1,    -1,
     276,  1248,    -1,   373,    -1,   219,    -1,   290,    -1,   594,
      -1,   122,    -1,   188,    -1,   373,    -1,   219,    -1,   290,
      -1,   594,    -1,  1254,    -1,   373,    -1,   594,    -1,   290,
      -1,   122,    -1,   188,    -1,   373,    -1,   594,    -1,   290,
      -1,  1254,    -1,  1255,    -1,   122,    -1,   188,    -1,  1256,
     686,  1257,    -1,  1257,    -1,   691,  1404,    -1,  1404,    -1,
     246,  1259,    -1,   392,  1400,   982,  1363,  1366,    -1,   146,
    1400,    -1,  1256,    -1,   143,  1261,  1149,    -1,    -1,   144,
    1269,  1439,  1268,  1265,  1069,    -1,    -1,    -1,   144,   235,
    1401,   378,  1392,  1263,  1264,  1064,    -1,   144,   108,  1268,
    1401,    -1,   144,   200,  1268,  1401,   692,  1401,    -1,   144,
     200,  1268,  1401,    -1,   144,   420,  1268,   754,    -1,   144,
     612,  1268,  1468,    -1,   144,   628,  1268,  1265,  1069,    -1,
     144,   167,  1268,   754,    -1,   144,   587,  1268,   754,    -1,
     144,   564,   883,  1270,    -1,   144,   286,   212,   884,  1270,
      -1,   144,   499,  1268,  1404,    -1,   144,   654,  1268,  1469,
      -1,  1392,    -1,  1265,   686,  1392,    -1,  1392,    -1,  1393,
      -1,  1267,   686,  1393,    -1,    -1,   230,   171,    -1,    -1,
     569,    -1,    -1,  1271,    -1,  1272,    -1,  1271,   934,  1272,
      -1,   894,    -1,   896,    -1,   241,  1275,  1068,  1277,  1392,
    1201,  1278,  1291,    -1,   241,  1275,  1068,  1277,  1392,  1201,
     501,  1294,  1291,    -1,   241,  1275,  1068,  1277,  1392,  1201,
    1279,  1291,    -1,   456,  1276,  1277,  1392,  1201,  1278,    -1,
     456,  1276,  1277,  1392,  1201,   501,  1294,    -1,   456,  1276,
    1277,  1392,  1201,  1279,    -1,    -1,   293,    -1,   128,    -1,
     220,    -1,  1296,    -1,   128,    -1,    -1,   246,    -1,  1281,
      -1,   683,   684,  1281,    -1,   683,  1280,   684,  1281,    -1,
    1282,    -1,   683,   684,  1282,    -1,   683,  1280,   684,  1282,
      -1,  1280,   686,  1385,    -1,  1385,    -1,  1283,  1284,    -1,
    1130,    -1,  1132,    -1,   621,    -1,   620,    -1,  1284,   686,
    1287,    -1,  1287,    -1,   160,    -1,   502,    -1,    -1,  1285,
      -1,   683,  1288,   684,    -1,    -1,  1289,    -1,  1289,   686,
    1290,    -1,  1290,    -1,  1153,    -1,   125,    -1,    -1,   378,
     147,   263,   609,  1294,    -1,  1293,   609,  1296,  1068,  1138,
     501,  1294,  1226,  1241,  1249,    -1,    -1,  1229,    -1,  1294,
     686,  1295,    -1,  1295,    -1,  1389,  1285,  1290,    -1,    -1,
     293,    -1,  1293,   130,  1299,   197,  1392,  1201,  1226,  1241,
    1249,    -1,  1293,   130,  1299,  1267,   197,  1138,  1226,    -1,
    1293,   130,  1299,   197,  1267,   615,  1138,  1226,    -1,    -1,
     692,   677,    -1,    -1,  1300,  1299,    -1,   429,    -1,   293,
      -1,   231,    -1,    -1,   590,  1303,  1302,  1266,    -1,    -1,
     566,    -1,    -1,  1305,    -1,  1306,    -1,  1305,   686,  1306,
      -1,    98,    -1,   332,    -1,    43,   252,    -1,    94,   561,
      -1,   396,   181,    -1,   253,    -1,   560,    -1,   518,    -1,
      13,    -1,    -1,   194,   428,   373,    -1,    -1,   506,  1309,
    1310,    -1,   109,  1322,    -1,  1317,   563,  1316,  1322,    -1,
    1317,   586,  1316,  1322,    -1,   166,  1316,  1322,    -1,   566,
     543,  1316,  1322,    -1,   381,   563,  1316,  1321,    -1,   408,
      -1,   158,  1404,  1313,    -1,   158,    13,  1313,    -1,  1317,
      73,  1318,  1392,  1316,  1322,    -1,  1314,   287,    -1,   511,
     222,    -1,    -1,    36,   166,  1319,  1320,  1311,  1245,    -1,
      -1,   444,   166,  1319,  1320,  1312,  1245,   733,    -1,  1007,
    1318,  1392,  1316,  1227,    -1,  1315,   157,    -1,    97,   683,
     677,   684,   631,    -1,    97,   683,   677,   684,   163,    -1,
     631,  1245,    -1,   163,  1245,    -1,   424,    -1,   423,  1304,
    1307,  1245,    -1,  1422,   543,  1322,    -1,  1317,   422,    -1,
    1422,   624,  1322,    -1,   979,  1322,    -1,    72,  1322,    -1,
     419,    -1,   211,    -1,   211,   194,  1406,    -1,   211,   194,
    1406,   615,  1468,    -1,    99,   108,   931,  1401,    -1,    99,
     566,  1392,    -1,    99,   628,  1392,    -1,   316,   543,    -1,
     511,   543,   733,    -1,    99,   420,   754,    -1,    99,   200,
     754,    -1,    99,   587,   754,    -1,   420,   543,  1322,    -1,
     200,   543,  1322,    -1,   420,    70,   754,    -1,   200,    70,
     754,    -1,    99,   167,   754,    -1,    99,   612,  1406,    -1,
     543,    -1,   350,    -1,   287,    -1,   316,    -1,    35,    -1,
      -1,   547,    -1,    -1,  1318,  1401,    -1,    -1,   198,    -1,
     197,    -1,   249,    -1,    -1,   249,  1398,    -1,    -1,   197,
    1252,    -1,    -1,   275,  1398,    -1,   635,  1153,    -1,    -1,
     275,  1399,    -1,   635,  1153,    -1,  1326,  1392,  1328,    -1,
      -1,  1326,  1327,  1324,  1325,    -1,  1128,    -1,  1273,    -1,
    1274,    -1,  1292,    -1,  1297,    -1,   194,    87,  1251,    -1,
     131,    -1,   132,    -1,    -1,   176,    -1,   402,    -1,   195,
     160,  1404,    -1,    -1,  1379,    -1,  1401,    -1,    -1,   190,
    1104,  1330,  1331,    -1,    -1,  1439,  1337,  1332,  1333,    -1,
    1335,    -1,    -1,   637,   433,   285,    -1,    -1,   194,  1334,
     175,    -1,  1335,   686,  1336,    -1,  1336,    -1,   162,   287,
      -1,   158,   287,    -1,   202,   287,    -1,   512,   287,    -1,
      35,   287,    -1,   443,   287,   733,    -1,   428,    50,    -1,
     222,    -1,   419,    -1,   287,    -1,   543,    -1,   133,    -1,
     468,    -1,   383,    -1,    -1,  1265,    -1,    -1,   466,  1339,
    1340,    -1,   466,   653,  1341,    -1,  1340,   686,  1342,    -1,
    1342,    -1,    -1,  1268,  1401,    -1,    -1,   511,  1343,  1345,
     733,    -1,    -1,   316,  1344,  1346,    -1,   428,    50,    -1,
      -1,    13,    -1,    -1,   583,  1251,    -1,    -1,   426,  1348,
    1349,    -1,  1314,   287,  1350,    -1,   583,  1398,    -1,    31,
    1153,    -1,   264,  1352,  1153,    -1,    -1,    87,    -1,   428,
      -1,   614,  1401,    -1,    -1,    -1,    -1,   281,  1358,  1355,
    1360,  1359,   236,  1400,  1361,   246,   566,  1392,  1201,  1356,
     982,  1357,  1369,  1363,  1366,  1370,  1372,  1375,    -1,   111,
      -1,   647,    -1,    -1,   282,    -1,    -1,    85,    -1,   293,
      -1,    -1,  1362,    -1,   456,    -1,   231,    -1,    -1,    73,
    1364,    -1,  1364,  1365,    -1,  1365,    -1,   571,    48,  1379,
      -1,   386,   153,    48,  1379,    -1,   153,    48,  1379,    -1,
     164,    48,  1379,    -1,    -1,   278,  1367,    -1,  1367,  1368,
      -1,  1368,    -1,   571,    48,  1379,    -1,   537,    48,  1379,
      -1,    -1,   482,   228,    48,  1379,    -1,    -1,   231,   373,
    1371,    -1,   278,    -1,   482,    -1,    -1,   683,  1373,   684,
      -1,   683,   684,    -1,  1373,   686,  1374,    -1,  1374,    -1,
    1389,    -1,   691,  1404,    -1,    -1,   501,  1376,    -1,  1376,
     686,  1377,    -1,  1377,    -1,  1389,  1285,  1290,    -1,   572,
      -1,   356,    -1,   597,   572,    -1,  1378,  1399,    -1,  1399,
      -1,   219,    -1,    37,    -1,   397,    -1,  1382,    -1,   676,
    1383,    -1,   675,  1383,    -1,  1378,    -1,  1383,    -1,  1384,
      -1,   372,    -1,   179,    -1,   589,    -1,   219,    -1,    37,
      -1,   597,   219,    -1,   597,    37,    -1,   373,    -1,   290,
      -1,   594,    -1,   122,    -1,   188,    -1,   115,   572,    -1,
     579,   572,    -1,   576,   572,    -1,  1389,    -1,  1386,    -1,
    1401,   692,   677,    -1,  1401,   692,  1401,   692,   677,    -1,
    1153,  1244,    -1,  1401,    -1,  1390,    -1,  1401,    -1,  1390,
      -1,  1401,   692,  1401,    -1,   692,  1401,   692,  1401,    -1,
    1401,   692,  1401,   692,  1401,    -1,  1401,    -1,  1401,   692,
    1401,   692,  1401,    -1,  1401,   692,  1401,    -1,   692,  1401,
      -1,  1401,    -1,  1401,   692,  1401,    -1,   692,  1401,    -1,
    1401,  1298,    -1,  1401,   692,  1401,  1298,    -1,  1401,    -1,
     227,    -1,   229,    -1,  1398,    -1,  1396,    -1,   572,    -1,
     572,    -1,   572,    -1,  1395,    -1,  1408,    -1,  1395,    -1,
    1412,    -1,  1395,    -1,  1410,    -1,  1401,    -1,  1398,    -1,
     274,    -1,  1402,    -1,  1398,    -1,   274,    -1,  1404,    -1,
    1404,   691,  1404,    -1,   104,  1152,    -1,  1405,    -1,  1405,
     691,  1404,    -1,  1410,    -1,  1409,    -1,   170,    -1,   507,
      -1,     5,    -1,    23,    -1,    15,    -1,    30,    -1,    32,
      -1,    49,    -1,    50,    -1,    61,    -1,    63,    -1,    68,
      -1,    77,    -1,    79,    -1,    93,    -1,   121,    -1,   143,
      -1,   154,    -1,   190,    -1,   191,    -1,   195,    -1,   204,
      -1,   215,    -1,   218,    -1,   221,    -1,   233,    -1,   244,
      -1,   656,    -1,   265,    -1,   369,    -1,   381,    -1,   384,
      -1,   394,    -1,   398,    -1,   411,    -1,   413,    -1,   415,
      -1,   450,    -1,   453,    -1,   466,    -1,   469,    -1,   654,
      -1,   478,    -1,   487,    -1,   492,    -1,   499,    -1,   509,
      -1,   515,    -1,   511,    -1,   516,    -1,   539,    -1,   546,
      -1,   590,    -1,   657,    -1,   601,    -1,   602,    -1,   642,
      -1,   645,    -1,   610,    -1,  1411,    -1,   167,    -1,   183,
      -1,   365,    -1,   421,    -1,   425,    -1,   449,    -1,   457,
      -1,   558,    -1,     6,    -1,     8,    -1,     9,    -1,    10,
      -1,    11,    -1,    12,    -1,    20,    -1,    25,    -1,    27,
      -1,    26,    -1,    28,    -1,    29,    -1,    36,    -1,    40,
      -1,    43,    -1,    45,    -1,    44,    -1,    47,    -1,    53,
      -1,    56,    -1,    57,    -1,    59,    -1,    60,    -1,    65,
      -1,    67,    -1,    66,    -1,    69,    -1,    70,    -1,    72,
      -1,    76,    -1,    75,    -1,    73,    -1,    78,    -1,    80,
      -1,    81,    -1,   659,    -1,    82,    -1,    83,    -1,    84,
      -1,    85,    -1,    87,    -1,    88,    -1,    90,    -1,    92,
      -1,    91,    -1,    94,    -1,    98,    -1,   103,    -1,   106,
      -1,   111,    -1,   110,    -1,   112,    -1,   115,    -1,   120,
      -1,   126,    -1,   127,    -1,   129,    -1,   133,    -1,   135,
      -1,   136,    -1,   137,    -1,   138,    -1,   139,    -1,   146,
      -1,   147,    -1,   148,    -1,   155,    -1,   159,    -1,   158,
      -1,   157,    -1,   162,    -1,   163,    -1,   165,    -1,   166,
      -1,   168,    -1,   169,    -1,   173,    -1,   174,    -1,   175,
      -1,   176,    -1,   177,    -1,   181,    -1,   180,    -1,   196,
      -1,   152,    -1,   198,    -1,   184,    -1,   185,    -1,   186,
      -1,   187,    -1,   202,    -1,   206,    -1,   205,    -1,   207,
      -1,   211,    -1,   209,    -1,   216,    -1,   222,    -1,   226,
      -1,   228,    -1,   232,    -1,   248,    -1,   234,    -1,   237,
      -1,   252,    -1,   253,    -1,   255,    -1,   256,    -1,   242,
      -1,   243,    -1,   260,    -1,   262,    -1,   266,    -1,   269,
      -1,   272,    -1,   273,    -1,   279,    -1,   280,    -1,   282,
      -1,   669,    -1,   284,    -1,   286,    -1,   287,    -1,   322,
      -1,   316,    -1,   318,    -1,   299,    -1,   303,    -1,   300,
      -1,   301,    -1,   317,    -1,   302,    -1,   305,    -1,   297,
      -1,   304,    -1,   298,    -1,   314,    -1,   308,    -1,   306,
      -1,   307,    -1,   309,    -1,   310,    -1,   311,    -1,   312,
      -1,   313,    -1,   295,    -1,   320,    -1,   321,    -1,   323,
      -1,   325,    -1,   326,    -1,   331,    -1,   332,    -1,   333,
      -1,   334,    -1,   335,    -1,   336,    -1,   339,    -1,   340,
      -1,   344,    -1,   342,    -1,   346,    -1,   347,    -1,   348,
      -1,   349,    -1,   350,    -1,   351,    -1,   353,    -1,   352,
      -1,   354,    -1,   357,    -1,   358,    -1,   361,    -1,   363,
      -1,   362,    -1,   370,    -1,   364,    -1,   670,    -1,   374,
      -1,   376,    -1,   377,    -1,   379,    -1,   380,    -1,   395,
      -1,   396,    -1,   400,    -1,   403,    -1,   402,    -1,   404,
      -1,   405,    -1,   406,    -1,   407,    -1,   408,    -1,   409,
      -1,   410,    -1,   416,    -1,   417,    -1,   419,    -1,   422,
      -1,   423,    -1,   424,    -1,   427,    -1,   428,    -1,   429,
      -1,   432,    -1,   436,    -1,   437,    -1,   439,    -1,   438,
      -1,   440,    -1,   443,    -1,   444,    -1,   445,    -1,   446,
      -1,   447,    -1,   452,    -1,   454,    -1,   458,    -1,   459,
      -1,   460,    -1,   461,    -1,   462,    -1,   463,    -1,   464,
      -1,   468,    -1,   471,    -1,   472,    -1,   473,    -1,   475,
      -1,   479,    -1,   480,    -1,   481,    -1,   482,    -1,   485,
      -1,   483,    -1,   484,    -1,   486,    -1,   488,    -1,   489,
      -1,   491,    -1,   497,    -1,   496,    -1,   498,    -1,   503,
      -1,   510,    -1,   668,    -1,   512,    -1,   514,    -1,   517,
      -1,   518,    -1,   524,    -1,   525,    -1,   526,    -1,   529,
      -1,   528,    -1,   531,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,    -1,   541,    -1,   542,    -1,   543,    -1,   547,
      -1,   550,    -1,   551,    -1,   552,    -1,   553,    -1,   555,
      -1,   554,    -1,   559,    -1,   560,    -1,   561,    -1,   568,
      -1,   563,    -1,   567,    -1,   564,    -1,   569,    -1,   570,
      -1,   573,    -1,   574,    -1,   585,    -1,   586,    -1,   576,
      -1,   577,    -1,   578,    -1,   579,    -1,   591,    -1,   592,
      -1,   593,    -1,   595,    -1,   596,    -1,   599,    -1,   598,
      -1,   605,    -1,   608,    -1,   612,    -1,   613,    -1,   619,
      -1,   624,    -1,   628,    -1,   621,    -1,   631,    -1,   630,
      -1,   632,    -1,   640,    -1,   641,    -1,   633,    -1,   644,
      -1,   646,    -1,   647,    -1,   650,    -1,  1411,    -1,  1409,
      -1,   501,  1414,    -1,  1426,  1418,    -1,   585,  1428,    -1,
    1421,  1417,    -1,   404,  1285,  1435,    -1,   404,  1285,   404,
     683,  1435,   684,    -1,   404,   194,  1406,  1285,  1435,    -1,
     404,   194,  1406,  1285,   404,   683,  1435,   684,    -1,   501,
     654,  1469,    -1,   501,   654,   365,    -1,   501,   654,   125,
      -1,   501,   125,   654,  1469,   583,  1469,    -1,   501,   125,
     654,   365,   583,  1469,    -1,   501,   125,   654,    13,   583,
    1469,    -1,   501,   654,    13,  1416,    -1,    -1,   658,  1469,
      -1,  1425,  1418,    -1,   585,  1428,    -1,    -1,   686,  1419,
      -1,  1420,    -1,  1419,   686,  1420,    -1,  1421,  1425,    -1,
    1426,    -1,   209,    -1,   653,    -1,   282,    -1,   498,    -1,
      -1,   209,    -1,   282,    -1,   498,    -1,    -1,   209,   692,
      -1,   282,   692,    -1,   498,   692,    -1,    -1,   653,   692,
      -1,   209,   692,    -1,   282,   692,    -1,   498,   692,    -1,
    1427,  1285,  1436,    -1,  1427,  1285,  1436,    -1,   691,  1404,
    1285,  1153,    -1,   691,   691,  1424,  1427,  1285,  1436,    -1,
     979,   984,    -1,   352,  1285,  1153,    -1,   352,   981,   986,
      -1,  1401,    -1,  1401,   692,  1401,    -1,   125,   692,  1401,
      -1,  1429,  1432,    -1,  1431,  1430,    -1,  1433,    -1,    -1,
     686,  1429,    -1,   255,   273,  1434,    -1,    -1,   686,  1431,
      -1,   433,   380,    -1,   433,   643,    -1,   433,   595,    -1,
     433,    78,    -1,   454,   433,    -1,   496,    -1,   572,    -1,
    1153,    -1,   125,    -1,   378,    -1,    13,    -1,    35,    -1,
      -1,   285,  1439,  1438,  1440,    -1,   566,    -1,   563,    -1,
    1441,    -1,  1440,   686,  1441,    -1,  1392,  1224,  1442,    -1,
     433,    -1,   643,    -1,   293,   643,    -1,   433,   282,    -1,
      -1,   606,  1444,  1439,    -1,   507,    -1,    14,   243,  1447,
      -1,   480,  1404,   316,   263,    -1,   215,  1392,   381,  1224,
      -1,   215,  1394,    68,    -1,    -1,   215,  1394,   433,  1449,
    1450,  1226,  1245,    -1,  1451,    -1,  1401,  1452,    -1,   186,
      -1,   363,    -1,   186,    -1,   363,    -1,   417,    -1,   266,
      -1,    -1,  1454,  1453,   683,  1289,   684,    -1,   160,    -1,
     201,    -1,   267,    -1,   214,    -1,   294,    -1,   476,  1461,
     197,  1468,    -1,   476,  1461,   378,  1459,  1467,   197,  1468,
      -1,    -1,   476,    13,  1460,  1456,   378,  1459,  1467,   197,
    1468,    -1,   476,    13,  1460,   686,   210,   385,   197,  1468,
      -1,   476,   425,   378,  1406,   197,  1468,    -1,   210,  1461,
     583,  1468,  1463,    -1,   210,  1461,   378,  1459,  1467,   583,
    1470,  1474,  1475,    -1,    -1,   210,    13,  1460,  1458,   378,
    1459,  1467,   583,  1470,  1474,  1475,    -1,   210,   425,   378,
    1406,   583,  1470,  1476,    -1,    -1,   566,    -1,   200,    -1,
     420,    -1,    -1,   419,    -1,  1462,    -1,  1461,   686,  1462,
      -1,  1405,  1472,    -1,  1405,   691,  1404,    -1,   493,  1472,
      -1,   241,  1472,    -1,   609,  1472,    -1,   441,  1472,    -1,
     130,    -1,   611,    -1,   235,    -1,    14,    -1,    99,    -1,
     144,    -1,   170,    -1,   449,    -1,   507,    -1,   421,    -1,
     183,    -1,   210,   385,    -1,   506,   109,    -1,   558,    -1,
      99,   569,   563,    -1,   285,   563,    -1,   457,   511,    -1,
     457,    67,    -1,    99,   628,    -1,   506,   628,    -1,    99,
     481,    -1,    14,   481,    -1,    99,   612,    -1,   167,    -1,
     587,    -1,    99,   564,    -1,    99,   654,    -1,   144,   654,
      -1,    -1,   637,   655,   385,    -1,    -1,    19,    -1,  1466,
    1464,  1465,    -1,  1466,    -1,   553,   572,    -1,   256,   572,
      -1,    65,   572,    -1,   677,    -1,  1401,   692,   677,    -1,
     677,   692,   677,    -1,  1392,    -1,  1406,    -1,  1468,   686,
    1406,    -1,  1407,    -1,  1469,   686,  1407,    -1,  1471,    -1,
    1470,   686,  1471,    -1,  1406,   228,    48,   572,    -1,  1406,
     228,    48,   404,   572,    -1,  1406,   228,   637,  1404,    -1,
    1406,   228,   637,  1404,    21,  1398,    -1,  1406,   228,   637,
    1404,    48,  1398,    -1,  1406,    -1,    -1,   683,  1473,   684,
      -1,  1401,    -1,  1473,   686,  1401,    -1,    -1,   465,  1465,
      -1,   465,   535,    -1,   465,   644,    -1,   465,   365,    -1,
      -1,   637,  1477,    -1,    -1,   637,   210,   385,    -1,  1477,
    1478,    -1,  1478,    -1,   210,   385,    -1,   321,  1250,    -1,
     325,  1250,    -1,   320,  1250,    -1,   326,  1250,    -1,    -1,
      32,  1480,  1481,    -1,    -1,   641,    -1,    -1,    19,   369,
      57,    -1,    19,    57,    -1,    -1,   448,    -1,   369,   448,
      -1,    -1,   487,    -1,    79,  1481,  1482,  1483,    -1,   478,
    1481,  1482,  1483,    -1,   478,  1481,   583,  1484,  1401,    -1,
     487,  1401,    -1,   448,   487,  1401,    -1,    -1,   140,    -1,
      13,    -1,  1492,    -1,  1492,    -1,  1132,    -1,   549,    -1,
     220,    -1,   140,    -1,   532,    -1,   527,    -1,   528,    -1,
     530,    -1,    13,    -1,  1499,  1495,    -1,  1498,  1496,    -1,
    1500,  1497,  1504,    -1,  1504,    -1,  1510,    -1,  1518,    -1,
    1513,    -1,   741,    -1,  1504,    -1,  1510,    -1,  1518,    -1,
    1513,    -1,  1512,    -1,   741,    -1,  1498,    -1,  1499,    -1,
      -1,   127,   160,  1406,    -1,  1501,    -1,  1501,  1502,    -1,
    1502,    -1,   390,   456,    -1,    12,   160,   596,    -1,    12,
     160,   333,    -1,    12,   160,   570,    -1,    -1,   533,   492,
     127,    -1,   533,   492,   248,    -1,    -1,  1503,   628,  1392,
    1232,  1505,    21,  1506,    -1,  1282,  1507,    -1,    -1,   637,
      64,   385,    -1,   637,    53,    64,   385,    -1,   637,   282,
      64,   385,    -1,   191,    -1,   413,    -1,    -1,  1508,  1404,
      -1,    -1,   587,   754,   854,   855,   378,  1392,   194,   149,
     484,  1509,  1511,   803,    -1,    11,   200,  1401,   473,   941,
     516,  1398,    -1,   200,  1401,   473,   941,   516,  1398,    -1,
      -1,    -1,    -1,    -1,   200,   754,   683,  1514,   762,   684,
    1515,   473,   953,   986,  1516,   756,  1517,   803,    -1,    -1,
      -1,    -1,    -1,   420,   754,  1519,   683,  1520,   765,   684,
    1521,   756,  1522,   803,    -1,   645,  1526,  1525,  1527,    -1,
     645,   154,  1525,  1529,    -1,   645,   415,  1525,    -1,   645,
      79,  1525,  1528,    -1,   645,   478,  1525,    -1,   645,   437,
    1524,    -1,    -1,    96,   646,    -1,  1379,    -1,  1379,   686,
    1379,    -1,  1379,   686,  1379,   686,  1250,    -1,    32,    -1,
     539,    -1,    -1,   258,    -1,   471,    -1,    -1,   379,   405,
      -1,    -1,   559,    -1,   559,   194,   336,    -1,   244,   407,
    1401,   516,  1398,    -1,   244,   659,  1532,    -1,   602,   407,
    1401,    -1,   602,   659,  1532,    -1,  1398,    -1,  1532,   686,
    1398,    -1,   233,   566,   197,  1532,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1734,  1734,  1735,  1740,  1750,  1768,  1775,  1788,  1787,
    1812,  1819,  1821,  1825,  1826,  1831,  1832,  1833,  1834,  1835,
    1836,  1837,  1838,  1839,  1840,  1841,  1842,  1843,  1844,  1845,
    1846,  1847,  1848,  1849,  1850,  1851,  1852,  1853,  1854,  1855,
    1856,  1857,  1858,  1859,  1860,  1861,  1862,  1863,  1864,  1865,
    1866,  1867,  1868,  1869,  1870,  1871,  1872,  1873,  1874,  1875,
    1876,  1877,  1878,  1879,  1880,  1881,  1882,  1883,  1884,  1885,
    1889,  1899,  1900,  1904,  1924,  1931,  1942,  1941,  1952,  1954,
    1958,  1959,  1963,  1976,  1975,  1995,  1994,  2008,  2007,  2022,
    2023,  2026,  2033,  2040,  2047,  2054,  2061,  2069,  2078,  2084,
    2091,  2098,  2106,  2115,  2121,  2127,  2135,  2143,  2149,  2156,
    2163,  2171,  2183,  2189,  2196,  2203,  2211,  2221,  2222,  2226,
    2230,  2234,  2238,  2248,  2252,  2256,  2261,  2272,  2277,  2281,
    2285,  2289,  2293,  2297,  2301,  2306,  2310,  2315,  2349,  2354,
    2361,  2364,  2366,  2367,  2371,  2377,  2381,  2397,  2401,  2412,
    2416,  2431,  2441,  2451,  2456,  2464,  2465,  2467,  2466,  2482,
    2481,  2492,  2502,  2508,  2512,  2516,  2533,  2540,  2546,  2555,
    2556,  2560,  2564,  2568,  2572,  2576,  2581,  2585,  2593,  2592,
    2624,  2623,  2632,  2641,  2642,  2648,  2654,  2664,  2670,  2678,
    2680,  2689,  2690,  2694,  2700,  2709,  2710,  2718,  2718,  2776,
    2777,  2778,  2779,  2780,  2781,  2782,  2783,  2784,  2785,  2786,
    2787,  2788,  2792,  2806,  2825,  2826,  2830,  2831,  2836,  2838,
    2840,  2842,  2844,  2846,  2848,  2854,  2855,  2856,  2860,  2864,
    2871,  2878,  2879,  2886,  2888,  2892,  2893,  2897,  2946,  2948,
    2952,  2953,  2957,  3005,  3006,  3007,  3008,  3012,  3013,  3017,
    3018,  3023,  3026,  3050,  3147,  3165,  3164,  3243,  3239,  3315,
    3316,  3321,  3323,  3328,  3351,  3362,  3366,  3388,  3389,  3393,
    3397,  3410,  3416,  3422,  3431,  3444,  3470,  3476,  3477,  3483,
    3484,  3489,  3495,  3508,  3510,  3530,  3536,  3538,  3540,  3542,
    3544,  3546,  3548,  3550,  3552,  3554,  3556,  3558,  3563,  3577,
    3594,  3595,  3597,  3602,  3608,  3617,  3623,  3632,  3640,  3668,
    3676,  3678,  3687,  3692,  3698,  3707,  3715,  3717,  3719,  3721,
    3723,  3725,  3727,  3729,  3731,  3733,  3735,  3737,  3739,  3744,
    3764,  3788,  3792,  3800,  3801,  3802,  3803,  3804,  3805,  3806,
    3807,  3808,  3809,  3810,  3811,  3812,  3817,  3816,  3827,  3827,
    3884,  3883,  3940,  3940,  3962,  4019,  4066,  4090,  4089,  4114,
    4136,  4138,  4139,  4143,  4161,  4182,  4190,  4228,  4182,  4256,
    4258,  4259,  4263,  4264,  4269,  4279,  4268,  4331,  4330,  4344,
    4345,  4349,  4350,  4355,  4363,  4354,  4413,  4421,  4412,  4467,
    4480,  4485,  4484,  4522,  4523,  4528,  4527,  4561,  4561,  4580,
    4579,  4627,  4642,  4650,  4641,  4708,  4716,  4705,  4758,  4760,
    4765,  4767,  4769,  4786,  4791,  4797,  4804,  4805,  4813,  4819,
    4828,  4834,  4840,  4841,  4845,  4845,  4850,  4851,  4852,  4856,
    4857,  4858,  4861,  4863,  4867,  4868,  4872,  4873,  4874,  4875,
    4876,  4877,  4878,  4879,  4880,  4883,  4885,  4889,  4890,  4894,
    4895,  4896,  4897,  4898,  4901,  4903,  4907,  4908,  4912,  4913,
    4914,  4915,  4916,  4917,  4918,  4921,  4923,  4927,  4928,  4932,
    4933,  4934,  4939,  4947,  4955,  4963,  4975,  4987,  4992,  4997,
    5005,  5013,  5021,  5029,  5037,  5045,  5053,  5066,  5079,  5095,
    5109,  5114,  5127,  5128,  5203,  5209,  5213,  5218,  5223,  5229,
    5237,  5247,  5248,  5262,  5270,  5274,  5278,  5282,  5286,  5290,
    5297,  5298,  5303,  5304,  5322,  5323,  5335,  5336,  5341,  5350,
    5351,  5356,  5362,  5372,  5373,  5385,  5386,  5390,  5396,  5405,
    5414,  5417,  5422,  5430,  5431,  5435,  5439,  5446,  5453,  5463,
    5462,  5480,  5486,  5495,  5496,  5501,  5502,  5506,  5512,  5521,
    5528,  5529,  5533,  5539,  5548,  5550,  5552,  5554,  5556,  5558,
    5560,  5562,  5571,  5572,  5576,  5577,  5581,  5582,  5586,  5587,
    5591,  5597,  5606,  5612,  5620,  5622,  5626,  5630,  5634,  5638,
    5642,  5646,  5650,  5654,  5658,  5662,  5666,  5670,  5674,  5691,
    5695,  5699,  5703,  5707,  5711,  5715,  5716,  5717,  5721,  5725,
    5729,  5733,  5737,  5741,  5745,  5752,  5766,  5770,  5777,  5784,
    5785,  5786,  5787,  5788,  5789,  5793,  5794,  5795,  5799,  5800,
    5801,  5802,  5806,  5812,  5821,  5822,  5826,  5833,  5834,  5843,
    5851,  5857,  5863,  5868,  5878,  5886,  5893,  5905,  5906,  5910,
    5914,  5918,  5939,  5941,  5945,  5946,  5947,  5951,  5955,  5959,
    5963,  5967,  5971,  5975,  5979,  5984,  5989,  5997,  6005,  6009,
    6013,  6018,  6026,  6030,  6046,  6050,  6054,  6061,  6065,  6069,
    6073,  6074,  6078,  6082,  6086,  6091,  6096,  6101,  6106,  6111,
    6115,  6119,  6124,  6128,  6135,  6137,  6139,  6141,  6143,  6145,
    6147,  6149,  6154,  6155,  6159,  6160,  6164,  6165,  6166,  6167,
    6168,  6172,  6173,  6174,  6175,  6176,  6180,  6185,  6189,  6191,
    6195,  6196,  6197,  6198,  6203,  6207,  6212,  6216,  6225,  6226,
    6230,  6231,  6232,  6240,  6241,  6245,  6250,  6254,  6255,  6256,
    6260,  6261,  6262,  6263,  6266,  6267,  6272,  6276,  6280,  6281,
    6285,  6291,  6301,  6305,  6309,  6313,  6317,  6321,  6325,  6329,
    6333,  6337,  6341,  6345,  6349,  6357,  6358,  6359,  6363,  6364,
    6365,  6369,  6375,  6379,  6383,  6384,  6388,  6396,  6400,  6401,
    6405,  6406,  6410,  6419,  6423,  6424,  6428,  6436,  6437,  6441,
    6442,  6447,  6448,  6452,  6453,  6458,  6459,  6460,  6464,  6472,
    6477,  6486,  6490,  6495,  6500,  6505,  6512,  6517,  6527,  6528,
    6533,  6532,  6544,  6546,  6550,  6565,  6566,  6570,  6577,  6587,
    6588,  6589,  6590,  6595,  6599,  6604,  6609,  6615,  6624,  6625,
    6626,  6627,  6628,  6632,  6636,  6637,  6641,  6642,  6646,  6647,
    6651,  6652,  6653,  6657,  6658,  6662,  6669,  6670,  6674,  6680,
    6689,  6690,  6704,  6705,  6709,  6715,  6724,  6728,  6729,  6733,
    6739,  6748,  6749,  6754,  6755,  6759,  6783,  6784,  6785,  6792,
    6793,  6797,  6798,  6802,  6803,  6804,  6808,  6814,  6824,  6830,
    6845,  6846,  6850,  6851,  6855,  6861,  6874,  6873,  6914,  6913,
    6931,  6930,  6949,  6948,  6967,  6966,  6985,  6979,  6999,  6998,
    7031,  7036,  7041,  7046,  7051,  7059,  7061,  7068,  7069,  7081,
    7093,  7107,  7116,  7117,  7121,  7122,  7126,  7132,  7138,  7146,
    7161,  7169,  7180,  7181,  7185,  7186,  7190,  7196,  7202,  7208,
    7217,  7231,  7232,  7233,  7234,  7238,  7239,  7251,  7252,  7256,
    7257,  7261,  7262,  7268,  7269,  7270,  7273,  7275,  7276,  7277,
    7281,  7288,  7302,  7304,  7310,  7319,  7317,  7330,  7342,  7354,
    7369,  7376,  7386,  7387,  7419,  7427,  7437,  7439,  7443,  7447,
    7455,  7462,  7466,  7474,  7478,  7482,  7489,  7498,  7533,  7534,
    7535,  7539,  7540,  7544,  7552,  7579,  7585,  7591,  7617,  7643,
    7654,  7664,  7673,  7683,  7689,  7695,  7706,  7715,  7725,  7756,
    7768,  7800,  7813,  7817,  7825,  7826,  7827,  7831,  7832,  7838,
    7844,  7850,  7859,  7863,  7870,  7874,  7881,  7882,  7886,  7887,
    7891,  7892,  7893,  7897,  7898,  7899,  7903,  7904,  7905,  7906,
    7910,  7915,  7923,  7924,  7934,  7950,  7948,  7970,  7987,  7990,
    7997,  8001,  8008,  8012,  8016,  8023,  8028,  8031,  8038,  8041,
    8048,  8051,  8058,  8061,  8069,  8072,  8079,  8083,  8090,  8094,
    8102,  8106,  8131,  8132,  8133,  8138,  8143,  8150,  8164,  8165,
    8166,  8170,  8194,  8195,  8199,  8200,  8208,  8209,  8210,  8214,
    8235,  8243,  8271,  8272,  8276,  8277,  8285,  8287,  8289,  8291,
    8293,  8295,  8300,  8321,  8322,  8323,  8328,  8327,  8333,  8340,
    8345,  8353,  8354,  8358,  8372,  8371,  8384,  8385,  8389,  8390,
    8394,  8404,  8414,  8415,  8420,  8419,  8430,  8431,  8435,  8436,
    8440,  8450,  8461,  8460,  8468,  8472,  8473,  8484,  8485,  8489,
    8493,  8499,  8535,  8539,  8584,  8591,  8599,  8608,  8618,  8626,
    8635,  8646,  8650,  8654,  8663,  8677,  8695,  8696,  8716,  8724,
    8743,  8764,  8765,  8769,  8773,  8774,  8778,  8784,  8794,  8798,
    8802,  8807,  8811,  8816,  8825,  8837,  8838,  8842,  8848,  8857,
    8861,  8865,  8872,  8873,  8877,  8881,  8882,  8886,  8887,  8891,
    8897,  8903,  8913,  8914,  8922,  8923,  8924,  8925,  8926,  8930,
    8931,  8936,  8942,  8947,  8953,  8957,  8961,  8965,  8969,  8973,
    8977,  8981,  8985,  8989,  8993,  8997,  9010,  9014,  9018,  9023,
    9027,  9034,  9038,  9045,  9049,  9053,  9061,  9065,  9072,  9076,
    9081,  9085,  9089,  9093,  9097,  9101,  9105,  9109,  9113,  9117,
    9121,  9125,  9129,  9133,  9137,  9141,  9145,  9146,  9150,  9151,
    9155,  9156,  9160,  9161,  9165,  9166,  9167,  9168,  9169,  9170,
    9171,  9175,  9176,  9180,  9181,  9182,  9183,  9184,  9185,  9189,
    9190,  9191,  9192,  9193,  9197,  9201,  9205,  9209,  9213,  9217,
    9218,  9222,  9226,  9230,  9234,  9238,  9242,  9246,  9250,  9254,
    9258,  9262,  9266,  9271,  9278,  9295,  9299,  9303,  9307,  9311,
    9315,  9319,  9323,  9327,  9331,  9335,  9339,  9343,  9347,  9351,
    9355,  9359,  9363,  9368,  9373,  9378,  9382,  9386,  9390,  9394,
    9399,  9403,  9422,  9426,  9430,  9434,  9438,  9443,  9448,  9452,
    9456,  9461,  9465,  9469,  9473,  9477,  9481,  9485,  9489,  9494,
    9498,  9502,  9506,  9510,  9522,  9526,  9530,  9534,  9538,  9542,
    9546,  9550,  9554,  9558,  9562,  9566,  9570,  9574,  9578,  9582,
    9586,  9590,  9594,  9598,  9602,  9606,  9610,  9614,  9618,  9624,
    9630,  9636,  9642,  9648,  9652,  9670,  9674,  9681,  9683,  9696,
    9697,  9701,  9702,  9706,  9707,  9711,  9717,  9726,  9733,  9734,
    9738,  9742,  9746,  9750,  9754,  9758,  9762,  9766,  9770,  9774,
    9778,  9787,  9791,  9795,  9799,  9803,  9807,  9811,  9815,  9819,
    9823,  9833,  9840,  9844,  9848,  9852,  9859,  9860,  9865,  9870,
    9874,  9875,  9879,  9884,  9894,  9901,  9908,  9927,  9934,  9941,
    9948,  9955,  9962,  9969,  9976,  9983,  9990, 10000, 10001, 10005,
   10011, 10020, 10021, 10025, 10031, 10040, 10041, 10045, 10046, 10050,
   10058, 10067, 10068, 10069, 10080, 10081, 10162, 10166, 10171, 10175,
   10179, 10189, 10196, 10197, 10198, 10202, 10203, 10204, 10205, 10208,
   10209, 10212, 10214, 10217, 10219, 10227, 10228, 10232, 10261, 10262,
   10263, 10264, 10266, 10271, 10272, 10281, 10282, 10286, 10293, 10294,
   10298, 10315, 10318, 10319, 10320, 10324, 10325, 10329, 10335, 10344,
   10345, 10353, 10354, 10358, 10363, 10369, 10373, 10379, 10388, 10394,
   10402, 10406, 10415, 10427, 10428, 10429, 10430, 10431, 10432, 10433,
   10434, 10435, 10436, 10437, 10438, 10442, 10443, 10444, 10445, 10446,
   10447, 10448, 10449, 10450, 10454, 10455, 10456, 10457, 10460, 10462,
   10463, 10467, 10468, 10476, 10478, 10482, 10491, 10492, 10499, 10500,
   10507, 10511, 10518, 10523, 10532, 10549, 10557, 10564, 10570, 10579,
   10580, 10588, 10589, 10596, 10601, 10611, 10612, 10627, 10631, 10632,
   10636, 10658, 10659, 10663, 10670, 10675, 10685, 10686, 10687, 10691,
   10692, 10696, 10703, 10709, 10715, 10724, 10728, 10732, 10736, 10740,
   10747, 10748, 10752, 10753, 10754, 10755, 10756, 10757, 10761, 10762,
   10763, 10764, 10765, 10769, 10770, 10771, 10772, 10773, 10777, 10778,
   10779, 10780, 10784, 10789, 10790, 10794, 10800, 10809, 10813, 10820,
   10827, 10833, 10837, 10845, 10856, 10867, 10880, 10881, 10880, 10902,
   10909, 10932, 10964, 10976, 10983, 10995, 11001, 11009, 11014, 11019,
   11024, 11033, 11039, 11048, 11059, 11065, 11074, 11075, 11079, 11080,
   11083, 11085, 11088, 11089, 11093, 11094, 11101, 11115, 11133, 11150,
   11162, 11178, 11193, 11194, 11195, 11204, 11208, 11209, 11220, 11222,
   11226, 11231, 11236, 11244, 11249, 11254, 11262, 11268, 11277, 11284,
   11285, 11289, 11290, 11294, 11299, 11309, 11310, 11313, 11315, 11319,
   11324, 11329, 11333, 11339, 11348, 11349, 11357, 11361, 11370, 11387,
   11388, 11392, 11399, 11411, 11419, 11420, 11426, 11438, 11448, 11461,
   11463, 11467, 11468, 11472, 11473, 11474, 11479, 11478, 11497, 11499,
   11502, 11504, 11507, 11508, 11511, 11515, 11519, 11523, 11527, 11531,
   11535, 11539, 11543, 11551, 11554, 11567, 11566, 11577, 11586, 11598,
   11610, 11621, 11632, 11640, 11647, 11655, 11657, 11675, 11679, 11684,
   11683, 11694, 11693, 11703, 11720, 11727, 11735, 11743, 11751, 11759,
   11767, 11777, 11799, 11804, 11826, 11835, 11844, 11850, 11856, 11863,
   11869, 11875, 11884, 11892, 11896, 11900, 11907, 11914, 11920, 11930,
   11940, 11945, 11950, 11955, 11964, 11966, 11968, 11973, 11974, 11977,
   11979, 11983, 11984, 11988, 11989, 11993, 11994, 11998, 11999, 12003,
   12004, 12007, 12009, 12014, 12025, 12026, 12027, 12032, 12048, 12047,
   12055, 12056, 12057, 12058, 12059, 12060, 12074, 12075, 12080, 12084,
   12090, 12096, 12117, 12118, 12119, 12134, 12133, 12146, 12145, 12159,
   12163, 12164, 12177, 12176, 12199, 12200, 12205, 12207, 12209, 12211,
   12213, 12215, 12217, 12219, 12221, 12223, 12225, 12227, 12229, 12231,
   12236, 12237, 12242, 12241, 12248, 12258, 12259, 12264, 12269, 12278,
   12278, 12280, 12280, 12282, 12286, 12287, 12291, 12292, 12307, 12306,
   12317, 12321, 12325, 12339, 12351, 12352, 12353, 12359, 12371, 12384,
   12421, 12370, 12432, 12433, 12437, 12438, 12442, 12443, 12444, 12448,
   12449, 12453, 12454, 12458, 12459, 12463, 12468, 12472, 12477, 12483,
   12488, 12496, 12497, 12501, 12506, 12510, 12515, 12523, 12524, 12527,
   12529, 12537, 12539, 12543, 12544, 12545, 12549, 12551, 12556, 12557,
   12566, 12567, 12571, 12572, 12576, 12599, 12604, 12609, 12614, 12622,
   12629, 12636, 12646, 12654, 12655, 12656, 12667, 12668, 12669, 12670,
   12682, 12686, 12690, 12694, 12698, 12702, 12709, 12713, 12717, 12721,
   12725, 12733, 12737, 12741, 12755, 12756, 12760, 12764, 12771, 12778,
   12782, 12786, 12790, 12794, 12798, 12802, 12809, 12813, 12817, 12821,
   12828, 12834, 12844, 12854, 12860, 12871, 12882, 12883, 12913, 12926,
   12939, 12955, 12971, 12988, 12989, 13000, 13001, 13011, 13012, 13023,
   13024, 13025, 13029, 13030, 13031, 13035, 13040, 13045, 13059, 13064,
   13085, 13086, 13087, 13088, 13093, 13094, 13095, 13096, 13097, 13098,
   13099, 13100, 13101, 13102, 13103, 13104, 13105, 13106, 13107, 13108,
   13109, 13110, 13111, 13112, 13113, 13114, 13115, 13116, 13117, 13118,
   13119, 13120, 13121, 13122, 13123, 13124, 13125, 13126, 13127, 13128,
   13129, 13130, 13131, 13132, 13133, 13134, 13135, 13136, 13137, 13138,
   13139, 13140, 13141, 13142, 13143, 13144, 13145, 13146, 13147, 13148,
   13149, 13159, 13160, 13161, 13162, 13163, 13164, 13165, 13166, 13167,
   13172, 13173, 13174, 13175, 13176, 13177, 13178, 13179, 13180, 13181,
   13182, 13183, 13184, 13185, 13186, 13187, 13188, 13189, 13190, 13191,
   13192, 13193, 13194, 13195, 13196, 13197, 13198, 13199, 13200, 13201,
   13202, 13203, 13204, 13205, 13206, 13207, 13208, 13209, 13210, 13211,
   13212, 13213, 13214, 13215, 13216, 13217, 13218, 13223, 13224, 13225,
   13226, 13227, 13228, 13229, 13230, 13231, 13232, 13233, 13234, 13235,
   13236, 13237, 13238, 13239, 13240, 13241, 13242, 13243, 13244, 13245,
   13246, 13247, 13248, 13249, 13250, 13251, 13252, 13253, 13254, 13255,
   13256, 13257, 13258, 13259, 13260, 13261, 13262, 13263, 13264, 13265,
   13266, 13267, 13268, 13269, 13270, 13271, 13272, 13273, 13274, 13275,
   13276, 13277, 13278, 13279, 13280, 13281, 13282, 13283, 13284, 13285,
   13286, 13287, 13288, 13289, 13290, 13291, 13292, 13293, 13294, 13295,
   13296, 13297, 13298, 13299, 13300, 13301, 13302, 13303, 13304, 13305,
   13306, 13307, 13308, 13309, 13310, 13311, 13312, 13313, 13314, 13315,
   13316, 13317, 13318, 13319, 13320, 13321, 13322, 13323, 13324, 13325,
   13326, 13327, 13328, 13329, 13330, 13331, 13332, 13333, 13334, 13335,
   13336, 13337, 13338, 13339, 13340, 13341, 13342, 13343, 13344, 13345,
   13346, 13347, 13348, 13349, 13350, 13351, 13352, 13353, 13354, 13355,
   13356, 13357, 13358, 13359, 13360, 13361, 13362, 13363, 13364, 13365,
   13366, 13367, 13368, 13369, 13370, 13371, 13372, 13373, 13374, 13375,
   13376, 13377, 13378, 13379, 13380, 13381, 13382, 13383, 13384, 13385,
   13386, 13387, 13388, 13389, 13390, 13391, 13392, 13393, 13394, 13395,
   13396, 13397, 13398, 13399, 13400, 13401, 13402, 13403, 13404, 13405,
   13406, 13407, 13408, 13409, 13410, 13411, 13412, 13413, 13414, 13415,
   13416, 13417, 13418, 13419, 13420, 13421, 13422, 13423, 13424, 13425,
   13426, 13427, 13428, 13429, 13430, 13431, 13432, 13433, 13434, 13435,
   13436, 13437, 13438, 13439, 13440, 13441, 13442, 13443, 13444, 13445,
   13446, 13447, 13448, 13449, 13450, 13451, 13452, 13453, 13454, 13455,
   13456, 13457, 13458, 13459, 13460, 13461, 13462, 13463, 13464, 13465,
   13466, 13467, 13468, 13469, 13470, 13471, 13472, 13473, 13474, 13475,
   13476, 13477, 13478, 13479, 13480, 13481, 13482, 13483, 13484, 13485,
   13486, 13487, 13507, 13508, 13519, 13528, 13532, 13536, 13540, 13544,
   13551, 13555, 13566, 13571, 13576, 13581, 13586, 13591, 13596, 13604,
   13605, 13610, 13617, 13627, 13628, 13633, 13637, 13645, 13649, 13653,
   13654, 13655, 13656, 13660, 13661, 13662, 13663, 13667, 13668, 13669,
   13670, 13674, 13675, 13676, 13677, 13678, 13683, 13691, 13697, 13701,
   13706, 13710, 13717, 13724, 13728, 13732, 13739, 13743, 13750, 13757,
   13758, 13762, 13769, 13770, 13774, 13775, 13779, 13780, 13781, 13782,
   13786, 13795, 13796, 13797, 13801, 13805, 13815, 13814, 13830, 13831,
   13835, 13836, 13840, 13868, 13869, 13870, 13875, 13880, 13879, 13896,
   13904, 13911, 13930, 13946, 13965, 13962, 14012, 14013, 14017, 14018,
   14022, 14023, 14024, 14025, 14027, 14026, 14039, 14040, 14041, 14042,
   14043, 14049, 14055, 14071, 14070, 14089, 14094, 14105, 14111, 14127,
   14126, 14143, 14155, 14156, 14157, 14158, 14161, 14163, 14167, 14173,
   14182, 14189, 14191, 14193, 14195, 14197, 14199, 14201, 14203, 14205,
   14207, 14209, 14211, 14213, 14215, 14217, 14219, 14221, 14223, 14225,
   14239, 14241, 14243, 14245, 14247, 14249, 14251, 14253, 14255, 14257,
   14259, 14261, 14263, 14265, 14270, 14271, 14275, 14276, 14280, 14281,
   14285, 14295, 14305, 14318, 14332, 14344, 14356, 14368, 14374, 14383,
   14389, 14398, 14403, 14411, 14419, 14434, 14442, 14452, 14463, 14471,
   14472, 14476, 14482, 14490, 14492, 14496, 14500, 14504, 14511, 14512,
   14516, 14517, 14521, 14522, 14526, 14527, 14533, 14539, 14545, 14555,
   14554, 14564, 14565, 14570, 14571, 14572, 14577, 14578, 14579, 14583,
   14584, 14588, 14600, 14609, 14619, 14628, 14642, 14643, 14644, 14648,
   14652, 14656, 14669, 14670, 14671, 14672, 14673, 14674, 14675, 14676,
   14686, 14688, 14690, 14695, 14696, 14697, 14698, 14699, 14703, 14704,
   14705, 14706, 14707, 14708, 14718, 14719, 14724, 14737, 14750, 14752,
   14754, 14759, 14764, 14766, 14768, 14774, 14775, 14777, 14783, 14782,
   14813, 14864, 14865, 14866, 14867, 14877, 14879, 14885, 14890, 14908,
   14898, 14975, 14993, 15017, 15041, 15047, 15086, 15014, 15153, 15173,
   15178, 15186, 15151, 15207, 15212, 15217, 15222, 15227, 15232, 15240,
   15241, 15244, 15253, 15263, 15281, 15282, 15286, 15287, 15288, 15292,
   15293, 15298, 15299, 15301, 15306, 15312, 15321, 15327, 15336, 15342,
   15351
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_SYM",
  "BIT_XOR", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM", "BOOL_SYM", "BOTH",
  "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM", "CALL_SYM", "CASCADE",
  "CASCADED", "CASE_SYM", "CAST_SYM", "CATALOG_NAME_SYM", "CHAIN_SYM",
  "CHANGE", "CHANGED", "CHANNEL_SYM", "CHARSET", "CHAR_SYM",
  "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM",
  "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM", "COLLATE_SYM",
  "COLLATION_SYM", "COLUMNS", "COLUMN_SYM", "COLUMN_FORMAT_SYM",
  "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM",
  "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM", "COMPRESSION_SYM",
  "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM",
  "CONSISTENT_SYM", "CONSTRAINT", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM", "COUNT_SYM", "CPU_SYM",
  "CREATE", "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_SYM", "CURRENT_USER",
  "CURSOR_SYM", "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME_SYM", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM",
  "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM",
  "DEFAULT_AUTH_SYM", "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM",
  "DELETE_SYM", "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM",
  "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM", "LONG_SYM",
  "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "REDOFILE_SYM", "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM",
  "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD",
  "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPEAT_SYM", "REPLACE_SYM", "REPLICATION", "REPLICATE_DO_DB",
  "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE", "REPLICATE_IGNORE_TABLE",
  "REPLICATE_WILD_DO_TABLE", "REPLICATE_WILD_IGNORE_TABLE",
  "REPLICATE_REWRITE_DB", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM",
  "RESOURCES", "RESTORE_SYM", "RESTRICT", "RESUME_SYM",
  "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM",
  "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM", "ROTATE_SYM",
  "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET_SYM", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW",
  "SMALLINT_SYM", "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM",
  "SOURCE_SYM", "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM",
  "SQLSTATE_SYM", "SQLWARNING_SYM", "SQL_AFTER_GTIDS",
  "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS", "SQL_BIG_RESULT",
  "SQL_BUFFER_RESULT", "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS",
  "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD",
  "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM", "START_SYM",
  "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "','", "'!'", "'{'", "'}'", "';'", "'@'",
  "'.'", "':'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "master_file_def", "opt_channel", "create_table_stmt", "create", "$@6",
  "$@7", "index_definition_stmt", "server_options_list", "server_option",
  "event_tail", "$@8", "ev_schedule_time", "$@9", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@10", "ev_sql_stmt_inner", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call_stmt", "opt_paren_expr_list", "sp_fdparam_list",
  "sp_fdparams", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "$@11", "$@12", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_idents", "sp_opt_default",
  "sp_proc_stmt", "sp_proc_stmt_if", "$@13", "sp_proc_stmt_statement",
  "$@14", "sp_proc_stmt_return", "$@15", "sp_proc_stmt_unlabeled", "$@16",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@17", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@18", "$@19", "$@20", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@21", "$@22",
  "searched_case_stmt", "$@23", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@24", "$@25",
  "searched_when_clause", "$@26", "$@27", "else_clause_opt",
  "sp_labeled_control", "$@28", "sp_opt_label", "sp_labeled_block", "$@29",
  "sp_unlabeled_block", "$@30", "sp_block_content", "$@31",
  "sp_unlabeled_control", "$@32", "$@33", "$@34", "$@35",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@36", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_file_block_size", "ts_wait", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@37", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "row_types", "merge_insert_types", "udf_type",
  "table_element_list", "table_element", "column_def",
  "opt_check_or_references", "table_constraint_def", "check_constraint",
  "opt_constraint", "constraint", "field_def", "opt_generated_always",
  "opt_stored_attribute", "type", "spatial_type", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "opt_PRECISION", "numeric_type",
  "float_options", "precision", "type_datetime_precision",
  "func_datetime_precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_column_attribute_list", "column_attribute_list", "column_attribute",
  "column_format", "storage_media", "now", "now_or_signed_literal",
  "charset", "charset_name", "charset_name_or_default",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_collate_explicit", "collation_name_or_default", "opt_default",
  "ascii", "unicode", "opt_charset_with_opt_binary", "opt_bin_mod",
  "ws_num_codepoints", "$@38", "opt_primary", "references", "opt_ref_list",
  "reference_list", "opt_match_clause", "opt_on_update_delete",
  "delete_option", "normal_key_type", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "spatial", "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "index_type_clause", "visibility",
  "index_type", "key_list", "key_part", "opt_ident", "opt_component",
  "string_list", "alter", "$@39", "$@40", "$@41", "$@42", "$@43", "$@44",
  "$@45", "alter_user_command", "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "alter_command_list",
  "standalone_alter_commands", "$@46", "opt_validation",
  "alter_opt_validation", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule",
  "reorg_partition_rule", "alter_list", "alter_commands_modifier_list",
  "add_column", "alter_list_item", "alter_commands_modifier",
  "opt_index_lock_and_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "group_replication", "slave", "slave_start",
  "start_slave_opts", "$@47", "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_connection_opts", "slave_user_name_opt", "slave_user_pass_opt",
  "slave_plugin_auth_opt", "slave_plugin_dir_opt",
  "opt_slave_thread_option_list", "slave_thread_option_list",
  "slave_thread_option", "slave_until", "slave_until_opts", "checksum",
  "opt_checksum_type", "repair", "opt_mi_repair_types", "mi_repair_types",
  "mi_repair_type", "analyze", "binlog_base64_event", "check",
  "opt_mi_check_types", "mi_check_types", "mi_check_type", "optimize",
  "opt_no_write_to_binlog", "rename", "$@48", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@49",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@50",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@51", "cache_keys_spec",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select_stmt",
  "select_stmt_with_into", "query_expression", "query_expression_body",
  "query_expression_parens", "query_primary", "query_specification",
  "opt_from_clause", "from_clause", "from_tables", "table_reference_list",
  "select_options", "select_option_list", "select_option",
  "opt_locking_clause_list", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "bit_expr", "or",
  "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as_or_eq",
  "opt_table_alias", "opt_all", "opt_where_clause",
  "opt_where_clause_expr", "opt_having_clause", "with_clause", "with_list",
  "common_table_expr", "opt_derived_column_list", "simple_ident_list",
  "opt_escape", "opt_group_clause", "group_list", "olap_opt",
  "alter_order_clause", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list", "order_dir",
  "opt_limit_clause", "limit_clause", "limit_options", "limit_option",
  "opt_simple_limit", "ulong_num", "real_ulong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num", "select_var_list",
  "select_var_ident", "into_clause", "into_destination", "do_stmt",
  "empty_select_options", "drop", "$@52", "$@53", "table_list",
  "table_name", "table_alias_ref_list", "if_exists", "opt_temporary",
  "drop_ts_options_list", "drop_ts_options", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list", "equal",
  "opt_equal", "row_value", "opt_values", "values", "expr_or_default",
  "opt_insert_update_list", "update_stmt", "opt_with_clause",
  "update_list", "update_elem", "opt_low_priority", "delete_stmt",
  "opt_wild", "opt_delete_options", "opt_delete_option", "truncate",
  "$@54", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@55", "show_param", "$@56",
  "$@57", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from",
  "opt_wild_or_where", "opt_wild_or_where_for_show", "describe", "$@58",
  "explainable_command", "describe_command", "opt_extended_describe",
  "opt_describe_column", "flush", "$@59", "flush_options", "$@60",
  "opt_flush_lock", "$@61", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@62", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@63", "$@64",
  "slave_reset_options", "master_reset_options", "purge", "$@65",
  "purge_options", "purge_option", "kill", "kill_option", "use", "load",
  "$@66", "$@67", "$@68", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident", "role_ident", "label_ident",
  "ident_or_text", "role_ident_or_text", "user", "role", "ident_keyword",
  "role_or_ident_keyword", "label_keyword", "role_or_label_keyword",
  "role_keyword", "set", "start_option_value_list", "set_role_stmt",
  "opt_except_role_list", "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types", "password",
  "set_expr_or_default", "lock", "$@69", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@70",
  "shutdown_stmt", "alter_instance_stmt", "alter_instance_action",
  "handler", "$@71", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@72", "handler_rkey_mode", "revoke", "$@73",
  "grant", "$@74", "opt_acl_type", "opt_privileges",
  "role_or_privilege_list", "role_or_privilege", "opt_with_admin_option",
  "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "role_list", "grant_list", "grant_user", "opt_column_list",
  "column_list", "require_clause", "grant_options", "opt_grant_option",
  "grant_option_list", "grant_option", "begin_stmt", "$@75", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_option", "row_subquery", "table_subquery",
  "subquery", "query_spec_option", "view_or_trigger_or_sp_or_event",
  "definer_tail", "no_definer_tail", "definer_opt", "no_definer",
  "definer", "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@76", "view_select", "view_check_option",
  "trigger_action_order", "trigger_follows_precedes_clause",
  "trigger_tail", "$@77", "udf_tail", "sf_tail", "$@78", "$@79", "$@80",
  "$@81", "sp_tail", "$@82", "$@83", "$@84", "$@85", "xa",
  "opt_convert_xid", "xid", "begin_or_start", "opt_join_or_resume",
  "opt_one_phase", "opt_suspend", "install", "uninstall",
  "TEXT_STRING_sys_list", "import_stmt", YY_NULL
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   124,    38,    45,    43,    42,    47,    37,
      94,   126,   928,    40,    41,   929,    44,    33,   123,   125,
      59,    64,    46,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   694,   695,   695,   695,   695,   695,   696,   697,   696,
     696,   698,   698,   699,   699,   700,   700,   700,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   700,   700,
     701,   702,   702,   703,   704,   704,   706,   705,   707,   707,
     708,   708,   709,   711,   710,   713,   712,   714,   712,   715,
     715,   716,   716,   716,   716,   716,   716,   716,   717,   717,
     718,   718,   719,   720,   720,   721,   721,   722,   722,   723,
     723,   724,   725,   725,   726,   726,   727,   728,   728,   729,
     729,   729,   729,   729,   729,   729,   729,   729,   729,   729,
     729,   729,   729,   729,   729,   729,   729,   729,   729,   729,
     729,   730,   730,   730,   731,   732,   732,   732,   732,   733,
     733,   734,   734,   734,   734,   735,   735,   736,   735,   737,
     735,   735,   735,   735,   735,   735,   738,   738,   738,   739,
     739,   740,   740,   740,   740,   740,   740,   740,   742,   741,
     744,   743,   743,   745,   745,   745,   745,   746,   746,   747,
     747,   748,   748,   749,   749,   750,   750,   752,   751,   753,
     753,   753,   753,   753,   753,   753,   753,   753,   753,   753,
     753,   753,   754,   754,   755,   755,   756,   756,   757,   757,
     757,   757,   757,   757,   757,   758,   758,   758,   759,   759,
     760,   761,   761,   762,   762,   763,   763,   764,   765,   765,
     766,   766,   767,   768,   768,   768,   768,   769,   769,   770,
     770,   771,   771,   772,   772,   773,   772,   774,   772,   775,
     775,   776,   776,   777,   778,   778,   779,   780,   780,   781,
     781,   781,   781,   781,   782,   783,   783,   784,   784,   785,
     785,   786,   786,   787,   787,   787,   788,   788,   788,   788,
     788,   788,   788,   788,   788,   788,   788,   788,   789,   790,
     791,   791,   791,   792,   792,   793,   793,   794,   795,   795,
     796,   796,   797,   798,   798,   799,   800,   800,   800,   800,
     800,   800,   800,   800,   800,   800,   800,   800,   800,   801,
     801,   802,   802,   803,   803,   803,   803,   803,   803,   803,
     803,   803,   803,   803,   803,   803,   805,   804,   807,   806,
     809,   808,   811,   810,   812,   813,   814,   816,   815,   817,
     818,   818,   818,   819,   819,   821,   822,   823,   820,   824,
     824,   824,   825,   825,   827,   828,   826,   830,   829,   831,
     831,   832,   832,   834,   835,   833,   837,   838,   836,   839,
     839,   841,   840,   842,   842,   844,   843,   846,   845,   848,
     847,   849,   850,   851,   849,   852,   853,   849,   854,   854,
     855,   855,   855,   856,   857,   858,   859,   859,   860,   860,
     861,   862,   863,   863,   865,   864,   866,   866,   866,   867,
     867,   867,   868,   868,   869,   869,   870,   870,   870,   870,
     870,   870,   870,   870,   870,   871,   871,   872,   872,   873,
     873,   873,   873,   873,   874,   874,   875,   875,   876,   876,
     876,   876,   876,   876,   876,   877,   877,   878,   878,   879,
     879,   879,   880,   881,   882,   883,   884,   885,   885,   885,
     886,   887,   888,   889,   890,   891,   892,   893,   894,   895,
     896,   896,   897,   897,   898,   898,   899,   899,   900,   900,
     900,   901,   901,   902,   903,   903,   903,   903,   903,   903,
     904,   904,   905,   905,   906,   906,   907,   907,   907,   908,
     908,   909,   909,   910,   910,   911,   911,   912,   912,   913,
     914,   914,   914,   915,   915,   916,   916,   917,   917,   919,
     918,   920,   920,   921,   921,   922,   922,   923,   923,   924,
     925,   925,   926,   926,   927,   927,   927,   927,   927,   927,
     927,   927,   928,   928,   929,   929,   930,   930,   931,   931,
     932,   932,   933,   933,   934,   934,   935,   935,   935,   935,
     935,   935,   935,   935,   935,   935,   935,   935,   935,   935,
     935,   935,   935,   935,   935,   935,   935,   935,   935,   935,
     935,   935,   935,   935,   935,   936,   936,   937,   938,   939,
     939,   939,   939,   939,   939,   940,   940,   940,   941,   941,
     941,   941,   942,   942,   943,   943,   944,   945,   945,   945,
     946,   946,   946,   946,   946,   946,   947,   948,   948,   949,
     950,   950,   951,   951,   952,   952,   952,   953,   953,   953,
     953,   953,   953,   953,   953,   953,   953,   953,   953,   953,
     953,   953,   953,   953,   953,   953,   953,   953,   953,   953,
     953,   953,   953,   953,   953,   953,   953,   953,   953,   953,
     953,   953,   953,   953,   954,   954,   954,   954,   954,   954,
     954,   954,   955,   955,   956,   956,   957,   957,   957,   957,
     957,   958,   958,   958,   958,   958,   959,   959,   960,   960,
     961,   961,   961,   961,   962,   962,   962,   963,   964,   964,
     965,   965,   965,   966,   966,   967,   967,   968,   968,   968,
     969,   969,   969,   969,   970,   970,   971,   971,   972,   972,
     973,   973,   974,   974,   974,   974,   974,   974,   974,   974,
     974,   974,   974,   974,   974,   975,   975,   975,   976,   976,
     976,   977,   978,   978,   979,   979,   980,   980,   981,   981,
     982,   982,   983,   983,   984,   984,   985,   986,   986,   987,
     987,   988,   988,   989,   989,   990,   990,   990,   991,   991,
     991,   992,   992,   992,   992,   992,   992,   992,   993,   993,
     995,   994,   996,   996,   997,   998,   998,   999,   999,  1000,
    1000,  1000,  1000,  1001,  1001,  1001,  1001,  1001,  1002,  1002,
    1002,  1002,  1002,  1003,  1004,  1004,  1005,  1005,  1006,  1006,
    1007,  1007,  1007,  1008,  1008,  1009,  1010,  1010,  1011,  1011,
    1012,  1012,  1013,  1013,  1014,  1014,  1015,  1016,  1016,  1017,
    1017,  1018,  1018,  1019,  1019,  1019,  1020,  1020,  1020,  1021,
    1021,  1022,  1022,  1023,  1023,  1023,  1024,  1024,  1025,  1025,
    1026,  1026,  1027,  1027,  1028,  1028,  1030,  1029,  1031,  1029,
    1032,  1029,  1033,  1029,  1034,  1029,  1035,  1029,  1036,  1029,
    1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,
    1029,  1037,  1038,  1038,  1039,  1039,  1040,  1040,  1040,  1040,
    1040,  1040,  1041,  1041,  1042,  1042,  1043,  1043,  1043,  1043,
    1044,  1045,  1045,  1045,  1045,  1046,  1046,  1047,  1047,  1048,
    1048,  1049,  1049,  1049,  1049,  1049,  1050,  1050,  1050,  1050,
    1051,  1051,  1051,  1051,  1051,  1052,  1051,  1051,  1051,  1051,
    1051,  1051,  1051,  1051,  1051,  1051,  1053,  1053,  1054,  1054,
    1055,  1056,  1056,  1057,  1057,  1057,  1058,  1058,  1059,  1059,
    1059,  1060,  1060,  1061,  1062,  1062,  1062,  1062,  1062,  1062,
    1062,  1062,  1062,  1062,  1062,  1062,  1062,  1062,  1062,  1062,
    1062,  1062,  1062,  1062,  1063,  1063,  1063,  1064,  1064,  1064,
    1064,  1064,  1065,  1065,  1066,  1066,  1067,  1067,  1068,  1068,
    1069,  1069,  1069,  1070,  1070,  1070,  1071,  1071,  1071,  1071,
    1072,  1072,  1073,  1073,  1074,  1076,  1075,  1077,  1078,  1078,
    1079,  1079,  1080,  1080,  1080,  1081,  1082,  1082,  1083,  1083,
    1084,  1084,  1085,  1085,  1086,  1086,  1087,  1087,  1088,  1088,
    1089,  1089,  1090,  1090,  1090,  1090,  1090,  1091,  1092,  1092,
    1092,  1093,  1094,  1094,  1095,  1095,  1096,  1096,  1096,  1097,
    1098,  1099,  1100,  1100,  1101,  1101,  1102,  1102,  1102,  1102,
    1102,  1102,  1103,  1104,  1104,  1104,  1106,  1105,  1105,  1107,
    1107,  1108,  1108,  1109,  1111,  1110,  1112,  1112,  1113,  1113,
    1114,  1115,  1116,  1116,  1118,  1117,  1119,  1119,  1120,  1120,
    1121,  1122,  1124,  1123,  1125,  1126,  1126,  1127,  1127,  1128,
    1128,  1128,  1129,  1129,  1130,  1130,  1130,  1130,  1130,  1130,
    1130,  1131,  1131,  1131,  1131,  1131,  1132,  1132,  1133,  1134,
    1134,  1135,  1135,  1136,  1137,  1137,  1138,  1138,  1139,  1139,
    1140,  1140,  1141,  1141,  1141,  1142,  1142,  1143,  1143,  1144,
    1144,  1144,  1145,  1145,  1146,  1147,  1147,  1148,  1148,  1149,
    1149,  1149,  1150,  1150,  1151,  1151,  1151,  1151,  1151,  1152,
    1152,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,
    1153,  1153,  1154,  1154,  1154,  1154,  1154,  1155,  1155,  1155,
    1155,  1155,  1155,  1155,  1155,  1155,  1155,  1155,  1155,  1155,
    1155,  1156,  1156,  1156,  1156,  1156,  1156,  1156,  1156,  1156,
    1156,  1156,  1156,  1156,  1156,  1156,  1157,  1157,  1158,  1158,
    1159,  1159,  1160,  1160,  1161,  1161,  1161,  1161,  1161,  1161,
    1161,  1162,  1162,  1163,  1163,  1163,  1163,  1163,  1163,  1163,
    1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,
    1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,
    1163,  1163,  1163,  1163,  1163,  1164,  1164,  1164,  1164,  1164,
    1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,
    1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,
    1164,  1164,  1165,  1165,  1165,  1165,  1165,  1165,  1165,  1165,
    1165,  1165,  1165,  1165,  1165,  1165,  1165,  1165,  1165,  1165,
    1165,  1165,  1165,  1165,  1166,  1166,  1166,  1166,  1166,  1166,
    1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,
    1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,  1167,  1167,
    1167,  1167,  1167,  1167,  1167,  1168,  1168,  1169,  1169,  1170,
    1170,  1171,  1171,  1172,  1172,  1173,  1173,  1174,  1175,  1175,
    1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,
    1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,
    1176,  1177,  1178,  1179,  1179,  1179,  1180,  1180,  1181,  1181,
    1182,  1182,  1183,  1183,  1184,  1185,  1185,  1185,  1185,  1185,
    1185,  1185,  1185,  1185,  1185,  1185,  1185,  1186,  1186,  1187,
    1187,  1188,  1188,  1189,  1189,  1190,  1190,  1191,  1191,  1192,
    1192,  1193,  1193,  1193,  1194,  1194,  1195,  1195,  1195,  1195,
    1195,  1195,  1196,  1196,  1196,  1197,  1197,  1197,  1197,  1198,
    1198,  1199,  1199,  1200,  1200,  1201,  1201,  1202,  1203,  1203,
    1203,  1203,  1203,  1204,  1204,  1205,  1205,  1206,  1207,  1207,
    1208,  1209,  1209,  1209,  1209,  1210,  1210,  1211,  1211,  1212,
    1212,  1213,  1213,  1214,  1215,  1215,  1216,  1216,  1217,  1217,
    1218,  1219,  1219,  1220,  1220,  1220,  1220,  1220,  1220,  1220,
    1220,  1220,  1220,  1220,  1220,  1221,  1221,  1221,  1221,  1221,
    1221,  1221,  1221,  1221,  1222,  1222,  1222,  1222,  1223,  1223,
    1223,  1224,  1224,  1225,  1225,  1226,  1227,  1227,  1228,  1228,
    1229,  1229,  1230,  1230,  1231,  1232,  1232,  1233,  1233,  1234,
    1234,  1235,  1235,  1236,  1236,  1237,  1237,  1238,  1239,  1239,
    1240,  1241,  1241,  1242,  1243,  1243,  1244,  1244,  1244,  1245,
    1245,  1246,  1247,  1247,  1247,  1248,  1248,  1248,  1248,  1248,
    1249,  1249,  1250,  1250,  1250,  1250,  1250,  1250,  1251,  1251,
    1251,  1251,  1251,  1252,  1252,  1252,  1252,  1252,  1253,  1253,
    1253,  1253,  1254,  1255,  1255,  1256,  1256,  1257,  1257,  1258,
    1259,  1259,  1259,  1260,  1261,  1262,  1263,  1264,  1262,  1262,
    1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,
    1262,  1265,  1265,  1266,  1267,  1267,  1268,  1268,  1269,  1269,
    1270,  1270,  1271,  1271,  1272,  1272,  1273,  1273,  1273,  1274,
    1274,  1274,  1275,  1275,  1275,  1275,  1276,  1276,  1277,  1277,
    1278,  1278,  1278,  1279,  1279,  1279,  1280,  1280,  1281,  1282,
    1282,  1283,  1283,  1284,  1284,  1285,  1285,  1286,  1286,  1287,
    1288,  1288,  1289,  1289,  1290,  1290,  1291,  1291,  1292,  1293,
    1293,  1294,  1294,  1295,  1296,  1296,  1297,  1297,  1297,  1298,
    1298,  1299,  1299,  1300,  1300,  1300,  1302,  1301,  1303,  1303,
    1304,  1304,  1305,  1305,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1307,  1307,  1309,  1308,  1310,  1310,  1310,
    1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1311,
    1310,  1312,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,
    1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,
    1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,
    1310,  1310,  1310,  1310,  1313,  1313,  1313,  1314,  1314,  1315,
    1315,  1316,  1316,  1317,  1317,  1318,  1318,  1319,  1319,  1320,
    1320,  1321,  1321,  1321,  1322,  1322,  1322,  1323,  1324,  1323,
    1325,  1325,  1325,  1325,  1325,  1325,  1326,  1326,  1327,  1327,
    1327,  1327,  1328,  1328,  1328,  1330,  1329,  1332,  1331,  1331,
    1333,  1333,  1334,  1333,  1335,  1335,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,
    1337,  1337,  1339,  1338,  1338,  1340,  1340,  1341,  1341,  1343,
    1342,  1344,  1342,  1342,  1345,  1345,  1346,  1346,  1348,  1347,
    1349,  1350,  1350,  1351,  1352,  1352,  1352,  1353,  1355,  1356,
    1357,  1354,  1358,  1358,  1359,  1359,  1360,  1360,  1360,  1361,
    1361,  1362,  1362,  1363,  1363,  1364,  1364,  1365,  1365,  1365,
    1365,  1366,  1366,  1367,  1367,  1368,  1368,  1369,  1369,  1370,
    1370,  1371,  1371,  1372,  1372,  1372,  1373,  1373,  1374,  1374,
    1375,  1375,  1376,  1376,  1377,  1378,  1378,  1378,  1378,  1379,
    1379,  1379,  1380,  1381,  1381,  1381,  1382,  1382,  1382,  1382,
    1382,  1382,  1382,  1382,  1382,  1382,  1383,  1383,  1383,  1383,
    1383,  1384,  1384,  1384,  1385,  1385,  1386,  1386,  1387,  1388,
    1388,  1389,  1389,  1390,  1390,  1390,  1391,  1391,  1391,  1391,
    1392,  1392,  1392,  1393,  1393,  1394,  1395,  1395,  1396,  1397,
    1398,  1399,  1400,  1401,  1401,  1402,  1402,  1403,  1403,  1404,
    1404,  1404,  1405,  1405,  1405,  1406,  1406,  1406,  1407,  1407,
    1408,  1408,  1408,  1408,  1409,  1409,  1409,  1409,  1409,  1409,
    1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,
    1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,
    1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,
    1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,
    1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,
    1409,  1410,  1410,  1410,  1410,  1410,  1410,  1410,  1410,  1410,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1412,  1412,  1413,  1414,  1414,  1414,  1414,  1414,
    1414,  1414,  1415,  1415,  1415,  1415,  1415,  1415,  1415,  1416,
    1416,  1417,  1417,  1418,  1418,  1419,  1419,  1420,  1420,  1421,
    1421,  1421,  1421,  1422,  1422,  1422,  1422,  1423,  1423,  1423,
    1423,  1424,  1424,  1424,  1424,  1424,  1425,  1426,  1426,  1426,
    1426,  1426,  1426,  1427,  1427,  1427,  1428,  1428,  1429,  1430,
    1430,  1431,  1432,  1432,  1433,  1433,  1434,  1434,  1434,  1434,
    1435,  1436,  1436,  1436,  1436,  1436,  1438,  1437,  1439,  1439,
    1440,  1440,  1441,  1442,  1442,  1442,  1442,  1444,  1443,  1445,
    1446,  1447,  1448,  1448,  1449,  1448,  1450,  1450,  1451,  1451,
    1452,  1452,  1452,  1452,  1453,  1452,  1454,  1454,  1454,  1454,
    1454,  1455,  1455,  1456,  1455,  1455,  1455,  1457,  1457,  1458,
    1457,  1457,  1459,  1459,  1459,  1459,  1460,  1460,  1461,  1461,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1462,  1463,  1463,  1464,  1464,  1465,  1465,
    1466,  1466,  1466,  1467,  1467,  1467,  1467,  1468,  1468,  1469,
    1469,  1470,  1470,  1471,  1471,  1471,  1471,  1471,  1471,  1472,
    1472,  1473,  1473,  1474,  1474,  1474,  1474,  1474,  1475,  1475,
    1476,  1476,  1477,  1477,  1478,  1478,  1478,  1478,  1478,  1480,
    1479,  1481,  1481,  1482,  1482,  1482,  1483,  1483,  1483,  1484,
    1484,  1485,  1486,  1486,  1487,  1488,  1489,  1489,  1489,  1490,
    1491,  1492,  1493,  1493,  1493,  1493,  1493,  1493,  1493,  1493,
    1494,  1494,  1494,  1495,  1495,  1495,  1495,  1495,  1496,  1496,
    1496,  1496,  1496,  1496,  1497,  1497,  1498,  1499,  1500,  1500,
    1500,  1501,  1502,  1502,  1502,  1503,  1503,  1503,  1505,  1504,
    1506,  1507,  1507,  1507,  1507,  1508,  1508,  1509,  1509,  1511,
    1510,  1512,  1512,  1514,  1515,  1516,  1517,  1513,  1519,  1520,
    1521,  1522,  1518,  1523,  1523,  1523,  1523,  1523,  1523,  1524,
    1524,  1525,  1525,  1525,  1526,  1526,  1527,  1527,  1527,  1528,
    1528,  1529,  1529,  1529,  1530,  1530,  1531,  1531,  1532,  1532,
    1533
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     1,     0,     4,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     4,     1,     2,     0,     4,     0,     2,
       3,     1,     2,     0,     3,     0,     6,     0,     6,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     2,     3,
       1,     3,     1,     2,     3,     5,     7,     2,     3,     1,
       3,     3,     2,     3,     1,     3,     1,     1,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     5,     3,
       1,     0,     1,     3,     1,     3,     3,     3,     3,     0,
       3,     9,     6,     7,     9,     1,     1,     0,     6,     0,
       3,     7,     4,     4,     3,    11,    11,    11,    11,     1,
       3,     2,     2,     2,     2,     2,     2,     2,     0,    12,
       0,     6,     2,     0,     1,     3,     1,     0,     2,     0,
       2,     0,     1,     3,     4,     0,     2,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     0,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     1,     1,     1,     2,     3,     3,
       3,     0,     3,     0,     1,     3,     1,     3,     0,     1,
       3,     1,     4,     0,     1,     1,     1,     0,     3,     2,
       3,     0,     3,     5,     5,     0,     7,     0,     6,     1,
       1,     1,     3,     1,     1,     1,     3,     0,     1,     1,
       1,     1,     2,     1,     3,     1,     1,     0,     1,     0,
       2,     3,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     4,
       0,     1,     1,     1,     3,     1,     3,     3,     1,     2,
       1,     1,     1,     1,     3,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     5,     0,     2,
       0,     3,     0,     2,     2,     2,     2,     0,     6,     2,
       0,     2,     1,     1,     3,     0,     0,     0,     7,     0,
       2,     2,     1,     1,     0,     0,     8,     0,     6,     1,
       2,     1,     2,     0,     0,     6,     0,     0,     6,     0,
       2,     0,     5,     0,     1,     0,     5,     0,     2,     0,
       5,     4,     0,     0,     8,     0,     0,     8,     1,     1,
       1,     1,     1,     2,     4,     5,     0,     4,     4,     4,
       3,     3,     2,     2,     0,     2,     1,     2,     3,     1,
       1,     1,     0,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     3,     1,
       1,     1,     1,     1,     0,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     3,     1,
       1,     1,     2,     2,     2,     1,     1,     1,     1,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     4,     3,
       1,     1,     1,     1,     2,     1,     2,     1,     0,     2,
       1,     2,     1,     6,     6,     5,     4,     5,     4,     5,
       0,     1,     0,     3,     0,     2,     0,     8,     9,     0,
       1,     1,     3,     0,     2,     0,     3,     1,     3,     5,
       0,     4,     3,     1,     1,     1,     3,     1,     3,     0,
       4,     1,     3,     1,     1,     0,     3,     1,     3,     3,
       0,     1,     2,     1,     3,     4,     3,     3,     3,     4,
       4,     3,     0,     1,     1,     2,     1,     1,     0,     3,
       1,     2,     1,     3,     0,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     5,     1,     1,     3,     4,     4,
       3,     2,     2,     3,     3,     1,     1,     4,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     3,     0,     1,     1,
       6,     7,     7,     7,     8,     2,     4,     0,     1,     2,
       2,     9,     0,     2,     0,     1,     1,     3,     3,     3,
       1,     2,     1,     1,     3,     2,     3,     2,     2,     1,
       3,     3,     2,     3,     1,     2,     2,     2,     1,     2,
       1,     1,     1,     2,     3,     2,     3,     2,     2,     5,
       5,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     2,     1,     2,     3,
       2,     1,     1,     1,     1,     1,     1,     2,     0,     1,
       1,     1,     1,     1,     0,     1,     1,     5,     0,     3,
       0,     2,     3,     0,     1,     2,     1,     1,     1,     1,
       3,     3,     3,     3,     0,     1,     0,     1,     0,     1,
       2,     1,     1,     2,     2,     3,     1,     3,     2,     1,
       2,     2,     2,     2,     2,     1,     1,     1,     1,     1,
       1,     2,     1,     1,     2,     1,     1,     1,     1,     1,
       0,     2,     1,     1,     1,     1,     1,     0,     2,     0,
       2,     1,     1,     0,     1,     1,     2,     2,     1,     2,
       2,     0,     1,     1,     1,     3,     1,     3,     0,     1,
       0,     4,     0,     1,     5,     0,     3,     3,     1,     0,
       2,     2,     2,     0,     3,     3,     6,     6,     1,     1,
       2,     2,     2,     1,     2,     2,     1,     1,     0,     1,
       1,     1,     1,     0,     1,     1,     0,     1,     1,     2,
       1,     3,     0,     1,     1,     2,     1,     0,     1,     1,
       2,     1,     1,     3,     2,     1,     1,     3,     3,     2,
       2,     1,     1,     1,     1,     1,     3,     1,     2,     5,
       0,     1,     0,     2,     1,     3,     0,     5,     0,     5,
       0,     5,     0,     5,     0,     5,     0,     4,     0,    10,
       3,     4,     3,     3,     7,     5,     5,     1,     5,     5,
       5,     3,     0,     1,     1,     2,     2,     2,     2,     5,
       3,     3,     0,     2,     2,     1,     2,     2,     2,     2,
       3,     0,     3,     1,     4,     0,     3,     0,     2,     0,
       1,     1,     2,     2,     1,     3,     0,     1,     1,     3,
       2,     2,     1,     3,     4,     0,     6,     4,     4,     5,
       4,     3,     1,     7,     4,     4,     0,     1,     2,     2,
       2,     1,     1,     3,     6,     5,     3,     8,     1,     3,
       3,     1,     3,     2,     5,     2,     4,     6,     5,     4,
       4,     3,     3,     2,     2,     6,     4,     5,     3,     5,
       5,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       2,     2,     3,     3,     3,     3,     0,     1,     0,     1,
       0,     1,     1,     0,     2,     1,     0,     1,     1,     1,
       2,     2,     2,     4,     3,     0,     4,     3,     0,     1,
       1,     3,     3,     2,     2,     4,     0,     3,     0,     3,
       0,     3,     0,     3,     0,     1,     1,     3,     1,     1,
       0,     2,     1,     3,     3,     3,     1,     4,     0,     1,
       1,     5,     0,     1,     1,     2,     1,     1,     1,     4,
       2,     4,     0,     1,     1,     2,     1,     1,     1,     1,
       1,     2,     4,     0,     1,     1,     0,     4,     3,     3,
       5,     1,     3,     3,     0,     6,     1,     1,     1,     3,
       2,     3,     1,     1,     0,     6,     1,     1,     1,     3,
       3,     4,     0,     5,     1,     0,     4,     0,     2,     1,
       1,     1,     3,     2,     4,     5,     4,     5,     3,     4,
       3,     1,     4,     4,     4,     4,     3,     3,     1,     8,
       7,     0,     1,     2,     1,     1,     1,     3,     0,     1,
       2,     1,     1,     1,     1,     0,     1,     2,     1,     3,
       4,     4,     1,     1,     2,     0,     1,     2,     1,     3,
       1,     1,     1,     2,     0,     2,     2,     1,     1,     0,
       2,     3,     3,     3,     2,     3,     4,     3,     4,     3,
       4,     1,     3,     4,     3,     4,     1,     3,     4,     5,
       7,     6,     8,     5,     6,     4,     4,     5,     3,     4,
       1,     3,     3,     3,     3,     3,     3,     5,     5,     3,
       3,     3,     3,     3,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     1,     1,     3,     2,     2,     2,     2,     1,     3,
       5,     6,     2,     4,     7,     2,     6,     5,     6,     6,
       4,     4,     5,     3,     3,     4,     6,     2,     4,     4,
       4,    10,     6,     8,     6,     4,     4,     6,     4,     4,
       4,     6,     4,     7,     7,     7,     6,     6,     6,     6,
       3,     4,     6,     8,     2,     2,     8,     8,     6,     6,
       1,     6,     6,     8,     8,     6,     8,     6,     2,     8,
       8,     2,     2,     2,     4,     4,     4,     4,     3,     8,
       6,     8,     4,     6,     4,     4,     6,     8,     4,     3,
       6,     4,     6,     4,     7,     7,    10,     1,     4,     4,
       4,     4,     4,     6,     4,     4,     6,     2,     3,     0,
       4,     0,     3,     0,     1,     1,     3,     2,     1,     1,
       4,     5,     4,     4,     4,     6,     4,     5,     4,     5,
       4,     5,     4,     5,     4,     4,     4,     4,     4,     5,
       7,     4,     2,     3,     1,     4,     0,     1,     0,     2,
       0,     3,     3,     1,     2,     2,     3,     2,     1,     2,
       1,     2,     1,     2,     2,     2,     1,     0,     1,     1,
       3,     1,     3,     1,     3,     0,     1,     0,     2,     4,
       5,     1,     1,     4,     1,     1,     5,     7,     5,     7,
       3,     3,     3,     4,     4,     1,     2,     2,     1,     3,
       3,     0,     1,     0,     1,     0,     1,     4,     1,     1,
       1,     1,     1,     3,     5,     3,     3,     4,     3,     3,
       3,     0,     2,     3,     3,     1,     1,     6,     6,     1,
       2,     0,     1,     1,     0,     1,     1,     1,     1,     3,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     0,     2,     0,     1,     1,     0,     2,     0,     2,
       2,     3,     3,     1,     4,     0,     3,     1,     3,     2,
       0,     0,     4,     3,     1,     0,     1,     3,     3,     1,
       2,     0,     1,     3,     3,     1,     0,     1,     1,     0,
       1,     2,     1,     3,     3,     1,     1,     1,     1,     1,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     2,     1,     2,
       5,     2,     1,     3,     0,     6,     0,     0,     8,     4,
       6,     4,     4,     4,     5,     4,     4,     4,     5,     4,
       4,     1,     3,     1,     1,     3,     0,     2,     0,     1,
       0,     1,     1,     3,     1,     1,     8,     9,     8,     6,
       7,     6,     0,     1,     1,     1,     1,     1,     0,     1,
       1,     3,     4,     1,     3,     4,     3,     1,     2,     1,
       1,     1,     1,     3,     1,     1,     1,     0,     1,     3,
       0,     1,     3,     1,     1,     1,     0,     5,    10,     0,
       1,     3,     1,     3,     0,     1,     9,     7,     8,     0,
       2,     0,     2,     1,     1,     1,     0,     4,     0,     1,
       0,     1,     1,     3,     1,     1,     2,     2,     2,     1,
       1,     1,     1,     0,     3,     0,     3,     2,     4,     4,
       3,     4,     4,     1,     3,     3,     6,     2,     2,     0,
       6,     0,     7,     5,     2,     5,     5,     2,     2,     1,
       4,     3,     2,     3,     2,     2,     1,     1,     3,     5,
       4,     3,     3,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     0,
       1,     0,     2,     0,     1,     1,     1,     0,     2,     0,
       2,     0,     2,     2,     0,     2,     2,     3,     0,     4,
       1,     1,     1,     1,     1,     3,     1,     1,     0,     1,
       1,     3,     0,     1,     1,     0,     4,     0,     4,     1,
       0,     3,     0,     3,     3,     1,     2,     2,     2,     2,
       2,     3,     2,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     0,     3,     3,     3,     1,     0,     2,     0,
       4,     0,     3,     2,     0,     1,     0,     2,     0,     3,
       3,     2,     2,     3,     0,     1,     1,     2,     0,     0,
       0,    21,     1,     1,     0,     1,     0,     1,     1,     0,
       1,     1,     1,     0,     2,     2,     1,     3,     4,     3,
       3,     0,     2,     2,     1,     3,     3,     0,     4,     0,
       3,     1,     1,     0,     3,     2,     3,     1,     1,     2,
       0,     2,     3,     1,     3,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     2,     2,     2,     1,     1,     3,     5,     2,     1,
       1,     1,     1,     3,     4,     5,     1,     5,     3,     2,
       1,     3,     2,     2,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     2,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     2,     2,     3,     6,
       5,     8,     3,     3,     3,     6,     6,     6,     4,     0,
       2,     2,     2,     0,     2,     1,     3,     2,     1,     1,
       1,     1,     1,     0,     1,     1,     1,     0,     2,     2,
       2,     0,     2,     2,     2,     2,     3,     3,     4,     6,
       2,     3,     3,     1,     3,     3,     2,     2,     1,     0,
       2,     3,     0,     2,     2,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     0,     4,     1,     1,
       1,     3,     3,     1,     1,     2,     2,     0,     3,     1,
       3,     4,     4,     3,     0,     7,     1,     2,     1,     1,
       1,     1,     1,     1,     0,     5,     1,     1,     1,     1,
       1,     4,     7,     0,     9,     8,     6,     5,     9,     0,
      11,     7,     0,     1,     1,     1,     0,     1,     1,     3,
       2,     3,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       3,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     2,     2,     2,     0,     3,     0,     1,     3,     1,
       2,     2,     2,     1,     3,     3,     1,     1,     3,     1,
       3,     1,     3,     4,     5,     4,     6,     6,     1,     0,
       3,     1,     3,     0,     2,     2,     2,     2,     0,     2,
       0,     3,     2,     1,     2,     2,     2,     2,     2,     0,
       3,     0,     1,     0,     3,     2,     0,     1,     2,     0,
       1,     4,     4,     5,     2,     3,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     1,     2,
       1,     2,     3,     3,     3,     0,     3,     3,     0,     7,
       2,     0,     3,     4,     4,     1,     1,     0,     2,     0,
      12,     7,     6,     0,     0,     0,     0,    14,     0,     0,
       0,     0,    11,     4,     4,     3,     4,     3,     3,     0,
       2,     1,     3,     5,     1,     1,     0,     1,     1,     0,
       2,     0,     1,     3,     5,     3,     3,     3,     1,     3,
       4
};

/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1679,  2616,  1083,  2569,     0,     0,     0,     0,     0,     0,
    2571,   159,    71,  1796,  1797,  1604,  1628,     7,     0,  1083,
     300,     0,     0,    83,     0,  1642,     0,  1854,     0,     0,
    1083,     0,  1848,     0,     0,  1083,  1684,  1832,   277,     0,
    2571,     0,  1148,     0,  1715,  2449,     0,     0,     0,  1698,
       0,  2447,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     2,     8,    13,    24,     0,    45,    29,    35,    19,
     155,    23,   156,    18,    59,    52,    31,    15,     0,    32,
      62,  1050,    63,    21,    49,    16,    17,    20,    42,    48,
      43,    44,    56,  1121,  1119,  1551,  1120,  1131,  1138,  1680,
      27,    28,    37,    50,    67,     0,    25,    64,    60,    26,
    1798,    30,    51,    46,    39,    68,    40,    57,    58,    41,
      66,    61,   897,    34,    53,    33,    14,    22,    54,    55,
      47,    69,    38,    65,    36,     0,   929,     0,     0,     0,
       0,     0,     0,     0,     0,  1626,   886,  2614,  2615,  2616,
    1085,  1084,     0,  2571,  1960,  1070,  1094,  1984,  2050,  2051,
    2052,  2053,  2054,  2055,  1986,  2056,  1985,  2057,  2059,  2058,
    2060,  2061,  1987,  1988,  2062,  2063,  2064,  2066,  2065,  2067,
    1989,  1990,  2068,  2069,  2070,  2071,  2072,  1991,  1992,  2073,
    2075,  2074,  1993,  2076,  2077,  2078,  2081,  2080,  2079,  1994,
    2082,  1995,  2083,  2084,  2086,  2087,  2088,  2089,  2090,  2091,
    2092,  2094,  2093,  1996,  2095,  2096,  2097,  2098,  2100,  2099,
    2101,  2102,  2103,  1997,  2104,  2105,  2106,  2107,  2108,  2109,
    2110,  2111,  2112,  1998,  2113,  2114,  2115,  2134,  1999,  2116,
    2119,  2118,  2117,  2120,  2121,  2122,  2123,  2042,  2124,  2125,
    1982,  2126,  2127,  2128,  2129,  2130,  2132,  2131,  2043,  2136,
    2137,  2138,  2139,  2000,  2001,  2002,  2133,  2135,  2140,  2003,
    2142,  2141,  2143,  2145,  2144,  2004,  2146,  2005,  2006,  2147,
    2148,  1956,  2149,  1957,  2150,  2007,  2152,  2153,  2158,  2159,
    2008,  2151,  2154,  2155,  2156,  2157,  2160,  2161,  2010,  2162,
    2163,  2164,  2165,  2166,  2167,  2168,  2170,  2171,  2172,  2195,
    2183,  2185,  2176,  2178,  2179,  2181,  2177,  2184,  2182,  2188,
    2189,  2187,  2190,  2191,  2192,  2193,  2194,  2186,  2174,  2180,
    2175,  2196,  2197,  2173,  2198,  2199,  2200,  2201,  2202,  2203,
    2204,  2205,  2206,  2207,  2208,  2210,  2209,  2211,  2212,  2213,
    2214,  2215,  2216,  2218,  2217,  2219,  2220,  2221,  2222,  2224,
    2223,  2226,  2044,  2011,  2225,  2228,  2229,  2230,  2231,  2232,
    2012,  2013,  2014,  2233,  2234,  2015,  2235,  2237,  2236,  2238,
    2239,  2240,  2241,  2242,  2243,  2244,  2016,  2017,  2018,  2245,
    2246,  2247,  2045,  2248,  2249,  2250,  2046,  2251,  2252,  2253,
    2254,  2255,  2256,  2258,  2257,  2259,  2260,  2261,  2262,  2263,
    2264,  2047,  2019,  2265,  2020,  2266,  2048,  2267,  2268,  2269,
    2270,  2271,  2272,  2273,  2021,  2274,  2022,  2275,  2276,  2277,
    2278,  2024,  2279,  2280,  2281,  2282,  2284,  2285,  2283,  2286,
    2025,  2287,  2288,  2289,  2026,  2291,  2290,  2292,  2027,  2293,
    1983,  2028,  2294,  2030,  2296,  2297,  2029,  2031,  2298,  2299,
    2300,  2301,  2302,  2304,  2303,  2305,  2306,  2307,  2308,  2032,
    2309,  2310,  2311,  2312,  2033,  2313,  2314,  2315,  2316,  2317,
    2319,  2318,  2049,  2320,  2321,  2322,  2324,  2326,  2325,  2323,
    2327,  2328,  2329,  2330,  2333,  2334,  2335,  2336,  2331,  2332,
    2034,  2337,  2338,  2339,  2340,  2341,  2343,  2342,  2036,  2037,
    2344,  2345,  2040,  2346,  2347,  2348,  2351,  2349,  2350,  2353,
    2352,  2354,  2357,  2355,  2356,  2038,  2358,  2039,  2359,  2360,
    2361,  2023,  2009,  2035,  2085,  2295,  2169,  2227,   231,  1963,
     213,  1964,  1981,  1980,  2041,     0,     0,  2439,  2438,     0,
       0,  2572,  2573,   568,     0,     0,     0,     0,     0,  1629,
     834,   568,   568,  2616,     0,     0,     0,  1626,  1626,  1626,
       0,     0,  1626,  1626,     0,  1626,  1626,  1626,  1626,     0,
      76,  1805,   301,   302,     0,  2486,  2499,  2500,  2496,  2501,
    2519,  2502,  2506,     0,  2498,  2549,  1974,     0,  2505,     0,
    2549,  2503,     0,  2549,     0,  2504,  2509,  2520,  2549,  2497,
    1965,  1973,  1972,  2549,  2363,  2362,  1966,     0,  2488,     0,
       0,     0,  1955,     0,     0,  1644,  1645,  1643,  1008,     0,
       0,  1855,  1856,     0,  1862,     0,  1863,  1858,  2436,     0,
       0,     0,     0,     0,  1086,     0,  1647,  1685,  1648,  1646,
    1626,     0,   267,   276,   278,   279,   275,  2486,     0,     0,
    2573,  2584,  2599,  2594,  2593,  2596,  2597,  1154,  2598,  1153,
    2595,  2592,     0,  1149,  1151,  1152,   765,     0,     0,  2389,
    2391,  2218,  2238,  2392,  2331,  2390,  2023,     0,     0,  2413,
    2364,     0,  2383,     0,  1773,   279,  1020,  1044,  1028,  1021,
    1044,  1699,  1696,     0,     0,     0,  1857,     0,  1530,  1533,
    1535,  2664,     0,     0,     0,  2659,     0,  2665,     0,  2051,
    1985,  2061,     0,  1923,     0,     0,     0,  1425,     0,  1991,
       0,  2076,  2078,     0,     0,  1179,  1179,   720,     0,     0,
       0,  2102,  2103,  1929,     0,     0,     0,  1920,  1930,  2002,
    2142,  2143,     0,  1922,  2148,     0,     0,     0,     0,  2166,
    1927,     0,     0,  2205,  2207,     0,     0,  2211,  2212,  2213,
    2214,  1906,  1233,   720,  1919,  1926,  1912,  2238,  2243,  2244,
       0,  2251,     0,     0,  2278,     0,  2285,  2283,  2289,     0,
       0,  2316,     0,     0,   720,  1905,  2333,  2334,  2335,  2336,
       0,  1921,  2034,  1928,     0,  2346,  1179,   720,   720,     0,
       0,     0,  2354,  2357,  2361,     0,     0,     0,     0,     0,
       0,     0,  1232,     0,     0,     0,  1310,  2591,     0,     0,
    1225,  1244,  1245,  1247,  1347,  1246,  1252,  1368,  1369,  1251,
    1916,  1250,  1249,  1917,  1918,  1243,  1940,  1963,  1939,  1258,
    2589,     0,     0,     0,     0,     0,  2590,     0,     0,     0,
       0,     1,    10,     0,     0,  1179,  1971,  2346,     0,  1970,
    1969,  1975,  2548,  2553,  2541,     0,  1022,  1036,     0,  1123,
       0,  2586,  1559,  1552,     0,  2586,  1559,  1155,  1551,  1155,
    1691,  1684,  2129,  2002,  2237,  1788,  1802,  1950,     0,   878,
     930,     0,   882,     0,  2450,     0,   880,     0,   893,   892,
     890,     0,   475,   876,     0,   901,     0,  2625,   884,     0,
    2570,     0,  1417,   230,     0,    85,    87,  1058,  1621,  1072,
       0,  2576,     0,     0,     0,     0,     0,     0,   164,     0,
       0,     0,     0,   160,  2625,  2625,  2616,  2618,  2620,   870,
     568,     0,  1171,  1603,  1170,  1174,  1191,  1196,  1210,  1172,
    1939,     0,     0,     0,     0,     0,     0,     0,  1630,     0,
       0,     0,     0,  1626,    78,     0,     0,  2487,  2479,  2517,
    2516,  2521,     0,  2518,  2514,  2522,  2523,  2507,     0,  2493,
    2511,     0,  2495,  2513,  2512,  2492,  2508,  2515,  2494,     0,
    2490,  2482,     0,     0,  1952,  1518,  2453,  2454,     0,    84,
       0,  1009,  1648,     0,  2678,  2675,  1853,     0,  1866,     0,
       0,     0,  1768,  1767,     0,  1849,  2585,  1088,     0,     0,
       0,  1649,     0,     0,  1834,  1841,     0,  1839,  1833,  1836,
     268,     0,     0,   298,  2473,     0,     0,  2482,  2579,  2576,
    1141,  1150,   764,     0,     0,   767,   769,  1665,  1666,   768,
     777,     0,   766,     0,     0,     0,     0,  2366,  2422,  2419,
    2418,  2379,  2374,  2373,  1978,  2539,  2372,  2401,     0,   773,
     775,   774,  2410,   772,     0,     0,  2331,  2367,  2383,     0,
       0,  2365,     0,     0,   765,  1784,     0,     0,  1784,     0,
    1559,  1771,  1774,     0,  2394,  1747,   832,   831,   830,  2395,
    1767,     0,  1723,  1746,     0,  1700,  1739,     0,  2396,     0,
    1770,     0,  1559,  1784,     0,  1716,     0,     0,     0,     0,
     274,  1049,  1048,  1024,  1045,  1046,     0,     0,  1027,  1029,
    1030,   149,     0,  2676,  2677,  2448,  1531,     0,     0,     0,
    1911,  1910,  1961,  2661,  1909,  2669,  2671,  2655,     0,  2658,
    2657,  2666,     0,     0,  1523,  1265,  1523,  1523,  1523,  1426,
       0,     0,     0,     0,     0,     0,     0,  1523,     0,  1304,
    1277,     0,  1305,     0,     0,     0,  1931,     0,     0,     0,
    1262,     0,     0,  1417,     0,  1396,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1421,  1423,  1939,  1523,     0,
       0,  1523,     0,     0,     0,     0,     0,   761,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1523,  1523,     0,     0,  1523,  1318,  1933,     0,     0,     0,
    1932,     0,     0,     0,  1925,  1924,  1907,     0,  1321,  1323,
    1322,     0,  1523,  1523,     0,     0,     0,  1523,  1523,     0,
    1255,  1254,  1256,     0,  2591,     0,     0,  2397,  1392,  1394,
       0,     0,     3,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1257,     0,     0,  1908,     0,     0,
    1363,     0,     0,   510,     4,     6,  1122,  1137,  1136,    11,
      70,  1977,     0,     0,     0,     0,     0,     0,     0,   912,
       0,     0,     0,     0,     0,  1056,     0,  1052,  1051,     0,
    1025,  1038,  2113,     0,     0,  1602,  1596,  1599,  1598,     0,
    2588,  2587,     0,  1155,  1560,  1568,  1569,  1567,  1561,  1562,
    1566,  1565,     0,  1155,     0,     0,  1128,  1156,  1158,  1559,
    1130,  1559,  1155,  1695,  1694,  1693,     0,  1691,  1008,     0,
    1679,  1787,  1803,  1804,  2623,  2624,  2622,   783,  2617,   214,
       0,   891,     0,   476,   214,     0,     0,     0,     0,     0,
     477,   478,   413,   936,  1627,   888,     0,     0,   887,  2625,
    1069,     0,  1096,  1098,  1097,  1115,  1419,     0,  1418,   212,
       0,     0,  1060,  1059,     0,  1057,  1080,  1079,  1077,     0,
    1078,  1076,  1071,  1073,  1074,  2575,     0,     0,  2577,  2581,
    1231,  1230,     0,   157,     0,   163,     0,     0,     0,     0,
    2548,  2553,   162,  2621,     0,   568,     0,     0,     0,  2613,
    2601,  2608,  2609,  2612,  2611,  2610,     0,  2607,  2600,  2603,
    2604,  2606,  2605,  2625,  2619,     0,     0,   856,   871,  1946,
       0,  1184,     0,  1229,  1228,     0,  1227,  1226,     0,  1173,
       0,     0,  1178,  1177,  1234,  1235,  1236,  1237,     0,  1238,
    1239,  1240,     0,     0,     0,     0,     0,     0,     0,     0,
    1609,  1615,  1611,     0,  1630,  1612,  1619,   491,   490,  1634,
    1635,  1617,   574,  1632,     0,  1616,  2537,  1613,  1010,  1620,
       0,     0,    77,     0,  1827,     0,     0,     0,  1823,  1825,
    1829,  1824,     0,     0,  1828,     0,  1826,  1806,  1809,  1815,
    1830,     0,     0,   299,   303,   305,     0,   308,     0,  2510,
    2551,     0,     0,  2491,  2484,  2485,  2483,     0,  2524,  2489,
    1519,  1520,     0,  2452,     0,  1951,  2680,     0,     0,     0,
    1104,  1867,  1868,  1864,  1518,  2437,  2440,  1082,     0,    73,
      74,     0,     0,     0,  1087,  1091,     0,  1062,  1455,  1838,
    1846,  1843,  1844,     0,   266,   291,   286,   294,   288,   290,
     289,   295,   296,   297,   292,   287,   293,   280,     0,     0,
       0,     0,  2471,     0,  2580,     0,  2582,     0,  1526,  1142,
    1141,     0,     0,     0,  2415,     0,  2412,  2411,     0,     0,
    2430,  2368,     0,  2424,  2425,     0,  2416,     0,  2417,     0,
    2378,     0,     0,     0,     0,     0,     0,     0,     0,  2414,
    2382,  2381,     0,  2384,  2385,     0,  2388,  2434,  2435,  2432,
    2433,  2431,  2407,  1777,     0,     0,  1745,     0,   568,     0,
       0,     0,     0,     0,     0,     0,  1717,     0,     0,  1738,
    1775,  1776,  1784,     0,     0,  1784,     0,  1753,  1771,     0,
    1784,  1712,     0,     0,  1704,  1709,  1705,     0,  1711,  1710,
    1713,  1701,  1702,  1777,  1728,   149,  1771,  1737,  1744,     0,
    1727,  1734,     0,  1742,  1771,  1771,  1784,  1784,     0,  1033,
    1034,     0,     0,     0,  1023,  1697,  1623,  1532,     0,  1537,
       0,     0,     0,  2656,  2672,  2654,  2660,  2667,  2668,  2653,
       0,     0,  1524,  1523,     0,     0,     0,     0,     0,     0,
    1427,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1180,     0,   721,  1328,     0,     0,     0,     0,     0,  1494,
    1495,  1496,  1497,  1505,  1498,  1499,  1500,  1507,  1512,  1501,
    1502,  1508,  1509,  1510,  1503,  1511,  1506,  1504,  1513,     0,
    1493,     0,     0,  1517,  1514,  1516,  1515,     0,  1397,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1523,     0,     0,     0,  1523,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1339,     0,     0,     0,     0,     0,  1523,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1300,
       0,  1942,  1941,     0,     0,     0,     0,     0,     0,     0,
       0,  1259,     0,     0,     0,     0,     0,     0,     0,     0,
    1222,  1223,  1213,  1214,  1211,  1212,     0,  1216,     0,  1215,
    1219,  1220,  1221,  1224,  1248,  1253,  1273,  1274,  1174,     0,
    1364,  1365,  1943,     0,   511,     0,     0,   514,     0,    12,
       9,   920,     0,  1976,     0,     0,     0,     0,     0,  2557,
    2555,     0,  2556,  2554,  2529,  2542,     0,   902,     0,     0,
       0,     0,     0,     0,     0,     0,   149,     0,  1040,  1962,
    1601,   770,  1597,     0,  1556,  1553,  1555,  1134,  1132,  1124,
       0,     0,  1135,  1133,  1126,  1163,  1162,  1165,     0,  1157,
    1155,  1155,  1129,     0,     0,  1624,  1689,  1692,     0,  1801,
       0,  1790,  1791,  1792,  1793,  1794,  1789,   784,   783,   564,
     567,   566,     0,   883,     0,     0,   465,   881,     0,     0,
     445,   424,   445,   479,  1006,  1667,  1006,     0,  1667,  1667,
    1006,  1667,     0,     0,  1667,  1667,  1667,  1667,     0,     0,
    1667,     0,     0,  1006,     0,  1667,     0,   992,     0,     0,
    1667,  1667,  1667,  1667,  1667,  1006,     0,     0,  1667,  1667,
       0,  1016,     0,     0,  1667,  1667,  1667,  1667,     0,  1667,
    1667,     0,  1667,     0,     0,   991,   570,   595,   596,   877,
     931,   934,   996,   942,   952,   938,   937,     0,   968,   971,
     994,   995,   993,   921,     0,     0,   885,     0,     0,   827,
     826,  1112,     0,  1115,  1100,  1114,   232,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   149,
     117,   140,     0,     0,     0,     0,     0,     0,     0,   149,
      89,  1622,  1081,  1075,  2574,  2578,   569,   783,     0,   454,
       0,     0,   416,   912,     0,     0,     0,   213,  2648,     0,
    2602,  1949,     0,     0,     0,     0,   783,  1169,  1176,  1175,
    1182,  1181,  1183,  1187,  1192,  1185,  1189,     0,  1241,  2056,
    1194,     0,     0,     0,  1197,  1540,  1208,     0,     0,     0,
       0,     0,  1936,  1943,     0,  1606,  1618,   575,  1769,  1667,
       0,  1012,  1011,  1614,  1010,     0,    79,    81,  1820,  1817,
    1816,  1818,  1822,   149,  1819,     0,  1831,  1807,  2102,  2333,
    2336,   312,     0,   284,   283,   285,   309,     0,     0,  2482,
    2550,     0,     0,  2533,  2536,  1950,     0,     0,  2477,  1522,
    2138,  2223,     0,  1526,  2456,  1455,  2674,  2679,     0,  1865,
       0,     0,     0,    75,     0,     0,  1850,     0,  1089,     0,
       0,  1067,  1066,  1068,  1061,  1063,  1064,     0,     0,  1456,
       0,  1842,  1845,   149,  1835,     0,     0,     0,  2482,     0,
       0,  2583,  1144,     0,     0,  1143,  1145,  1146,  1432,  1431,
    1462,  1459,  1458,  1461,  1460,  1455,  1518,     0,  1541,  1525,
    1526,     0,     0,     0,   782,   781,   778,   776,     0,     0,
       0,     0,  2429,  2421,  2423,  2420,  2380,  1979,  2540,  2403,
    2404,  2405,  2402,     0,  2408,  2406,     0,  2387,     0,  1779,
    1785,  1786,     0,     0,  1762,  1756,  1755,  1751,  1757,  1763,
    1752,  1766,  1765,  1764,  1725,  1724,  1720,  1772,  1761,  1759,
    1748,  1781,  1760,  1758,  1706,  1707,  1708,     0,  1559,     0,
    1779,  1754,  1784,  1771,     0,  1784,  1784,  1741,  1743,  1047,
    1032,  1031,     0,  1536,     0,  1534,  2662,  2670,     0,     0,
    1324,     0,  1370,  1404,  1372,  1373,  1376,     0,     0,     0,
       0,     0,  1325,     0,  1275,  1326,  1327,     0,     0,     0,
    1378,     0,   722,     0,     0,  1278,  1279,  1270,     0,     0,
    1348,     0,  1400,  1280,     0,     0,     0,     0,     0,  1349,
    1422,     0,  1424,  1943,     0,  1382,  1332,  1285,     0,  1380,
       0,  1286,  1350,  1351,  1352,  1334,     0,  1354,     0,  1335,
       0,     0,  1338,     0,     0,  1288,  1386,  1384,     0,     0,
       0,     0,  1388,  1290,     0,     0,     0,  1289,     0,     0,
       0,     0,     0,     0,     0,  1292,     0,  1271,  1385,  1387,
    1341,     0,     0,  1343,     0,  1301,  1523,  1374,  1391,     0,
    1263,  2398,  2399,  2400,   872,  1393,  1944,     0,     0,  1367,
    1355,     0,  1417,     0,     0,     0,     0,     0,     0,     0,
     516,     0,   512,   896,   898,   899,   900,     0,  2543,  2545,
    2532,  2531,  2530,  2527,     0,     0,     0,     0,     0,   913,
     915,     0,     0,   895,   903,   904,   145,  1958,  1586,  1587,
    1585,  1583,  1584,   146,   147,  1576,  1577,  1573,  1574,  1572,
    1575,   148,  1055,  1054,  1053,  1037,  1026,     0,     0,  1042,
       0,  1873,  1595,  1557,  1558,  1938,     0,  1564,  1563,     0,
       0,  1168,  1165,  1159,  1166,     0,  1125,  1127,     0,  1455,
    1950,     0,     0,     0,  1953,     0,     0,   565,  1667,  1667,
       0,     0,     0,     0,     0,     0,     0,   215,   224,  2451,
       0,     0,   422,   423,  1667,   421,   574,   467,   469,   470,
     471,     0,     0,     0,     0,     0,     0,     0,     0,   169,
     472,  1667,  1667,   418,   574,   447,   449,   450,   451,   452,
     453,   414,     0,   419,  1007,   870,   828,  1083,   835,   975,
       0,   638,   870,   823,   828,   973,  1668,     0,     0,     0,
    1083,     0,     0,     0,     0,     0,  1083,     0,     0,     0,
       0,     0,  1667,     0,   983,     0,   940,     0,     0,     0,
       0,     0,   984,     0,     0,     0,   941,  1667,     0,     0,
       0,     0,     0,     0,  1083,     0,     0,     0,  1083,  1019,
    1018,  1017,     0,     0,  1083,  1083,     0,     0,     0,     0,
     601,   602,     0,     0,     0,     0,   958,   959,   571,     0,
     932,   933,   783,   783,   637,     0,  1946,     0,   923,   925,
    2626,  2627,  1535,  1103,  1095,  1102,  1099,  1115,     0,  1484,
    1101,  1420,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    86,     0,     0,     0,     0,     0,
       0,     0,     0,    88,   158,   783,     0,  1667,  1667,  1667,
    1667,   420,   574,   456,   458,   459,   460,   461,   464,   462,
     463,     0,     0,     0,   432,   902,     0,   178,  2643,     0,
       0,   409,   408,     0,     0,   863,   865,   864,   857,   858,
    1948,     0,  1872,     0,  1871,   637,   152,   495,   497,   500,
     498,   574,   572,  1659,  1660,   502,     0,  1188,  1193,  1186,
    1190,  1195,     0,     0,     0,  1206,  1205,     0,     0,  1198,
    1540,  1209,     0,  1610,  1607,  1633,     0,  2538,  1605,    82,
       0,  1821,  1814,  1810,     0,   304,   313,   306,   310,   311,
     307,     0,  2552,  2560,     0,     0,     0,     0,  2466,  2460,
    2467,  2469,  2463,  2468,  2470,  2461,  2462,  2457,  2464,  1559,
       0,  1105,  1107,  1108,  1106,  1115,     0,     0,  2443,  2444,
    2442,  2441,  1852,  1851,     0,  1092,  1093,  1065,     0,     0,
    1662,  1661,     0,  1639,  1641,  1650,  1653,     0,  1593,  1594,
    1579,  1580,  1578,  1581,  1847,  1582,  1592,  1840,     0,   281,
       0,     0,  2476,     0,     0,  1432,  1462,  1459,  1458,  1461,
       0,     0,     0,     0,  1445,  1453,  1451,  1453,  1448,     0,
       0,     0,  1518,  1535,  1527,     0,  1528,  1541,  2377,  2376,
    2375,     0,  2370,     0,  2427,  2426,  2428,     0,  2386,  1778,
       0,  1729,     0,  1750,     0,     0,     0,  1722,     0,  1740,
    1703,  1731,  1721,  1526,  1771,  1718,  1719,   150,  1538,     0,
    2673,     0,     0,  1371,     0,  1428,     0,  1267,   734,   734,
     718,  1412,   714,  1416,     0,   692,  1408,   718,  1410,   734,
       0,     0,     0,     0,  1379,  1377,     0,     0,     0,     0,
       0,     0,  1398,     0,     0,     0,  1272,     0,  1359,  1383,
    1381,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1389,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1260,
       0,  1395,  1218,  1217,  1366,     0,  1945,     5,     0,     0,
       0,     0,   515,     0,   525,     0,     0,     0,  2544,     0,
       0,  2528,   918,   916,   917,   919,   914,   907,   906,   908,
     905,  1039,     0,     0,  1035,   771,     0,  1881,  1554,  1164,
    1167,  1160,  1161,     0,  1526,     0,  1526,  1625,  1690,  1689,
       0,  1795,     0,     0,   218,   221,   219,     0,   220,     0,
       0,   474,   473,     0,  1769,   173,   172,   174,   175,   177,
     176,   171,   894,     0,     0,     0,  1769,   425,   426,   429,
     430,   431,   639,   829,   870,   963,     0,     0,     0,   828,
     635,   870,     0,   870,  1002,  1003,     0,     0,     0,   584,
     579,     0,   590,   961,  1072,   962,  1491,     0,   581,   582,
     583,   603,     0,     0,   592,     0,     0,   943,   981,   982,
    1010,   576,     0,     0,     0,   616,   617,   615,   597,   604,
    1004,  1005,   577,   578,     0,     0,  1547,  1549,  1556,   606,
     585,   605,   580,     0,     0,   988,   966,     0,   614,   612,
     609,   611,   610,   613,   593,   586,   587,   589,   588,   600,
     591,   951,  1830,   960,  1006,  1006,   969,   970,   935,   939,
     972,     0,   622,   624,   625,     0,   705,   659,   650,   734,
     653,   652,   791,   718,   664,   711,   708,     0,   713,   710,
     685,   684,   701,   683,   688,   672,   791,   791,   671,   704,
     791,   689,   687,   691,     0,   692,   712,   697,   686,   690,
     706,   682,     0,   703,   734,   718,   718,   668,   702,   791,
       0,   695,   734,   627,   738,   670,   798,     0,     0,   734,
     736,   714,     0,     0,     0,   183,  2628,     0,  1487,     0,
    1488,  1485,  1486,   141,   139,   120,   124,   126,   119,   122,
     123,   125,   129,   130,   128,   131,   132,   135,   136,   133,
     127,   134,   121,   137,   118,     0,    91,    92,     0,    93,
      94,     0,    95,    96,     0,    97,    90,     0,     0,     0,
       0,     0,  1769,     0,     0,     0,  1667,  1667,   415,   574,
     434,   436,   437,   438,   439,   440,   443,   441,   444,   442,
     161,     0,     0,   233,   620,   621,   619,   618,     0,  2649,
     412,   410,   411,     0,     0,     0,   501,   153,     0,     0,
     496,   494,   783,   499,  1203,  1199,     0,  1539,     0,     0,
    1207,  1937,   997,   488,    80,  1812,     0,  1808,     0,     0,
       0,     0,  2481,  2535,  2534,  2553,  2525,     0,  2455,     0,
    1676,  1676,     0,  1115,  1117,  1869,  2445,  2446,  1090,     0,
    1490,  1640,  1682,     0,     0,     0,  1657,  1935,  1934,  1941,
    1670,  1658,  1664,     0,     0,     0,  2472,     0,  1469,  1463,
    1465,  1466,  1468,     0,     0,  1432,  1431,  1147,  1447,  1446,
    1454,     0,  1452,  1453,  1453,     0,     0,  1441,  1440,     0,
    1481,  1470,     0,     0,  1140,  1528,     0,  2369,  2409,  1780,
    1559,  1736,  1735,  1749,  1782,  1783,  1714,  1559,  1733,  1784,
    2663,     0,  1302,  1429,     0,     0,   735,  1405,   791,     0,
    1414,     0,  1415,   716,   715,   693,  1409,  1413,  1411,  1407,
    1266,  1276,  1269,  1268,     0,     0,  1308,  1330,     0,  1309,
       0,     0,     0,     0,     0,  1282,     0,  1284,     0,     0,
    1361,  1333,  1353,  1311,  1336,     0,  1287,  1261,     0,  1312,
       0,  1317,  1315,     0,  1291,     0,     0,  1298,     0,  1296,
       0,  1297,     0,  1299,  1340,  1342,     0,     0,     0,     0,
    1375,   873,  1356,     0,   521,   508,     0,   506,   510,     0,
     503,     0,     0,   519,  2546,  2547,   911,     0,   910,  1041,
       0,     0,     0,     0,     0,  1874,  1876,     0,  1600,  1526,
    1551,  1951,  1687,     0,  1954,  1526,   608,   607,   223,   222,
     228,   229,  1590,  1588,  1589,   480,   492,  1591,   493,   468,
     170,   481,   482,   448,     0,   427,     0,     0,     0,     0,
     870,   824,   825,     0,     0,     0,   862,   861,   986,     0,
       0,   947,     0,   948,     0,   950,   777,   598,   954,   980,
     979,     0,   955,   599,  1013,   945,     0,  1550,   944,     0,
       0,  1062,     0,   976,   637,   627,   658,   651,   669,   785,
     796,   794,   788,   694,   791,     0,   792,   793,   655,   667,
     709,   707,     0,   678,     0,   673,   791,   681,   677,   693,
     696,   698,   700,     0,   791,   666,   665,   675,   662,   723,
       0,  1013,   628,   629,   746,     0,     0,     0,     0,   742,
       0,   803,     0,     0,   749,   640,   739,   741,   642,     0,
       0,   799,   798,   657,   791,   798,   723,     0,   737,   723,
     723,     0,   193,     0,     0,   922,     0,   186,   184,   195,
       0,     0,  1116,     0,     0,   142,   144,    98,     0,   100,
     102,   107,     0,   109,     0,   112,     0,   114,  1959,   116,
       0,   103,     0,     0,   867,  1556,   487,   486,   485,   484,
     457,     0,     0,     0,     0,     0,  1769,     0,     0,     0,
     234,   236,     0,     0,   243,     0,     0,  1947,     0,   783,
     573,     0,  1204,  1201,     0,  1608,   999,   998,     0,     0,
     321,   316,   324,   318,   320,   319,   325,   326,   327,   328,
     322,   317,   323,   315,   314,     0,     0,  2558,     0,  1676,
       0,  1636,  1638,  1109,  1115,  1117,     0,  1110,     0,  1870,
    1457,     0,     0,  1651,  1654,     0,     0,     0,  1675,  1674,
       0,  1671,  1673,     0,   282,  2475,     0,  1147,  1433,  1449,
       0,     0,  1442,  1450,     0,     0,     0,     0,  1475,  1476,
       0,     0,  1479,  1482,  1483,  1467,  1545,  1544,  1529,  1139,
       0,  1730,   149,  1726,     0,  1430,     0,     0,     0,     0,
    1406,     0,     0,     0,     0,     0,  1401,  1403,  1399,  1390,
       0,     0,     0,     0,     0,  1264,     0,  1357,     0,     0,
       0,     0,     0,     0,  1295,  1293,  1294,   800,  1345,  1344,
       0,   509,     0,   507,     0,     0,     0,   527,   505,   513,
       0,   520,     0,  1043,     0,     0,     0,     0,  1875,     0,
       0,  1882,  1884,  1688,  1570,  1551,   428,     0,   965,     0,
       0,     0,     0,     0,     0,   987,     0,  1013,  1492,   990,
       0,     0,  1015,   978,  1083,  1548,   989,     0,   949,   594,
     623,   626,   787,   786,   790,     0,   789,   654,   798,     0,
     874,   674,   699,     0,   676,   727,   728,   729,   663,   724,
     726,   805,   974,   752,   755,   757,   756,   753,   751,     0,
       0,     0,     0,     0,   762,   744,   763,  1913,     0,     0,
     758,   759,   760,   754,   750,     0,   740,     0,     0,   748,
     743,   656,   660,   661,   647,     0,   648,   649,   194,   182,
       0,     0,   924,   926,     0,     0,   927,     0,  1113,  1489,
     138,     0,    99,     0,   108,     0,     0,   113,     0,     0,
     104,     0,   836,     0,     0,   868,     0,   842,   417,   483,
     489,   435,     0,     0,  2644,     0,   777,  2642,   246,   244,
     245,     0,   239,   241,     0,     0,   847,   154,   151,  1200,
       0,  1001,  1000,  1813,  1811,  2553,  2561,     0,  2478,     0,
    1637,     0,  1111,  1118,     0,  1681,  1683,  1652,  1655,  1656,
    1943,  1669,     0,  1663,  2474,  1464,  1444,  1443,  1436,     0,
    1438,     0,  1471,  1471,  1480,  1546,     0,  1542,  2371,  1732,
    1303,   732,   730,   733,   731,   719,     0,  1306,  1307,  1331,
       0,  1329,     0,  1283,  1358,     0,     0,  1337,  1313,  1316,
    1314,  1319,  1320,     0,     0,   522,     0,   512,   530,   526,
       0,   504,   909,  1879,  1880,     0,  1877,     0,     0,  1883,
       0,  1686,  1570,     0,   964,   636,     0,     0,   847,     0,
     985,   977,   956,  1014,   946,     0,   797,   795,   791,     0,
     791,   725,     0,   809,  1915,  1914,   745,   747,   752,   643,
       0,   180,   185,   196,   197,   889,  2631,  2629,   143,   101,
     110,   111,   115,     0,     0,     0,  1667,     0,   997,   837,
     838,   840,   855,   866,     0,     0,   997,   843,   844,   846,
    2641,   191,     0,   235,   237,  2650,   243,     0,     0,     0,
       0,   997,   848,   849,   851,   852,  1202,  2558,     0,     0,
       0,     0,     0,  2559,  2563,  2465,     0,     0,  1672,     0,
       0,     0,     0,     0,  1543,     0,  1402,     0,  1360,  1362,
     801,     0,     0,     0,     0,   550,   528,  1878,  1886,  1885,
    1571,  1678,   836,     0,   847,   630,   842,   953,   957,     0,
     679,   875,   680,     0,   808,     0,   813,     0,   187,   928,
     348,     0,  2630,     0,     0,   854,     0,     0,   167,   839,
    1556,   165,   168,   845,   183,   192,     0,   216,   240,   777,
       0,   860,   859,   166,   850,  2480,  2564,  2567,  2565,  2566,
    2568,  2562,     0,  1455,  1437,  1439,     0,  1472,     0,  1484,
       0,   717,  1281,  1346,     0,     0,     0,     0,  1667,     0,
       0,  1667,  1667,  1667,  1667,   545,   551,   553,     0,   631,
       0,   633,   632,   967,   806,     0,   810,   811,   812,     0,
     804,     0,     0,   189,   374,     0,   360,   346,     0,     0,
       0,   350,   198,   201,   199,  1679,   200,   206,     0,   207,
     208,   209,   210,   211,   202,   372,   373,   205,   203,   204,
       0,  1967,     0,  1968,     0,     0,     0,   105,     0,   853,
     841,   869,   195,   777,  2651,   242,  2637,  1677,  1859,  1474,
    1473,     0,     0,   523,     0,   539,   532,   535,     0,     0,
    1667,  1667,     0,     0,     0,     0,     0,   529,   552,  1667,
     634,   807,     0,     0,   644,   188,     0,   181,     0,     0,
     359,   362,     0,     0,   365,   355,   354,   356,     0,   349,
     348,   348,   402,   353,   399,   398,   391,     0,  2632,     0,
       0,     0,  2645,   226,   225,   217,     0,   348,  2635,  2636,
       0,  2639,   770,  1478,  1477,     0,   517,   523,   539,     0,
     537,     0,   533,   531,   534,   561,     0,     0,   557,   558,
     556,   554,     0,     0,   547,     0,   819,     0,   818,     0,
     815,   814,   646,   645,   738,   190,   375,   386,   389,   381,
     361,     0,     0,     0,   351,   348,     0,   335,   333,   334,
     340,   341,   342,   343,   344,   345,   336,   339,   337,   338,
     348,     0,   251,     0,     0,  2633,  2634,   106,   197,   216,
     227,  2652,  2638,   348,  1860,   524,   518,   536,     0,   543,
       0,   541,   544,   559,   560,   550,   546,     0,   555,   821,
     822,   820,     0,     0,   641,     0,     0,   348,   382,     0,
     357,     0,   366,     0,     0,   249,   405,   403,   247,   393,
     393,   179,  2646,  2640,  1887,   538,   540,     0,   549,   548,
       0,     0,   383,   389,   379,   387,   348,     0,     0,   347,
       0,   401,   250,     0,     0,     0,   348,     0,   392,   394,
     396,   348,     0,  1873,   542,   817,   816,     0,   380,     0,
       0,   378,   358,   363,   348,   406,   348,   260,   259,     0,
       0,   329,   400,     0,   252,  2647,     0,  1881,   384,     0,
     348,     0,   348,     0,   348,     0,     0,   777,     0,     0,
     248,     0,  1889,     0,   376,   348,   364,   369,     0,     0,
     255,   330,   331,     0,   257,  1888,     0,  1893,   348,   348,
     365,   368,   407,   404,     0,     0,   253,   254,   265,   264,
       0,     0,     0,  1900,   348,   348,   370,   273,   271,   348,
     261,   269,   263,     0,   270,   332,   258,  1891,  1892,  1890,
    1895,     0,     0,  1897,  1898,     0,  1861,     0,   256,   272,
    1899,  1894,     0,  1901,  1903,     0,   262,  1896,     0,     0,
    1902,  1904
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    60,    61,   863,  1890,    62,    63,    64,    65,    66,
    1569,    67,   974,  1512,  2156,  2157,    68,   623,    69,  1400,
    1401,  2089,  2090,  3246,  3648,  3649,  3255,  3662,  3249,  3652,
    3653,  3252,  3656,  3657,  2079,  2080,  3644,  3645,  2081,  1714,
      70,    71,  2097,   563,    72,  2558,  2559,  1439,  3282,  3635,
    4178,  3639,  4253,  4327,  4194,  2658,  3926,  4179,  4180,  4262,
    2106,  1963,  4294,  2537,  4355,  2538,    73,   923,  3679,  3680,
    3681,  3961,  3962,  3963,  3964,  4496,  4405,  4468,  4497,  4564,
    4570,  4519,  4579,  4580,  4581,  4568,  1041,  4582,    74,   654,
     655,  1043,  1597,  2171,  1598,    75,    76,   584,  1533,  1534,
    1535,  1536,  2790,  2172,  2785,  2786,  3713,  4520,  4566,  4406,
    4407,  4334,  4408,  4265,  4409,  4338,  4410,  4268,  4411,  4412,
    4413,  4414,  4488,  4415,  4333,  4512,  4402,  4403,  4490,  4547,
    4561,  4416,  4275,  4328,  4455,  4276,  4329,  4483,  4398,  4484,
    4507,  4543,  4399,  4456,  4510,  4459,  4417,  4423,  4498,  4418,
    4424,  4419,  4280,  4345,  4422,  4343,  4421,  4494,  4493,  4533,
    2733,  3293,   908,   909,   938,  2724,   910,  1425,  1371,  1966,
    2571,  2572,  3057,  3058,  3268,  3269,  3270,  2563,  2564,  2565,
    2711,  2712,  2713,  2545,  2546,  2547,  1970,  2542,  2543,   911,
    1372,  1382,  2566,  2567,  2568,  3274,  2715,  2716,  2717,  2718,
    1499,  3278,  1500,  3515,  2746,  2747,  2748,  2749,  2750,  1887,
    1888,  2997,  2450,  2994,  3820,  3473,  4366,  3480,  3816,  3817,
    4155,  4373,  4306,  4369,  4307,  4371,  4440,  4441,  4317,  4383,
    4384,  4235,  4236,  4237,  2704,  1958,  1959,   933,  2025,  2751,
    2148,  2026,  3120,  2027,  2028,  3134,  3108,  3288,  3151,  3152,
    3153,  3601,  3154,  3602,  2580,  2581,  3203,  3908,  4394,  3204,
    3205,  3206,  3207,  3208,  3209,  3210,  3581,  3211,  3412,  3413,
    3410,  1182,  3878,  3879,  3880,  3406,  3407,  3629,  3615,  3616,
    3617,  3887,  3903,   826,  3895,  3575,  1059,  1060,  2501,  1081,
    1082,  2255,  1616,  3618,  2256,  1962,  3576,  3577,  3578,  3623,
    3467,  4033,  3619,  3603,  4073,  4173,  4176,  4250,  4390,  2582,
    3071,  2052,  3064,  1124,   564,  2584,  4098,  4099,  4100,  4106,
    4107,  4108,  4121,  4122,  4123,  4124,  1456,  4125,  4102,  2738,
    3663,  3664,  1457,  2981,  3869,    77,  1383,  1367,  1374,  1369,
    1389,   917,  2043,    78,  2473,  2474,  2475,  1907,  2469,  2470,
     868,  2659,  3215,  4085,   899,  2029,  2030,  2031,  3854,  4167,
    2032,  2651,  3084,  2033,  2034,  2035,  2036,  2037,  2038,  2039,
    3695,  3696,  3697,  2585,  1012,  2153,  3853,  2633,    79,    80,
      81,   876,  1916,    82,  1138,  1139,  1140,  1320,  1321,  1918,
    2499,  3014,  1133,  1134,  1135,   877,  1318,    83,  1405,    84,
    2214,  2215,  2216,    85,    86,    87,  1412,  1413,  1414,    88,
     152,    89,  1029,  1027,  1574,  1575,    90,   921,  1391,  1392,
    1393,  1394,  2664,    91,  2198,  2811,  2812,  2813,  2814,  2053,
    2668,  2054,  2055,  3727,    92,    93,  2753,    95,   827,    97,
      98,  1608,  1609,  2235,  2236,   672,   673,   674,  1346,  1347,
    1348,  1937,  2512,  2513,  2514,   953,   954,  1469,  1179,  1396,
     956,   957,   958,  1470,  1471,  3620,   829,  1482,  2131,   830,
     831,   832,   833,   834,   835,  3439,  3440,  3797,  1879,  1880,
    1881,   836,   837,   838,   839,  1268,  1789,  3432,  2942,  3786,
    1734,  2930,  1397,  1398,  1204,  1205,  1170,  2340,  1740,  2237,
    3364,  2238,  2869,  2870,  2871,  3375,  3371,  2218,  2219,  2239,
    2240,  2241,  2242,  2243,  2244,  4142,  3761,  3762,  3763,  3764,
    3765,  3219,  3220,  3221,  3339,  3085,  1779,  1780,  1787,  1552,
    1553,  1735,  2248,  2249,  3384,   860,   708,   709,  1149,  1718,
    2765,  2876,  3766,  4007,  2042,  3116,  3117,   882,   883,  1925,
    2505,  1333,  1334,  1338,  1339,  4051,  3121,  2844,  2483,  3516,
    2845,  2846,  1325,  1326,   879,  1327,   100,   566,   101,  2774,
    3312,  2166,  1715,  1944,   915,   565,  1501,  1502,  1503,   102,
     103,   628,   648,  1032,  2833,  2834,  3345,  2835,  2755,  2837,
    3351,  2586,  2587,  3352,  3740,  3741,  3742,  3721,   104,   105,
    3341,  3342,   649,   106,  2524,  1356,  1357,   107,  1142,   702,
    1690,  1691,  1692,  2308,   108,   694,  1125,  3390,  3397,  2294,
    1024,  1504,  1672,  1128,  1673,  2279,  2891,  2897,  1656,   109,
    1360,  1956,   110,   895,  1361,   111,   975,  1527,  2783,  3317,
    3698,  1528,  1529,  2167,   112,   651,  1038,  1034,  1039,  1582,
    1580,  2223,  2221,   113,   641,  1025,  2206,   114,   633,   115,
     116,  1018,  4362,  4474,   637,  2200,  1563,  3728,  2756,  3017,
    3495,  3496,  3498,  3831,  3832,  4503,  4557,  4589,  4573,  4592,
    4593,  4596,  4603,  4604,   840,  1153,   841,  3896,   842,   843,
     844,  3346,   959,  1926,   845,  3343,   846,  1458,  2245,  1945,
     621,   539,  3658,  3659,   869,  1154,  1920,   848,   612,  4282,
     871,  1074,  1506,  1075,   541,   542,   543,   544,   616,   117,
     690,   118,  1630,  1087,  1091,  1643,  1644,  1645,  1129,  1857,
    1637,  1088,  1646,   693,  1067,  1068,  1628,  1069,  1626,  1070,
    2263,  1621,  1652,   119,  1019,   549,  1565,  1566,  2820,   120,
     705,   121,   122,   904,   123,  1554,  2193,  2194,  2807,  3327,
    2808,   124,  1600,   125,  1538,  1547,   978,   617,   618,  2188,
    2464,  1903,  1904,  2186,  1507,  1076,   873,   874,   989,  1541,
    1309,  3978,  3322,  4133,  4134,   126,   153,   552,   931,  1419,
    1605,   127,   128,   129,   130,  1332,   849,  2246,   850,   675,
     943,  1448,  1440,   146,   147,   148,   946,   947,   149,  1387,
    1388,  3640,  4087,  4182,  4360,  4361,  1442,  4433,  1443,  1444,
    3283,  4112,  4429,  4501,  1445,  2730,  3684,  4197,  4357,   131,
    1159,  1155,   718,  1729,  1723,  1725,   132,   133,  1015,   134
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3925
static const int yypact[] =
{
    4608,  2517,   112, -3925,  -175,   206, 60774,    48,  -108,  -108,
    -188,  2971, -3925, -3925, -3925, -3925,  3094, -3925, 60774,   112,
     166, 42126, 30106, -3925,   529,  1417,   585,   957,   107,  -108,
     112, 60774, -3925,   634,  1516,   112,   234,   479, 53448, 42792,
    -188, 60774,  2584, 32778, -3925, -3925, 53448,   857,   884,   592,
     748, -3925, 60774, 54114,  2028, 19334,  1712,   841,   597,  -159,
    1354, -3925,  1261, -3925, -3925,  1098, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, 48120, -3925,
   -3925,   926, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925,  1311,   -58,    18, -3925, -3925,  -146,
   -3925, -3925, -3925, -3925, -3925,   127, -3925, -3925, -3925, -3925,
   30774, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925,  1432, 60774,  1488, 60774,  1246,
    1470, 60774, 52116, 60774, 30106,  1538,  1674, -3925, -3925,  1653,
   -3925, -3925,  -108,  -188, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,  1101, -3925,
    1133, -3925, -3925, -3925, -3925,  1283,  1697, -3925, -3925, 30106,
   30106, -3925,  1964,  1666,  1761,  1863, 52116,  1866, 60774, -3925,
   -3925,  1666,  1666,   252,  1883,  1335, 11078,  1538,  1538,  1538,
   60774,  1913,  1538,  1538, 60774,  1538,  1538,  1538,  1538,  -108,
   -3925, -3925, -3925, -3925,  2000,  1723,  1665,  2617, -3925,  1498,
   -3925, -3925, -3925,  1775, -3925,  1480, -3925,  1593, -3925,  1807,
    1480, -3925,   181,  1480,    89, -3925, -3925, -3925,  1480, -3925,
   -3925, -3925, -3925,  1193, -3925, -3925, -3925,   759, -3925, 60774,
    1788,   200,   -89, 52116,  2021, -3925, -3925, -3925,  1948, 60774,
    -175, -3925, -3925, 14518, -3925,  1943, -3925, -3925, -3925,  -108,
    2024,   242, 60774, 48786, -3925,  -108, -3925, -3925,  1959, -3925,
      68,    24,  1614, -3925, -3925,  1737, -3925,  1723,  1875,   725,
     162, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, 11078,  2584, -3925, -3925,   150,  1766,  -220,   201,
     277, 45456,  1019,   342,   943, -3925, 62106, 34779, 46122,  1586,
   -3925, 54780,  1624,   828, 71770,  1737, -3925,   -21,   718, -3925,
     -21, -3925, -3925, 60774,  -175,  -108, -3925, 60774,  1627, -3925,
    1620, -3925,   203,   203,   203,  2235,   203, -3925,   203,  1678,
    1681,  1684, 19334, -3925,  1700,  1714,  1725, 14518,  1735,  1736,
    1739,  1742,  1748,  1758,  1764,  1768,  1768,  1786,  1790,  1798,
    1799,  -168,  1814, -3925,  1815,   597,  1830, -3925, -3925,  1839,
    1847,  1848,  1855, -3925,  1862,  1873,  1891, 15206,  1894,  1901,
   -3925, 26756,  1902,  1905,  1908,  1912,  1935,  1954,  1960,  1963,
    1968, -3925, -3925,  1786, -3925, -3925, -3925,  1969,  1975,  1979,
    1989,  1990,  2006,  2007,  2013,  2018,  2033,  2039,  2043,  2058,
    2067,  2079,  2082,  2090,  1786, -3925,  1194,  2093,  2097,  1239,
    2115, -3925,  2118, -3925,   216,  2119,  1768,  1786,  1786,  2122,
    2123,  2131,  2138,  2141,  2144,  2155,  2159,  2167, 19334, 19334,
   19334,  9702, -3925, 60774, 35446, 60774, -3925, -3925,  3468, 19334,
    1072, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
    1776, -3925, -3925, -3925, -3925,    -3, -3925,  2170,  1744, -3925,
   -3925,  2178,  2392,  2333,  -158,  2399, -3925,  1760,    14,  1076,
    -146, -3925, -3925,  1890, 60774,  1768, -3925,  2179,  2394, -3925,
   -3925,  1951,   270,   730, -3925,  2454, -3925,  2073, 33445, -3925,
    2631,  1604,  2459, -3925, 46788,  1604,  2459,   199,   -58,   970,
     963,  2498,  1840,  2649,  2191, -3925, 49452,  2180,   -24, -3925,
   -3925, 48786, -3925, 52116, -3925, 60774, -3925,  2487, -3925, -3925,
   -3925,  1690, -3925, -3925,  2704, -3925, 60774,  2348, -3925, 30106,
   -3925, 30106, 14518, -3925, 60774, -3925, -3925,   128, -3925,  1189,
     265,    34,  1611, 60774, 60774, 60774,  2696, 60774, -3925,  2887,
   48786, 64104,  2441, -3925,   196,   981,  1653,  2886, -3925, 31442,
    1666, 14518, -3925,  2218, -3925, 44790,  2833, -3925,  3480, -3925,
    2213, 60774, 60774, 60774,  2546, 60774, 60774, 52116,  1085, 60774,
   48786, 30106, 64104,  1538,  2312,  4855, 36780, -3925, -3925, -3925,
   -3925, -3925,  2369, -3925, -3925, -3925, -3925, -3925, 60774, -3925,
   -3925, 48786, -3925, -3925, -3925, -3925, -3925, -3925, -3925, 52116,
   -3925,   918, 48786, 43458, -3925,   147, -3925, -3925, 60774, -3925,
    -175, -3925,  1959,  2422, -3925,  2261,   635,  2902,   272, 30106,
   30106,  -181, -3925, -3925,  2666, -3925, -3925,  2276,  2380, 30106,
   30106, -3925, 30106, 60774, -3925, -3925,  2914, -3925,  2279, -3925,
   -3925,  1776,  3229, -3925,  2283, 48786, 48786,   918,  2483,    34,
      38, -3925, -3925, 62772, 60774, -3925, -3925, -3925, -3925, -3925,
    2901, 14518, -3925, 48786,   -46,  2700,   -65, -3925,  2289,  2295,
   -3925,  2325, -3925, -3925,  2294, -3925,  2302,  1021,   828, -3925,
   -3925, -3925, -3925, -3925, 60774,  2298,   943, -3925,  1624,   828,
   34112, -3925, 10390,  2826, -3925,    27,  2308,  1851,    27, 50118,
    2459,   247, -3925,   368, -3925,  2801, -3925, -3925, -3925, -3925,
    2453,  2438, -3925, -3925,   404,  2411, -3925,  2832, -3925,   121,
   -3925,  2461,  2459,    27,   247, -3925,  2718,  2856,   760,  -143,
   -3925, -3925, -3925, -3925,  2324, -3925,   753,  2926, -3925,  2329,
   -3925,  2824, 30106, -3925,  2261, -3925,  1627, 60774, 60774,  3001,
   -3925, -3925, -3925,  2339, -3925,  2653,  2477, -3925,  2389, -3925,
   -3925,    98, 14518, 14518,  1679,  2966,  3025,  3025,  3025,   635,
    2405, 14518, 14518, 14518, 14518, 14518, 14518,  1691,  2356, -3925,
   -3925,   593, -3925,  2358, 14518, 14518, -3925, 14518, 14518, 32110,
   -3925,  4614, 14518, 14518,  1054,  2903, 14518, 14518, 14518,  9702,
    2825, 14518, 14518, 32110,  3042,  2368, -3925,  2364,  1757, 14518,
   14518,  1770, 14518, 14518, 14518, 14518, 14518, -3925, 14518, 14518,
   14518, 19334, 14518, 14518, 14518, 14518, 14518, 14518,  2375, 14518,
    3025,  3025, 14518, 14518,  1835, -3925, -3925, 14518,  1552,  1552,
   -3925, 14518,  9014, 14518, -3925, -3925, -3925,  2376, -3925, -3925,
   -3925, 32110,  3025,  3025, 14518, 14518, 14518,  3025,  3025, 14518,
    2966,  2966,  2966,  2384,  1076,   183, 14518,   911, -3925,  2562,
    2381, 19334, -3925, 19334, 19334, 19334, 19334, 19334, 20022, 20710,
   19334, 19334, 19334, 19334,  2966, 52116, 19334, -3925,  1776,  1776,
   14518, 60774, 14518,   103, -3925, -3925, -3925, -3925, -3925,  2918,
   -3925, -3925,  2393,  3034, 52116,  2430,   124,  1061, 48786,  2448,
    2928,  2929,  2931,  2932,  2934, -3925,  2935, -3925,  2410,  2941,
   -3925,  2698,  2535,  2535, 52116,  2424, -3925, -3925, -3925, 14518,
   -3925, -3925,  -146,   199, -3925, -3925, -3925, -3925, -3925,   -96,
   -3925, -3925,  -146,   199,  1007,  2859, -3925,   199, -3925,  2459,
   -3925,  2459,   199, -3925, -3925, -3925, 55446,   963,  1948, 52116,
     978, -3925, -3925, -3925, -3925, -3925, -3925,  2994, -3925, -3925,
    2807, -3925,  3118, -3925, -3925,  2443,  3020,  3020,  3020,  3128,
   -3925, -3925, -3925,  6635, -3925, -3925,  2642,  2507, -3925,  2348,
    2451,  2889,  2455, -3925, -3925,  1223,   635,  2458,  2463, -3925,
    5327,  2804, -3925, -3925, 30106, -3925, -3925, -3925, -3925,  2529,
   -3925, -3925, -3925, -3925,  1852, -3925,  3087,  2697, -3925, -3925,
   -3925, -3925,  2976, -3925,  2774, -3925,  3118,  3044,  2780,  3020,
    2937,   730,  2302, -3925,  2959,  1666, 60774, 60774, 60774, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, 60774, -3925, -3925, -3925,
   -3925, -3925, -3925,  2348, -3925, 60774,  2788,  2552, -3925,   524,
   30106, -3925, 14518, -3925, -3925, 56112, -3925, -3925, 14518, -3925,
   14518, 14518, -3925, -3925, -3925, -3925, -3925, -3925,  1131, -3925,
   -3925, -3925, 15894, 19334,  2485, 19334, 19334,  2899,  1344, 39446,
   -3925, -3925,  2488, 30106,  1085, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925,   230, -3925,  3017, -3925, -3925,  2491,   160,  2302,
   30106,  2493, -3925,  2904, -3925,  2906,  2908,  2912, -3925, -3925,
   -3925, -3925,  3140,  2913, -3925,  2920, -3925, -3925,  2515, -3925,
   30106, 21398, 52116, -3925,  2519, -3925,  3048, -3925,  2831, -3925,
   -3925,  1405,  2627, -3925, -3925, -3925, -3925, 27426,  1171, -3925,
   -3925, -3925, 60774, -3925, 61440, -3925,  2261, 30106,  -175,  -175,
   -3925, -3925, -3925,  2945,   287,  2530, -3925,  2451, 52116, -3925,
   -3925,   211, 48786, 48786,  2531, -3925,  2640,   757,  2829, -3925,
    2655, -3925,  3230,    24, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925,  2554,  3084,  3037,
    2871,  3056,  2491, 27426, -3925, 60774, -3925, 24746,  2621, -3925,
    3063,  2686,  2687,   590, -3925, 50784, -3925,   635,   828,  2590,
   -3925, -3925,  1533, -3925, -3925,  3019, -3925,  2842, -3925, 64104,
   -3925, 52116, 64104,  2588,  2589,  2591,  2601, 56778, 14518, -3925,
   -3925, -3925, 10390,  2596, -3925, 56778, -3925, -3925, 19334,  1815,
   -3925,   635, -3925,  3027,  1776, 14518, -3925,  2614,  1666, 60774,
   60774, 60774, 30106, 60774, 48786, 30106, -3925,   859,   859, -3925,
   -3925, -3925,    27, 60774, 60774,    27, 48786, -3925,   247, 60774,
      27, -3925,  3045,  2737, -3925, -3925, -3925,  3119, -3925, -3925,
    3107,  2616, -3925,  3027, -3925,  2824,   247, -3925, -3925, 30106,
   -3925, -3925,   247, -3925,   247,   247,    27,    27,   -21, -3925,
   -3925,  2789,   718,  3247, -3925, -3925, -3925, -3925,  1430, -3925,
     597,   203,  2907, -3925,  3114, -3925, -3925, -3925, -3925, -3925,
     260,   326, -3925,  3025,  2625, 14518,  2633,  2634,  2641, 14518,
      55,  1564,   922,  1118,  1514,  1063,   161, 14518,  2644, 11766,
   -3925,  2646, -3925, -3925,   300,   390,  1185,  1208,  2648, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,  3136,
   -3925,   490,  2650, -3925, -3925, -3925, -3925,  2651, -3925, 14518,
    1220,   502,   504,   228,  2660,   676,  1515,  1557,  2656, 32110,
   60774,  3025,  2657,  1251,  1296,  3025,  2658,   693,  1341,  1609,
    1616,  1658,  1387,   787,  1667,  3790,  1428,   809,  1023,  1471,
    1028,  1033, -3925,  1473,  2659,  2662,  1037,   195,  3025,  2665,
     253,  2654,  2667,  1525, 12454, 13142, 13830,   278,  1046, -3925,
    2674, -3925,  2364,  2675,  2676,   319,   202,  1540,  2678,  2682,
    1671, -3925, 14518,   152,  2670,  2677,  2680, 52116, 14518, 60774,
    2688,  2688,  1872,  1872,  3379,  2557, 15206,  1278, 15206,  1278,
    2688,  2688,  2688, -3925, -3925,  2966, -3925, -3925, 44790,  2690,
    2684, -3925,  1331,  1542, -3925,   142,   157,  2974,  1004, -3925,
   -3925, -3925,  2806, -3925, 63438,   825, 52116,  2815,  2818, -3925,
   -3925,  2819, -3925, -3925,   236, -3925,  2462,   257,  -175,  1613,
    -175,  2730,  -175,  -175,  1702,  -175,  2824,  3232,  3268, -3925,
   -3925,  2197, -3925, 36113,   215,  2709, -3925, -3925, -3925, -3925,
   46788, 46788, -3925, -3925, -3925, -3925, -3925,  1692,  2893, -3925,
     199,   199, -3925, 30106,   223, -3925,  2705, -3925, 25416, -3925,
    3312, -3925, -3925, -3925, -3925, -3925, -3925, -3925,    60, -3925,
   -3925, -3925,  1994,  2263,  3137,   -67,  1270,  2263,  1258,  -175,
    1290, -3925,  1290, -3925,  2585,   828,  1431,  3003,   828,   828,
    3328,   828,  3005,  3007,   828,   828,   828,   828,  2828,  3273,
     828,  3151,   814,  2983,  3152,   828,  3013, -3925,  1211,  3279,
     828,   828,   828,   828,   828,  3328,  3016,  3370,   828,   828,
    3024,   188,  3026,  3030,   828,   828,   828,   828,  1067,   828,
     828,  3032,   828,  2817,  2820,  4432, -3925, -3925, -3925, -3925,
    1466, -3925, -3925, -3925, -3925,  2734,  2742, 28096, -3925, -3925,
   -3925, -3925, -3925,  3060,   249, 30106, -3925, 57444, 30106, -3925,
   -3925, -3925,  2757,  1728, -3925, -3925, -3925, 14518,  3282,  3285,
    3286,  3287,  3288,  3289,  3291,  3292,  3293,  3295,  3299,  3300,
    3301,  3304,  3305,  3306,  3311,  3316,  3323,  3326,  3327,     2,
   -3925, -3925,  3332,  3333,  3334,  3336,  3337,  3338,  3339,    58,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925,    83, 30106,  2230,
    2814, 30106,  2858,  2448, 60774, 60774,  2821,   559, -3925,   434,
   -3925, -3925, 30106,   194,   194, 60774,  3227, -3925, -3925, -3925,
    2030,   175, -3925, -3925, -3925, -3925, -3925,  1463, -3925,  2822,
   -3925,   597,  2031,  9702, -3925,  1146,  4252, 19334, 19334,  2823,
   19334, 19334, -3925,  1386, 60774, -3925, -3925, -3925,   -83,   828,
   48786, -3925, -3925, -3925,   160, 52116,  2830, -3925, -3925, -3925,
   -3925, -3925, -3925,  2824, -3925,  4299,  2451, -3925,  2938,  2939,
    2943, -3925, 37447, -3925, -3925, -3925, -3925, 37447,  1446,   918,
   -3925, 60774, 48786,  2811, -3925,  2827,  2942,  2846, -3925, -3925,
     816,   839,  3012,  2621, -3925,  2829, -3925, -3925, 30106, -3925,
    3281,   684, 30106, -3925, 14518,  -175, -3925,  2944, -3925, 30106,
   30106, -3925, -3925, -3925, -3925,   799, -3925,  2835,  1813, -3925,
    2809, -3925, -3925,  2824, -3925,  3229, 21398,  3141,   918, 48786,
    3324, -3925, -3925, 23406, 60774, -3925,  2836,  2645, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925,  2829,  2795, 14518,  3317, -3925,
    2621, 64104, 64104, 64104, -3925, -3925, -3925, -3925,  1077,  2960,
     154,  3100, -3925, -3925, -3925, -3925,  2302, -3925, -3925, -3925,
   -3925, -3925, -3925,   828,   635, -3925, 34112, -3925,  -175,  3342,
   -3925,   635,  2852, 60774, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
    2927,   736, -3925, -3925, -3925, -3925, -3925,  3113,  2459,  2411,
    3342, -3925,    27,   247, 30106,    27,    27, -3925, -3925, -3925,
   -3925, -3925,  -175, -3925, 60774, -3925,  2857, -3925,  3209, 16582,
   -3925,  2862, -3925,   635, -3925, -3925, -3925,  1449, 14518, 14518,
    3393,  2652, -3925, 51450, -3925, -3925, -3925, 51450,  2652,  1686,
   -3925,  2864, -3925,  3307,  3309, -3925, -3925, -3925, 14518, 14518,
   -3925, 14518,   665, -3925, 14518, 14518, 14518, 14518, 14518, -3925,
   -3925, 19334, -3925,  2867,  2872, -3925, -3925, -3925,  2876, -3925,
   14518, -3925, -3925, -3925, -3925, -3925, 14518, -3925, 14518, -3925,
   14518, 14518, -3925, 14518, 14518, -3925, -3925, -3925, 17270, 14518,
   14518,  2877, -3925, -3925, 14518, 14518, 14518, -3925, 14518,  1889,
   14518,  1942, 14518,  2040, 14518, -3925, 14518, -3925, -3925, -3925,
   -3925, 14518,   405, -3925,  2730, -3925,  3025, -3925, -3925,  1689,
   -3925, -3925, -3925, -3925,  2870,   635, -3925,  2825,  2825, -3925,
   -3925, 14518, 14518, 60774,  3409,  2883, 19334,  2885, 19334,  2809,
    3015,  2888,  3560, -3925, -3925, -3925,  2302,  3002, -3925,   429,
   -3925, -3925, -3925, -3925,   534,  2730,  2730,  2730,  2730,  2462,
   -3925,   666,  3402, -3925,   257, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925,  -175,  3417,  3172,
   47454,  3506, -3925, -3925, -3925, -3925, 14518, -3925, -3925, 60774,
    2915, -3925,  1462, -3925, -3925,  3240, -3925, -3925,  -167,  2829,
    -201, 25416, 60774, 40116, -3925,   549,  2809, -3925,   828,   828,
    -175,  3053,  3057,  3059,  3062,  3064,  3104, -3925, -3925, -3925,
    -175,  -175, -3925, -3925,   828, -3925,   246, -3925, -3925, -3925,
   -3925,  -175,  -175,  -175,  -175,  2730,  -175,  -175,  1707, -3925,
   -3925,   828,   828, -3925,   268, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925,  1367, -3925, -3925, 31442,  1728,   112, -3925, -3925,
     135, -3925, 31442, -3925,  1728, -3925, -3925, 58110, 60774, 31442,
     112,  1613,  2730, 31442,  2730, 58776,   112,  -175,  -175,  -175,
    -175,  2197,   828,  2730, -3925, 58776, -3925,  3345, 60774,  3348,
   31442, 31442, -3925, 52116, 60774, 58776, -3925,   828,   165,  2730,
   59442,  1613,  1613, 31442,   112, 32110,  1939,  -175,   112, -3925,
   -3925, -3925, 31442, 30106,   112,   112,  2638,  1939,  1939,  2288,
   -3925, -3925, 60774,  2730, 58776,  2919, -3925, -3925, -3925,  3198,
   -3925, -3925,  6425,  6973, 22738,  7340,  2925,   548, -3925,  3154,
   -3925, -3925,  1620, -3925, -3925, -3925, -3925,  1728,  2936, 60108,
   -3925,   635,  2940,  2730,  -175,  2730,  2730,  -175,  -175,  2730,
    2730,  -175,  -175,  -175,  -175,  -175,  -175,  -175,  -175,  2730,
    2730,  -175,  1740,  5327, -3925,  2949,  2949,  2952,  2952,  2955,
    2955,  2956,  2804, -3925, -3925,    94,  2957,   828,   828,   828,
     828, -3925,   314, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, 52116,  2961,  3341,  2476,   257,  3147, -3925, -3925,   990,
    2963, -3925, -3925,   419,  2964, -3925, -3925, -3925, -3925, -3925,
    2950,  -158, -3925, 30106, -3925, 22068, -3925, -3925, -3925, -3925,
     259,   176, -3925, -3925,    18, -3925,   217, -3925, -3925, -3925,
   -3925, -3925, 19334,   331, 19334, -3925,  4252,  2054,  9702, -3925,
    1146,  4252, 40786, -3925, -3925, -3925, 52116, -3925, -3925, -3925,
    2493, -3925, -3925,    49,  3483,  2924, -3925, -3925, -3925, -3925,
   -3925, 27426, -3925,  1306,  2975, 41456, 48786,  3263, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,  2459,
    2604, -3925,  2969, -3925, -3925,  1223,  2535,  3014,  3374, -3925,
   -3925, -3925,   635, -3925, 48786, -3925, -3925, -3925, 60774, 32110,
   -3925, -3925, 24076, -3925, -3925, -3925, -3925,  2978, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,  3502, -3925,
    3471, 27426,  2491, 48786,  2979,  2985,  2986,  2988,  2989,  2990,
   25416, 25416,  3418,  3419, -3925,  3297,  1409,  3297, -3925, 28766,
   25416, 25416,  3395,  1620,   635,  3630,  3469,  3317,  2302,  2302,
    2302,  3004, -3925,  3010, -3925, -3925, -3925, 10390, -3925, -3925,
    1613, -3925,    88, -3925, 48786,  -175, 14518, -3925,  3318, -3925,
   -3925, -3925, -3925,  2621,   247, -3925, -3925, -3925, -3925,  2730,
   -3925, 15206,  1546, -3925, 14518,   635,  1753, -3925,  3006,  3006,
    3021, -3925,  3022, -3925,  3631, -3925,  3449,  3021,  3451,  3006,
    3018,  3023,  3028,  3029, -3925, -3925, 14518, 14518,  1558,   335,
    1560,  3649,  3205,  1051,  1090,   351, -3925,  1562,  4184, -3925,
   -3925,  1584,  1603,  1608,  1617,  1121,  1625,  1718, 15206,  1632,
     172,   414, -3925,  1646,  1141,  1152,  1698, 14518,  1706, 14518,
    1721, 14518,  1772,  1778,  1780,  3036,  3036,  3031,  3039, -3925,
   60774, -3925, -3925, -3925, -3925,  3043, -3925, -3925, 60774,  3347,
   60774,  3450, -3925,  3655,  3038, 19334,  3548,  3051, -3925,  -175,
    -175, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,  1176,
   -3925, -3925,  -175,  3551, -3925, -3925,  1348,  3437, -3925,  3040,
   -3925, -3925, -3925, 25416,  2621, 40116,  -210, -3925, -3925,  3047,
   32110, -3925, 50784, 47454, -3925, -3925, -3925,  3617, -3925,  3626,
     263, -3925, -3925,  2272,  1293, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925,  1258,  2272,  2272,  1099,   184, -3925, -3925,
   -3925, -3925, -3925, -3925, 31442,   708,  3052,  3482,  3484,  1728,
   -3925, 31442,  3069, 31442, -3925, -3925,  1618,   119, 58776, -3925,
   -3925, 31442, -3925, -3925,  1852,  3068, -3925,  2809, -3925, -3925,
   -3925, -3925, 47454,  -175, -3925,  3179, 31442,  3068, -3925, -3925,
     197, -3925,  3109,  3192,  -175, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925,  7340, 58776,  3073, -3925,  1140, -3925,
   -3925, -3925, -3925, 58776,  3177, -3925, 60774, 58776, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, 30106, -3925,  2767,  1998, -3925, -3925, -3925,  2734,
   -3925,  1771, -3925, -3925, -3925,  7340, -3925,  3006,  3006,  3006,
   -3925, -3925,   407,  3021, -3925, -3925,  3361,  3093, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925,   306,   505, -3925, -3925,
     306, -3925, -3925, -3925,   133,   929, -3925, -3925, -3925, -3925,
   -3925, -3925,  3095, -3925,  3006,  3021,  3021, -3925, -3925,   306,
    3006, -3925,  3006,   250,  3624, -3925,   132,  3006,  3006,  3006,
    3096,  3022,  1595,   348,  3194,  1630, -3925, 58776, -3925,  3098,
   -3925,  3102, -3925,  2730, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, 38114, -3925, -3925, 38780, -3925,
   -3925,  -190, -3925, -3925,  1600, -3925, -3925, 60774,  -175,  2809,
    2272,  2272,  1816,  3406, 60774,  3580,   828,   828, -3925,   330,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925,   990,  3415, 60774, -3925, -3925, -3925, -3925,  3280, -3925,
   -3925, -3925, -3925,  3420, 60774, 60774, -3925, -3925, 30106,  1784,
   -3925, -3925,  4566, -3925, -3925, -3925, 14518,  1072, 19334,   481,
   -3925, -3925,  1060, -3925, -3925, -3925,  3367, -3925,  3695, 37447,
    3216,  3592, -3925, -3925, -3925,   730, -3925,  3120, -3925, 32110,
    3426,  3426, 30106,  1728,  3574,   100, -3925, -3925, -3925,  3123,
    3068,  3124, -3925,   828,  1759,  1794, -3925, -3925, -3925,  3125,
   17958,  3132, -3925, 21398, 48786,  3614,  2491, 25416, -3925, -3925,
   -3925, -3925, -3925,  2645,  3133,  3134,  3135,  2645, -3925, -3925,
   -3925,  3563, -3925,  3297,  3297,  3568,  3570, -3925,  2599,  2773,
     904, -3925, 14518, 14518, -3925,  3469,  2960, -3925, -3925, -3925,
    2459, -3925, -3925,  2491, -3925,   635, -3925,  2459, -3925,    27,
   -3925,  2825, -3925,   635, 14518,  1035, -3925, -3925,   306,  3456,
   -3925,  1198, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925,  2825,  2825, -3925, -3925, 14518, -3925,
   14518,   203,  3153, 14518, 14518, -3925, 14518, -3925,  1001,  3155,
    3195, -3925, -3925, -3925, -3925, 14518, -3925, -3925,  2825, -3925,
   14518, -3925, -3925, 14518, -3925, 14518, 14518, -3925,  1787, -3925,
    1791, -3925,  1824, -3925, -3925, -3925,  2809,  3156,  3157,  2730,
   -3925, -3925, -3925,  1801, -3925, -3925,  1806, -3925,  3558,  3441,
   -3925,  3601,  2809, 60774, -3925, -3925, -3925,  2809, -3925, -3925,
    -175,  3800,  3801,  3700,  3806,  1348, -3925,   -98, -3925,  -210,
    3467,   689, -3925,  3180, -3925,  1178, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925,  1367, -3925,  3173,  2809,  3441, 14518,
   31442, -3925, -3925,  3175, 60774,  3178, -3925, -3925, -3925,  3737,
    3740, -3925,  7340, -3925, 60774, -3925,  2901, -3925, -3925, -3925,
   -3925,  3302, -3925, -3925,   343, -3925, 32110, -3925, -3925, 31442,
     -15,   799,  3182, -3925, 22738,   250, -3925, -3925, -3925,  3832,
     316, -3925,  3834, -3925,   306, 51450, -3925, -3925, -3925, -3925,
   -3925, -3925,   203, -3925,  -114, -3925,   306, -3925, -3925,  3245,
   -3925, -3925, -3925,   203,   306, -3925, -3925, -3925, -3925,  1136,
   30106,   343, -3925, -3925, -3925, 52116,  1915,  -175,  3009, -3925,
    3264, -3925,  3749,  1097,  3613, -3925,  3366, -3925,  3674,  3615,
    3507, -3925,  3857, -3925,   306,  3857,  1136,  3520, -3925,  1136,
    1136,  3478, -3925, 14518, 14518,  3517, 60774,  3519, -3925,  3821,
    3879,  3217, -3925, 60108,  1841, -3925, -3925, -3925,  1860, -3925,
   -3925, -3925,  1877, -3925,  3211, -3925,  1882, -3925, -3925, -3925,
   60774, -3925,  1886,  1917, -3925,   143, -3925, -3925, -3925, -3925,
   -3925,  3221,  1971, 60774,  2272,  2272,  2516,  3390,  3423,  3223,
    3222, -3925,  7340,  -175,   865, 30106,  1982, -3925,  3228,  4636,
   -3925,  1992, -3925, -3925, 14518, -3925,  3629,  3903,  3741,  3633,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, 48786,  3534,  3283, 17958,   -90,
    3774, -3925, -3925, -3925,  1728,  3574,  3654, -3925,  3678, -3925,
   -3925, 32110, 17958, -3925, -3925,  1759, 32110, 39446,  1815,   635,
    3241,  3248, -3925,  2978, -3925,  2491, 48786,  1809, -3925, -3925,
    3668,  3675, -3925, -3925, 14518,  3252, 14518,  3253, -3925, -3925,
    1728,  1728, -3925,   904, -3925, -3925,  1232, -3925,   635, -3925,
    3254, -3925,  2824, -3925,  1300,   635,  3255,  3256,  3257,  3258,
   -3925,  3259,  1996,  3261,  3266,  1826,  3262, -3925, -3925, -3925,
    1870,  1166,  2011,  3605,  3686, -3925,  3524, -3925,  1876,  1332,
    1895,  1981,  1987,  1991, -3925, -3925, -3925, -3925, -3925, -3925,
    3267, -3925, 60774, -3925,  1563, 60774,  2035, -3925, -3925, -3925,
    3272,  3274,  3839, -3925,   203,   203,  3914,   203, -3925,  3917,
    3923,   -98, -3925, -3925,  3699,  3467, -3925, 60774, -3925,  2052,
    2002,  3298, 60774,  2063, 60774, -3925,  3385,   343, -3925, -3925,
   30106, 60774, -3925, -3925,   112, -3925, -3925,  3303, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, 51450, -3925, -3925,  3857,  2075,
   -3925, -3925, -3925,  2088, -3925, -3925, -3925, -3925, -3925,  1136,
   -3925,  3320, -3925,   338, -3925, -3925, -3925, -3925, -3925,  2938,
    2939,  2943,  1740,  1740, -3925, -3925, -3925, -3925,  3608,  3357,
   -3925, -3925, -3925, -3925, -3925, 52116, -3925,  3965,  3962, -3925,
   -3925, -3925, -3925, -3925, -3925,  3308, -3925, -3925, -3925,   635,
    2825,  3907, -3925, -3925,  3481,  -175,  3846,  -158, -3925, -3925,
   -3925,  2730, -3925, 60774, -3925, 60774, 60774, -3925,  -175,  3314,
   -3925,  3321,   691, 60774,  3628, -3925,  1258,   324, -3925, -3925,
   -3925, -3925,  -175,   348, -3925, 60774,  2901, -3925, -3925, -3925,
   -3925,  3315,  3319, -3925, 60774,  3812,   497, -3925, -3925, -3925,
    2095, -3925, -3925, -3925, -3925,   730, -3925,  1503, -3925,  2108,
   -3925,  3744, -3925, -3925,  3445, -3925, -3925, -3925, -3925, -3925,
    3322, -3925, 17958, -3925,  2491, -3925, -3925, -3925,   635, 60774,
     635, 60774,  3818,  3818, -3925, -3925, 14518, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925,  3640, -3925, -3925, -3925,
   14518, -3925, 14518, -3925, -3925,  3673,  3843, -3925, -3925, -3925,
   -3925, -3925, -3925,  3335,  2730, -3925,  3350,  3560,  3397, -3925,
    3441, -3925, -3925, -3925, -3925,   203, -3925,   203,   203, -3925,
   46788, -3925,  3699,  2111, -3925, -3925, 60774,  2126,   497,  2129,
   -3925, -3925,  1357, -3925, -3925,  3441, -3925, -3925,   306,   203,
     306, -3925, 60774,  3709, -3925, -3925, -3925, -3925, -3925, -3925,
    3351, -3925, -3925, -3925, -3925, -3925,  3381, -3925, -3925, -3925,
   -3925, -3925, -3925, 60774, 60774,  -175,   828,  3637,  1060,   691,
   -3925, -3925, -3925, -3925,  3352,  2133,  1060,   324, -3925, -3925,
   -3925,  3517,  3564, -3925, -3925, -3925,  1284,  7340,  3889,   194,
     194,  1060,   497, -3925, -3925, -3925, -3925,  3283,  3658,  2730,
    2730,  2730,  2730,  1503, -3925, -3925,  3431, 30106, -3925,  3363,
    3364,  1202,  3362,  3386, -3925,  3365, -3925,  2008, -3925, -3925,
   -3925,  3387, 19334,  3389,   991,  3296, -3925, -3925, -3925, -3925,
   -3925, -3925,   691,  2146,   497, -3925,   324, -3925, -3925,  2150,
   -3925, -3925, -3925,  2165, -3925,    61,  3696, 14518,  3535, -3925,
   69924,  1483, -3925,  3391,  3392, -3925,  2730,  1712, -3925, -3925,
    1140, -3925, -3925, -3925,  1630, -3925,  7340, -3925, -3925,  2901,
    3593, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, 32110,  2829, -3925, -3925,  4028, -3925,  4032, 60108,
   60108, -3925, -3925, -3925,  3768, 60774,  3399,  3509,   828,  3950,
    3954,   828,   828,   828,   828,  3408,  3296, -3925,  3934, -3925,
    3652, -3925, -3925, -3925, -3925, 60774, -3925, -3925, -3925,   289,
   -3925,  2019, 14518,  3939,  3461, 60774,   812, -3925, 71216, 71216,
   60774, -3925, -3925, -3925, -3925,  5638, -3925, -3925,    -1, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
    4064, -3925,  3404, -3925,  4034,  3715,  4037, -3925, 60774, -3925,
   -3925, -3925,  3821,  2901,  2853, -3925,   104,  3124, -3925, -3925,
   -3925,  3428,  2192,  3549,  2193,  3421, -3925, -3925,     0,  -175,
     828,   828,  1932,  1932,  2809, 60774,  3547, -3925, -3925,   828,
   -3925, -3925,  1093,  1093,  1273,   635, 14518, -3925, 14518,  3473,
   -3925, -3925,  3918, 60774, -3925, -3925, -3925, -3925, 14518, -3925,
   69924, 69924, -3925, -3925, -3925, -3925,  4082,  3731, -3925,  3732,
    3434,  3976, -3925, -3925, -3925, -3925,  3988, 69924, -3925, -3925,
   52116, -3925,  2197, -3925, -3925,  2809, -3925,  3549, -3925,  2227,
   -3925, 18646, -3925, -3925, -3925, -3925,  -175,  -175, -3925, -3925,
   -3925, -3925, 52116,  2233, -3925, 52116, -3925,  4126, -3925,  1128,
    3755,  3758, -3925, -3925,  3366,   635,   635, -3925,   163, -3925,
   -3925,  3891,  3985, 14518,   635, 66694,  3459, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   70570, 14518, -3925,    -1,  4064, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, 69924, -3925, -3925, -3925, -3925,  3421, -3925,
    2264, -3925,  4252, -3925, -3925,  3296, -3925,  3547, -3925, -3925,
   -3925, -3925,  3531,  4020, -3925,  3527, 14518, 69924, -3925,  4008,
   -3925,  3933,   635,  3872,  3476, -3925,  3475,   635,  4045, 71216,
   71216, -3925,  2853, -3925,  3688, -3925, -3925, 18646, -3925, -3925,
    1093,  1093, -3925,   173, -3925,   635, 67340,  4120, 60774, -3925,
    3600, -3925, -3925, 14518,  4033, 52782, 67986,  3487, -3925, -3925,
   -3925, 69924,  3951,  3506, -3925, -3925, -3925, 14518, -3925,  4024,
    3606, -3925,  3494, -3925, 69924,   635, 69924, -3925, -3925,  3967,
    5841,  1636, -3925,  3493, -3925, -3925,  4138,  3437,   635,  4133,
   69924, 60774, 64756,  4036, 68632,  3997, 60774,  2901,  4006,  4009,
   -3925,   203,  3973,  3632, -3925, 65402, -3925,  2169,  3750,  3572,
   -3925, -3925,  4085,  2435, -3925, -3925,  3838,  3529, 69924, 69924,
   -3925, -3925, -3925, -3925, 44124, 14518, -3925, -3925, -3925, -3925,
    -159,   996, 26086,  3714, 66048, 69278, -3925, -3925, -3925,  8200,
   -3925, -3925, -3925,  4021, -3925,   635, -3925, -3925, -3925, -3925,
   -3925, 52116,  2275, -3925, -3925, 32110, -3925, 44124, -3925, -3925,
   -3925, -3925, 29436,  3530, -3925,   828, -3925, -3925, 32110, 17958,
   -3925, -3925
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3925, -3925, -3925, -3925, -3925, -3925,   -47, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925,  1440, -3925, -3925, -3925, -3925,
   -3925, -3925,  1519,  1526, -3925, -3415, -3925, -3925,  1527, -3925,
     288,  1524, -3925,   291, -3925,  1534, -3925,   295,  -751, -1662,
   -3925, -3925, -3925, -3925, -3925,   284,  1179,  3290, -3925,   280,
   -3925,    37, -3925, -3925, -3925, -3406,   -55,  -194, -3925, -3925,
      28,  2868,  -193, -3035, -3925, -3925, -3925, -3925, -3925, -3925,
     283, -3925, -3925,   125, -3925, -3925, -1918, -3925, -3925, -3925,
   -3925, -3925, -3925,  -354,  -309,  2107, -3925, -3925, -3925,  4199,
   -3925,  3552, -3925, -2121,  2023, -3925, -3925, -3925, -3925, -3925,
    2074, -2070, -3925, -3925, -3925,   931, -3925, -3925, -3925,   369,
      72, -3925,    73, -3925,    75, -3925,    76, -3925,    77,    78,
      79,    80, -3925,    81, -3925, -3925,  -298, -3925, -3925, -3925,
   -3925,    84, -3925, -3925, -3925, -3925, -3925, -3925, -3925,  -218,
   -3925, -3925,  -128, -3925, -3925,  -212,   110, -3925,  -187,   111,
   -3925,   113, -3925,  -140, -3925,  -136, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,  2873,
   -3925, -3925, -3925, -2840, -3925, -3925,   612,  2326, -3925,  1240,
   -3925, -3925,  1038, -3925, -3925,  1253,  -949, -3925, -3925,   935,
    -499, -3925, -1913, -2466, -2451, -3925, -3925, -3925, -2585, -2575,
   -1895, -3925, -1888, -2772,   613,  1550,  1553,  1548,   -13, -3925,
     827,   269, -3925, -3925, -3925, -2899,   -60, -3925, -3325,   273,
   -3925, -3925, -3925, -3925, -3924, -3925, -3925,  -169, -3925, -3925,
    -135,  -131, -3925,    82, -3925,  2219, -1800,  -444, -3925, -3925,
   -2386, -1962,  -311, -1302, -1301, -3925, -3925,  1034,  1572,   764,
   -3925,   765, -1887,  1749, -3925, -3925, -2849, -3925, -3925, -3519,
   -3925,  -271,  1154, -3925, -3925, -3925, -3925, -3925,  1126,  1129,
   -1341,  1531, -1526, -3925,   459,   608, -1221, -3925,   -52, -3925,
     727, -3925, -3925, -2396, -3925,   -36, -2231, -2325,   -14, -3925,
   -3925, -3329, -3418, -3925,  1319, -3925, -3925, -3925, -2993, -3289,
    1376, -3925, -3925,   115, -3925, -3925, -3925, -3925, -2602, -3925,
   -3925, -1880, -2395, -3925, -3925, -3925,   191, -3925,   266,   190,
   -3925,   271, -2469, -3925,   237, -1678, -2133, -3925,  1307, -2075,
   -3072,   439, -2425, -3925,   793, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925,  1662, -3925,  1914,  2291, -3925,  1923,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925,  1743, -3925, -3925,
     333, -3925, -1993, -3925, -3925,  1745, -3925, -3925,  1747,  -317,
   -1859, -1345, -1347, -1832,  3050, -2003, -3315, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925,  2685, -3925, -3925, -3925,
   -3925, -3925,  3701, -3925,  2692, -3925, -3925, -3925, -3925, -3925,
     844, -3925,  2194, -3925, -3925, -3925,  1326,  2997, -3925, -3925,
      -4, -3925, -3925, -3925, -3925,  2203, -3925, -3925, -3925, -3925,
    2365, -3925, -3925, -3925, -3925, -3925, -3925,  1083, -3925,  1601,
   -3925, -1994, -3925,   692, -1349,  4359,     3,    63,     1,   640,
   -3925,  2810, -3925, -3925, -1822, -3925, -3925,  3762,  -733, -3925,
    3089, -3925, -3925,  1925, -3925,  3777,  2991,  2572,  -361,  4523,
   -3925, -1425,    13, -3925, -3925,  -915, -3925, -3925, -3925,  -677,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
    2010, -3925, -3925, -3925, -1480, -3925, -3925, -3925, -3925, -3925,
    -941,  2106, -1113, -1119, -3925,  3269, -3925, -3925, -3925, -2472,
   -3925, -2057, -3925, -3925, -3925, -3925, -2449, -2147, -3925,  -786,
    2222,  2223,  2225,  2229, -3925,   468, -3925,   710, -3925, -3925,
   -3925,   255,   832,   256, -1043, -2529, -1176,  1148, -3925, -3925,
   -1483,  3310, -2105,  1575,  1094,     4,  3773,  3344, -2337, -3925,
    1711,  1606, -3925, -3925, -3925, -3925,   928,  -867,   -77, -3925,
   -3010,  -856,   -73, -3925, -1889,   433, -1841, -2380,  -775, -1901,
   -2940, -3925, -3925,  2563,  3438, -3925, -3925, -3925, -3925, -3925,
   -3925,  -416, -3925, -1743,  3313,  4476,  3008, -3925,  2349,  3139,
    3144, -3925, -3925,  3488,  1695,  1696, -3925, -3059, -2166, -3925,
   -3925,  -673,   906,   769, -3925,   778, -3579, -3056,  3158, -3925,
   -2944,   776,  3622,  3160, -2801,  3165, -3925, -3925, -3925, -3925,
   -3925, -3925,  2199, -3925, -3925, -3925, -3925, -3925, -3925,  2849,
    3820,  -692, -1585, -3925,  -960,  2834,  2214, -3925, -1034, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925,  2361,  1389, -3925, -3925, -3925, -3925,  2951, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,  1197,    25,
   -3925,  1040,     9, -3925,   702, -3925, -3925, -3925, -3925, -3925,
     -64, -3925, -3925,   -71, -3925,  -891,  -871,   694, -1503, -2593,
   -3925,   803, -2705, -2432,  -732, -1241, -1245, -1863,   302,  2020,
   -3925,  3148,  -932, -3925,  1511,  -681, -1262,    -6, -3925, -2501,
     -93,   108,   -56,  2909, -3925,    46,   892,    71, -3925, -3925,
   -3925, -3925, -3925, -3925,  3457, -3925,  2268,  4503, -3925, -3925,
   -3925,  2905,  4504,  -566,  3462,  2922, -3925,  2930, -3925, -3925,
   -3925, -2136, -1552, -3925, -3925,   148, -3925,  2350, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925, -3925,
   -3925, -3925, -3925, -3925, -3925,  -974,  3894,  4514,  3553, -3925,
   -3925,  2096, -3925, -1494,  -988,  -865,  -922,  3246,  1845, -3925,
   -1404,   432, -3925, -3925,   430, -3925, -3925,   334,  3902,  3515,
   -3925, -3925, -3925, -3925, -3925,  3680, -3925,    -8,    -2, -3925,
   -3925, -3925, -3925,     6,  4004,  4005, -3925, -3925,  -302, -3925,
    -485, -3925, -3925, -3925, -3925, -3925,  3625, -3925, -3925,  3627,
   -3925, -3925, -3925, -3925,  3634, -3925, -3925, -3925, -3925, -3925,
   -3925,  1897, -3925, -3925, -3925, -3925, -3925, -3925,  -399, -3925
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2527
static const yytype_int16 yytable[] =
{
     540,    96,  1127,    94,    99,  1362,  1841,   688,  1061,  1064,
    1840,  1951,   580,  1340,  1548,   581,   622,  1422,  1431,   886,
    1092,  1349,   872,   887,  1794,   640,   639,  2103,  2174,  1206,
    1343,   645,   656,  2311,   538,   661,  2041,   689,  2040,  2739,
     656,  2507,  2508,  1488,   853,  1165,   706,   710,  2810,   907,
     855,  2173,  2836,  2548,  1743,  1744,   856,  2130,  1602,  2670,
     859,  1921,   858,  2648,  1666,  1960,  1961,   614,   828,  2992,
    2491,  2549,   870,  1603,  3018,  2569,  1432,  2569,  2550,  3097,
    1782,  2201,  2570,  1796,  2570,   614,  3505,  2579,  2809,  1698,
    2275,  3476,   615,  2301,  2583,  1809,  1810,  1811,  2872,  3243,
     889,  1814,  2784,  3517,   897,  2849,  3060,  1509,  3557,  2230,
     615,  2312,  2931,  2610,  3517,  3517,  2932,   940,   941,  2315,
    2316,  3061,  2882,  2883,  1317,  1089,  2525,  3347,  3849,   613,
     900,  2632,   540,   927,   929,   540,   870,   912,   897,  3275,
    1850,  1260,  1261,  1262,  2589,  2877,  3031,   613,  2593,  3276,
    3062,  2778,  1284,  3986,  2752,   918,  1350,   550,  2527,  1287,
    3044,  2611,   888,  3956,  1699,  2503,   902,  3621,  1550,   906,
    1463,  1464,  1895,  2623,  2655,  3015,  2855,   638,  3056,  1463,
    1464,   930,   644,  3583,  3587,  1957,  2714,  3588,  1613,  3073,
    1463,  1464,  3672,  1463,  1464,  3589,  1713,  2741,   996,  3066,
    2518,  1463,  1464,  3839,  2719,  2338,  3597,  1434,  1957,  2629,
    2561,  2720,  2151,  1463,  1464,  2445,  -879,  3525,   634,  1957,
    1463,  1464,  3686,  2422, -1837,  1736,  1737,  1738,  3504,  3922,
    2447,  3857,  2884,  1463,  1464,  1607,  1748,  2503,  2741,  -562,
    1150,  2735,  2204,  3315,  1669,  3939,  1463,  1464,   993,  2151,
    -563,  3391,  1713,  1244,  2496,  2463,  1288,   890,  3272,  4246,
     878,   948,  2471,  3539,   135,  3554,  1697,  1802,  1006,   582,
    1806,  1463,  1464,  3273,  2504,  3722,  3883,  1022,  1463,  1464,
    2741,  1930,  3521,  3522,   878,  3733,  3882,  1497,  3720,  1824,
    1825,  4340, -1950,  1829,   884,  4358,  1463,  1464,   914,  3340,
     919, -2526,  1654, -1521,  1402,  1144,  3565,  1551,  1550,  1364,
   -1991,  1843,  1844,  4457,  3066,  1623,  1848,  1849,  1463,  1464,
    3517,  3517,  1415,  4457,   620,  3216,  3262,  4372,  3067,  3569,
     880,  2742,  -498,  3911,    42,    42,  3913,  1463,  1464,  3863,
    1035,  3570,   635,  1694,  1463,  1464,  2504,    42,  2630,  1463,
    1464,  3105,  3851,  1463,  1464,  3571,  1727,  1561,  1619,  -780,
    1584, -2145,   646,  1435,   545,  3302,  3450,  1094,   677,  1463,
    1464,  2540,  3024,  3633,   660,  1180,  2660,  1094,   677,   137,
    1884,  4370,   154,  1885,  4374,  3719, -1631,  1052,  3363,  3367,
    3510,   154,  2399,  1344,   150,  1305,  1436,   154,  3378,  3379,
    1706,  4095,  -466,  1417,  1186,  1638,   880,  2742,  1463,  1464,
    2736,  2854,   896,  4138, -1689,  3780,  1642,  2694,  3376,  4322,
    2521,  2544,  1151,  2049,  -446,  2247,  1131,  2703,  1971,  1972,
    3569,  3106,  1463,  1464,  1053,  1245,  1426, -2168,  1674,  3829,
    2975,   156,  3570,  2731,  1670,  1248,   913,  1551,  3023,  3072,
    2999,  2050,  1036,   551,  4341,   547,  3571,  1758,   548,  1441,
    1449,  4247,  3843,   936,  1120,  2732,  1494,  2976,  1094,   677,
    -455,  1206,  1054,  3830,  1679,  2414,  2861,  3000,    53,    53,
    2102,  1707,  1418,   151,  1345, -1689,  -433,   920,  3668,  3669,
    2742,  3025, -2526,  1940,  3655,  1941,  1671,  2661,  1306,  1463,
    1464,  2781, -2292,  1390,  1301,   546,  1460,  2562,  1463,  1464,
    1568,  3511,  3573,  1132,  4475,  1187,  3634,  4359,  4089,  2522,
    1463,  1464,  1463,  1464,    59,   854,  1620,   647,  3569,  3852,
    1009,  2541,  4061,  1886,  3107,  1037,  3381,   854,  4114,  1466,
    3570,  -780,  1467,   897,   897,   881,  1365,  1498,  1466,  3290,
     870,  1467,   912,  3068,  3571,  1508,  2744,  1403,  1023,  1466,
     960,  2847,  1467,  2127,   964,  1562,  1094,  3584,   912,  1728,
    1466,  4248,  1366,  1467,  4095,  3296,  4078,   852,  1624,  4067,
   -1521,  3867,  1466,  2977,  3821,  1467,  4096,  1028,  1062,  1466,
    1931,  3060,  1467,  3871,  1078,  1083,  3731,  3560,  4199,  1897,
    1929,  3874,  1466,  1008,  1567,  1467,  3061,  1876,  1877,  1875,
    1934,  1556,  3095,  1004,  1577,  1466,  1437,   870,  1467,  1942,
    3540,   885,  3103,  1013,  3002,  3003,  3004,  3005,  2349,  3212,
    2152,  3912,  2744,  1007,  1416,  4342,  1026,   870,  2296,  3526,
    1466,  2299,   942,  1467,  2836,  1454,  2303,  1466,  3535,  1289,
    1467,  3141, -1991,  1463,  1464,  3945,  1960,  1961,  1123,  3059,
    3291,  2472,  1655,  3980,  1695,  1466,   960,  2152,  1467,    42,
    2362,  3544,  2317,  2318,  3532,   870,  3987,  4293,  4183,  4184,
    2737,   870,   870,  4368,  3836,   689,  3316,  1466,  2693,  2339,
    1467,  3600,   994,  3847,  1463,  1464,  3063,  1143,  1297,  3026,
    3504,   710,   583, -2145,  3063,  4195,  1466,  3545,  3507,  1467,
      42,  1463,  1464,  1466,  3049,  2744,  1467,   997,  1466,  3392,
   -1521,  1467,  1466,  2174,  1462,  1467,  3077,   973,  2903,  1386,
    3081,  1269,   614,  2429,  3517,  3517,   891,  1190,  1466,  3069,
    4169,  1467,  2314,   856,  2702,  1048,  2173,  3099,  3100,  2885,
    -879,  3080,    42,  3082,   636,  1207,  3590,   615, -1837,  4096,
    3114,  1896,  3094,  2873,  2266,  4053,  3019,  3546,  4095,  3124,
    4057,  2631,  4059,  -562,  2583,  1152,  2347,  1466,  3109, -2168,
    1467,  4295,   886,  1438,  -563,  1328,   887,  1020,  1246, -2526,
    1898,  3155,  2331,  1030,  2205,  1960,  1961,  4397,  3138,  2175,
    1468,  1466,  3140,  3365,  1467,  1463,  1464,  4482,  2135,  1468,
    1370,  3271,  1351,    53,  1404,  3405,  1352,  1266,   870,  1270,
    1468,  3334,  1264,  1468,  1263,  2446,  3944,  1463,  1464,  3277,
    2326,  1468,  3224,  1702,  3226,  3227,  3279, -1521,  3230,  3231,
    2448,  2430, -1991,  1468, -2292,  1368,  1404,  2348,  3240,  3241,
    1468,   928,   928,  1145,    53,   859,  3451,  1263,  1300,   854,
    2374,   889,  2147,  1468,  2378,  2583,  -498,  1851,  1466,  1852,
    3524,  1467,   870,  4350,  1496,  4352,  1468,  1466,  1341,  3667,
    1467,  2400,  3155,  3676,  1430,  3747,  2423,  2401,  2424,  1466,
    1363,  1466,  1467, -2145,  1467,   870,    53,   870,  4323,  1373,
     854,  1468,  3949,  3950,  2046,  2527,  1543,  3572,  1468,  2522,
     540,  1675,  1851,   897,  2366,   897,  2147,  3864,  1399,  3500,
   -1631,  3502,  1046,   888,  3750,  3751,  1468,  1423,  1424,  1373,
   -1521,  1428,  2147,  2211,   870,  1542,  -466,  2403,  3533,  2404,
    1463,  1464,   854,  1459,  1385,  2258,  2329,  1680,  1468,  1473,
    3767,  3007,  1453,  4096,  2147,  1490,   540,  1492,  -446,  1373,
     540,   870,  2415,   540,   870,   897,  1751,  1468,  2110, -2168,
    1537,  1165, -2458,  2280,  1468,  2211,  2476,  2817,  2484,  1468,
    3536,  3537,  1540,  1468,  4163,   870,  2353,   614,  1057,  1601,
    1491,  2105,   629,   870,  1495, -2459,   870,  1505,  3787,  1468,
    2147,  4537,  1555,  2420,  -455,  2421,  1668,  1618,  3572,  4331,
    2330,  2895,   615,   897,   897,  3305,  2147,  3306,   614,  3427,
    -433,  3428,  1466,   897,   897,  1467,   897,  1579,  3292,  2456,
    4611,  3347,  2729,  3573, -2292,  3435,  3213,  3436,  1468,   870,
     870,  1463,  1464,   615,   631,  3793,  1463,  1464,  1614,   614,
    3030,  1463,  1464,  2941,   688,  1463,  1464,   870,  3060,  1340,
    1340,   696,  1468,  1466,  1463,  1464,  1467,  2372,  3400,  1463,
    1464,  2273,  1975,  3061,   615,  4170,  2354,  4172,  1639,  1089,
    1466,  1463,  1464,  1467,   689,  3541,  3807,  1901,   699,  4119,
    3405,  3275, -2458,   870,  2154,   624,  3758,  3550,  3452,   614,
    3453,  3276,  3819,  1047,  3958,  3841,  3572,  3822,  1463,  1464,
    3527,   613,  4120,  3284,  3959, -2459,  2114,  2818,  1544,  4552,
    1854,   642,  3555,  1530,   615,  2561,  1897,  3585,  3201,  1468,
    3558,  2548,   650,  1709,  3561,  3759,   897,  1001,  1468,  1463,
    1464,   710,  1719,  1285,  3059,  4386,  2291,  3838,  1435,  2549,
    1468,  1136,  1468,  3536,  3537,   703,  2550,  3776,   701,  1463,
    1464,  2569,  2503,  2494,  1344,  3693,  1783,  3694,  2570,  1784,
    1463,  1464,  1950,  2253,  1466,  4332,  2359,  1467,  3734,  1057,
    4291,  1446,  1703,  1207,  1463,  1464,  2212,   886,  2364,  3063,
    2365,   887,  1874,  1855,  1353,  1307,  1466,  1207,  1065,  1467,
    1264,  3499,  1263,  1463,  1464,  2791,  2640,  2516,  2517,  2292,
    3272,  1893,  3894,  1063,  2283,  2605,  2115,  1285,  3542,    25,
    2451,   928,  3900,  1395,  3641,  3273,  1463,  1464,  2212,  2457,
    1633,  1922,  3744,  3549,  1815,  2861,  3901,  3285,  1463,  1464,
    4226,  2852,   852, -1769,   630,  1842,   884,  2429,  1406,  2784,
    3770,   924,  1430,  4450,  2851,  1345,  1354,  2579,  3960,  4354,
    2793,  2982,  2983,  4227,  2583,  2610,  1949,  2452,  4297,  1463,
    1464,  2504,  3008,   928,  4587,  2957,  1632,  1752,  2902,   870,
     854,  2905,  2906,  1468,  1860,  1882,  1861,  1862,  1863,  1864,
    1865,  1867,  1869,  1870,  1871,  1872,  1873,  3320,   870,  4074,
    4075,  3486,   870,  1634, -1689,  2041,  2041,  2040,  2040,  1466,
    2123,  2764,  1467,  2611,  1463,  1464,  2561,  1898,   870,  3399,
    3776,  1564,   928,  1704,  1468,  3777,  4304,  2819,  4097,  2985,
    1058,  1576,   928,  1927,  1578,  3388,  2544,  3304,  1545,  3725,
    3690,  1468,  1002,  1932,  3868,  2002,  1705,  3536,  3537,  2714,
    1946,  2057,   884,   870,   861,  1137,  3794,  3355,   880,  1463,
    1464,    96,  2368,    94,    99,  1407,  2551,  2719,   697,  1408,
    2213,  2896,  3517,  3517,  2720, -1689,  1066,  2138,  2606,  2380,
    1841,  3503,  3646,  1409,  3118,   632,  2878,  2879,  2880,  3380,
    2907,  3528,  1355,  2561,  3833,   700,  1710,  2458,   897,  2641,
    3835,  1437,  2293,  1960,  1961,  1463,  1464,   704,  3778,  1856,
    1466,  1003,  2213,  1467,  4216,  1466,  1308,   862,  1467,  1271,
    1466,  3487,  2562,  1467,  1466,  3286,  1899,  1467, -1769,  3902,
    2107,   540,   540,  1466,    36,  1468,  1467,  4354,  1466,  2176,
     540,  1467,   698,  1404,  1716,  1003,  1463,  1464, -1769,  2111,
    1466, -2458,  2899,  1467,   897,  1497,   960,  1468,  2049,  2119,
    4217,  1286,  4387,  2770,   880,  2108,  2109,  1463,  1464,  1497,
    3340,    42,  3340,  2386, -2459,  2203,  2134,  1466,  4588,  2552,
    1467,  2881,   856,  2143,  1546,  2978,  2050,   897,  3777,  1463,
    1464,  1463,  1464,   939,  2175,  2390,  2132,  1420,  1421,  2136,
    4451,  3491,  4076,  2124,   897,  2574, -2458,  2544,  1466,   968,
    1935,  1467,  3492,   864,  1386,   155,  2207,  2208,  3760,  1635,
    1410,  1058,  2257,  3958,   897,  1207,   870,  2544,  1466, -2459,
    2544,  1467,   611,  3959,   875,  1286,  4284,  3488,  2267,  1466,
    3287,  2185,  1467,  1463,  1464,   625,  2189,  4285,  2192,  -238,
     611,   897,  3591,  1466,  3335,  3592,  1467,   878,  1463,  1464,
    1463,  1464,   870,  4388,  1463,  1464,   870,   870,  1438,  3988,
    1468,  3782,  1466,   885,  4144,  1467,  1463,  1464,  1463,  1464,
    1463,  1464,  1463,  1464,  1841,  2341,  3417,  1841,  4146,  4165,
    4218,  3348,   898,  2139,  4389,  1466,  1900,  2185,  1467,  2231,
    2887,   897,  1463,  1464,  2544,   856,  2342,  1466,  2289,   870,
    1467,  3059,  2615,  2562,  1901,    53,  1936,  1330,  1411,  2140,
    2300,  1463,  1464,  1273,  2051,   870,  1463,  1464,  3810,  3779,
    1785,   689,  1120,  1786,  4066,  1463,  1464,   626,  1466,   689,
    1497,  1467,  2757,  1463,  1464,  3875,  1120,  3372,   901,  1620,
    1463,  1464,  2553,   540,   540,   540,   897,   540,   870,   897,
    1497,    59,  2554,  1497,  1463,  1464,  2588,  2297,   540,  2555,
     870,  1468,  1763,   540,  1636,   614,  1468,  3960,   614,   885,
    3373,  1468,   905,  1466,  2583,  1468,  1467,  2284,  2285,  2286,
    2562,  2288,  1732,   897,  1468,  4241,  3856,  1376,  3408,  1468,
     615,  3155,  2298,   615,  1732,  1902,  2091,  2302,  3419,  2391,
     627,  1468,  2325,  4128,  2393,  1498,  1463,  1464,   856,  2394,
    2125,  4391,  4538,  2398,  1463,  1464,   903,  2752,  1466,  1498,
    3334,  1467,  2416,  2343,  3493,  2478,  2126,  3433,  1468,  1463,
    1464,  4539,  3225,  3876,  1331,  3228,  3229,  2346,  1377,  3232,
    3233,  3234,  3235,  3236,  3237,  3238,  3239,  4335,  4336,  3242,
    1298,  4086,  2116,  3271,  2434,  4286,  1236,  3637,   914,  1468,
    1732,  1463,  1464,  2556,  1466,  2616,  3434,  1467,  1767,  4036,
     137,  3277,  3638,  1732,   922,  1841,  2141,  3877,  3279,  1468,
    1463,  1464,  3779,  1207,  2373,  2145,  1463,  1464,  1463,  1464,
    1468,  2479,  2344,  2459,  2057,  1463,  1464,  3445,  2187,  1463,
    1464,  1240,   928,  2247,  1468,  1466,  3079,  1120,  1467,  1733,
    2788,  4392,  3579,  4129,  4130,   924,  4037,  3455,  4131,  4132,
    1328,  1747,   928,  1468,  1378,  2758,  1466,  1120,  3456,  1467,
    1120,   916,  1463,  1464,  1463,  1464,  3112,  3113,  1732,  2184,
    2174,   870,  4022,  2436,  3595,  3596,  1468,  2150,  1466,  2195,
    1466,  1467,   743,  1467,  3731,  3356,   925,   852,  1468,  2355,
    2557,  4005,  1473,  2173,  3325,  1404,   988,  1237,  4505,  4506,
    4002,  4003,   926,  3692,   999,  2500,  3374,  1768,  1463,  1464,
     870,  1771,  2356,  2707,  1463,  1464,   932,  1801,  1772,  1468,
    1498,   950,  4393,  2480,  2363,  2184,  3393,  1463,  1464,  2862,
    1805,  1406,  1466,  1463,  1464,  1467,  2649,   870,  4006,  3494,
    1498,  3717,  1241,  1498,  1341,  1341,  2529,  1466,   748,  1466,
    1467,  2789,  1467,  1466,  4380,  2376,  1467,  2520,  3568,   281,
     614,   283,   897,  3321,  1468,  1466,   856,  1466,  1467,  1466,
    1467,  1466,  1467,  3328,  1467,  1280,  1281,  1282,  1283,  1658,
    1463,  1464,  3631,  2049,  2287,   615,  2260,  2290,  4499,  4499,
   -1799,  1466,  1928,  3594,  1467,  1828,  2367,  1420,  1421,  1773,
    2377,  3599,  1933,   930,  4010,  4435,  2481,  2261,  3626,  1468,
    1466,  2050,  1308,  1467,  2023,  1466,   934,  2024,  1467,  1463,
    1464,  2313,  1310,  1311,  1466,  1463,  1464,  1467,  2367,  1463,
    1464,  3632,  1466,  1271,  2442,  1467,  4028,  2650,  1659,  1466,
    1463,  1464,  1467,  2443,  2914,  2381,  1463,  1464,  1407,  2262,
     760,  2656,  1408,  1466, -1799,  1468,  1467,  1463,  1464,   897,
    3884,  2665,   897,  1775,  4201,  4202,  1409,  2863,  1463,  1464,
    2762,  1660,  2759,  2544,  2838,  1094,   677,  1379,  1463,  1464,
     711,  2485,  2779,  3885,  3119,  2528,  4298,  2864,  2760,  2442,
    2929,  2385,  2574,  3308,  3366,   935,  1468,  2929,  2772,   547,
    2865, -1799,   548,  3377,  1841,  1466,  2967,  3307,  1467,  2180,
    3646,  2181,   897,  1466,  2777,   897,  1467,  1468,  2726,   540,
    3914,   937,  3886,  3916,  3917,  3897,   897,   712,  1466,  2740,
    4009,  1467,  2389,   775,  2323,  3389,  2324,  2754,   949,  1468,
    2839,  1468,  1380,  2761,  1381,   965,  1430,  2486,   643,   856,
    2510,  2769,  2511,  2727,  1264,   976,  1263,   856,  2773,  2969,
    1466,  1014,   977,  1467,   870,   653,   979,  1312,  1313,   870,
    2766,  2767,   986,   653,  2771,  2392,   990,  2395,  2487,  1466,
     987,  4160,  1467,   988,  2866,  1466,  1537,  1466,  1467,  1005,
    1467,  1537,  1271,  1468,  1466,  2792,   870,  1467,  1466,  1011,
    2708,  1467,   713,  1410,  1776,   991,  1497,  3691,  1468,  1017,
    1468,  2607,   897,  4151,  1468,  1271,   897,   611,  2345,  2369,
    2057,  2057,  1778,   897,   897,  1031,  1468,  2482,  1468,  2407,
    1468,  1466,  1468,  1466,  1467,  1014,  1467,  1273,  1010,  2754,
    1207,  1021,  3512,   870,  2425,  3774,  2444,   897,  2860,  2488,
    3402,   856,  1468,  2049,  1264,  1040,  1263,  2971,  1042,  4188,
     688,  2370,  3426,  1799,  3429,  2519,  3437,  4192,  3783,  3784,
    1062,  1468,    42,  1045,  1062,  2709,  1468,  1466,  1094,   677,
    1467,  2050,  4203,  1466,  4101,  1468,  1467,  1052,  3441,  4109,
     689,  1661,  3799,  1468,  3536,  3537,  1466,  2893,  1084,  1467,
    1468,  1411,  1466,  3660,  3661,  1467,  2867,  3442,  4207,  4208,
    4209,  4210,  3443,  2382,  1468,  2057, -1799,   614,   614,   614,
    2383,  3444,  2057,  1148,  1217,  3513,    42,  2707,   897,  3446,
    1090,  1841,  2489,  1147,  2829,  3118,  3449,  3792,  2908,  4559,
    4560, -1800,   615,   615,   615,  1235,  3135,  3136,  3404,  1466,
    3454,  1158,  1467, -1799,   803,  3147,  3150,   870,  1249,  1250,
    2530,   870,  2384,  3897,  2057,  4289,  1468,  2662,  1152,  3971,
    2667,  2387,  3972,  2057,  1468,  2428,  2531,  2057,  2868,  2509,
    2510,  1162,  2511,  1120,  1163,  3773,  3745,  1164,  1466,  1468,
    2934,  1467,  2057,  2979,  1466,  2057,  1273,  1467,  1466,  2830,
    2831,  1467,  3457,  1166,  2948, -1800,  1831,  1832, -1769,  1466,
    3459,  3052,  1467,  3053,  2838,  1466,    53,  1167,  1467,  1273,
    2706,  1468,  3447,  2722,  2057,  3461,  1466,  1062,  1168,  1467,
    2485,  4378,  4379,  3137,  2734,  2710,  2609,  1662,  1171,  1172,
    1468,  4101,  1173,  4420,  1681,  1174,  1468,  1466,  1468,  4109,
    1467,  1175, -1800,  2830,  2831,  1468,  1291,  2986,  1663,  1468,
    1293,  1176,   854,   714,  1296,   992,  1498,  1177,   995, -1799,
      53,  1178,   611,   998,  1682,  3563,  3463,  3564,  1000,  2989,
    2839,  2991,  3464,  1664,  3465,   715,  1472,  2544,  3689,  1181,
    3564,  3804,  1468,  1183,  1468,  3805,  2486, -1799,  3735,  1665,
    3736,  1184,  1185,   611,  4101,  3811,  1841,  3812,  4109,  1294,
    3813,  1841,  3812,  3995,   870,  3348,  2832,  1188,  1189,   281,
    2815,   283,  2561,  1946,  1564,  1683,   716,  2487,  3806,  1684,
    4019,  1576,  2826,  1191,   611,   897,  1946,  3029,  1468,   856,
    3101,  1014,  1192, -1799,  1468,  3930,  3514,  3931,  2532,   135,
    1193,  1194,  1570,  2490,  3771,  1274,  1275,  1468,  1195,  4486,
    3788,  3772,  2561,  1468,  3932,  1196,  3933,  1278,  1279,  1280,
    1281,  1282,  1283,  2707,  4021,  1295,  1197,  2485,  1274,  1275,
    4027,  3934,  3512,  3935,   611,  3092,  3937,   717,  3938,  2656,
    3940,  4127,  3941,  3065,  1198,  3970,  1459,  1201,  2488,  4029,
    1299,  3075,  3076,  2656,  1202,  1208,  3078,  2656,  1209,  3086,
    1468,  1210,  3087,  2707,  2708,  1211,  4532,   662,  4534,  3086,
    1497,  3942,  3086,  3943,  2656,  2656,  2533,   870,  3102,  3086,
    1156,  1157,  4545,  1160,  3111,  1161,  2904,  2656,  1212,  1842,
    3115,  2175,  1303,  2486,  3123,   136,  2656,   897,  3263,  1468,
    3126,  3127,  2534,  3834, -1769,  1468,  3139,  1213,  3086,  1468,
    4574,  4575,  1304,  1214,   137,  3513,  1215, -1800,  2656,  -637,
    1468,  1216,  1218,  3266,  2487,  3947,  1468,  3943,  1219,  2574,
    3267,  2489,  1220,  3222,  1685,  4030,  3966,  1468,  3943,  2709,
    3732,  4031,  1221,  1222,  2575,  4032,  3969,   886,  2057,  1329,
    4013,   887,  4016,  3313, -1800,  1319,  4055,  2918,  1468,  1223,
    1224,  3870,  4222,  3266,  2535,  4023,  1225,  2057,  1271,  2862,
    3267,  1226,  3870,  4324,  1276,  1277,  1278,  1279,  1280,  1281,
    1282,  1283,  4569,  2544,  2919,   870,  1227,   138,  3128,  4039,
    3129,  4040,  1228,  4569,   663,  2488,  1229,  1276,  1277,  1278,
    1279,  1280,  1281,  1282,  1283,   884,  4054,   897,  4040,  2656,
    1430,  1230,  2754,  1686,  4081,  2862,   859,  4058,  1263,  3943,
    1231,  2754,  2754,  2544,  1310,  1311,  4569,  2754,  3994,  4068,
     139,  4069,  1232,  3130,  2920,  1233,  2986,  2921,  3338,  1264,
     870,  1263,  4070,  1234,  4069,  2922,  1238,  1120,  -637,  4126,
    1239,  2057,  2465,  2466,  2576,  2185,  3131,  2467,  2468,  1555,
     870,   647,  4135,  3975,  3992,  4162,  2536,  3943,  1242,  2562,
   -1800,  1243,  1247,   140,   664,  1251,  1252,  1687,  2489,  1359,
    4164,  2754,  3943,  4166,  1253,  3943,  1550,  4191,   870,  3053,
    2049,  1254,  3086,  1842,  1255,  3132,  3349,  1256, -1800,  2710,
    4240,  -637,  3943,   859,  4243,  1263,  4040,  2863,  1257,  2562,
    2708,  2574,  1258,  1463,  1464,  2185,  1497,   870,  2050,  4244,
    1259,  4245,  2485,  1290,   897,   897,  2575,  2864,   856,   856,
    1498,  1292,  1302,   897,   897,   897,  3514,   856,   856,   856,
    2865,  1375,  1008,  2862, -1800,  1384,  4364,  4367,  3643,  3812,
    2708,  1386,  2490,  2863,  2591,  2592,  1497,  2594,   870,  1427,
    2597,  2598,  2599,  2600,  1429, -1521,  2603,  1433,   135,  1312,
    1313,  2613,  1273,  2864,  1462,  1489,  2618,  2619,  2620,  2621,
    2622,  4437,  2923,  4438,  2626,  2627,  2865,  4446,  2486,  4447,
    2636,  2637,  2638,  2639,  1493,  2642,  2643,  1511,  2645,  1688,
    2530,  2838,  1539,  4043,  4044,  3125,  4046,   141,  1558,  2257,
    1062,  1759,  1760,  1761,  1762,  1763,  2531,  1559,  4476,  2487,
    4477, -1521,  1560,  1571,  2866,  1551,  4139,   652,  4140,  4601,
    -637,  4602,  1572,  1573,  1581,  1583,  2576,  1841,  4052,  1599,
    1604,  1689,  1615,  1622,  3471,  1625,  2118,  3754,  1314,  1315,
    1316,  1627,  3474,  1629,  3474,  1631,  2577,  4353,  1632, -1521,
    1054,  1657,  1653,  1474,  1475,  1676,  1677,  2839,  1693,  1062,
    2866,  1678,  2049,  -637,  1696,  1700,  2924, -1521,  3481,  2925,
    1708,  2863, -1521,  1701,  1711,  1712,   142,   897,  1713,  3501,
    2488,   856,  1720,  1120,  1842,  1721,   870,   870,  2840,  2490,
    2050,  2864,  1722, -1521,  1476,  1726,  1724,  1285,  1732,  1739,
    1750, -1521,  1753,  1788,  2865,  3297,   723,  1477,  1764,  1765,
    1766,  1767,  1798, -1521,  1799,  2776,  1800,  2574,  2656,  1822,
    1839,  1274,  1275,  1120,  1858,  1459, -1521,  2656,  1297,  2196,
    2197, -1521,  3086,  1859,  1889,  2656,  2867,  1891,  3133,   553,
   -1521,   143,  1892,   144,  1894,  1906,   870,  1478,  1908,  1909,
    2656,  1910,  1911,  2184,  1912,  1913,  1914,    42,   980,  2841,
    1479,  1915,  1917,  2489,  2578,  3329,  1498,  1919,  1938,  3086,
    1923,   665,   666,   667,   668,   669,   670,  3086,  2532,  1957,
    3086,  3086,  2867,  1964,  3889,  1965,  1968,  1480,  2866,   145,
    1969,   743,  1973,   671,  2044,  2045,   897,  1404,  2047,  2092,
     611,  2048,  2056,   611,  2094,  2095,  1498,  2096,  2868,  2057,
   -1521,  3756,  2098,  2184,  4157,  2100,  4158,  4159,  2101,  2104,
    1768,  2926,  1769,  1770,  1771,  1306,  2112,  2113,  2133,   610,
     554,  1772,  2798, -1521,  2137,  2149,  2607,  2150,  4171,  1340,
    2144,   981,  2842, -1521,  2155,  -637,   982,   610,   747,  -637,
    2162,  2158,  1481,  2159,  2868,  2160,  2533,   748,  2799,  2161,
    2163,  2165,   567,   847,   851,  2177,  -833,  2164,  2178,  2179,
    2182,  3086,  1466,  2800,  3755,  1467,  2202,  2209,  2049,  1420,
    1421,  4586,  2534,  2210,  2830,  2831,  2801,  2199,   753,   983,
    2217,  2927,  1278,  1279,  1280,  1281,  1282,  1283,  2220,  3650,
    2225,    53,  3654,  2222,  2226,   984,  2050,  2227,  2741,  2228,
    2867,  3665,  1773,  2229,  1978,  1979,  2247,   555,  3665,  2928,
    1607,   568,  2082,  2083,  2084,  2085,  2086,  2087,  2088,  2251,
    2252,   985, -1521,  2259,  1065,  1066,  2278,  3682,  2802,  2803,
    2269,  2270,  2276,  2271,  2535,  1585,  2578,  2832,  3665,  3687,
    1981,  2282,   897,  2272,   569,  1586, -1521,  2304,  2305,   760,
    2306,  2307,  2309,  2320,  1984,  1587,  2804,  2322,  2328,  2332,
    1985,  1986,  2327,  1537,  1987,  1774,  1775,  2334,  2335,  1588,
    1589,  1590,  2868,  1842,  2490,  2336,   897,  1841,  2350,   570,
    2352,  4594,  2357,  2358,  2360,  1591,  2367,  2361,  1989,  2371,
    2405,  2375,  2379,  2396, -1521,  2754,  2397,  1207,   870,  2402,
    1841,   897,  1957,  2406,  4605,   856,  1990,  1841,  2417,  2418,
    2419,  4594,  2431,  1841,  2426,   771,  2427,  4605,  1283,  2432,
    2441,  -637,  2433,  4228,  2440,  2805,  2449,   773,  2453,  4356,
     571,   774,   775,  -498,  2608,  1995,  2536,  2460,  3757,  1472,
    2461,  2462,  2497,  3604,  2498,  2506,  2515,  2523, -1521,  2526,
    2539,  2609,  2574,  2843,  2590,   611,  2595,  4229,  2596,  2602,
   -1521,  2601,  2604,  2612,  2614,  2617,  1550,  2624,  2625,  2477,
    2652,  2477,   723,  2492,  2493,  2628,  2495,  2634,  2653,  2806,
   -1521,  2635, -1521,  2644,  3032,  3033,  2646,  3905,  2657,  2647,
    2669,  3606,  2672,  3607,   928,  2673,  2674,  2675,  2676,  2677,
    3043,  2678,  2679,  2680, -1769,  2681,  2721,  1776,  2742,  2682,
    2683,  2684,  1999,  4238,  2685,  2686,  2687,  3054,  3055,  2000,
     556,  2688,  2723,  1468,  1777,  1778,  2689,  3474, -1521, -1521,
    2560, -1521,  1062,  2690, -1521, -1521,  2691,  2692,  1271,  2001,
     557,  3608,  2695,  2696,  2697, -1521,  2698,  2699,  2700,  2701,
    3889,  2797,  2743,  2794,  2728, -1242,  2768,   743,  3093,   -72,
    1186,  1236,  2257,  1483,   572,  1240,  2780,  2816,  2828,  2795,
    1271,  2853,  2861,  3104,  2656,  2796,  2850,  2824,  3665,  2875,
    3414,  4230,  1620,  2886,  3865,   558,  2892, -1628,  3848,  2890,
     559,  2898,  2894,  2909,  4238,  2910,  2913,  2917,  2935,  2003,
    1842, -1521,  2936,  2656,  2937,  1551,  2949,  4356,  2656,  2443,
    2950,  2962,  2980,  1592,   747,  2987,  2988,  2004,  2990,   870,
    2993,  2995,  2996,   748,  2998,   560,  3009,  3012,  3013,  3016,
    1593,   795,  3022,   561,  3020,  3890,  3035, -1521,  3891, -1521,
    3036,  1271,  3037,   573,   897,  3038,  3040,  3039,   801,   870,
    3688,  3143,  3142,   803,   753,  3214,   804, -1521,  3096,  1271,
    3319,  3098, -1521,  3258,  3259,  3260,  3261,  2115,  4231,  3217,
    3281,  1271,  2008,  3223,  1272,   562, -1521,  3265,   852,  -802,
     540,  2009,  3245, -1521,  3724,  3248,  4232,  3222,  3251,  3254,
    3257, -1521,  3295,  3318,  3264,  -779,  3289,  3294,  3326,  4583,
    4555,  3604,  3323, -1521,  3650,  3332,  3337,  3336,   574,  1430,
    4233,  3350,  3353,   559,  3923,  3357, -1521,  3948,  3354,  3358,
    3359, -1521,  3360,  3361,  3362,   760,  3368,  3369,  3382,   897,
   -1521,   575,  4583,  2744,  3892,  3893,  3383,  3386,  3370,  3405,
    2754,  3396,  1273,  3415,  3387,  3605,  3416,  3430,  3418,  3606,
    3431,  3607,  3420,  3478,  3409,  3411,   576,  3421,  3482,   870,
    2014,  3490,  3422,  3423,   847,  3497,  2823,  3469,  1594,  3466,
      42,  3479,   577,  3470,  1273,  1842,  2522,  3472,  3508,  1484,
    3349,  3990,  1420,  1421,  3483,  3529,  2754,  3509,  3609,  3503,
     870,   771,  1271,  3548,  3610,  3530,  3551,  3531,   578,  3608,
   -1521,  3700,  3534,  4238,  3544,  1485,  3552,   774,   775,  3556,
    3559,  3701,   611,   611,   611,  3566,  3567,  2015,  2016,  2017,
    3574,  3702,  1062, -1521,  2018,  3580,  3582,  3636,  3593,  3627,
    1595,   847,  3642, -1521,  3611,  3703,  3704,  3705,  3643,  2889,
    3671,  2019,  3673,  3678,  2020,  1273,  3683,  1596,  3685,  3715,
    3699,  3706,  3716,  3718,  3720,  3726,  4035,  3730,  3598,  4038,
    3731,  3746,  2257,  1273,  3622,  3624,  3625,  3737,  3743,  3414,
     847,  3749,  3748, -1435, -1434,  1273,  3752,  -779,  3753,  3781,
    2022,  3665,  3796,  2477,   610,  1884,  3665,  3789,  3665,  3795,
    3808,  3809,  3815,  1120,   897,  4063,  1420,  1421,  3824,  3825,
    4064,  1274,  1275,  3826,  3827,   880,  3837,  3028,  3842,   870,
    4234,  3844,  3845,  3612,    53,  3846,  3859,  3862,  3850,  3866,
     847,  3872, -1521,  3898,  3899,   847,  3904,  3907,  3909,  3910,
     961,   962,   963,  1274,  1275,   966,   967,  -802,   969,   970,
     971,   972,  3621,  3915,  3918,  3921, -1521,  3924,  3925,   870,
    3927,  3928,  3881,  3936,  3946,   847,  3952,  3954,  3955,  1271,
    2745,  3953,  3967,  3613,  2002,  1975,  3973,  -498,  3974,  3976,
    3977,  3981,  1486,  3983,  3984,  3991,  3996,  3650,  2754,  3654,
    4091,  1271,  4609,  3997,  3992,  3999,  4001,  3665,  4008,  4011,
    4012,  4013,  4014,  4015, -1521,  4017,  1273,  4024,  4020,  3682,
    4018,  4025,  4026,  4034,  1274,  1275,  4041,   795,  4117,  4042,
    3812,  3890,  4045,  1033,  3891,  4047,   847,   847,   847,   847,
    3614,  4048,  1274,  1275,   801,  4050,   773,   847,  4077,   803,
    4079,  4056,   804,  4080,  1274,  1275,  4065,  3965,  3212,  4084,
    1420,  1421,  4082,  3086,  4016,  3086,  3609,  1487, -1521,  4115,
    4093,  4104,  3610,  4072,  4094,  4116,  4118,  4136,  3011, -1521,
   -1521,  4137,  4141,  4145,  2772,  4148,  4149,  4154,  4181,  4150,
    1276,  1277,  1278,  1279,  1280,  1281,  1282,  1283,  4175,  3707,
   -1521,  3475, -1521,  4152,  4177,  4187,  4190,  4196,  4200,  2388,
    4212,  3034,  3611,  4206,  1341,  4219,  3708,  4214,  4215,  4221,
    3665,  3041,  3042,  1277,  1278,  1279,  1280,  1281,  1282,  1283,
    3892,  3893,  3045,  3046,  3047,  3048,  4174,  3050,  3051,  4220,
     847,  4223,  4225,  4252,  4249,  4287,  4299,  4296,  4288, -1521,
    4300, -1521,  4305,  4308, -1521, -1521,  4310,  3650,  3650,   610,
    4311,  4316,  4319,  3600,  4326,  -377,  4344,  4346,  4347,   847,
    4348,  4349,  4382,  4365,  4368,  1274,  1275,  4397,  3088,  3089,
    3090,  3091,  4363,  1273,  -395,  4400,  4425,  4426,  4427,  4428,
     610,  3612,  4430,  1276,  1277,  1278,  1279,  1280,  1281,  1282,
    1283,   897,  4449,  4452,  3477,  1273,  4453,  4460,  3122,  4461,
    4480,  1276,  1277,  1278,  1279,  1280,  1281,  1282,  1283,  4465,
    4481,   610,  4062,  1276,  1277,  1278,  1279,  1280,  1281,  1282,
    1283,  4482,  4487,  4489,  4491,  4224,  4492,  3709, -2345,  4495,
    4502,  3613,  3674,  3675,  4511,  4514,  4516,  4524,  4529,  4526,
    4531,  4530,  4535,  4540,  3710,  2477,  4541,  4544,  2477,  2477,
    4548,  4550,  2477,  2477,  2477,  2477,  2477,  2477,  2477,  2477,
    4553,   610,  2477,  4554,  4556,  4562,  1842,  4558,  4563,   847,
    4565,  4571,  4572,  3222,  3222,  4595,  4608,  4599,  4339,  3474,
    3314,  3256,  3247,  4090,  3253,  3250,  4088,  3244,  3614,  4092,
    4105,  4292,  3520,  4111,  4471,  1447,  4472,  4351,  4113,  4321,
     847,  4198,  1967,  4606,  4567,   695,  3711,  1130,  2848,  4330,
    3714,  2787,  4263,  4264,  4337,  4266,  4267,  4269,  4270,  4271,
    4272,  4273,  4576,  3712,  4274,  4508,    96,  4432,    94,    99,
    4458,  4509,  1274,  1275,  1276,  1277,  1278,  1279,  1280,  1281,
    1282,  1283,  3650,  4500,  4470,  3818,  1510,  4469,  3951,  4445,
    4277,  4278,  4448,  4279,  1274,  1275,  3523,  3519,  2573,  2099,
    3670,  3301,  3968,  3300,  3303,  3814,  4153,  4436,  4504,  4381,
     847,   847,  4479,  4156,  4478,  3677,  2705,  3299,  4318,   847,
     847,   847,   847,   847,   847,  1271,  2500,  4401,  3860,  3070,
    3861,  3586,   847,   847,  1513,   847,   847,  3630,  4071,  3628,
     847,   847,  4454,  3906,   847,   847,   847,   847,  4434,   847,
     847,  3506,  3468,  4239,   870,  4320,  4242,   847,   847,  4204,
     847,   847,   847,   847,   847,  4189,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   870,   847,  4193,   870,
     847,   847,  4103,  3538,  4442,   847,  3873,  3280,  3010,   847,
     847,   847,  3006,  1271,  2725,  4168,  3148,  2321,  3149,  3146,
    2319,  1141,   847,   847,   847,  3858,  3394,   847,  1948,  2827,
    3543,  2093,  2825,  2666,   847,  3723,  3333,  3982,   857,   847,
    2250,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,  1514,  3438,   847,  1051,  1939,  3021,   847,  4213,
     847,  1276,  1277,  1278,  1279,  1280,  1281,  1282,  1283,  1050,
    2439,  2984,  4303,  2117,  2933,  2856,  2857,  1515,  2858,  1978,
    1979,  1516,  2859,  1276,  1277,  1278,  1279,  1280,  1281,  1282,
    1283,  4143,  1797,  4004,  4301,  3929,  4302,   847,  3398,  3769,
    1146,  3310,  4513,  3385,  3855,  4161,  2502,  1749,  1610,  4521,
    4442,  1717,   579,  -783,  -783,  1981,  3979,  2775,  4600,  1952,
    1557,  1517,  2146,  -783,  1953,  3330,  3331,  3985,  2900,  1984,
    3484,  3485,  3993,  1358,  1126,  1985,  1986,  2295,  1954,  1987,
    1955,  1518,  1947,  3489,  2901,  4546,  2782,  2310,  4527,  1273,
    4551,  3562,  3729,  4049,  2224,  3828,  4542,  4610,  4607,  3989,
    4060,  2268,  3027,  1989,  2888,  1641,   691,   692,  1640,  2265,
    2277,  1044,  2821,   659,  1905,  2264,  1549,  1957,  4584,  4205,
    3001,  1990,  1049,  4211,  1606,  1342,  1842,   944,   945,     0,
    1450,    96,  1451,    94,     0,     0,     0,     0,     0,  1452,
       0,     0,     0,     0,     0,   870,  1519,     0,     0,  1842,
    1995,  4584,     0,  1978,  1979,     0,  1842,  1273,     0,     0,
       0,     0,  1842,     0,  3547,     0,     0,     0,     0,     0,
     847,     0,     0,     0,     0,  3553,   847,     0,   847,   847,
       0,     0,     1,     0,     0,     2,     0,     0,     0,  1981,
     847,   847,     0,   847,   847,     0,     0,     0,     0,     0,
       3,     0,     0,  1984,     4,     0,     0,     0,     0,  1985,
    1986,     0,     0,  1987,     0,     0,     0,  2741,     5,     6,
       0,     0,     0,  1978,  1979,     0,     7,  1999,     0,     0,
       0,     8,     9,     0,  2000,     0,     0,  1989,     0,     0,
       0,     0,  1520,     0,     0,     0,     0,    10,  1274,  1275,
       0,  1957,     0,     0,  2001,  1990,     0,     0,     0,  1981,
       0,     0,     0,     0,     0,     0,     0,    11,     0,     0,
       0,     0,     0,  1984,     0,     0,     0,     0,  1521,  1985,
    1986,     0,     0,  1987,  1995,     0,  4431,  1522,     0,    12,
    1759,  1760,  1761,  1762,  1763,     0,     0,     0,     0,    13,
      14,     0,  1523,     0,     0,     0,     0,  1989,     0,     0,
       0,    15,    16,     0,  2003,     0,  1274,  1275,     0,     0,
       0,  1957,  2477,     0,    17,  1990,     0,  1524,     0,  3666,
       0,     0,  2004,     0,  4464,     0,     0,   610,    18,     0,
     610,     0,     0,     0,     0,     0,   847,     0,     0,  4464,
     847,     0,  -498,     0,  1995,     0,   847,     0,    19,     0,
       0,  1999,  4473,   847,     0,     0,     0,     0,  2000,     0,
       0,  1525,     0,     0,     0,     0,    20,     0,    21,     0,
       0,     0,     0,    22,     0,     0,    23,  2008,  2001,     0,
       0,     0,     0,     0,     0,     0,  2009,  1764,  1765,  1766,
    1767,    24,  1526,     0,     0,     0,     0,     0,     0,    25,
       0,     0,    26,     0,     0,  4464,     0,  1276,  1277,  1278,
    1279,  1280,  1281,  1282,  1283,  4523,     0,  2742,     0,     0,
    4525,  1999,    27,     0,     0,     0,     0,     0,  2000,     0,
       0,     0,     0,   847,     0,     0,     0,   847,  2003,    28,
    1513,     0,     0,    29,     0,   847,     0,   847,  2001,     0,
       0,  4464,     0,  4464,     0,     0,  2004,     0,     0,     0,
       0,     0,     0,     0,  4464,  2014,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1276,  1277,  1278,  1279,  1280,
    1281,  1282,  1283,     0,     0,     0,     0,   847,     0,     0,
       0,     0,     0,  4464,  4464,     0,     0,     0,  4598,  1768,
       0,  1769,  1770,  1771,     0,     0,     0,     0,  2003,     0,
    1772,  2008,     0,     0,     0,     0,     0,     0,     0,     0,
    2009,     0,  2015,  2016,  2017,     0,  2004,     0,     0,  2018,
       0,     0,   847,   847,   847,     0,     0,     0,  1514,     0,
      30,     0,     0,     0,     0,     0,  2019,     0,     0,  2020,
     847,  3823,  4186,     0,     0,     0,   847,     0,     0,     0,
       0,     0,     0,  1515,   847,     0,   847,  1516,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,  2008,     0,     0,    32,  2022,     0,   852,     0,     0,
    2009,  1773,   610,     0,     0,     0,     0,     0,     0,  2014,
       0,     0,     0,     0,     0,     0,    33,  1517,     0,    34,
       0,    35,     0,     0,    36,     0,     0,     0,     0,     0,
       0,     0,  4283,     0,    37,    38,     0,  1518,     0,     0,
       0,     0,     0,     0,    39,     0,    40,     0,     0,   955,
       0,     0,  2744,     0,     0,    41,     0,     0,     0,     0,
       0,    42,     0,     0,  1774,  1775,  2015,  2016,  2017,    43,
       0,     0,     0,  2018,    44,    45,    46,     0,  3888,  2014,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    42,
    2019,     0,     0,  2020,  4309,     0,     0,  4312,  4313,  4314,
    4315,     0,  1519,     0,     0,     0,     0,    47,     0,     0,
    4283,  4283,     0,     0,    48,     0,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2022,
       0,     0,     0,     0,     0,     0,  2015,  2016,  2017,     0,
       0,     0,     0,  2018,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3957,   955,     0,     0,    49,     0,
    2019,     0,     0,  2020,     0,   847,     0,     0,     0,     0,
      50,     0,     0,     0,    51,     0,  4376,  4377,     0,     0,
       0,     0,    52,     0,     0,  4385,     0,     0,     0,     0,
       0,     0,  4283,  4283,     0,     0,     0,     0,  1520,  2022,
       0,     0,     0,     0,     0,    53,  1776,     0,     0,  4283,
    1169,     0,     0,    54,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1777,  1778,     0,     0,     0,     0,    55,
      56,    57,    58,    53,  1521,     0,     0,     0,     0,     0,
    1200,   847,     0,  1522,     0,   847,   847,     0,   847,   847,
       0,    59,     0,     0,     0,     0,     0,  4283,  1523,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4283,     0,     0,     0,     0,     0,     0,   854,
       0,     0,     0,  1524,     0,  4283,  -498,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1265,     0,     0,     0,     0,  4283,
       0,     0,   847,     0,     0,     0,     0,     0,     0,     0,
       0,  4283,  4283,     0,     0,     0,     0,  1525,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4283,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4283,     0,
       0,     0,     0,  4283,     0,   847,     0,     0,  1526,   610,
     610,   610,     0,     0,     0,     0,  4283,     0,  4283,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   547,     0,
       0,   548,  4283,     0,  4283,     0,  4283,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4083,  4283,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2477,
    4283,  4283,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4110,     0,     0,  4283,  4283,     0,     0,
       0,  4283,     0,     0,  1461,     0,     0,   847,     0,     0,
       0,     0,     0,     0,     0,     0,   847,   847,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   847,   847,     0,   847,
       0,     0,   847,   847,   847,   847,   847,     0,     0,   847,
       0,     0,     0,     0,     0,     0,     0,     0,   847,     0,
       0,     0,     0,     0,   847,     0,   847,     0,   847,   847,
       0,   847,   847,     0,     0,     0,   847,   847,   847,     0,
       0,     0,   847,   847,   847,     0,   847,     0,   847,  2058,
     847,     0,   847,     0,   847,     0,     0,     0,     0,   847,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1617,     0,     0,     0,     0,   847,
     847,     0,     0,     0,   847,     0,   847,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4185,     0,     0,     0,
       0,     0,     0,     0,     0,  1651,     0,     0,     0,     0,
       0,     0,  2059,  2060,  2061,  2062,  2063,  1310,  1311,  2064,
    2065,  2066,     0,  2067,  2068,  2069,  2070,  2071,  2072,  2073,
    2074,  2075,  2076,     0,  2077,  2078,     0,     0,     0,     0,
       0,     0,     1,     0,   847,     2,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     4,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1730,  1731,     0,     5,     6,
       0,     0,     0,     0,  1741,  1742,     7,     0,  1745,  1746,
       0,     8,     9,     0,     0,     0,     0,  1754,  1755,     0,
    1756,  1757,     0,     0,     0,  1781,     0,    10,     0,  1790,
    1791,  1792,  1793,     0,  1795,     0,     0,     0,     0,     0,
       0,     0,  1803,  1804,     0,  1807,  1808,    11,     0,     0,
       0,  1812,  1813,     0,     0,  1816,  1817,  1818,  1819,  1820,
    1821,     0,  1823,     0,     0,  1826,  1827,     0,     0,    12,
    1830,     0,     0,     0,  1833,  1837,  1838,     0,     0,    13,
      14,     0,  1312,  1313,     0,     0,     0,  1845,  1846,  1847,
       0,    15,    16,     0,     0,     0,     0,     0,     0,  1853,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,  1878,     0,  1883,     0,     0,     0,     0,
    4375,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,    21,     0,
       0,     0,  1924,    22,     0,     0,    23,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    24,     0,     0,     0,  3156,  3157,     0,     0,    25,
       0,  3158,    26,  3159,     0,  3160,  3161,  4443,  4444,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    27,  3162,     0,     0,     0,     0,     0,     0,
     847,     0,   847,     0,     0,     0,   847,     0,     0,    28,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3163,     0,     0,  3164,     0,     0,     0,
       0,     0,     0,     0,  3165,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3166,     0,   955,     0,     0,     0,     0,
       0,  2120,     0,  2121,  2122,     0,     0,     0,     0,     0,
    3167,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,     0,     0,     0,     0,     0,  3168,     0,
    3169,     0,     0,     0,     0,   847,     0,     0,     0,     0,
       0,     0,     0,     0,   847,     0,  3170,  3171,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,   847,
       0,     0,   847,     0,    32,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   847,   847,    33,     0,  3172,    34,
       0,    35,     0,     0,    36,     0,     0,     0,     0,     0,
       0,  3173,     0,     0,    37,    38,   847,     0,     0,     0,
       0,     0,     0,     0,    39,   847,    40,   847,     0,   847,
    3174,     0,     0,     0,     0,    41,     0,     0,     0,  3175,
    3176,    42,  3177,     0,     0,     0,     0,     0,     0,    43,
       0,     0,     0,   847,    44,    45,    46,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2274,     0,     0,     0,  1651,     0,     0,     0,  3178,
    3179,  3180,     0,     0,     0,     0,     0,    47,  2281,     0,
       0,     0,     0,     0,    48,     0,     0,     0,  3181,  3182,
    3183,  3518,     0,     0,     0,  3184,     0,     0,  3185,     0,
       0,     0,  3518,  3518,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3186,  3187,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    49,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      50,     0,     0,     0,    51,     0,     0,     0,     0,     0,
    3188,  3189,    52,     0,     0,     0,     0,     0,  2333,     0,
       0,     0,  2337,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2333,     0,     0,    53,  3190,     0,     0,     0,
       0,     0,     0,    54,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    59,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3191,     0,
       0,     0,  3192,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3193,     0,     0,  2409,  2411,  2413,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2435,     0,     0,     0,     0,     0,     0,     0,  2437,
       0,  2438,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3518,  3518,
       0,     0,     0,     0,  3194,     0,     0,  3195,     0,     0,
    3196,  3197,  3198,  3199,     0,     0,     0,     0,     0,     0,
       0,     0,  3144,     0,     0,     0,     0,  1975,     0,  1976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1978,  1979,   847,     0,   847,     0,     0,     0,
       0,     0,     0,  3200,  3201,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1980,     0,     0,     0,     0,  1981,     0,
       0,  3202,     0,     0,     0,     0,     0,     0,   847,     0,
       0,     0,  1984,     0,     0,     0,     0,     0,  1985,  1986,
       0,     0,  1987,     0,     0,     0,     0,     0,     0,     0,
       0,  1988,     0,     0,     0,     0,     0,  4536,     0,     0,
     847,   847,     0,     0,     0,     0,  1989,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1957,     0,   847,     0,  1990,     0,     0,     0,     0,     0,
       0,     0,  1991,     0,     0,     0,     0,     0,     0,  3145,
       0,     0,     0,     0,     0,     0,   847,  1994,   847,     0,
    2671,   847,   847,  1995,   847,     0,     0,     0,     0,     0,
       0,     0,     0,   847,     0,     0,     0,     0,   847,     0,
       0,   847,     0,   847,   847,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1997,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1974,     0,     0,     0,     0,  1975,     0,  1976,
       0,     0,  1977,     0,     0,     0,  2763,     0,     0,     0,
    1999,     0,  1978,  1979,     0,     0,     0,  2000,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   847,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2001,     0,     0,
       0,     0,     0,  1980,     0,     0,  -783,  -783,  1981,  1982,
       0,     0,     0,     0,  1983,     0,  -783,     0,     0,     0,
    2002,     0,  1984,     0,     0,     0,     0,     0,  1985,  1986,
       0,     0,  1987,     0,     0,     0,     0,  2822,     0,     0,
       0,  1988,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1989,  2003,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1957,     0,     0,     0,  1990,  2004,     0,     0,     0,  2005,
    2874,     0,  1991,  1992,     0,     0,     0,     0,     0,  1993,
       0,   847,   847,     0,     0,     0,     0,  1994,     0,     0,
       0,     0,     0,  1995,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1996,     0,     0,     0,     0,     0,
       0,     0,     0,  2007,     0,     0,     0,     0,     0,     0,
    2008,     0,  3518,  3518,     0,     0,     0,  1997,     0,  2009,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   847,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2912,     0,     0,     0,     0,     0,     0,     0,
       0,  2915,  2916,     0,     0,     0,   847,     0,  1998,     0,
    1999,     0,     0,     0,     0,     0,  2011,  2000,     0,     0,
     847,  2938,  2939,     0,  2940,     0,     0,  2943,  2944,  2945,
    2946,  2947,     0,     0,     0,     0,     0,  2001,     0,     0,
       0,     0,   847,  2951,   847,     0,     0,     0,  2014,  2952,
       0,  2953,     0,  2954,  2955,     0,  2956,     0,     0,     0,
    2002,  2959,  2960,  2961,     0,     0,     0,  2963,  2964,  2965,
       0,  2966,     0,  2968,     0,  2970,     0,  2972,     0,  2973,
       0,     0,     0,     0,  2974,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2003,     0,     0,
       0,     0,     0,     0,  1878,  2015,  2016,  2017,     0,     0,
       0,     0,  2018,     0,     0,  2004,     0,     0,     0,  2005,
    1974,     0,     0,     0,     0,  1975,     0,  1976,     0,  2019,
    1977,     0,  2020,     0,     0,     0,     0,     0,     0,     0,
    1978,  1979,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2006,     0,     0,
       0,     0,     0,  2007,     0,     0,     0,     0,  2022,  1924,
    2008,  1980,     0,     0,     0,     0,  1981,  1982,     0,  2009,
       0,     0,  1983,     0,     0,     0,     0,     0,     0,     0,
    1984,     0,     0,     0,     0,     0,  1985,  1986,     0,     0,
    1987,     0,  2023,     0,     0,  2024,     0,     0,     0,  1988,
       0,  2010,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1989,     0,  2011,  2012,  2013,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1957,     0,
       0,     0,  1990,     0,     0,     0,     0,     0,     0,     0,
    1991,  1992,     0,     0,     0,     0,     0,  1993,  2014,     0,
       0,     0,     0,     0,     0,  1994,     0,     0,     0,     0,
       0,  1995,     0,     0,     0,     0,     0,     0,     0,     0,
     847,     0,  1996,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   847,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1997,     0,     0,   847,     0,
     847,     0,     0,     0,     0,  2015,  2016,  2017,     0,     0,
       0,     0,  2018,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2019,
       0,     0,  2020,     0,     0,     0,  1998,     0,  1999,     0,
       0,     0,     0,     0,     0,  2000,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2001,     0,     0,  2022,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2002,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2023,     0,     0,  2024,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3309,     0,     0,     0,  2003,     0,     0,     0,     0,
     847,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2004,     0,     0,     0,  2005,     0,     0,
       0,     0,     0,     0,     0,   847,     0,     0,  4281,     0,
       0,     0,     0,     0,     0,  4290,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2006,     0,     0,     0,     0,
       0,  2007,     0,     0,     0,     0,     0,     0,  2008,     0,
       0,     0,     0,     0,  3156,  3157,     0,  2009,     0,     0,
    3158,     0,  3159,     0,  3160,  3161,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     847,     0,  3162,     0,     0,     0,  4281,  4281,     0,  2010,
    1651,     0,     0,     0,     0,     0,     0,     0,     0,  3395,
       0,     0,     0,     0,  2011,  2012,  2013,     0,     0,     0,
       0,     0,     0,     0,  3401,     0,     0,  3403,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3163,     0,     0,  3164,  2014,     0,     0,  3424,
    3425,     0,     0,  3165,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   847,     0,   847,     0,     0,     0,
       0,  3448,  3166,     0,     0,     0,   847,     0,  4281,  4281,
    3458,     0,  3460,     0,  3462,     0,     0,     0,     0,  3167,
       0,     0,     0,     0,     0,  4281,     0,     0,     0,     0,
       0,     0,     0,  2015,  2016,  2017,     0,     0,     0,   847,
    2018,     0,     0,     0,     0,     0,     0,  3168,     0,  3169,
       0,     0,     0,     0,     0,     0,     0,  2019,     0,     0,
    2020,     0,     0,     0,     0,  3170,  3171,     0,     0,     0,
       0,   847,     0,  4281,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2021,     0,     0,     0,     0,  4281,   847,
       0,     0,     0,     0,     0,     0,  2022,     0,     0,     0,
       0,  4281,     0,     0,     0,     0,     0,  3172,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3173,     0,     0,     0,   847,  4281,     0,     0,     0,     0,
    2023,     0,     0,  2024,     0,     0,     0,  4281,  4281,  3174,
       0,     0,     0,     0,     0,   847,     0,     0,  3175,  3176,
       0,  3177,     0,     0,  4281,     0,     0,     0,     0,     0,
       0,   847,     0,     0,  4281,     0,     0,     0,     0,  4281,
       0,     0,     0,     0,     0,   847,     0,     0,     0,     0,
       0,     0,  4281,     0,  4281,     0,     0,     0,  3178,  3179,
    3180,     0,     0,     0,     0,     0,     0,     0,  4281,     0,
    4281,     0,  4281,     0,     0,     0,     0,  3181,  3182,  3183,
       0,     0,     0,  4281,  3184,     0,     0,  3185,     0,     0,
       0,     0,     0,     0,     0,     0,  4281,  4281,     0,     0,
       0,     0,     0,   847,     0,  3186,  3187,     0,     0,     0,
       0,     0,  4281,  4281,     0,     0,     0,  4281,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3188,
    3189,     0,     0,     0,     0,     0,     0,   847,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3190,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3191,     0,     0,
       0,  3192,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3193,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3739,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1924,  3768,     0,     0,     0,
       0,     0,     0,  3194,     0,     0,  3195,     0,     0,  3196,
    3197,  3198,  3199,     0,     0,     0,     0,  3775,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3785,     0,  1924,     0,     0,  3790,  3791,     0,     0,
       0,     0,  3200,  3201,     0,     0,     0,     0,  3798,     0,
       0,     0,     0,  3800,     0,     0,  3801,     0,  3802,  3803,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3202,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3840,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3919,  3920,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   158,     0,   159,   160,
     161,   162,   163,     0,     0,     0,     0,     0,     0,     0,
     165,     0,     0,     0,     0,   167,   168,   169,   170,   171,
       0,     0,  -397,     0,     0,     0,   174,     0,     0,     0,
     175,  3739,     0,   176,   177,   178,     0,   179,     0,     0,
       0,     0,     0,   182,  4254,  3739,   183,   184,     0,   185,
     186,     0,     0,     0,     0,   189,   190,   191,  4255,   193,
     194,     0,   195,   196,     0,   197,   198,  3998,   200,  4000,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,     0,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,     0,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,     0,     0,     0,     0,     0,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,     0,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,     0,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,  4256,   258,   259,   260,   261,   262,     0,     0,
       0,     0,     0,     0,     0,     0,   266,     0,   267,     0,
       0,     0,   268,     0,     0,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,     0,   276,     0,     0,     0,
       0,     0,   279,     0,     0,     0,   280,   281,   282,   283,
    4257,     0,   284,     0,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,     0,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,  4258,     0,     0,
     296,     0,   297,     0,     0,     0,   299,     0,     0,   300,
    4259,     0,   301,   302,     0,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,  -352,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,  3739,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,  1924,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,  1924,   346,  4147,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,   360,   361,   362,     0,     0,     0,     0,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,  4260,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   373,   374,     0,     0,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
       0,     0,   413,     0,   415,  -352,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,     0,     0,   425,     0,
       0,   427,   428,   429,  4261,   430,     0,     0,     0,   432,
     433,   434,   435,   436,   437,   438,   439,     0,   441,   442,
       0,   443,     0,     0,     0,     0,   445,   446,   447,     0,
    4251,     0,     0,   449,     0,     0,     0,     0,     0,     0,
     452,     0,   454,     0,   455,     0,     0,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,     0,
     470,   471,   472,   473,     0,     0,     0,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,     0,   492,   493,  4325,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,     0,     0,     0,
       0,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,     0,     0,     0,     0,   510,     0,     0,   511,     0,
       0,     0,   513,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,  -352,     0,     0,     0,
     523,   524,     0,     0,   526,     0,   528,   529,     0,  4395,
     530,  4396,     0,     0,     0,     0,     0,     0,     0,   534,
       0,  4404,     0,     0,     0,     0,     0,     0,   535,   536,
     537,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4597,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4462,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4467,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4485,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4515,     0,     0,   157,
     158,     0,   719,   160,   161,   162,   163,     0,     0,   164,
    4528,     0,     0,     0,   165,     0,     0,   720,     0,   167,
     168,   169,   170,   721,   172,     0,   173,     0,     0,   722,
     174,   723,   724,   725,   175,   726,     0,   176,   177,   178,
    1834,   179,     0,   180,   181,     0,     0,   182,   727,   728,
     183,   184,     0,   185,   186,   729,   730,   188,     0,   189,
     190,   191,   192,   731,   194,     0,   732,   196,  4585,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
     733,   734,   215,     0,     0,     0,   735,   216,   736,     0,
     217,   737,   738,     0,   218,   219,   220,   739,   740,   741,
       0,     0,  3739,     0,   742,   223,   743,     0,     0,   744,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,   745,     0,   251,   252,   253,
     254,   255,   746,   747,   256,   257,     0,   258,   259,   260,
     261,   262,   748,     0,   263,   264,     0,     0,     0,   749,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   750,
     271,   751,     0,   273,     0,   274,     0,   752,     0,   275,
     276,     0,   277,   753,     0,   278,   279,     0,     0,     0,
     754,   281,   282,   283,   755,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,   756,   288,   289,   290,   757,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,  1835,   300,     0,   758,   301,   302,     0,     0,
       0,     0,     0,   759,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,   760,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   761,   331,   332,   333,   334,   762,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   763,
     342,     0,     0,   764,   344,   765,   345,     0,   346,   766,
     767,   768,   769,   770,   351,   352,   353,   354,   355,     0,
     771,   356,   357,     0,     0,   358,   359,   360,   361,   362,
     772,   951,   773,   363,   364,     0,   774,   775,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,   776,   375,     0,   376,     0,   377,   378,   777,   380,
     381,   382,   383,   778,   779,   386,   780,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   781,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,   782,
     783,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   784,
       0,   785,   431,   432,   433,   434,   435,   436,   786,   787,
     439,   440,   441,   442,     0,   788,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,   789,   790,
     474,   475,     0,     0,   476,   477,   791,   479,   480,   481,
     792,   793,   482,   483,   484,   485,   794,   486,   487,     0,
       0,   488,   489,   490,   491,     0,   795,   492,   493,     0,
     796,   797,   798,   799,     0,     0,     0,     0,  1836,   498,
     499,     0,   800,   801,   802,   501,   502,   503,   803,   504,
     505,   804,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   805,   514,     0,     0,
     806,   807,   808,   515,   809,   516,     0,     0,   517,   810,
       0,   811,   518,     0,   519,   520,   812,   813,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   814,     0,     0,     0,   531,     0,
     532,   533,     0,   534,     0,     0,     0,     0,     0,   815,
     816,     0,   535,   536,   537,   817,     0,     0,     0,   818,
     819,     0,     0,     0,     0,   820,     0,   821,     0,     0,
       0,   822,   823,     0,     0,   824,   825,   157,   158,     0,
     719,   160,   161,   162,   163,     0,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   720,     0,   167,   168,   169,
     170,   721,   172,     0,   173,     0,     0,   722,   174,   723,
     724,   725,   175,   726,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,   727,   728,   183,   184,
       0,   185,   186,   729,   730,   188,     0,   189,   190,   191,
     192,   731,   194,     0,   732,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,   733,   734,
     215,     0,     0,     0,   735,   216,   736,     0,   217,   737,
     738,     0,   218,   219,   220,   739,   740,   741,     0,     0,
       0,     0,   742,   223,   743,     0,     0,   744,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,   250,   745,     0,   251,   252,   253,   254,   255,
     746,   747,   256,   257,     0,   258,   259,   260,   261,   262,
     748,     0,   263,   264,     0,     0,     0,   749,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   750,   271,   751,
       0,   273,     0,   274,     0,   752,     0,   275,   276,     0,
     277,   753,     0,   278,   279,     0,     0,     0,   754,   281,
     282,   283,   755,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,   756,   288,   289,   290,   757,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,   758,   301,   302,     0,     0,     0,     0,
       0,   759,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,   760,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   761,   331,   332,   333,   334,   762,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   763,   342,     0,
       0,   764,   344,   765,   345,     0,   346,   766,   767,   768,
     769,   770,   351,   352,   353,   354,   355,     0,   771,   356,
     357,     0,     0,   358,   359,   360,   361,   362,   772,   951,
     773,   363,   364,     0,   774,   775,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,   776,
     375,     0,   376,     0,   377,   378,   777,   380,   381,   382,
     383,   778,   779,   386,   780,   387,     0,   388,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   781,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,   412,     0,   413,   414,   415,   782,   783,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   784,     0,   785,
     431,   432,   433,   434,   435,   436,   786,   787,   439,   440,
     441,   442,     0,   788,   444,    42,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,   789,   790,   474,   475,
       0,     0,   476,   477,   791,   479,   480,   481,   792,   793,
     482,   483,   484,   485,   794,   486,   487,     0,     0,   488,
     489,   490,   491,     0,   795,   492,   493,     0,   796,   797,
     798,   799,     0,     0,     0,     0,     0,   498,   499,     0,
     800,   801,   802,   501,   502,   503,   803,   504,   505,   804,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   805,   514,     0,     0,   806,   807,
     808,   515,   809,   516,     0,     0,   517,   810,     0,   811,
     518,     0,   519,   520,   812,   813,     0,     0,     0,    53,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   814,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,   815,   816,     0,
     535,   536,   537,   817,     0,     0,     0,   818,   819,     0,
       0,     0,     0,   820,     0,   821,     0,     0,     0,   822,
     823,     0,     0,   824,   825,   157,   158,     0,   719,   160,
     161,   162,   163,  1647,     0,   164,     0,     0,     0,     0,
     165,     0,     0,   720,     0,   167,   168,   169,   170,   721,
     172,     0,   173,     0,     0,  1648,   174,   723,   724,   725,
     175,   726,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,   727,   728,   183,   184,     0,   185,
     186,   729,   730,   188,     0,   189,   190,   191,   192,   731,
     194,     0,   732,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,   733,   734,   215,     0,
       0,     0,   735,   216,   736,     0,   217,   737,   738,     0,
     218,   219,   220,   739,   740,   741,     0,     0,     0,     0,
     742,   223,   743,     0,     0,  1649,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,   745,     0,   251,   252,   253,   254,   255,   746,   747,
     256,   257,     0,   258,   259,   260,   261,   262,   748,     0,
     263,   264,     0,     0,     0,   749,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   750,   271,   751,     0,   273,
       0,   274,     0,   752,     0,   275,   276,     0,   277,   753,
       0,   278,   279,     0,     0,     0,   754,   281,   282,   283,
     755,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,   756,   288,   289,   290,   757,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,   758,   301,   302,     0,     0,     0,     0,     0,   759,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
     760,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   761,
     331,   332,   333,   334,   762,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   763,   342,     0,     0,   764,
     344,   765,   345,     0,   346,   766,   767,   768,   769,   770,
     351,   352,   353,   354,   355,     0,   771,   356,   357,     0,
       0,   358,   359,   360,   361,   362,   772,   951,   773,   363,
     364,     0,   774,   775,   365,     0,   366,   367,  1650,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,   776,   375,     0,
     376,     0,   377,   378,   777,   380,   381,   382,   383,   778,
     779,   386,   780,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   781,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,   782,   783,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   784,     0,   785,   431,   432,
     433,   434,   435,   436,   786,   787,   439,   440,   441,   442,
       0,   788,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,   789,   790,   474,   475,     0,     0,
     476,   477,   791,   479,   480,   481,   792,   793,   482,   483,
     484,   485,   794,   486,   487,     0,     0,   488,   489,   490,
     491,     0,   795,   492,   493,     0,   796,   797,   798,   799,
       0,     0,     0,     0,     0,   498,   499,     0,   800,   801,
     802,   501,   502,   503,   803,   504,   505,   804,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   805,   514,     0,     0,   806,   807,   808,   515,
     809,   516,     0,     0,   517,   810,     0,   811,   518,     0,
     519,   520,   812,   813,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     814,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,   815,   816,     0,   535,   536,
     537,   817,     0,     0,     0,   818,   819,     0,     0,     0,
       0,   820,     0,   821,     0,     0,     0,   822,   823,     0,
       0,   824,   825,   157,   158,     0,   719,   160,   161,   162,
     163,     0,     0,   164,     0,     0,     0,     0,   165,     0,
       0,   720,     0,   167,   168,   169,   170,   721,   172,     0,
     173,     0,     0,   722,   174,   723,   724,   725,   175,   726,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,   727,   728,   183,   184,     0,   185,   186,   729,
     730,   188,     0,   189,   190,   191,   192,   731,   194,     0,
     732,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,   733,   734,   215,     0,     0,     0,
     735,   216,   736,     0,   217,   737,   738,     0,   218,   219,
     220,   739,   740,   741,     0,     0,     0,     0,   742,   223,
     743,     0,     0,   744,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,   745,
       0,   251,   252,   253,   254,   255,   746,   747,   256,   257,
       0,   258,   259,   260,   261,   262,   748,     0,   263,   264,
       0,     0,     0,   749,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   750,   271,   751,     0,   273,     0,   274,
       0,   752,     0,   275,   276,     0,   277,   753,     0,   278,
     279,     0,     0,     0,   754,   281,   282,   283,   755,     0,
     284,   285,   286,     0,     0,   287,     0,     0,     0,   756,
     288,   289,   290,   757,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,   758,
     301,   302,     0,     0,     0,     0,     0,   759,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,   760,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   761,   331,   332,
     333,   334,   762,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   763,   342,     0,     0,   764,   344,   765,
     345,     0,   346,   766,   767,   768,   769,   770,   351,   352,
     353,   354,   355,     0,   771,   356,   357,     0,     0,   358,
     359,   360,   361,   362,   772,   951,   773,   363,   364,     0,
     774,   775,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,   776,   375,     0,   376,     0,
     377,   378,   777,   380,   381,   382,   383,   778,   779,   386,
     780,   387,     0,   388,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   781,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,   782,   783,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   784,     0,   785,   431,   432,   433,   434,
     435,   436,   786,   787,   439,   440,   441,   442,     0,   788,
     444,     0,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,   789,   790,   474,   475,     0,     0,   476,   477,
     791,   479,   480,   481,   792,   793,   482,   483,   484,   485,
     794,   486,   487,     0,     0,   488,   489,   490,   491,     0,
     795,   492,   493,     0,   796,   797,   798,   799,     0,     0,
       0,     0,     0,   498,   499,     0,   800,   801,   802,   501,
     502,   503,   803,   504,   505,   804,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     805,   514,     0,     0,   806,   807,   808,   515,   809,   516,
       0,     0,   517,   810,     0,   811,   518,     0,   519,   520,
     812,   813,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   814,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,   815,   816,     0,   535,   536,   537,   817,
       0,     0,     0,   818,   819,   952,     0,     0,     0,   820,
       0,   821,     0,     0,     0,   822,   823,     0,     0,   824,
     825,   157,   158,     0,   719,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   720,
       0,   167,   168,   169,   170,   721,   172,     0,   173,     0,
       0,   722,   174,   723,   724,   725,   175,   726,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
     727,   728,   183,   184,     0,   185,   186,   729,   730,   188,
       0,   189,   190,   191,   192,   731,   194,     0,   732,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,   733,   734,   215,     0,     0,     0,   735,   216,
     736,     0,   217,   737,   738,     0,   218,   219,   220,   739,
     740,   741,     0,     0,     0,     0,   742,   223,   743,     0,
       0,   744,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,   745,     0,   251,
     252,   253,   254,   255,   746,   747,   256,   257,     0,   258,
     259,   260,   261,   262,   748,     0,   263,   264,     0,     0,
       0,   749,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   750,   271,   751,     0,   273,     0,   274,     0,   752,
       0,   275,   276,     0,   277,   753,     0,   278,   279,     0,
       0,     0,   754,   281,   282,   283,   755,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,   756,   288,   289,
     290,   757,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,   758,   301,   302,
       0,     0,     0,     0,     0,   759,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,   760,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   761,   331,   332,   333,   334,
     762,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   763,   342,     0,     0,   764,   344,   765,   345,     0,
     346,   766,   767,   768,   769,   770,   351,   352,   353,   354,
     355,     0,   771,   356,   357,     0,     0,   358,   359,   360,
     361,   362,   772,   951,   773,   363,   364,     0,   774,   775,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,   776,   375,     0,   376,     0,   377,   378,
     777,   380,   381,   382,   383,   778,   779,   386,   780,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   781,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,   782,   783,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   784,     0,   785,   431,   432,   433,   434,   435,   436,
     786,   787,   439,   440,   441,   442,     0,   788,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
     789,   790,   474,   475,     0,     0,   476,   477,   791,   479,
     480,   481,   792,   793,   482,   483,   484,   485,   794,   486,
     487,     0,     0,   488,   489,   490,   491,     0,   795,   492,
     493,     0,   796,   797,   798,   799,     0,     0,     0,     0,
       0,   498,   499,     0,   800,   801,   802,   501,   502,   503,
     803,   504,   505,   804,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   805,   514,
       0,     0,   806,   807,   808,   515,   809,   516,     0,     0,
     517,   810,     0,   811,   518,     0,   519,   520,   812,   813,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   814,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,   815,   816,     0,   535,   536,   537,   817,     0,     0,
       0,   818,   819,  2351,     0,     0,     0,   820,     0,   821,
       0,     0,     0,   822,   823,     0,     0,   824,   825,   157,
     158,     0,   719,   160,   161,   162,   163,     0,     0,   164,
       0,     0,     0,     0,   165,     0,     0,   720,     0,   167,
     168,   169,   170,   721,   172,     0,   173,     0,     0,   722,
     174,   723,   724,   725,   175,   726,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,   727,   728,
     183,   184,     0,   185,   186,   729,   730,   188,     0,   189,
     190,   191,   192,   731,   194,     0,   732,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
     733,   734,   215,     0,     0,     0,   735,   216,   736,     0,
     217,   737,   738,     0,   218,   219,   220,   739,   740,   741,
       0,     0,     0,     0,   742,   223,   743,     0,     0,   744,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,   745,     0,   251,   252,   253,
     254,   255,   746,   747,   256,   257,     0,   258,   259,   260,
     261,   262,   748,     0,   263,   264,     0,     0,     0,   749,
     266,  2408,   267,     0,     0,     0,   268,     0,   269,   750,
     271,   751,     0,   273,     0,   274,     0,   752,     0,   275,
     276,     0,   277,   753,     0,   278,   279,     0,     0,     0,
     754,   281,   282,   283,   755,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,   756,   288,   289,   290,   757,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,   758,   301,   302,     0,     0,
       0,     0,     0,   759,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,   760,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   761,   331,   332,   333,   334,   762,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   763,
     342,     0,     0,   764,   344,   765,   345,     0,   346,   766,
     767,   768,   769,   770,   351,   352,   353,   354,   355,     0,
     771,   356,   357,     0,     0,   358,   359,   360,   361,   362,
     772,   951,   773,   363,   364,     0,   774,   775,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,   776,   375,     0,   376,     0,   377,   378,   777,   380,
     381,   382,   383,   778,   779,   386,   780,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   781,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,   782,
     783,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   784,
       0,   785,   431,   432,   433,   434,   435,   436,   786,   787,
     439,   440,   441,   442,     0,   788,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,   789,   790,
     474,   475,     0,     0,   476,   477,   791,   479,   480,   481,
     792,   793,   482,   483,   484,   485,   794,   486,   487,     0,
       0,   488,   489,   490,   491,     0,   795,   492,   493,     0,
     796,   797,   798,   799,     0,     0,     0,     0,     0,   498,
     499,     0,   800,   801,   802,   501,   502,   503,   803,   504,
     505,   804,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   805,   514,     0,     0,
     806,   807,   808,   515,   809,   516,     0,     0,   517,   810,
       0,   811,   518,     0,   519,   520,   812,   813,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   814,     0,     0,     0,   531,     0,
     532,   533,     0,   534,     0,     0,     0,     0,     0,   815,
     816,     0,   535,   536,   537,   817,     0,     0,     0,   818,
     819,     0,     0,     0,     0,   820,     0,   821,     0,     0,
       0,   822,   823,     0,     0,   824,   825,   157,   158,     0,
     719,   160,   161,   162,   163,     0,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   720,     0,   167,   168,   169,
     170,   721,   172,     0,   173,     0,     0,   722,   174,   723,
     724,   725,   175,   726,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,   727,   728,   183,   184,
       0,   185,   186,   729,   730,   188,     0,   189,   190,   191,
     192,   731,   194,     0,   732,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,   733,   734,
     215,     0,     0,     0,   735,   216,   736,     0,   217,   737,
     738,     0,   218,   219,   220,   739,   740,   741,     0,     0,
       0,     0,   742,   223,   743,     0,     0,   744,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,   250,   745,     0,   251,   252,   253,   254,   255,
     746,   747,   256,   257,     0,   258,   259,   260,   261,   262,
     748,     0,   263,   264,     0,     0,     0,   749,   266,  2410,
     267,     0,     0,     0,   268,     0,   269,   750,   271,   751,
       0,   273,     0,   274,     0,   752,     0,   275,   276,     0,
     277,   753,     0,   278,   279,     0,     0,     0,   754,   281,
     282,   283,   755,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,   756,   288,   289,   290,   757,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,   758,   301,   302,     0,     0,     0,     0,
       0,   759,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,   760,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   761,   331,   332,   333,   334,   762,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   763,   342,     0,
       0,   764,   344,   765,   345,     0,   346,   766,   767,   768,
     769,   770,   351,   352,   353,   354,   355,     0,   771,   356,
     357,     0,     0,   358,   359,   360,   361,   362,   772,   951,
     773,   363,   364,     0,   774,   775,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,   776,
     375,     0,   376,     0,   377,   378,   777,   380,   381,   382,
     383,   778,   779,   386,   780,   387,     0,   388,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   781,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,   412,     0,   413,   414,   415,   782,   783,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   784,     0,   785,
     431,   432,   433,   434,   435,   436,   786,   787,   439,   440,
     441,   442,     0,   788,   444,     0,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,   789,   790,   474,   475,
       0,     0,   476,   477,   791,   479,   480,   481,   792,   793,
     482,   483,   484,   485,   794,   486,   487,     0,     0,   488,
     489,   490,   491,     0,   795,   492,   493,     0,   796,   797,
     798,   799,     0,     0,     0,     0,     0,   498,   499,     0,
     800,   801,   802,   501,   502,   503,   803,   504,   505,   804,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   805,   514,     0,     0,   806,   807,
     808,   515,   809,   516,     0,     0,   517,   810,     0,   811,
     518,     0,   519,   520,   812,   813,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   814,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,   815,   816,     0,
     535,   536,   537,   817,     0,     0,     0,   818,   819,     0,
       0,     0,     0,   820,     0,   821,     0,     0,     0,   822,
     823,     0,     0,   824,   825,   157,   158,     0,   719,   160,
     161,   162,   163,     0,     0,   164,     0,     0,     0,     0,
     165,     0,     0,   720,     0,   167,   168,   169,   170,   721,
     172,     0,   173,     0,     0,   722,   174,   723,   724,   725,
     175,   726,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,   727,   728,   183,   184,     0,   185,
     186,   729,   730,   188,     0,   189,   190,   191,   192,   731,
     194,     0,   732,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,   733,   734,   215,     0,
       0,     0,   735,   216,   736,     0,   217,   737,   738,     0,
     218,   219,   220,   739,   740,   741,     0,     0,     0,     0,
     742,   223,   743,     0,     0,   744,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,   745,     0,   251,   252,   253,   254,   255,   746,   747,
     256,   257,     0,   258,   259,   260,   261,   262,   748,     0,
     263,   264,     0,     0,     0,   749,   266,  2412,   267,     0,
       0,     0,   268,     0,   269,   750,   271,   751,     0,   273,
       0,   274,     0,   752,     0,   275,   276,     0,   277,   753,
       0,   278,   279,     0,     0,     0,   754,   281,   282,   283,
     755,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,   756,   288,   289,   290,   757,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,   758,   301,   302,     0,     0,     0,     0,     0,   759,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
     760,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   761,
     331,   332,   333,   334,   762,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   763,   342,     0,     0,   764,
     344,   765,   345,     0,   346,   766,   767,   768,   769,   770,
     351,   352,   353,   354,   355,     0,   771,   356,   357,     0,
       0,   358,   359,   360,   361,   362,   772,   951,   773,   363,
     364,     0,   774,   775,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,   776,   375,     0,
     376,     0,   377,   378,   777,   380,   381,   382,   383,   778,
     779,   386,   780,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   781,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,   782,   783,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   784,     0,   785,   431,   432,
     433,   434,   435,   436,   786,   787,   439,   440,   441,   442,
       0,   788,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,   789,   790,   474,   475,     0,     0,
     476,   477,   791,   479,   480,   481,   792,   793,   482,   483,
     484,   485,   794,   486,   487,     0,     0,   488,   489,   490,
     491,     0,   795,   492,   493,     0,   796,   797,   798,   799,
       0,     0,     0,     0,     0,   498,   499,     0,   800,   801,
     802,   501,   502,   503,   803,   504,   505,   804,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   805,   514,     0,     0,   806,   807,   808,   515,
     809,   516,     0,     0,   517,   810,     0,   811,   518,     0,
     519,   520,   812,   813,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     814,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,   815,   816,     0,   535,   536,
     537,   817,     0,     0,     0,   818,   819,     0,     0,     0,
       0,   820,     0,   821,     0,     0,     0,   822,   823,     0,
       0,   824,   825,   157,   158,     0,   719,   160,   161,   162,
     163,     0,     0,   164,     0,     0,     0,     0,   165,     0,
       0,   720,     0,   167,   168,   169,   170,   721,   172,     0,
     173,     0,     0,   722,   174,   723,   724,   725,   175,   726,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,   727,   728,   183,   184,     0,   185,   186,   729,
     730,   188,     0,   189,   190,   191,   192,   731,   194,     0,
     732,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,   733,   734,   215,     0,     0,     0,
     735,   216,   736,     0,   217,   737,   738,     0,   218,   219,
     220,   739,   740,   741,     0,     0,     0,     0,   742,   223,
     743,     0,     0,   744,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,   745,
       0,   251,   252,   253,   254,   255,   746,   747,   256,   257,
       0,   258,   259,   260,   261,   262,   748,     0,   263,   264,
       0,     0,     0,   749,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   750,   271,   751,     0,   273,     0,   274,
       0,   752,     0,   275,   276,     0,   277,   753,     0,   278,
     279,     0,     0,     0,   754,   281,   282,   283,   755,     0,
     284,   285,   286,     0,     0,   287,     0,     0,     0,   756,
     288,   289,   290,   757,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,   758,
     301,   302,     0,     0,     0,     0,     0,   759,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,   760,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   761,   331,   332,
     333,   334,   762,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   763,   342,     0,     0,   764,   344,   765,
     345,     0,   346,   766,   767,   768,   769,   770,   351,   352,
     353,   354,   355,     0,   771,   356,   357,     0,     0,   358,
     359,   360,   361,   362,   772,   951,   773,   363,   364,     0,
     774,   775,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,   776,   375,     0,   376,     0,
     377,   378,   777,   380,   381,   382,   383,   778,   779,   386,
     780,   387,     0,   388,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   781,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,   782,   783,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   784,     0,   785,   431,   432,   433,   434,
     435,   436,   786,   787,   439,   440,   441,   442,     0,   788,
     444,     0,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,   789,   790,   474,   475,     0,     0,   476,   477,
     791,   479,   480,   481,   792,   793,   482,   483,   484,   485,
     794,   486,   487,     0,     0,   488,   489,   490,   491,     0,
     795,   492,   493,     0,   796,   797,   798,   799,     0,     0,
       0,     0,     0,   498,   499,     0,   800,   801,   802,   501,
     502,   503,   803,   504,   505,   804,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     805,   514,     0,     0,   806,   807,   808,   515,   809,   516,
       0,     0,   517,   810,     0,   811,   518,     0,   519,   520,
     812,   813,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   814,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,   815,   816,     0,   535,   536,   537,   817,
       0,     0,     0,   818,   819,     0,     0,     0,     0,   820,
       0,   821,     0,     0,     0,   822,   823,     0,     0,   824,
     825,   157,   158,     0,   719,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   720,
       0,   167,   168,   169,   170,   721,   172,     0,   173,     0,
       0,   722,   174,   723,   724,   725,   175,   726,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
     727,   728,   183,   184,     0,   185,   186,   729,   730,   188,
       0,   189,   190,   191,   192,   731,   194,     0,   732,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,   733,   734,   215,     0,     0,     0,   735,   216,
     736,     0,   217,   737,   738,     0,   218,   219,   220,   739,
     740,   741,     0,     0,     0,     0,   742,   223,   743,     0,
       0,   744,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,   745,     0,   251,
     252,   253,   254,   255,   746,   747,   256,   257,     0,   258,
     259,   260,   261,   262,   748,     0,   263,   264,     0,     0,
       0,   749,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   750,   271,   751,     0,   273,     0,   274,     0,   752,
       0,   275,   276,     0,   277,   753,     0,   278,   279,     0,
       0,     0,   754,   281,   282,   283,   755,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,   756,   288,   289,
     290,   757,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,   758,   301,   302,
       0,     0,     0,     0,     0,   759,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,   760,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   761,   331,   332,   333,   334,
     762,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   763,   342,     0,     0,   764,   344,   765,   345,     0,
     346,   766,   767,   768,   769,   770,   351,   352,   353,   354,
     355,     0,   771,   356,   357,     0,     0,   358,   359,   360,
     361,   362,   772,   951,   773,   363,   364,     0,   774,   775,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,   776,   375,     0,   376,     0,   377,   378,
     777,   380,   381,   382,   383,   778,   779,   386,   780,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   781,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,   782,   783,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   784,     0,   785,   431,   432,   433,   434,   435,   436,
     786,   787,   439,   440,   441,   442,     0,   788,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
     789,   790,   474,   475,     0,     0,   476,   477,   791,   479,
     480,   481,   792,   793,   482,   483,   484,   485,   794,   486,
     487,     0,     0,   488,   489,   490,   491,     0,   795,   492,
     493,     0,   796,   797,   798,   799,     0,     0,     0,     0,
       0,   498,   499,     0,   800,   801,   802,   501,   502,   503,
     803,   504,   505,   804,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   805,   514,
       0,     0,   806,   807,   808,   515,   809,   516,     0,     0,
     517,   810,     0,   811,   518,     0,   519,   520,   812,   813,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   814,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,   815,   816,     0,   535,   536,   537,   817,     0,     0,
       0,   818,   819,     0,     0,     0,     0,   820,     0,  1199,
       0,     0,     0,   822,   823,     0,     0,   824,   825,   157,
     158,     0,   719,   160,   161,   162,   163,  2128,     0,   164,
       0,     0,     0,     0,  2129,     0,     0,   720,     0,   167,
     168,   169,   170,   721,   172,     0,   173,     0,     0,   722,
     174,   723,   724,   725,   175,   726,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,   727,   728,
     183,   184,     0,   185,   186,   729,   730,   188,     0,   189,
     190,   191,   192,   731,   194,     0,   732,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
     733,   734,   215,     0,     0,     0,   735,   216,   736,     0,
     217,   737,   738,     0,   218,   219,   220,   739,   740,   741,
       0,     0,     0,     0,   742,   223,   743,     0,     0,   744,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,   745,     0,   251,   252,   253,
     254,   255,   746,   747,   256,   257,     0,   258,   259,   260,
     261,   262,   748,     0,   263,   264,     0,     0,     0,   749,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   750,
     271,   751,     0,   273,     0,   274,     0,   752,     0,   275,
     276,     0,   277,   753,     0,   278,   279,     0,     0,     0,
     754,   281,   282,   283,   755,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,   756,   288,   289,   290,   757,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,   758,   301,   302,     0,     0,
       0,     0,     0,   759,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,   760,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   761,   331,   332,   333,   334,   762,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   763,
     342,     0,     0,   764,   344,   765,   345,     0,   346,   766,
     767,   768,   769,   770,   351,   352,   353,   354,   355,     0,
     771,   356,   357,     0,     0,   358,   359,   360,   361,   362,
     772,     0,   773,   363,   364,     0,   774,   775,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,   776,   375,     0,   376,     0,   377,   378,   777,   380,
     381,   382,   383,   778,   779,   386,   780,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   781,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,   782,
     783,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   784,
       0,   785,   431,   432,   433,   434,   435,   436,   786,   787,
     439,   440,   441,   442,     0,   788,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,   789,   790,
     474,   475,     0,     0,   476,   477,   791,   479,   480,   481,
     792,   793,   482,   483,   484,   485,   794,   486,   487,     0,
       0,   488,   489,   490,   491,     0,   795,   492,   493,     0,
     796,   797,   798,   799,     0,     0,     0,     0,     0,   498,
     499,     0,   800,   801,   802,   501,   502,   503,   803,   504,
     505,   804,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   805,   514,     0,     0,
     806,   807,   808,   515,   809,   516,     0,     0,   517,   810,
       0,   811,   518,     0,   519,   520,   812,   813,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   814,     0,     0,     0,   531,     0,
     532,   533,     0,   534,     0,     0,     0,     0,     0,   815,
     816,     0,   535,   536,   537,   817,     0,     0,     0,   818,
     819,     0,     0,     0,     0,   820,     0,   821,     0,     0,
       0,   822,   823,     0,     0,   824,   825,   157,   158,     0,
     719,   160,   161,   162,   163,     0,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   720,     0,   167,   168,   169,
     170,   721,   172,     0,   173,     0,     0,   722,   174,   723,
     724,   725,   175,   726,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,   727,   728,   183,   184,
       0,   185,   186,   729,   730,   188,     0,   189,   190,   191,
     192,   731,   194,     0,   732,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,   733,   734,
     215,     0,     0,     0,   735,   216,   736,     0,   217,   737,
     738,     0,   218,   219,   220,   739,   740,   741,     0,     0,
       0,     0,   742,   223,   743,     0,     0,   744,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,   250,   745,     0,   251,   252,   253,   254,   255,
     746,   747,   256,   257,     0,   258,   259,   260,   261,   262,
     748,     0,   263,   264,     0,     0,     0,   749,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   750,   271,   751,
       0,   273,     0,   274,     0,   752,     0,   275,   276,     0,
     277,   753,     0,   278,   279,     0,     0,     0,   754,   281,
     282,   283,   755,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,   756,   288,   289,   290,  2911,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,   758,   301,   302,     0,     0,     0,     0,
       0,   759,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,   760,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   761,   331,   332,   333,   334,   762,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   763,   342,     0,
       0,   764,   344,   765,   345,     0,   346,   766,   767,   768,
     769,   770,   351,   352,   353,   354,   355,     0,   771,   356,
     357,     0,     0,   358,   359,   360,   361,   362,   772,   951,
     773,   363,   364,     0,   774,   775,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,   776,
     375,     0,   376,     0,   377,   378,   777,   380,   381,   382,
     383,   778,   779,   386,   780,   387,     0,   388,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   781,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,   412,     0,   413,   414,   415,   782,   783,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   784,     0,   785,
     431,   432,   433,   434,   435,   436,   786,   787,   439,   440,
     441,   442,     0,   788,   444,     0,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,   789,   790,   474,   475,
       0,     0,   476,   477,   791,   479,   480,   481,   792,   793,
     482,   483,   484,   485,   794,   486,   487,     0,     0,   488,
     489,   490,   491,     0,   795,   492,   493,     0,   796,   797,
     798,   799,     0,     0,     0,     0,     0,   498,   499,     0,
     800,   801,   802,   501,   502,   503,   803,   504,   505,   804,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   805,   514,     0,     0,   806,   807,
     808,   515,   809,   516,     0,     0,   517,   810,     0,   811,
     518,     0,   519,   520,   812,   813,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   814,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,   815,   816,     0,
     535,   536,   537,   817,     0,     0,     0,   818,   819,     0,
       0,     0,     0,   820,     0,   821,     0,     0,     0,   822,
     823,     0,     0,   824,   825,   157,   158,     0,   719,   160,
     161,   162,   163,     0,     0,   164,     0,     0,     0,     0,
     165,     0,     0,   720,     0,   167,   168,   169,   170,   721,
     172,     0,   173,     0,     0,   722,   174,   723,   724,   725,
     175,   726,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,   727,   728,   183,   184,     0,   185,
     186,   729,   730,   188,     0,   189,   190,   191,   192,   731,
     194,     0,   732,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,   733,   734,   215,     0,
       0,     0,   735,   216,   736,     0,   217,   737,   738,     0,
     218,   219,   220,   739,   740,   741,     0,     0,     0,     0,
     742,   223,   743,     0,     0,   744,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,   745,     0,   251,   252,   253,   254,   255,   746,   747,
     256,   257,     0,   258,   259,   260,   261,   262,   748,     0,
     263,   264,     0,     0,     0,   749,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   750,   271,   751,     0,   273,
       0,   274,     0,   752,     0,   275,   276,     0,   277,   753,
       0,   278,   279,     0,     0,     0,   754,   281,   282,   283,
     755,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,   756,   288,   289,   290,  2958,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,   758,   301,   302,     0,     0,     0,     0,     0,   759,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
     760,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   761,
     331,   332,   333,   334,   762,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   763,   342,     0,     0,   764,
     344,   765,   345,     0,   346,   766,   767,   768,   769,   770,
     351,   352,   353,   354,   355,     0,   771,   356,   357,     0,
       0,   358,   359,   360,   361,   362,   772,   951,   773,   363,
     364,     0,   774,   775,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,   776,   375,     0,
     376,     0,   377,   378,   777,   380,   381,   382,   383,   778,
     779,   386,   780,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   781,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,   782,   783,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   784,     0,   785,   431,   432,
     433,   434,   435,   436,   786,   787,   439,   440,   441,   442,
       0,   788,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,   789,   790,   474,   475,     0,     0,
     476,   477,   791,   479,   480,   481,   792,   793,   482,   483,
     484,   485,   794,   486,   487,     0,     0,   488,   489,   490,
     491,     0,   795,   492,   493,     0,   796,   797,   798,   799,
       0,     0,     0,     0,     0,   498,   499,     0,   800,   801,
     802,   501,   502,   503,   803,   504,   505,   804,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   805,   514,     0,     0,   806,   807,   808,   515,
     809,   516,     0,     0,   517,   810,     0,   811,   518,     0,
     519,   520,   812,   813,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     814,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,   815,   816,     0,   535,   536,
     537,   817,     0,     0,     0,   818,   819,     0,     0,     0,
       0,   820,     0,   821,     0,     0,     0,   822,   823,     0,
       0,   824,   825,   157,   158,     0,   719,   160,   161,   162,
     163,     0,     0,   164,     0,     0,     0,     0,   165,     0,
       0,   720,     0,   167,   168,   169,   170,   721,   172,     0,
     173,     0,     0,   722,   174,   723,   724,   725,   175,   726,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,   727,   728,   183,   184,     0,   185,   186,   729,
     730,   188,     0,   189,   190,   191,   192,   731,   194,     0,
     732,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,   733,   734,   215,     0,     0,     0,
     735,   216,   736,     0,   217,   737,   738,     0,   218,   219,
     220,   739,   740,   741,     0,     0,     0,     0,   742,   223,
     743,     0,     0,  3738,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,   745,
       0,   251,   252,   253,   254,   255,   746,   747,   256,   257,
       0,   258,   259,   260,   261,   262,   748,     0,   263,   264,
       0,     0,     0,   749,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   750,   271,   751,     0,   273,     0,   274,
       0,   752,     0,   275,   276,     0,   277,   753,     0,   278,
     279,     0,     0,     0,   754,   281,   282,   283,   755,     0,
     284,   285,   286,     0,     0,   287,     0,     0,     0,   756,
     288,   289,   290,   757,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,   758,
     301,   302,     0,     0,     0,     0,     0,   759,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,   760,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   761,   331,   332,
     333,   334,   762,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   763,   342,     0,     0,   764,   344,   765,
     345,     0,   346,   766,   767,   768,   769,   770,   351,   352,
     353,   354,   355,     0,   771,   356,   357,     0,     0,   358,
     359,   360,   361,   362,   772,   951,   773,   363,   364,     0,
     774,   775,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,   776,   375,     0,   376,     0,
     377,   378,   777,   380,   381,   382,   383,   778,   779,   386,
     780,   387,     0,   388,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   781,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,   782,   783,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   784,     0,   785,   431,   432,   433,   434,
     435,   436,   786,   787,   439,   440,   441,   442,     0,   788,
     444,     0,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,   789,   790,   474,   475,     0,     0,   476,   477,
     791,   479,   480,   481,   792,   793,   482,   483,   484,   485,
     794,   486,   487,     0,     0,   488,   489,   490,   491,     0,
     795,   492,   493,     0,   796,   797,   798,   799,     0,     0,
       0,     0,     0,   498,   499,     0,   800,   801,   802,   501,
     502,   503,   803,   504,   505,   804,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     805,   514,     0,     0,   806,   807,   808,   515,   809,   516,
       0,     0,   517,   810,     0,   811,   518,     0,   519,   520,
     812,   813,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   814,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,   815,   816,     0,   535,   536,   537,   817,
       0,     0,     0,   818,   819,     0,     0,     0,     0,   820,
       0,   821,     0,     0,     0,   822,   823,     0,     0,   824,
     825,   157,   158,     0,   719,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   720,
       0,   167,   168,   169,   170,   721,   172,     0,   173,     0,
       0,   722,   174,   723,   724,   725,   175,   726,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
     727,   728,   183,   184,     0,   185,   186,   729,   730,   188,
       0,   189,   190,   191,   192,   731,   194,     0,   732,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,   733,   734,   215,     0,     0,     0,   735,   216,
     736,     0,   217,   737,   738,     0,   218,   219,   220,   739,
     740,   741,     0,     0,     0,     0,   742,   223,   743,     0,
       0,   744,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,   745,     0,   251,
     252,   253,   254,   255,   746,   747,   256,   257,     0,   258,
     259,   260,   261,   262,   748,     0,   263,   264,     0,     0,
       0,   749,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   750,   271,   751,     0,   273,     0,   274,     0,   752,
       0,   275,   276,     0,   277,   753,     0,   278,   279,     0,
       0,     0,   754,   281,   282,   283,   755,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,   756,   288,   289,
     290,   757,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,   758,   301,   302,
       0,     0,     0,     0,     0,   759,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,   760,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   761,   331,   332,   333,   334,
     762,   335,   336,  4439,     0,     0,     0,   337,   338,   339,
     340,   763,   342,     0,     0,   764,   344,   765,   345,     0,
     346,   766,   767,   768,   769,   770,   351,   352,   353,   354,
     355,     0,   771,   356,   357,     0,     0,   358,   359,   360,
     361,   362,   772,     0,   773,   363,   364,     0,   774,   775,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,   776,   375,     0,   376,     0,   377,   378,
     777,   380,   381,   382,   383,   778,   779,   386,   780,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   781,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,   782,   783,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   784,     0,   785,   431,   432,   433,   434,   435,   436,
     786,   787,   439,   440,   441,   442,     0,   788,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
     789,   790,   474,   475,     0,     0,   476,   477,   791,   479,
     480,   481,   792,   793,   482,   483,   484,   485,   794,   486,
     487,     0,     0,   488,   489,   490,   491,     0,   795,   492,
     493,     0,   796,   797,   798,   799,     0,     0,     0,     0,
       0,   498,   499,     0,   800,   801,   802,   501,   502,   503,
     803,   504,   505,   804,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   805,   514,
       0,     0,   806,   807,   808,   515,   809,   516,     0,     0,
     517,   810,     0,   811,   518,     0,   519,   520,   812,   813,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   814,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,   815,   816,     0,   535,   536,   537,   817,     0,     0,
       0,   818,   819,     0,     0,     0,     0,   820,     0,   821,
       0,     0,     0,   822,   823,     0,     0,   824,   825,   157,
     158,     0,   719,   160,   161,   162,   163,     0,     0,   164,
       0,     0,     0,     0,   165,     0,     0,   720,     0,   167,
     168,   169,   170,   721,   172,     0,   173,     0,     0,   722,
     174,   723,   724,   725,   175,   726,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,   727,   728,
     183,   184,     0,   185,   186,   729,   730,   188,     0,   189,
     190,   191,   192,   731,   194,     0,   732,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
     733,   734,   215,     0,     0,     0,   735,   216,   736,     0,
     217,   737,   738,     0,   218,   219,   220,   739,   740,   741,
       0,     0,     0,     0,   742,   223,   743,     0,     0,   744,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,   745,     0,   251,   252,   253,
     254,   255,   746,   747,   256,   257,     0,   258,   259,   260,
     261,   262,   748,     0,   263,   264,     0,     0,     0,   749,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   750,
     271,   751,     0,   273,     0,   274,     0,   752,     0,   275,
     276,     0,   277,   753,     0,   278,   279,     0,     0,     0,
     754,   281,   282,   283,   755,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,   756,   288,   289,   290,   757,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,   758,   301,   302,     0,     0,
       0,     0,     0,   759,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,   760,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   761,   331,   332,   333,   334,   762,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   763,
     342,     0,     0,   764,   344,   765,   345,     0,   346,   766,
     767,   768,   769,   770,   351,   352,   353,   354,   355,     0,
     771,   356,   357,     0,     0,   358,   359,   360,   361,   362,
     772,     0,   773,   363,   364,     0,   774,   775,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,   776,   375,     0,   376,     0,   377,   378,   777,   380,
     381,   382,   383,   778,   779,   386,   780,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   781,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,   782,
     783,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   784,
       0,   785,   431,   432,   433,   434,   435,   436,   786,   787,
     439,   440,   441,   442,     0,   788,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,   789,   790,
     474,   475,     0,     0,   476,   477,   791,   479,   480,   481,
     792,   793,   482,   483,   484,   485,   794,   486,   487,     0,
       0,   488,   489,   490,   491,     0,   795,   492,   493,     0,
     796,   797,   798,   799,     0,     0,     0,     0,     0,   498,
     499,     0,   800,   801,   802,   501,   502,   503,   803,   504,
     505,   804,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   805,   514,     0,     0,
     806,   807,   808,   515,   809,   516,     0,     0,   517,   810,
       0,   811,   518,     0,   519,   520,   812,   813,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   814,     0,     0,     0,   531,     0,
     532,   533,     0,   534,     0,     0,     0,     0,     0,   815,
     816,     0,   535,   536,   537,   817,     0,     0,     0,   818,
     819,     0,     0,     0,     0,   820,     0,   821,     0,     0,
       0,   822,   823,     0,     0,   824,   825,   157,   158,     0,
     719,   160,   161,   162,   163,     0,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   720,     0,   167,   168,   169,
     170,   721,   172,     0,   173,     0,     0,   722,   174,   723,
     724,   725,   175,   726,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,   727,   728,   183,   184,
       0,   185,   186,   729,   730,   188,     0,   189,   190,   191,
     192,   731,   194,     0,   732,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,   733,   734,
     215,     0,     0,     0,   735,   216,   736,     0,   217,   737,
     738,     0,   218,   219,   220,   739,   740,   741,     0,     0,
       0,     0,   742,   223,   743,     0,     0,   744,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,   250,   745,     0,   251,   252,   253,   254,   255,
     746,   747,   256,   257,     0,   258,   259,   260,   261,   262,
     748,     0,   263,   264,     0,     0,     0,   749,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   750,   271,   751,
       0,   273,     0,   274,     0,   752,     0,   275,   276,     0,
     277,   753,     0,   278,   279,     0,     0,     0,   754,   281,
     282,   283,   755,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,   756,   288,   289,   290,  1866,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,   758,   301,   302,     0,     0,     0,     0,
       0,   759,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,   760,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   761,   331,   332,   333,   334,   762,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   763,   342,     0,
       0,   764,   344,   765,   345,     0,   346,   766,   767,   768,
     769,   770,   351,   352,   353,   354,   355,     0,   771,   356,
     357,     0,     0,   358,   359,   360,   361,   362,   772,     0,
     773,   363,   364,     0,   774,   775,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,   776,
     375,     0,   376,     0,   377,   378,   777,   380,   381,   382,
     383,   778,   779,   386,   780,   387,     0,   388,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   781,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,   412,     0,   413,   414,   415,   782,   783,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   784,     0,   785,
     431,   432,   433,   434,   435,   436,   786,   787,   439,   440,
     441,   442,     0,   788,   444,     0,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,   789,   790,   474,   475,
       0,     0,   476,   477,   791,   479,   480,   481,   792,   793,
     482,   483,   484,   485,   794,   486,   487,     0,     0,   488,
     489,   490,   491,     0,   795,   492,   493,     0,   796,   797,
     798,   799,     0,     0,     0,     0,     0,   498,   499,     0,
     800,   801,   802,   501,   502,   503,   803,   504,   505,   804,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   805,   514,     0,     0,   806,   807,
     808,   515,   809,   516,     0,     0,   517,   810,     0,   811,
     518,     0,   519,   520,   812,   813,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   814,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,   815,   816,     0,
     535,   536,   537,   817,     0,     0,     0,   818,   819,     0,
       0,     0,     0,   820,     0,   821,     0,     0,     0,   822,
     823,     0,     0,   824,   825,   157,   158,     0,   719,   160,
     161,   162,   163,     0,     0,   164,     0,     0,     0,     0,
     165,     0,     0,   720,     0,   167,   168,   169,   170,   721,
     172,     0,   173,     0,     0,   722,   174,   723,   724,   725,
     175,   726,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,   727,   728,   183,   184,     0,   185,
     186,   729,   730,   188,     0,   189,   190,   191,   192,   731,
     194,     0,   732,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,   733,   734,   215,     0,
       0,     0,   735,   216,   736,     0,   217,   737,   738,     0,
     218,   219,   220,   739,   740,   741,     0,     0,     0,     0,
     742,   223,   743,     0,     0,   744,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,   745,     0,   251,   252,   253,   254,   255,   746,   747,
     256,   257,     0,   258,   259,   260,   261,   262,   748,     0,
     263,   264,     0,     0,     0,   749,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   750,   271,   751,     0,   273,
       0,   274,     0,   752,     0,   275,   276,     0,   277,   753,
       0,   278,   279,     0,     0,     0,   754,   281,   282,   283,
     755,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,   756,   288,   289,   290,  1868,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,   758,   301,   302,     0,     0,     0,     0,     0,   759,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
     760,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   761,
     331,   332,   333,   334,   762,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   763,   342,     0,     0,   764,
     344,   765,   345,     0,   346,   766,   767,   768,   769,   770,
     351,   352,   353,   354,   355,     0,   771,   356,   357,     0,
       0,   358,   359,   360,   361,   362,   772,     0,   773,   363,
     364,     0,   774,   775,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,   776,   375,     0,
     376,     0,   377,   378,   777,   380,   381,   382,   383,   778,
     779,   386,   780,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   781,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,   782,   783,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   784,     0,   785,   431,   432,
     433,   434,   435,   436,   786,   787,   439,   440,   441,   442,
       0,   788,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,   789,   790,   474,   475,     0,     0,
     476,   477,   791,   479,   480,   481,   792,   793,   482,   483,
     484,   485,   794,   486,   487,     0,     0,   488,   489,   490,
     491,     0,   795,   492,   493,     0,   796,   797,   798,   799,
       0,     0,     0,     0,     0,   498,   499,     0,   800,   801,
     802,   501,   502,   503,   803,   504,   505,   804,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   805,   514,     0,     0,   806,   807,   808,   515,
     809,   516,     0,     0,   517,   810,     0,   811,   518,     0,
     519,   520,   812,   813,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     814,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,   815,   816,     0,   535,   536,
     537,   817,     0,     0,     0,   818,   819,     0,     0,     0,
       0,   820,     0,   821,     0,     0,     0,   822,   823,     0,
       0,   824,   825,   157,   158,     0,   159,   160,   161,   162,
     163,     0,     0,   164,     0,     0,     0,     0,   165,     0,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,     0,     0,     0,   174,   723,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,     0,     0,   183,   184,     0,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,   193,   194,     0,
     195,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,  2168,     0,     0,     0,     0,   222,   223,
     743,     0,     0,     0,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,     0,   747,   256,   257,
       0,   258,   259,   260,   261,   262,   748,     0,   263,   264,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   270,   271,   272,     0,   273,     0,   274,
       0,     0,     0,   275,   276,     0,   277,   753,     0,   278,
     279,     0,     0,     0,   280,   281,   282,   283,     0,     0,
     284,   285,   286,     0,     0,   287,     0,     0,     0,     0,
     288,   289,   290,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,     0,
     301,   302,     0,     0,     0,     0,     0,   303,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,   760,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,   771,   356,   357,     0,     0,   358,
     359,   360,   361,   362,     0,     0,     0,   363,   364,     0,
     774,   775,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,     0,   388,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   430,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,     0,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   482,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
     795,   492,   493,     0,  2169,   495,   496,  2170,     0,     0,
       0,     0,     0,   498,   499,     0,     0,   801,   500,   501,
     502,   503,   803,   504,   505,   804,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,     0,     0,     0,   535,   536,   537,     0,
       0,     0,     0,   157,   158,     0,   159,   160,   161,   162,
     163,     0,     0,   164,     0,     0,     0,     0,   165,   824,
     825,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,     0,     0,   183,   184,     0,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,   193,   194,     0,
     195,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,  2575,   210,   211,
     212,   213,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,   223,
       0,     0,     0,     0,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
       0,   258,   259,   260,   261,   262,     0,     0,   263,   264,
       0,     0,     0,   265,   266,     0,   267,  2576,     0,     0,
     268,     0,   269,   270,   271,   272,     0,   273,     0,   274,
       0,     0,     0,   275,   276,     0,   277,     0,     0,   278,
     279,     0,     0,     0,   280,   281,   282,   283,     0,     0,
     284,   285,   286,  2049,     0,   287,     0,     0,     0,     0,
     288,   289,   290,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,  2050,     0,   298,   299,     0,     0,   300,     0,     0,
     301,   302,     0,  3298,     0,     0,     0,   303,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,     0,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,   362,     0,     0,     0,   363,   364,     0,
       0,     0,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,     0,   388,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   430,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,    42,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,  2578,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   482,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
       0,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,     0,     0,     0,   500,   501,
     502,   503,     0,   504,   505,     0,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,     0,    53,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,     0,     0,     0,   535,   536,   537,     0,
       0,     0,     0,   157,   158,     0,   159,   160,   161,   162,
     163,   854,     0,   164,     0,     0,     0,     0,   165,     0,
    1455,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,     0,     0,   183,   184,     0,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,   193,   194,     0,
     195,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,  2575,   210,   211,
     212,   213,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,   223,
       0,     0,     0,     0,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
       0,   258,   259,   260,   261,   262,     0,     0,   263,   264,
       0,     0,     0,   265,   266,     0,   267,  2576,     0,     0,
     268,     0,   269,   270,   271,   272,     0,   273,     0,   274,
       0,     0,     0,   275,   276,     0,   277,     0,     0,   278,
     279,     0,     0,     0,   280,   281,   282,   283,     0,     0,
     284,   285,   286,  2049,     0,   287,     0,     0,     0,     0,
     288,   289,   290,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,  2050,     0,   298,   299,     0,     0,   300,     0,     0,
     301,   302,     0,     0,     0,     0,     0,   303,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,     0,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,   362,     0,     0,     0,   363,   364,     0,
       0,     0,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,     0,   388,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   430,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,     0,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,  2578,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   482,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
       0,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,     0,     0,     0,   500,   501,
     502,   503,     0,   504,   505,     0,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,     0,     0,     0,   535,   536,   537,     0,
       0,   157,   158,     0,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   166,
    1455,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,    42,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,    53,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,     0,   159,   160,   161,   162,   163,  2233,
       0,   164,     0,     0,  2234,     0,   165,     0,   619,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,    42,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,    53,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,     0,   159,   160,   161,   162,   163,   854,
    3344,   164,     0,     0,     0,     0,   165,     0,   825,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,  2232,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,     0,   159,   160,   161,   162,   163,  2233,
       0,   164,     0,     0,  2234,     0,   165,     0,   619,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,     0,   159,   160,   161,   162,   163,  2233,
       0,   164,     0,     0,  2234,     0,   165,     0,   619,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,     0,   159,   160,   161,   162,   163,     0,
    4590,   164,     0,     0,     0,     0,   165,  4591,   825,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,     0,   159,   160,   161,   162,   163,  1203,
       0,   164,     0,     0,     0,     0,   165,     0,   825,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,  2183,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,   619,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,     0,   159,   160,   161,   162,   163,  2654,
       0,   164,     0,     0,     0,     0,   165,     0,  1455,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,     0,   159,   160,   161,   162,   163,  2233,
       0,   164,     0,     0,     0,     0,   165,     0,   619,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,     0,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,  4591,   825,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,   157,
     158,     0,   159,   160,   161,   162,   163,     0,     0,   164,
       0,     0,     0,     0,   165,     0,     0,   166,   619,   167,
     168,   169,   170,   171,   172,     0,   173,     0,     0,     0,
     174,     0,     0,     0,   175,     0,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,     0,     0,
     183,   184,     0,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,   193,   194,     0,   195,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
       0,     0,   215,     0,     0,     0,     0,   216,     0,     0,
     217,     0,     0,     0,   218,   219,   220,     0,     0,   221,
       0,     0,     0,     0,   222,   223,     0,     0,     0,     0,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,     0,     0,   251,   252,   253,
     892,   255,     0,     0,   256,   257,     0,   258,   259,   260,
     261,   262,     0,     0,   263,   264,     0,     0,     0,   893,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   270,
     271,   272,     0,   273,     0,   274,     0,     0,     0,   275,
     276,     0,   277,     0,     0,   278,   279,     0,     0,     0,
     280,   281,   282,   283,     0,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,     0,   288,   289,   290,     0,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,     0,   301,   302,     0,     0,
       0,     0,     0,   303,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,     0,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,     0,   331,   332,   333,   334,     0,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,     0,     0,   358,   359,   360,   361,   362,
       0,     0,     0,   363,   364,     0,     0,     0,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,     0,   375,     0,   376,     0,   894,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   397,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   430,
       0,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,     0,   443,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,     0,     0,   476,   477,   478,   479,   480,   481,
       0,     0,   482,   483,   484,   485,     0,   486,   487,     0,
       0,   488,   489,   490,   491,     0,     0,   492,   493,     0,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,     0,     0,     0,   500,   501,   502,   503,     0,   504,
     505,     0,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   513,   514,     0,     0,
       0,     0,     0,   515,     0,   516,     0,     0,   517,     0,
       0,     0,   518,     0,   519,   520,   521,   522,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,     0,   534,     0,     0,     0,     0,     0,     0,
       0,     0,   535,   536,   537,     0,     0,   157,   158,     0,
     159,   160,   161,   162,   163,     0,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   166,   619,   167,   168,   169,
     170,   171,   172,     0,   173,     0,     0,     0,   174,     0,
       0,     0,   175,     0,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,     0,     0,   183,   184,
       0,   185,   186,   187,     0,   188,     0,   189,   190,   191,
     192,   193,   194,     0,   195,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,     0,     0,
     215,     0,     0,     0,     0,   216,     0,     0,   217,     0,
       0,     0,   218,   219,   220,     0,     0,   221,     0,     0,
       0,     0,   222,   223,     0,     0,     0,     0,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,   250,     0,     0,   251,   252,   253,   254,   255,
       0,     0,   256,   257,     0,   258,   259,   260,   261,   262,
       0,     0,   263,   264,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   270,   271,   272,
       0,   273,     0,   274,     0,     0,     0,   275,   276,     0,
     277,     0,     0,   278,   279,     0,     0,     0,   280,   281,
     282,   283,     0,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,     0,   288,   289,   290,     0,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,     0,   301,   302,     0,     0,     0,     0,
       0,   303,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,     0,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,     0,   331,   332,   333,   334,     0,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,     0,     0,   358,   359,   360,   361,   362,     0,     0,
       0,   363,   364,     0,     0,     0,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,     0,   388,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   397,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,   412,     0,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   430,     0,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,     0,   443,   444,     0,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
       0,     0,   476,   477,   478,   479,   480,   481,     0,     0,
     482,   483,   484,   485,     0,   486,   487,     0,     0,   488,
     489,   490,   491,     0,     0,   492,   493,     0,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,     0,
       0,     0,   500,   501,   502,   503,     0,   504,   505,     0,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   513,   514,     0,     0,     0,     0,
       0,   515,     0,   516,     0,     0,   517,     0,     0,     0,
     518,     0,   519,   520,   521,   522,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,     0,     0,     0,
     535,   536,   537,     0,     0,   157,   158,     0,   159,   160,
     161,   162,   163,     0,     0,   164,     0,     0,     0,     0,
     165,     0,     0,   166,  1455,   167,   168,   169,   170,   171,
     172,     0,   173,     0,     0,     0,   174,     0,     0,     0,
     175,     0,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,     0,     0,   183,   184,     0,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,   193,
     194,     0,   195,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,     0,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,   223,     0,     0,     0,     0,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,     0,   258,   259,   260,   261,   262,     0,     0,
     263,   264,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,   275,   276,     0,   277,     0,
       0,   278,   279,     0,     0,     0,   280,   281,   282,   283,
       0,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,   290,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,     0,   301,   302,     0,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,   360,   361,   362,     0,     0,     0,   363,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,     0,   375,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   430,     0,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
       0,   443,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,     0,   492,   493,     0,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,     0,     0,     0,
     500,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   513,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,     0,     0,     0,   535,   536,
     537,     0,     0,   157,   158,     0,   159,   160,   161,   162,
     163,     0,     0,   164,     0,     0,     0,     0,   165,     0,
       0,   166,   825,   167,   168,   169,   170,   171,   172,     0,
     173,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,     0,     0,   183,   184,     0,   185,   186,   676,
     677,   188,     0,   189,   190,   191,   192,   193,   194,     0,
     195,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,   223,
       0,     0,     0,   678,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
       0,   258,   259,   260,   261,   262,     0,     0,   263,   264,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   270,   271,   272,     0,   679,     0,   274,
       0,     0,     0,   275,   276,     0,   277,     0,     0,   278,
     279,     0,     0,     0,   280,   281,   282,   283,     0,     0,
     284,   285,   286,     0,     0,   287,     0,     0,     0,     0,
     288,   289,   290,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,     0,
     301,   302,     0,     0,     0,     0,     0,   303,   304,     0,
     680,     0,   306,     0,   307,   308,     0,     0,     0,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     681,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,   362,     0,     0,     0,   363,   364,     0,
       0,     0,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   682,   380,   381,   382,   383,   384,   385,   386,
       0,   387,     0,   388,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   430,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,     0,     0,     0,   445,   446,   683,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   482,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
       0,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   684,   499,     0,     0,     0,   500,   501,
     502,   503,     0,   504,   505,     0,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   530,     0,
       0,   685,   686,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,     0,     0,     0,   535,   536,   537,     0,
     157,   158,     0,   159,   160,   161,   162,   163,     0,     0,
     164,     0,     0,     0,     0,   165,     0,     0,   166,   687,
     167,   168,   169,   170,   171,   172,     0,   173,     0,     0,
       0,   174,     0,     0,     0,   175,     0,     0,   176,   177,
     178,     0,   179,     0,   180,   181,     0,     0,   182,     0,
       0,   183,   184,     0,   185,   186,   187,     0,   188,     0,
     189,   190,   191,   192,   193,   194,     0,   195,   196,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,     0,   208,   209,     0,   210,   211,   212,   213,   214,
       0,     0,     0,   215,     0,     0,     0,     0,   216,     0,
       0,   217,     0,     0,     0,   218,   219,   220,     0,     0,
     221,     0,     0,     0,     0,   222,   223,     0,     0,     0,
       0,   224,   225,     0,   226,     0,     0,     0,   227,     0,
     228,   229,   230,   231,   232,     0,     0,     0,   233,     0,
       0,  1322,   235,   236,     0,     0,     0,   237,     0,   238,
     239,     0,   240,   241,   242,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,   250,     0,     0,   251,   252,
     253,   254,   255,     0,     0,   256,   257,     0,   258,   259,
     260,   261,   262,     0,     0,   263,   264,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,   268,     0,   269,
     270,   271,   272,     0,   273,     0,   274,     0,     0,     0,
     275,   276,     0,   277,     0,     0,   278,   279,     0,     0,
       0,   280,   281,   282,   283,     0,     0,   284,   285,   286,
       0,     0,   287,     0,     0,     0,     0,   288,   289,   290,
       0,     0,     0,   291,     0,     0,     0,   292,   293,     0,
     294,   295,     0,     0,     0,   296,     0,   297,     0,     0,
     298,   299,     0,     0,   300,     0,     0,   301,   302,   866,
       0,     0,     0,     0,   303,   304,     0,   305,     0,   306,
       0,   307,   308,     0,     0,     0,     0,     0,     0,     0,
     309,     0,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,     0,   331,   332,   333,   334,     0,
     335,   336,     0,     0,     0,     0,   337,   338,   339,   340,
     341,   342,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,     0,   356,   357,     0,     0,   358,   359,   360,   361,
     362,     0,     0,     0,   363,   364,     0,     0,     0,   365,
       0,   366,   367,     0,   368,   369,   370,     0,     0,   371,
       0,     0,     0,     0,     0,     0,     0,  1323,     0,   372,
     373,   374,     0,   375,     0,   376,     0,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,     0,   387,     0,
     388,   389,   390,     0,   391,     0,   392,   393,   394,   395,
     396,     0,   397,   398,   399,     0,     0,   400,     0,     0,
       0,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,     0,   411,   412,     0,   413,   414,   415,
       0,     0,   416,   417,   418,   419,   420,   421,   422,   423,
       0,   424,     0,   425,   426,     0,   427,   428,   429,     0,
     430,     0,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,     0,   443,   444,     0,     0,
       0,   445,   446,   447,   448,     0,     0,     0,   449,     0,
       0,     0,   450,     0,   451,   452,   453,   454,     0,   455,
     456,   457,   458,   459,     0,     0,     0,     0,     0,   460,
     461,   462,     0,   463,   464,     0,   465,     0,     0,   466,
       0,   467,     0,   468,   469,   470,   471,   472,   473,     0,
       0,   474,   475,     0,     0,   476,   477,   478,   479,   480,
     481,     0,     0,   482,   483,   484,   485,     0,   486,   487,
       0,     0,   488,   489,   490,   491,     0,   154,   492,   493,
       0,   494,   495,   496,   497,     0,     0,     0,     0,     0,
     498,   499,     0,     0,     0,   500,   501,   502,   503,     0,
     504,   505,     0,   506,   507,     0,   508,   509,     0,     0,
     510,     0,     0,   511,     0,   512,     0,   513,   514,     0,
       0,     0,     0,     0,   515,     0,   516,     0,     0,   517,
       0,     0,     0,   518,     0,   519,   520,   521,   522,     0,
       0,     0,     0,     0,     0,   523,   524,   525,     0,   526,
     527,   528,   529,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,     0,   534,     0,     0,     0,     0,     0,
       0,     0,     0,   535,   536,   537,     0,   157,   158,     0,
     159,   160,   161,   162,   163,     0,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   166,  1324,   167,   168,   169,
     170,   171,   172,     0,   173,     0,     0,     0,   174,     0,
       0,     0,   175,     0,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,     0,     0,   183,   184,
       0,   185,   186,   676,   677,   188,     0,   189,   190,   191,
     192,   193,   194,     0,   195,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,     0,     0,
     215,     0,     0,     0,     0,   216,     0,     0,   217,     0,
       0,     0,   218,   219,   220,     0,     0,   221,     0,     0,
       0,     0,   222,   223,     0,     0,     0,  1085,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,   250,     0,     0,   251,   252,   253,   254,   255,
       0,     0,   256,   257,     0,   258,   259,   260,   261,   262,
       0,     0,   263,   264,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   270,   271,   272,
       0,   679,     0,   274,     0,     0,     0,   275,   276,     0,
     277,     0,     0,   278,   279,     0,     0,     0,   280,   281,
     282,   283,     0,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,     0,   288,   289,   290,     0,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,     0,   301,   302,     0,     0,     0,     0,
       0,   303,   304,     0,   680,     0,   306,     0,   307,   308,
       0,     0,     0,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,     0,   331,   332,   333,   334,     0,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
     349,   350,   351,   352,   681,   354,   355,     0,     0,   356,
     357,     0,     0,   358,   359,   360,   361,   362,     0,     0,
       0,   363,   364,     0,     0,     0,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,     0,   388,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   397,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,   412,     0,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   430,     0,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,     0,   443,   444,     0,     0,     0,   445,   446,
     683,   448,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
       0,     0,   476,   477,   478,   479,   480,   481,     0,     0,
     482,   483,   484,   485,     0,   486,   487,     0,     0,   488,
     489,   490,   491,     0,     0,   492,   493,     0,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,     0,
       0,     0,   500,   501,   502,   503,     0,   504,   505,     0,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   513,   514,     0,     0,     0,     0,
       0,   515,     0,   516,     0,     0,   517,     0,     0,     0,
     518,     0,   519,   520,   521,   522,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   530,     0,     0,   685,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,     0,     0,     0,
     535,   536,   537,     0,   157,   158,     0,   159,   160,   161,
     162,   163,     0,     0,   164,     0,     0,     0,     0,   165,
       0,     0,   166,   687,   167,   168,   169,   170,   171,   172,
       0,   173,     0,     0,     0,   174,     0,     0,     0,   175,
       0,     0,   176,   177,   178,     0,   179,     0,   180,   181,
       0,     0,   182,     0,     0,   183,   184,     0,   185,   186,
     187,     0,   188,     0,   189,   190,   191,   192,   193,   194,
       0,   195,   196,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,     0,   208,   209,     0,   210,
     211,   212,   213,   214,     0,     0,     0,   215,     0,     0,
       0,     0,   216,     0,     0,   217,     0,     0,     0,   218,
     219,   220,     0,     0,   221,     0,     0,     0,     0,   222,
     223,     0,     0,     0,     0,   224,   225,     0,   226,     0,
       0,     0,   227,     0,   228,   229,   230,   231,   232,     0,
       0,     0,   233,     0,     0,   234,   235,   236,     0,     0,
       0,   237,     0,   238,   239,     0,   240,   241,   242,     0,
       0,   243,   244,     0,   245,   246,   247,   248,   249,   250,
       0,     0,   251,   252,   253,   254,   255,     0,     0,   256,
     257,     0,   258,   259,   260,   261,   262,     0,     0,   263,
     264,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,   268,     0,   269,   270,   271,   272,     0,   273,     0,
     274,     0,     0,     0,   275,   276,     0,   277,     0,     0,
     278,   279,     0,     0,     0,   280,   281,   282,   283,     0,
       0,   284,   285,   286,     0,     0,   287,     0,     0,     0,
       0,   288,   289,   290,     0,     0,     0,   291,     0,     0,
       0,   292,   293,     0,   294,   295,     0,     0,     0,   296,
       0,   297,     0,     0,   298,   299,     0,     0,   300,     0,
       0,   301,   302,   866,     0,     0,     0,     0,   303,   304,
       0,   305,     0,   306,     0,   307,   308,     0,     0,     0,
       0,     0,     0,     0,   309,     0,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,     0,   331,
     332,   333,   334,     0,   335,   336,     0,     0,     0,     0,
     337,   338,   339,   340,   341,   342,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,     0,   356,   357,     0,     0,
     358,   359,   360,   361,   362,     0,     0,     0,   363,   364,
       0,     0,     0,   365,     0,   366,   367,     0,   368,   369,
     370,     0,     0,   371,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   372,   373,   374,     0,   375,     0,   376,
       0,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,     0,   387,     0,   388,   389,   390,     0,   391,     0,
     392,   393,   394,   395,   396,     0,   397,   398,   399,     0,
       0,   400,     0,     0,     0,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,     0,   411,   412,
       0,   413,   414,   415,     0,     0,   416,   417,   418,   419,
     420,   421,   422,   423,     0,   424,     0,   425,   426,     0,
     427,   428,   429,     0,   430,     0,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,     0,
     443,   444,     0,     0,     0,   445,   446,   447,   448,     0,
       0,     0,   449,     0,     0,     0,   450,     0,   451,   452,
     453,   454,     0,   455,   456,   457,   458,   459,     0,     0,
       0,     0,     0,   460,   461,   462,     0,   463,   464,     0,
     465,     0,     0,   466,     0,   467,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,     0,     0,   476,
     477,   478,   479,   480,   481,     0,     0,   482,   483,   484,
     485,     0,   486,   487,     0,     0,   488,   489,   490,   491,
       0,   154,   492,   493,     0,   494,   495,   496,   497,     0,
       0,     0,     0,     0,   498,   499,     0,     0,     0,   500,
     501,   502,   503,     0,   504,   505,     0,   506,   507,     0,
     508,   509,     0,     0,   510,     0,     0,   511,     0,   512,
       0,   513,   514,     0,     0,     0,     0,     0,   515,     0,
     516,     0,     0,   517,     0,     0,     0,   518,     0,   519,
     520,   521,   522,     0,     0,     0,     0,     0,     0,   523,
     524,   525,     0,   526,   527,   528,   529,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,     0,   534,     0,
       0,     0,     0,     0,     0,     0,     0,   535,   536,   537,
       0,   157,   158,     0,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   166,
    1077,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
     866,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,   154,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,   157,   158,
       0,   159,   160,   161,   162,   163,     0,     0,   164,     0,
       0,     0,     0,   165,     0,     0,   166,  1267,   167,   168,
     169,   170,   171,   172,     0,   173,     0,     0,     0,   174,
       0,     0,     0,   175,     0,     0,   176,   177,   178,     0,
     179,     0,   180,   181,     0,     0,   182,     0,     0,   183,
     184,     0,   185,   186,   187,     0,   188,     0,   189,   190,
     191,   192,   193,   194,     0,   195,   196,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,     0,
     208,   209,     0,   210,   211,   212,   213,   214,     0,     0,
       0,   215,     0,     0,     0,     0,   216,     0,     0,   217,
       0,     0,     0,   218,   219,   220,     0,     0,   221,     0,
       0,     0,     0,   222,   223,     0,     0,     0,     0,   224,
     225,     0,   226,     0,     0,     0,   227,     0,   228,   229,
     230,   231,   232,     0,     0,     0,   233,     0,     0,   234,
     235,   236,     0,     0,     0,   237,     0,   238,   239,     0,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,   250,     0,     0,   251,   252,   253,   254,
     255,     0,     0,   256,   257,     0,   258,   259,   260,   261,
     262,     0,     0,   263,   264,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,   268,     0,   269,   270,   271,
     272,     0,   273,     0,   274,     0,     0,     0,   275,   276,
       0,   277,     0,     0,   278,   279,     0,     0,     0,   280,
     281,   282,   283,     0,     0,   284,   285,   286,     0,     0,
     287,     0,     0,     0,     0,   288,   289,   290,     0,     0,
       0,   291,     0,     0,     0,   292,   293,     0,   294,   295,
       0,     0,     0,   296,     0,   297,     0,     0,   298,   299,
       0,     0,   300,     0,     0,   301,   302,   866,     0,     0,
       0,     0,   303,   304,     0,   305,     0,   306,     0,   307,
     308,     0,     0,     0,     0,     0,     0,     0,   309,     0,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,     0,   331,   332,   333,   334,     0,   335,   336,
       0,     0,     0,     0,   337,   338,   339,   340,   341,   342,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,     0,
     356,   357,     0,     0,   358,   359,   360,   361,   362,     0,
       0,     0,   363,   364,     0,     0,     0,   365,     0,   366,
     367,     0,   368,   369,   370,     0,     0,   371,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,   387,     0,   388,   389,
     390,     0,   391,     0,   392,   393,   394,   395,   396,     0,
     397,   398,   399,     0,     0,   400,     0,     0,     0,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,     0,   411,   412,     0,   413,   414,   415,     0,     0,
     416,   417,   418,   419,   420,   421,   422,   423,     0,   424,
       0,   425,   426,     0,   427,   428,   429,     0,   430,     0,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,     0,   443,   444,     0,     0,     0,   445,
     446,   447,   448,     0,     0,     0,   449,     0,     0,     0,
     450,     0,   451,   452,   453,   454,     0,   455,   456,   457,
     458,   459,     0,     0,     0,     0,     0,   460,   461,   462,
       0,   463,   464,     0,   465,     0,     0,   466,     0,   467,
       0,   468,   469,   470,   471,   472,   473,     0,     0,   474,
     475,     0,     0,   476,   477,   478,   479,   480,   481,     0,
       0,   482,   483,   484,   485,     0,   486,   487,     0,     0,
     488,   489,   490,   491,     0,   154,   492,   493,     0,   494,
     495,   496,   497,     0,     0,     0,     0,     0,   498,   499,
       0,     0,     0,   500,   501,   502,   503,     0,   504,   505,
       0,   506,   507,     0,   508,   509,     0,     0,   510,     0,
       0,   511,     0,   512,     0,   513,   514,     0,     0,     0,
       0,     0,   515,     0,   516,     0,     0,   517,     0,     0,
       0,   518,     0,   519,   520,   521,   522,     0,     0,     0,
       0,     0,     0,   523,   524,   525,     0,   526,   527,   528,
     529,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,     0,   534,     0,     0,     0,     0,     0,     0,     0,
       0,   535,   536,   537,     0,   157,   158,     0,   159,   160,
     161,   162,   163,     0,     0,   164,     0,     0,     0,     0,
     165,     0,     0,   166,  1324,   167,   168,   169,   170,   171,
     172,     0,   173,     0,     0,     0,   174,     0,     0,     0,
     175,     0,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,     0,     0,   183,   184,     0,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,   193,
     194,     0,   195,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,  1531,   208,   209,     0,
     210,   211,   212,   213,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,     0,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,   223,     0,     0,     0,     0,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,     0,   258,   259,   260,   261,   262,     0,     0,
     263,   264,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,   275,   276,     0,   277,     0,
       0,   278,   279,     0,     0,     0,   280,   281,   282,   283,
       0,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,   290,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,     0,   301,   302,     0,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,   360,   361,   362,     0,     0,     0,   363,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,     0,   375,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   430,     0,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
       0,   443,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,     0,   492,   493,     0,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,     0,     0,     0,
     500,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   513,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,     0,     0,     0,   535,   536,
     537,     0,   157,   158,     0,   159,   160,   161,   162,   163,
       0,     0,   164,     0,     0,     0,     0,   165,     0,     0,
     166,  1532,   167,   168,   169,   170,   171,   172,     0,   173,
       0,     0,     0,   174,     0,     0,     0,   175,     0,     0,
     176,   177,   178,     0,   179,     0,   180,   181,     0,     0,
     182,     0,     0,   183,   184,     0,   185,   186,   187,     0,
     188,     0,   189,   190,   191,   192,   193,   194,     0,   195,
     196,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,     0,   208,   209,     0,   210,   211,   212,
     213,   214,     0,     0,     0,   215,     0,     0,     0,     0,
     216,     0,     0,   217,     0,     0,     0,   218,   219,   220,
       0,     0,   221,     0,     0,     0,     0,   222,   223,     0,
       0,     0,     0,   224,   225,     0,   226,     0,     0,     0,
     227,     0,   228,   229,   230,   231,   232,     0,     0,     0,
     233,     0,     0,   234,   235,   236,     0,     0,     0,   237,
       0,   238,   239,     0,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,   250,     0,     0,
     251,   252,   253,   254,   255,     0,     0,   256,   257,     0,
     258,   259,   260,   261,   262,     0,     0,   263,   264,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,   268,
       0,   269,   270,   271,   272,     0,   273,     0,   274,     0,
       0,     0,   275,   276,     0,   277,     0,     0,   278,   279,
       0,     0,     0,   280,   281,   282,   283,     0,     0,   284,
     285,   286,     0,     0,   287,     0,     0,     0,     0,   288,
     289,   290,     0,     0,     0,   291,     0,     0,     0,   292,
     293,     0,   294,   295,     0,     0,     0,   296,     0,   297,
       0,     0,   298,   299,     0,     0,   300,     0,     0,   301,
     302,     0,     0,     0,     0,     0,   303,   304,     0,   305,
       0,   306,     0,   307,   308,     0,     0,     0,     0,     0,
       0,     0,   309,     0,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,     0,   331,   332,   333,
     334,     0,   335,   336,     0,     0,     0,     0,   337,   338,
     339,   340,   341,   342,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,   349,   350,   351,   352,   353,
     354,   355,     0,     0,   356,   357,     0,     0,   358,   359,
     360,   361,   362,     0,     0,     0,   363,   364,     0,     0,
       0,   365,     0,   366,   367,     0,   368,   369,   370,     0,
       0,   371,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   372,   373,   374,     0,   375,     0,   376,     0,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,     0,   388,   389,   390,     0,   391,     0,   392,   393,
     394,   395,   396,     0,   397,   398,   399,     0,     0,   400,
       0,     0,     0,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,     0,   411,   412,     0,   413,
     414,   415,     0,     0,   416,   417,   418,   419,   420,   421,
     422,   423,     0,   424,     0,   425,   426,     0,   427,   428,
     429,     0,   430,     0,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,     0,   443,   444,
       0,     0,     0,   445,   446,   447,   448,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,   453,   454,
       0,   455,   456,   457,   458,   459,     0,     0,     0,     0,
       0,   460,   461,   462,     0,   463,   464,     0,   465,     0,
       0,   466,     0,   467,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,     0,     0,   476,   477,   478,
     479,   480,   481,     0,     0,   482,   483,   484,   485,     0,
     486,   487,     0,     0,   488,   489,   490,   491,     0,     0,
     492,   493,     0,   494,   495,   496,   497,     0,     0,     0,
       0,     0,   498,   499,     0,     0,     0,   500,   501,   502,
     503,     0,   504,   505,     0,   506,   507,     0,   508,   509,
       0,     0,   510,     0,     0,   511,     0,   512,     0,   513,
     514,     0,     0,     0,     0,     0,   515,     0,   516,     0,
       0,   517,     0,     0,     0,   518,     0,   519,   520,   521,
     522,     0,     0,     0,     0,     0,     0,   523,   524,   525,
       0,   526,   527,   528,   529,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,     0,   534,     0,     0,     0,
       0,     0,     0,     0,     0,   535,   536,   537,     0,   157,
     158,     0,   159,   160,   161,   162,   163,     0,     0,   164,
       0,     0,     0,     0,   165,     0,     0,   166,  1532,   167,
     168,   169,   170,   171,   172,     0,   173,     0,     0,     0,
     174,     0,     0,     0,   175,     0,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,     0,     0,
     183,   184,     0,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,   193,   194,     0,   195,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
       0,     0,   215,     0,     0,     0,     0,   216,     0,     0,
     217,     0,     0,     0,   218,   219,   220,     0,     0,   221,
       0,     0,     0,     0,   222,   223,     0,     0,     0,     0,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,     0,     0,   256,   257,     0,   258,   259,   260,
     261,   262,     0,     0,   263,   264,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   270,
     271,   272,     0,   273,     0,   274,     0,     0,     0,   275,
     276,     0,   277,     0,     0,   278,   279,     0,     0,     0,
     280,   281,   282,   283,     0,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,     0,   288,   289,   290,     0,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,     0,   301,   302,     0,     0,
       0,     0,     0,   303,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,     0,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,     0,   331,   332,   333,   334,     0,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,     0,     0,   358,   359,   360,   361,   362,
       0,     0,     0,   363,   364,     0,     0,     0,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,     0,   375,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   397,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   430,
       0,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,     0,   443,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,     0,     0,   476,   477,   478,   479,   480,   481,
       0,     0,   482,   483,   484,   485,     0,   486,   487,     0,
       0,   488,   489,   490,   491,     0,     0,   492,   493,     0,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,     0,     0,     0,   500,   501,   502,   503,     0,   504,
     505,     0,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   513,   514,     0,     0,
       0,     0,     0,   515,     0,   516,     0,     0,   517,     0,
       0,     0,   518,     0,   519,   520,   521,   522,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,     0,   534,     0,     0,     0,     0,     0,     0,
       0,     0,   535,   536,   537,   157,   158,     0,   159,   160,
     161,   162,   163,     0,     0,   164,     0,     0,  3647,     0,
     165,     0,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,     0,     0,     0,   174,     0,     0,     0,
     175,     0,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,     0,     0,   183,   184,     0,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,   193,
     194,     0,   195,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,     0,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,   223,     0,     0,     0,     0,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,     0,   258,   259,   260,   261,   262,     0,     0,
     263,   264,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,   275,   276,     0,   277,     0,
       0,   278,   279,     0,     0,     0,   280,   281,   282,   283,
       0,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,   290,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,     0,   301,   302,     0,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,   360,   361,   362,     0,     0,     0,   363,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,     0,   375,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   430,     0,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
       0,   443,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,     0,   492,   493,     0,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,     0,     0,     0,
     500,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   513,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,     0,     0,     0,   535,   536,
     537,   157,   158,     0,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,  3651,     0,   165,     0,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,  2142,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,  3028,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,  3311,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,   157,   158,  3324,   159,   160,   161,   162,   163,   585,
     586,   164,     0,     0,     0,     0,   165,     0,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,   587,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,   588,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
     589,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   590,   248,   249,   591,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   592,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,   593,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,   594,     0,   287,     0,     0,     0,   595,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
     596,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,   597,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,     0,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   598,   393,   394,
     395,   599,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,   600,     0,   406,
     407,   408,   409,   410,     0,   601,   412,     0,   413,   414,
     415,     0,     0,   602,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,   603,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,   604,   605,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   606,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,   154,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   607,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,   608,   512,   609,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,   157,   158,     0,
     159,   160,   161,   162,   163,   657,   586,   164,     0,     0,
       0,     0,   165,     0,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,     0,     0,     0,   174,     0,
       0,     0,   175,     0,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,     0,     0,   183,   184,
       0,   185,   186,   187,     0,   188,     0,   189,   190,   191,
     192,   193,   194,     0,   195,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,     0,     0,
     215,   587,     0,     0,     0,   216,     0,     0,   217,     0,
       0,     0,   218,   219,   220,     0,     0,   221,     0,     0,
       0,     0,   222,   223,     0,     0,     0,     0,   224,   225,
       0,   226,   588,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,   589,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   590,
     248,   249,   591,     0,     0,   251,   252,   253,   254,   255,
       0,     0,   256,   257,     0,   592,   259,   260,   261,   262,
       0,     0,   263,   264,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   270,   271,   272,
       0,   273,   593,   274,     0,     0,     0,   275,   276,     0,
     277,     0,     0,   278,   279,     0,     0,     0,   280,   281,
     282,   283,     0,     0,   284,   285,   286,   594,     0,   287,
       0,     0,     0,   595,   288,   289,   290,     0,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,     0,   301,   302,   596,     0,     0,     0,
       0,   303,   304,     0,   305,     0,   306,   597,   307,   308,
       0,     0,     0,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,     0,   331,   332,   333,   334,     0,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,     0,     0,   358,   359,   360,   361,     0,     0,     0,
       0,   363,   364,     0,     0,     0,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,     0,   388,   389,   390,
       0,   391,     0,   598,   393,   394,   395,   658,     0,   397,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,   600,     0,   406,   407,   408,   409,   410,
       0,   601,   412,     0,   413,   414,   415,     0,     0,   602,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   430,     0,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,     0,   443,   444,   603,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,   604,   605,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
       0,     0,   476,   477,   478,   479,   480,   481,     0,     0,
     606,   483,   484,   485,     0,   486,   487,     0,     0,   488,
     489,   490,   491,     0,   154,   492,   493,     0,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   607,
       0,     0,   500,   501,   502,   503,     0,   504,   505,     0,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,   608,   512,   609,   513,   514,     0,     0,     0,     0,
       0,   515,     0,   516,     0,     0,   517,     0,     0,     0,
     518,     0,   519,   520,   521,   522,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,     0,     0,     0,
     535,   536,   537,   157,   158,     0,   159,   160,   161,   162,
     163,     0,   586,   164,     0,     0,     0,     0,   165,     0,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,     0,     0,   183,   184,     0,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,   193,   194,     0,
     195,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,     0,     0,   215,   587,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,   223,
       0,     0,     0,     0,   224,   225,     0,   226,   588,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,   589,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   590,   248,   249,   591,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
       0,   592,   259,   260,   261,   262,     0,     0,   263,   264,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   270,   271,   272,     0,   273,   593,   274,
       0,     0,     0,   275,   276,     0,   277,     0,     0,   278,
     279,     0,     0,     0,   280,   281,   282,   283,     0,     0,
     284,   285,   286,   594,     0,   287,     0,     0,     0,   595,
     288,   289,   290,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,     0,
     301,   302,   596,     0,     0,     0,     0,   303,   304,     0,
     305,     0,   306,   597,   307,   308,     0,     0,     0,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,     0,     0,     0,     0,   363,   364,     0,
       0,     0,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,     0,   388,   389,   390,     0,   391,     0,   598,
     393,   394,   395,     0,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,   600,
       0,   406,   407,   408,   409,   410,     0,   601,   412,     0,
     413,   414,   415,     0,     0,   602,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   430,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,   603,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,   604,   605,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   606,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
     154,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   607,     0,     0,   500,   501,
     502,   503,     0,   504,   505,     0,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,   608,   512,   609,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,     0,     0,     0,   535,   536,   537,   157,
     158,     0,   159,   160,   161,   162,   163,     0,     0,   164,
       0,     0,     0,     0,   165,     0,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,     0,     0,     0,
     174,     0,     0,     0,   175,     0,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,     0,     0,
     183,   184,     0,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,   193,   194,     0,   195,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
       0,     0,   215,     0,     0,     0,     0,   216,     0,     0,
     217,     0,     0,     0,   218,   219,   220,     0,     0,   221,
       0,     0,     0,     0,   222,   223,  2485,     0,     0,     0,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,     0,     0,   256,   257,     0,   258,   259,   260,
     261,   262,  2486,     0,   263,   264,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   270,
     271,   272,     0,   273,     0,   274,     0,     0,     0,   275,
     276,     0,   277,  2487,     0,   278,   279,     0,     0,     0,
     280,   281,   282,   283,     0,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,     0,   288,   289,   290,     0,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,     0,   301,   302,     0,     0,
       0,     0,     0,   303,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,  2488,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,     0,   331,   332,   333,   334,     0,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,     0,     0,   358,   359,   360,   361,   362,
    1420,  1421,     0,   363,   364,     0,     0,  2489,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,     0,   375,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   397,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   430,
       0,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,     0,   443,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,  4577,   652,  4578,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,     0,     0,   476,   477,   478,   479,   480,   481,
       0,     0,   482,   483,   484,   485,     0,   486,   487,     0,
       0,   488,   489,   490,   491,     0,     0,   492,   493,     0,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,     0,     0,     0,   500,   501,   502,   503,  2490,   504,
     505,     0,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   513,   514,     0,     0,
       0,     0,     0,   515,     0,   516,     0,     0,   517,     0,
       0,     0,   518,     0,   519,   520,   521,   522,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,     0,   534,     0,     0,     0,     0,     0,     0,
       0,     0,   535,   536,   537,   157,   158,     0,   159,   160,
     161,   162,   163,     0,     0,   164,     0,     0,  1463,  1464,
     165,  1465,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,     0,     0,     0,   174,     0,     0,     0,
     175,     0,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,     0,     0,   183,   184,     0,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,   193,
     194,     0,   195,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,     0,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,   223,     0,     0,     0,     0,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,     0,   258,   259,   260,   261,   262,     0,     0,
     263,   264,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,   275,   276,     0,   277,     0,
       0,   278,   279,     0,     0,     0,   280,   281,   282,   283,
       0,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,   290,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,     0,   301,   302,     0,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,   360,   361,   362,     0,     0,     0,   363,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,  1466,     0,     0,
    1467,     0,     0,     0,   372,   373,   374,     0,   375,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   430,     0,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
       0,   443,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,   154,   492,   493,     0,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,     0,     0,     0,
     500,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   513,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,  1468,     0,
     530,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,     0,     0,     0,   535,   536,
     537,   157,   158,     0,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,  1055,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,  1056,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,  1057,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
     866,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,  1058,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,   154,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,   157,   158,     0,
     159,   160,   161,   162,   163,     0,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,     0,     0,  1079,   174,     0,
       0,     0,   175,     0,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,     0,     0,   183,   184,
       0,   185,   186,   187,     0,   188,     0,   189,   190,   191,
     192,   193,   194,     0,   195,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,     0,     0,
     215,     0,     0,     0,     0,   216,     0,     0,   217,     0,
       0,     0,   218,   219,   220,     0,     0,   221,     0,     0,
       0,     0,   222,   223,     0,     0,     0,  1080,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,   250,     0,     0,   251,   252,   253,   254,   255,
       0,     0,   256,   257,     0,   258,   259,   260,   261,   262,
       0,     0,   263,   264,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   270,   271,   272,
       0,   273,     0,   274,     0,     0,     0,   275,   276,     0,
     277,     0,     0,   278,   279,     0,     0,     0,   280,   281,
     282,   283,     0,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,     0,   288,   289,   290,     0,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,     0,   301,   302,   866,     0,     0,     0,
       0,   303,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,     0,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,     0,   331,   332,   333,   334,     0,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,     0,     0,   358,   359,   360,   361,   362,     0,     0,
       0,   363,   364,     0,     0,     0,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,     0,   388,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   397,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,   412,     0,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   430,     0,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,     0,   443,   444,     0,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
       0,     0,   476,   477,   478,   479,   480,   481,     0,     0,
     482,   483,   484,   485,     0,   486,   487,     0,     0,   488,
     489,   490,   491,     0,   154,   492,   493,     0,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,     0,
       0,     0,   500,   501,   502,   503,     0,   504,   505,     0,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   513,   514,     0,     0,     0,     0,
       0,   515,     0,   516,     0,     0,   517,     0,     0,     0,
     518,     0,   519,   520,   521,   522,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,     0,     0,     0,
     535,   536,   537,   157,   158,     0,   159,   160,   161,   162,
     163,     0,     0,   164,     0,     0,     0,     0,   165,     0,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,     0,     0,   183,   184,     0,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,   193,   194,     0,
     195,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,   223,
       0,     0,     0,     0,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
       0,   258,   259,   260,   261,   262,     0,     0,   263,   264,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   270,   271,   272,     0,   273,     0,   274,
       0,     0,     0,   275,   276,     0,   277,     0,     0,   278,
     279,     0,     0,     0,   280,   281,   282,   283,     0,     0,
     284,   285,   286,     0,     0,   287,     0,     0,     0,     0,
     288,   289,   290,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,     0,
     301,   302,     0,     0,     0,     0,     0,   303,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,  1335,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,   362,     0,     0,     0,   363,   364,     0,
       0,  1336,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,   776,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,     0,   388,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   430,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,     0,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   482,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
       0,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,     0,     0,     0,   500,   501,
     502,   503,  1337,   504,   505,     0,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,     0,     0,     0,   535,   536,   537,   157,
     158,     0,   159,   160,   161,   162,   163,     0,     0,   164,
       0,     0,     0,     0,   165,     0,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,     0,     0,  1055,
     174,     0,     0,     0,   175,     0,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,     0,     0,
     183,   184,     0,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,   193,   194,     0,   195,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
       0,     0,   215,     0,     0,     0,     0,   216,     0,     0,
     217,     0,     0,     0,   218,   219,   220,     0,     0,   221,
       0,     0,     0,     0,   222,   223,     0,     0,     0,  1056,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,     0,     0,   256,   257,     0,   258,   259,   260,
     261,   262,     0,     0,   263,   264,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   270,
     271,   272,     0,   273,     0,   274,     0,     0,     0,   275,
     276,     0,   277,     0,     0,   278,   279,     0,     0,     0,
     280,   281,   282,   283,     0,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,     0,   288,   289,   290,     0,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,     0,   301,   302,   866,     0,
       0,     0,     0,   303,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,     0,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,     0,   331,   332,   333,   334,     0,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,     0,     0,   358,   359,   360,   361,   362,
       0,     0,     0,   363,   364,     0,     0,     0,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,     0,   375,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   397,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   430,
       0,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,     0,   443,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,     0,     0,   476,   477,   478,   479,   480,   481,
       0,     0,   482,   483,   484,   485,     0,   486,   487,     0,
       0,   488,   489,   490,   491,     0,   154,   492,   493,     0,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,     0,     0,     0,   500,   501,   502,   503,     0,   504,
     505,     0,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   513,   514,     0,     0,
       0,     0,     0,   515,     0,   516,     0,     0,   517,     0,
       0,     0,   518,     0,   519,   520,   521,   522,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,     0,   534,     0,     0,     0,     0,     0,     0,
       0,     0,   535,   536,   537,   157,   158,     0,   159,   160,
     161,   162,   163,     0,     0,   164,     0,     0,     0,     0,
     165,     0,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,     0,     0,     0,   174,     0,     0,     0,
     175,     0,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,     0,     0,   183,   184,     0,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,   193,
     194,     0,   195,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,   865,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,   223,     0,     0,     0,     0,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,     0,   258,   259,   260,   261,   262,     0,     0,
     263,   264,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,   275,   276,     0,   277,     0,
       0,   278,   279,     0,     0,     0,   280,   281,   282,   283,
       0,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,   290,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,     0,   301,   302,   866,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,   360,   361,   362,     0,     0,     0,   363,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,     0,   375,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   430,     0,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
       0,   443,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,   154,   492,   493,     0,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,     0,     0,     0,
     500,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   867,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,     0,     0,     0,   535,   536,
     537,   157,   158,     0,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
     865,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
     866,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,   154,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,   157,   158,     0,
     159,   160,   161,   162,   163,     0,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,     0,     0,     0,   174,  1150,
       0,     0,   175,     0,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,     0,     0,   183,   184,
       0,   185,   186,   187,     0,   188,     0,   189,   190,   191,
     192,   193,   194,     0,   195,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,     0,     0,
     215,     0,     0,     0,     0,   216,     0,     0,   217,     0,
       0,     0,   218,   219,   220,     0,     0,   221,     0,     0,
       0,     0,   222,   223,     0,     0,     0,     0,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,   250,     0,     0,   251,   252,   253,   254,   255,
       0,     0,   256,   257,     0,   258,   259,   260,   261,   262,
       0,     0,   263,   264,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   270,   271,   272,
       0,   273,     0,   274,     0,     0,     0,   275,   276,     0,
     277,  1151,     0,   278,   279,     0,     0,     0,   280,   281,
     282,   283,     0,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,     0,   288,   289,   290,     0,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,     0,   301,   302,     0,     0,     0,     0,
       0,   303,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,     0,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,     0,   331,   332,   333,   334,     0,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,     0,     0,   358,   359,   360,   361,   362,     0,     0,
       0,   363,   364,     0,     0,     0,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,     0,   388,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   397,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,   412,     0,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   430,     0,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,     0,   443,   444,     0,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
       0,     0,   476,   477,   478,   479,   480,   481,     0,     0,
     482,   483,   484,   485,     0,   486,   487,     0,     0,   488,
     489,   490,   491,     0,  1152,   492,   493,     0,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,     0,
       0,     0,   500,   501,   502,   503,     0,   504,   505,     0,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   513,   514,     0,     0,     0,     0,
       0,   515,     0,   516,     0,     0,   517,     0,     0,     0,
     518,     0,   519,   520,   521,   522,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,     0,     0,     0,
     535,   536,   537,   157,   158,     0,   159,   160,   161,   162,
     163,  1667,     0,   164,     0,     0,     0,     0,   165,     0,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,     0,     0,   183,   184,     0,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,   193,   194,     0,
     195,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,   223,
       0,     0,     0,     0,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
       0,   258,   259,   260,   261,   262,     0,     0,   263,   264,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   270,   271,   272,     0,   273,     0,   274,
       0,     0,     0,   275,   276,     0,   277,     0,     0,   278,
     279,     0,     0,     0,   280,   281,   282,   283,     0,     0,
     284,   285,   286,     0,     0,   287,     0,     0,     0,     0,
     288,   289,   290,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,     0,
     301,   302,   866,     0,     0,     0,     0,   303,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,     0,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,   362,     0,     0,     0,   363,   364,     0,
       0,     0,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,     0,   388,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   430,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,     0,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   482,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
     154,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,     0,     0,     0,   500,   501,
     502,   503,     0,   504,   505,     0,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,     0,     0,     0,   535,   536,   537,   157,
     158,     0,   159,   160,   161,   162,   163,     0,     0,   164,
       0,     0,     0,     0,   165,     0,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,     0,     0,     0,
     174,     0,     0,     0,   175,     0,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,     0,     0,
     183,   184,     0,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,   193,   194,     0,   195,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
       0,     0,   215,     0,     0,     0,     0,   216,     0,     0,
     217,     0,     0,     0,   218,   219,   220,     0,     0,   221,
       0,     0,     0,     0,   222,   223,     0,     0,     0,  2254,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,     0,     0,   256,   257,     0,   258,   259,   260,
     261,   262,     0,     0,   263,   264,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   270,
     271,   272,     0,   273,     0,   274,     0,     0,     0,   275,
     276,     0,   277,     0,     0,   278,   279,     0,     0,     0,
     280,   281,   282,   283,     0,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,     0,   288,   289,   290,     0,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,     0,   301,   302,   866,     0,
       0,     0,     0,   303,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,     0,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,     0,   331,   332,   333,   334,     0,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,     0,     0,   358,   359,   360,   361,   362,
       0,     0,     0,   363,   364,     0,     0,     0,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,     0,   375,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   397,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   430,
       0,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,     0,   443,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,     0,     0,   476,   477,   478,   479,   480,   481,
       0,     0,   482,   483,   484,   485,     0,   486,   487,     0,
       0,   488,   489,   490,   491,     0,   154,   492,   493,     0,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,     0,     0,     0,   500,   501,   502,   503,     0,   504,
     505,     0,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   513,   514,     0,     0,
       0,     0,     0,   515,     0,   516,     0,     0,   517,     0,
       0,     0,   518,     0,   519,   520,   521,   522,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,     0,   534,     0,     0,     0,     0,     0,     0,
       0,     0,   535,   536,   537,   157,   158,     0,   159,   160,
     161,   162,   163,     0,     0,   164,     0,     0,     0,     0,
     165,     0,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,     0,     0,  1055,   174,     0,     0,     0,
     175,     0,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,     0,     0,   183,   184,     0,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,   193,
     194,     0,   195,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,     0,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,   223,     0,     0,     0,     0,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,     0,   258,   259,   260,   261,   262,     0,     0,
     263,   264,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,   275,   276,     0,   277,     0,
       0,   278,   279,     0,     0,     0,   280,   281,   282,   283,
       0,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,   290,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,     0,   301,   302,   866,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,   360,   361,   362,     0,     0,     0,   363,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,     0,   375,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   430,     0,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
       0,   443,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,   154,   492,   493,     0,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,     0,     0,     0,
     500,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   513,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,     0,     0,     0,   535,   536,
     537,   157,   158,     0,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
     866,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,   154,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,   157,   158,     0,
     159,   160,   161,   162,   163,     0,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,     0,     0,     0,   174,     0,
       0,     0,   175,     0,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,     0,     0,   183,   184,
       0,   185,   186,   187,     0,   188,     0,   189,   190,   191,
     192,   193,   194,     0,   195,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,  4517,     0,     0,
     215,     0,     0,     0,     0,   216,     0,     0,   217,     0,
       0,     0,   218,   219,   220,     0,     0,   221,     0,     0,
       0,     0,   222,   223,     0,     0,     0,     0,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,   250,     0,  4518,   251,   252,   253,   254,   255,
       0,     0,   256,   257,     0,   258,   259,   260,   261,   262,
       0,     0,   263,   264,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   270,   271,   272,
       0,   273,     0,   274,     0,     0,     0,   275,   276,     0,
     277,     0,     0,   278,   279,     0,     0,     0,   280,   281,
     282,   283,     0,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,     0,   288,   289,   290,     0,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,     0,   301,   302,     0,     0,     0,     0,
       0,   303,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,     0,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,     0,   331,   332,   333,   334,     0,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,     0,     0,   358,   359,   360,   361,   362,     0,     0,
       0,   363,   364,     0,     0,     0,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,     0,   388,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   397,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,   412,     0,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   430,     0,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,     0,   443,   444,     0,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
       0,     0,   476,   477,   478,   479,   480,   481,     0,     0,
     482,   483,   484,   485,     0,   486,   487,     0,     0,   488,
     489,   490,   491,     0,     0,   492,   493,     0,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,     0,
       0,     0,   500,   501,   502,   503,     0,   504,   505,     0,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   513,   514,     0,     0,     0,     0,
       0,   515,     0,   516,     0,     0,   517,     0,     0,     0,
     518,     0,   519,   520,   521,   522,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,     0,     0,     0,
     535,   536,   537,   157,   158,     0,   159,   160,   161,   162,
     163,     0,     0,   164,     0,     0,     0,     0,   165,     0,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,     0,     0,   183,   184,     0,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,   193,   194,     0,
     195,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,   223,
       0,     0,     0,     0,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
       0,   258,   259,   260,   261,   262,     0,     0,   263,   264,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   270,   271,   272,     0,   273,     0,   274,
       0,     0,     0,   275,   276,     0,   277,     0,     0,   278,
     279,     0,     0,     0,   280,   281,   282,   283,     0,     0,
     284,   285,   286,     0,     0,   287,     0,     0,     0,     0,
     288,   289,   290,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,     0,
     301,   302,     0,     0,     0,     0,     0,   303,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,     0,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,   362,     0,     0,     0,   363,   364,     0,
       0,     0,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,     0,   388,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   430,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,     0,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
     652,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   482,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
       0,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,     0,     0,     0,   500,   501,
     502,   503,     0,   504,   505,     0,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,     0,     0,     0,   535,   536,   537,   157,
     158,     0,   159,   160,   161,   162,   163,     0,     0,   164,
       0,     0,     0,     0,   165,     0,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,     0,     0,     0,
     174,     0,     0,     0,   175,     0,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,     0,     0,
     183,   184,     0,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,   193,   194,     0,   195,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
       0,     0,   215,     0,     0,     0,     0,   216,     0,     0,
     217,     0,     0,     0,   218,   219,   220,     0,     0,   221,
       0,     0,     0,     0,   222,   223,     0,     0,     0,     0,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,     0,     0,   256,   257,     0,   258,   259,   260,
     261,   262,     0,     0,   263,   264,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   270,
     271,   272,     0,   273,     0,   274,     0,     0,     0,   275,
     276,     0,   277,     0,     0,   278,   279,     0,     0,     0,
     280,   281,   282,   283,     0,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,     0,   288,   289,   290,     0,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,     0,   301,   302,     0,     0,
       0,     0,     0,   303,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,     0,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,     0,   331,   332,   333,   334,     0,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,     0,     0,   358,   359,   360,   361,   362,
       0,     0,     0,   363,   364,     0,     0,     0,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,     0,   375,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   397,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   430,
       0,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,     0,   443,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,     0,     0,   476,   477,   478,   479,   480,   481,
       0,     0,   482,   483,   484,   485,     0,   486,   487,     0,
       0,   488,   489,   490,   491,     0,     0,   492,   493,     0,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,     0,     0,     0,   500,   501,   502,   503,     0,   504,
     505,     0,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   513,   514,     0,     0,
       0,     0,     0,   515,     0,   516,     0,     0,   517,     0,
       0,     0,   518,     0,   519,   520,   521,   522,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,     0,   534,   707,     0,     0,     0,     0,     0,
       0,     0,   535,   536,   537,   157,   158,     0,   159,   160,
     161,   162,   163,     0,     0,   164,     0,     0,     0,     0,
     165,     0,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,     0,     0,     0,   174,     0,     0,     0,
     175,     0,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,     0,     0,   183,   184,     0,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,   193,
     194,     0,   195,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,     0,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,   223,     0,     0,     0,  1085,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,     0,   258,   259,   260,   261,   262,     0,     0,
     263,   264,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,   275,   276,     0,   277,     0,
       0,   278,   279,     0,     0,     0,   280,   281,   282,   283,
       0,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,   290,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,     0,   301,   302,     0,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,   360,   361,   362,     0,     0,     0,   363,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,     0,   375,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   430,     0,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
       0,   443,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,     0,   492,   493,     0,   494,   495,   496,   497,
       0,     0,     0,     0,     0,  1086,   499,     0,     0,     0,
     500,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   513,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,     0,     0,     0,   535,   536,
     537,   157,   158,     0,   159,   160,   161,   162,   163,     0,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,  1943,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,   157,   158,     0,
     159,   160,   161,   162,   163,     0,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,     0,     0,     0,   174,     0,
       0,     0,   175,     0,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,     0,     0,   183,   184,
       0,   185,   186,   187,     0,   188,     0,   189,   190,   191,
     192,   193,   194,     0,   195,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,     0,     0,
     215,     0,     0,     0,     0,   216,     0,     0,   217,     0,
       0,     0,   218,   219,   220,     0,     0,   221,     0,     0,
       0,     0,   222,   223,     0,     0,     0,     0,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,   250,     0,     0,   251,   252,   253,   254,   255,
       0,     0,   256,   257,     0,   258,   259,   260,   261,   262,
       0,     0,   263,   264,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   270,   271,   272,
       0,   273,     0,   274,     0,     0,     0,   275,   276,     0,
     277,     0,     0,   278,   279,     0,     0,     0,   280,   281,
     282,   283,     0,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,     0,   288,   289,   290,     0,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,     0,   301,   302,     0,     0,     0,     0,
       0,   303,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,     0,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,     0,   331,   332,   333,   334,     0,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,     0,     0,   358,   359,   360,   361,   362,     0,     0,
       0,   363,   364,     0,     0,     0,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,     0,   388,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   397,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,   412,     0,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   430,     0,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,     0,   443,   444,     0,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
       0,     0,   476,   477,   478,   479,   480,   481,     0,     0,
     482,   483,   484,   485,     0,   486,   487,     0,     0,   488,
     489,   490,   491,     0,   154,   492,   493,     0,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,     0,
       0,     0,   500,   501,   502,   503,     0,   504,   505,     0,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   513,   514,     0,     0,     0,     0,
       0,   515,     0,   516,     0,     0,   517,     0,     0,     0,
     518,     0,   519,   520,   521,   522,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,     0,     0,     0,
     535,   536,   537,   157,   158,     0,   159,   160,   161,   162,
     163,     0,     0,   164,     0,     0,     0,     0,   165,     0,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,     0,     0,   183,   184,     0,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,   193,   194,     0,
     195,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,   223,
       0,     0,     0,  1085,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
       0,   258,   259,   260,   261,   262,     0,     0,   263,   264,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   270,   271,   272,     0,   273,     0,   274,
       0,     0,     0,   275,   276,     0,   277,     0,     0,   278,
     279,     0,     0,     0,   280,   281,   282,   283,     0,     0,
     284,   285,   286,     0,     0,   287,     0,     0,     0,     0,
     288,   289,   290,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,     0,
     301,   302,     0,     0,     0,     0,     0,   303,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,     0,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,   362,     0,     0,     0,   363,   364,     0,
       0,     0,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,     0,   388,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   430,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,     0,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   482,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
       0,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,     0,     0,     0,   500,   501,
     502,   503,     0,   504,   505,     0,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,     0,     0,     0,   535,   536,   537,   157,
     158,     0,   159,   160,   161,   162,   163,     0,     0,   164,
       0,     0,     0,     0,   165,     0,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,     0,     0,     0,
     174,     0,     0,     0,   175,     0,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,     0,     0,
     183,   184,     0,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,   193,   194,     0,   195,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
       0,     0,   215,     0,     0,     0,     0,   216,     0,     0,
     217,     0,     0,     0,   218,   219,   220,     0,     0,   221,
       0,     0,     0,     0,   222,   223,     0,     0,     0,  2663,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,     0,     0,   256,   257,     0,   258,   259,   260,
     261,   262,     0,     0,   263,   264,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   270,
     271,   272,     0,   273,     0,   274,     0,     0,     0,   275,
     276,     0,   277,     0,     0,   278,   279,     0,     0,     0,
     280,   281,   282,   283,     0,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,     0,   288,   289,   290,     0,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,     0,   301,   302,     0,     0,
       0,     0,     0,   303,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,     0,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,     0,   331,   332,   333,   334,     0,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,     0,     0,   358,   359,   360,   361,   362,
       0,     0,     0,   363,   364,     0,     0,     0,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,     0,   375,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   397,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   430,
       0,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,     0,   443,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,     0,     0,   476,   477,   478,   479,   480,   481,
       0,     0,   482,   483,   484,   485,     0,   486,   487,     0,
       0,   488,   489,   490,   491,     0,     0,   492,   493,     0,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,     0,     0,     0,   500,   501,   502,   503,     0,   504,
     505,     0,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   513,   514,     0,     0,
       0,     0,     0,   515,     0,   516,     0,     0,   517,     0,
       0,     0,   518,     0,   519,   520,   521,   522,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,     0,   534,     0,     0,     0,     0,     0,     0,
       0,     0,   535,   536,   537,   157,   158,     0,   159,   160,
     161,   162,   163,     0,     0,   164,     0,     0,     0,     0,
     165,     0,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,     0,     0,     0,   174,     0,     0,     0,
     175,     0,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,     0,     0,   183,   184,     0,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,   193,
     194,     0,   195,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,     0,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,   223,     0,     0,     0,  3074,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,     0,   258,   259,   260,   261,   262,     0,     0,
     263,   264,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,   275,   276,     0,   277,     0,
       0,   278,   279,     0,     0,     0,   280,   281,   282,   283,
       0,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,   290,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,     0,   301,   302,     0,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,   360,   361,   362,     0,     0,     0,   363,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,     0,   375,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   430,     0,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
       0,   443,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,     0,   492,   493,     0,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,     0,     0,     0,
     500,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   513,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,     0,     0,     0,   535,   536,
     537,   157,   158,     0,   159,   160,   161,   162,   163,  3083,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,   412,     0,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,   157,   158,     0,
     159,   160,   161,   162,   163,     0,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,     0,     0,     0,   174,     0,
       0,     0,   175,     0,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,     0,     0,   183,   184,
       0,   185,   186,   187,     0,   188,     0,   189,   190,   191,
     192,   193,   194,     0,   195,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,     0,     0,
     215,     0,     0,     0,     0,   216,     0,     0,   217,     0,
       0,     0,   218,   219,   220,     0,     0,   221,     0,     0,
       0,     0,   222,   223,     0,     0,     0,  3110,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,   250,     0,     0,   251,   252,   253,   254,   255,
       0,     0,   256,   257,     0,   258,   259,   260,   261,   262,
       0,     0,   263,   264,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   270,   271,   272,
       0,   273,     0,   274,     0,     0,     0,   275,   276,     0,
     277,     0,     0,   278,   279,     0,     0,     0,   280,   281,
     282,   283,     0,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,     0,   288,   289,   290,     0,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,     0,   301,   302,     0,     0,     0,     0,
       0,   303,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,     0,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,     0,   331,   332,   333,   334,     0,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,     0,     0,   358,   359,   360,   361,   362,     0,     0,
       0,   363,   364,     0,     0,     0,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,     0,   388,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   397,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,   412,     0,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   430,     0,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,     0,   443,   444,     0,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
       0,     0,   476,   477,   478,   479,   480,   481,     0,     0,
     482,   483,   484,   485,     0,   486,   487,     0,     0,   488,
     489,   490,   491,     0,     0,   492,   493,     0,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,     0,
       0,     0,   500,   501,   502,   503,     0,   504,   505,     0,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   513,   514,     0,     0,     0,     0,
       0,   515,     0,   516,     0,     0,   517,     0,     0,     0,
     518,     0,   519,   520,   521,   522,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,     0,     0,     0,
     535,   536,   537,   157,   158,     0,   159,   160,   161,   162,
     163,     0,     0,   164,     0,     0,     0,     0,   165,     0,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,     0,     0,   183,   184,     0,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,   193,   194,     0,
     195,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,   223,
       0,     0,     0,     0,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,   250,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
       0,   258,   259,   260,   261,   262,     0,     0,   263,   264,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   270,   271,   272,     0,   273,     0,   274,
       0,     0,     0,   275,   276,     0,   277,     0,     0,   278,
     279,     0,     0,     0,   280,   281,   282,   283,     0,     0,
     284,   285,   286,     0,     0,   287,     0,     0,     0,     0,
     288,   289,   290,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,     0,
     301,   302,     0,     0,     0,     0,     0,   303,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,     0,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,   362,     0,     0,     0,   363,   364,     0,
       0,     0,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,     0,   388,   389,   390,  3218,   391,     0,   392,
     393,   394,   395,   396,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   430,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,     0,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   482,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
       0,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,     0,     0,     0,   500,   501,
     502,   503,     0,   504,   505,     0,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,     0,     0,     0,   535,   536,   537,   157,
     158,     0,   159,   160,   161,   162,   163,     0,     0,   164,
       0,     0,     0,     0,   165,     0,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,     0,     0,     0,
     174,     0,     0,     0,   175,     0,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,     0,     0,
     183,   184,     0,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,   193,   194,     0,   195,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
       0,     0,   215,     0,     0,     0,     0,   216,     0,     0,
     217,     0,     0,     0,   218,   219,   220,     0,     0,   221,
       0,     0,     0,     0,   222,   223,     0,     0,     0,     0,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,   250,     0,     0,   251,   252,   253,
     254,   255,     0,     0,   256,   257,     0,   258,   259,   260,
     261,   262,     0,     0,   263,   264,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   270,
     271,   272,     0,   273,     0,   274,     0,     0,     0,   275,
     276,     0,   277,     0,     0,   278,   279,     0,     0,     0,
     280,   281,   282,   283,     0,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,     0,   288,   289,   290,     0,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,     0,   301,   302,     0,     0,
       0,     0,     0,   303,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,     0,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,     0,   331,   332,   333,   334,     0,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,     0,     0,   358,   359,   360,   361,   362,
       0,     0,     0,   363,   364,     0,     0,     0,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,     0,   375,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,     0,   388,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   397,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   430,
       0,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,     0,   443,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,     0,     0,   476,   477,   478,   479,   480,   481,
       0,     0,   482,   483,   484,   485,     0,   486,   487,     0,
       0,   488,   489,   490,   491,     0,     0,   492,   493,     0,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,     0,     0,     0,   500,   501,   502,   503,     0,   504,
     505,     0,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   513,   514,     0,     0,
       0,     0,     0,   515,     0,   516,     0,     0,   517,     0,
       0,     0,   518,     0,   519,   520,   521,   522,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,     0,   534,     0,     0,     0,     0,     0,     0,
       0,     0,   535,   536,   537,   157,   158,     0,   159,   160,
     161,   162,   163,     0,     0,   164,     0,     0,     0,     0,
     165,     0,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,     0,     0,     0,   174,     0,     0,     0,
     175,     0,     0,   176,   177,   178,     0,   179,     0,   180,
     181,     0,     0,   182,     0,     0,   183,   184,     0,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,   193,
     194,     0,   195,   196,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,     0,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,   223,     0,     0,     0,     0,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,   233,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,   238,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
     250,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,     0,   258,   259,   260,  2190,   262,     0,     0,
     263,   264,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,   268,     0,   269,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,   275,   276,     0,   277,     0,
       0,   278,   279,     0,     0,     0,   280,   281,   282,   283,
       0,     0,   284,   285,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,   290,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,     0,     0,     0,
     296,     0,   297,     0,     0,   298,   299,     0,     0,   300,
       0,     0,   301,   302,     0,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,     0,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,  2191,   361,   362,     0,     0,     0,   363,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,   370,     0,     0,   371,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,   373,   374,     0,   375,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,   387,     0,   388,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
     412,     0,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   424,     0,   425,   426,
       0,   427,   428,   429,     0,   430,     0,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
       0,   443,   444,     0,     0,     0,   445,   446,   447,   448,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,   453,   454,     0,   455,   456,   457,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,     0,   492,   493,     0,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,     0,     0,     0,
     500,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,   508,   509,     0,     0,   510,     0,     0,   511,     0,
     512,     0,   513,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,     0,     0,     0,     0,
     523,   524,   525,     0,   526,   527,   528,   529,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,     0,   534,
       0,     0,     0,     0,     0,     0,     0,     0,   535,   536,
     537,   157,   158,     0,   159,   160,   161,   162,   163,  1071,
       0,   164,     0,     0,     0,     0,   165,     0,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,   180,   181,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,   193,   194,     0,   195,   196,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,   223,     0,     0,
       0,  1072,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,   233,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
     238,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,     0,   248,   249,     0,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,     0,
     259,   260,   261,   262,     0,     0,   263,   264,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,   268,     0,
     269,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,   275,   276,     0,   277,     0,     0,   278,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,   285,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
     290,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,   298,   299,     0,     0,   300,     0,     0,   301,   302,
     596,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,  1073,     0,     0,     0,   363,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,   370,     0,     0,
     371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,   387,
       0,   388,   389,   390,     0,   391,     0,     0,   393,   394,
     395,     0,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,     0,   412,     0,   413,   414,
     415,     0,     0,     0,   417,   418,   419,   420,   421,   422,
     423,     0,   424,     0,   425,   426,     0,   427,   428,   429,
       0,   430,     0,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,     0,
       0,     0,   445,   446,   447,   448,     0,     0,     0,   449,
       0,     0,     0,     0,     0,   451,   452,   453,   454,     0,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,     0,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,   154,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,   500,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,   508,   509,     0,
       0,   510,     0,     0,   511,     0,   512,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,   525,     0,
     526,   527,   528,   529,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,     0,   534,     0,     0,     0,     0,
       0,     0,     0,     0,   535,   536,   537,   157,   158,     0,
     159,   160,   161,   162,   163,  1611,     0,   164,     0,     0,
       0,     0,   165,     0,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,     0,     0,     0,   174,     0,
       0,     0,   175,     0,     0,   176,   177,   178,     0,   179,
       0,   180,   181,     0,     0,   182,     0,     0,   183,   184,
       0,   185,   186,   187,     0,   188,     0,   189,   190,   191,
     192,   193,   194,     0,   195,   196,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,     0,     0,     0,
     215,     0,     0,     0,     0,   216,     0,     0,   217,     0,
       0,     0,   218,   219,   220,     0,     0,   221,     0,     0,
       0,     0,   222,   223,     0,     0,     0,     0,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,   233,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,   238,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,     0,
     248,   249,     0,     0,     0,   251,   252,   253,   254,   255,
       0,     0,   256,   257,     0,     0,   259,   260,   261,   262,
       0,     0,   263,   264,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,   268,     0,   269,   270,   271,   272,
       0,   273,     0,   274,     0,     0,     0,   275,   276,     0,
     277,     0,     0,   278,   279,     0,     0,     0,   280,   281,
     282,   283,     0,     0,   284,   285,   286,     0,     0,   287,
       0,     0,     0,     0,   288,   289,   290,     0,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,     0,
       0,     0,   296,     0,   297,     0,     0,   298,   299,     0,
       0,   300,     0,     0,   301,   302,   596,     0,     0,     0,
       0,   303,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,     0,     0,     0,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,     0,   331,   332,   333,   334,     0,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,     0,     0,   358,   359,   360,   361,  1612,     0,     0,
       0,   363,   364,     0,     0,     0,   365,     0,   366,   367,
       0,   368,   369,   370,     0,     0,   371,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   387,     0,   388,   389,   390,
       0,   391,     0,     0,   393,   394,   395,     0,     0,   397,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,     0,   412,     0,   413,   414,   415,     0,     0,     0,
     417,   418,   419,   420,   421,   422,   423,     0,   424,     0,
     425,   426,     0,   427,   428,   429,     0,   430,     0,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,     0,   443,   444,     0,     0,     0,   445,   446,
     447,   448,     0,     0,     0,   449,     0,     0,     0,     0,
       0,   451,   452,   453,   454,     0,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
       0,     0,   476,   477,   478,   479,   480,   481,     0,     0,
       0,   483,   484,   485,     0,   486,   487,     0,     0,   488,
     489,   490,   491,     0,   154,   492,   493,     0,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,     0,
       0,     0,   500,   501,   502,   503,     0,   504,   505,     0,
     506,   507,     0,   508,   509,     0,     0,   510,     0,     0,
     511,     0,   512,     0,   513,   514,     0,     0,     0,     0,
       0,   515,     0,   516,     0,     0,   517,     0,     0,     0,
     518,     0,   519,   520,   521,   522,     0,     0,     0,     0,
       0,     0,   523,   524,   525,     0,   526,   527,   528,   529,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
       0,   534,     0,     0,     0,     0,     0,     0,     0,     0,
     535,   536,   537,   157,   158,     0,   159,   160,   161,   162,
     163,  2454,     0,   164,     0,     0,     0,     0,   165,     0,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,   180,   181,     0,
       0,   182,     0,     0,   183,   184,     0,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,   193,   194,     0,
     195,   196,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,   223,
       0,     0,     0,     0,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,   233,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,   238,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,     0,   248,   249,     0,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
       0,     0,   259,   260,   261,   262,     0,     0,   263,   264,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
     268,     0,   269,   270,   271,   272,     0,   273,     0,   274,
       0,     0,     0,   275,   276,     0,   277,     0,     0,   278,
     279,     0,     0,     0,   280,   281,   282,   283,     0,     0,
     284,   285,   286,     0,     0,   287,     0,     0,     0,     0,
     288,   289,   290,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,     0,     0,     0,   296,     0,
     297,     0,     0,   298,   299,     0,     0,   300,     0,     0,
     301,   302,   596,     0,     0,     0,     0,   303,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,     0,     0,
       0,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,  2455,     0,     0,     0,   363,   364,     0,
       0,     0,   365,     0,   366,   367,     0,   368,   369,   370,
       0,     0,   371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,     0,   388,   389,   390,     0,   391,     0,     0,
     393,   394,   395,     0,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,     0,   412,     0,
     413,   414,   415,     0,     0,     0,   417,   418,   419,   420,
     421,   422,   423,     0,   424,     0,   425,   426,     0,   427,
     428,   429,     0,   430,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,     0,     0,     0,   445,   446,   447,   448,     0,     0,
       0,   449,     0,     0,     0,     0,     0,   451,   452,   453,
     454,     0,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,     0,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
     154,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,     0,     0,     0,   500,   501,
     502,   503,     0,   504,   505,     0,   506,   507,     0,   508,
     509,     0,     0,   510,     0,     0,   511,     0,   512,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,     0,     0,     0,     0,   523,   524,
     525,     0,   526,   527,   528,   529,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,     0,   534,     0,     0,
       0,     0,     0,     0,     0,     0,   535,   536,   537,   157,
     158,     0,   159,   160,   161,   162,   163,     0,     0,   164,
       0,     0,     0,     0,   165,     0,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,     0,     0,     0,
     174,     0,     0,     0,   175,     0,     0,   176,   177,   178,
       0,   179,     0,   180,   181,     0,     0,   182,     0,     0,
     183,   184,     0,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,   193,   194,     0,   195,   196,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,     0,
       0,     0,   215,     0,     0,     0,     0,   216,     0,     0,
     217,     0,     0,     0,   218,   219,   220,     0,     0,   221,
       0,     0,     0,     0,   222,   223,     0,     0,     0,     0,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,   233,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,   238,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,     0,   248,   249,     0,     0,     0,   251,   252,   253,
     254,   255,     0,     0,   256,   257,     0,     0,   259,   260,
     261,   262,     0,     0,   263,   264,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,   268,     0,   269,   270,
     271,   272,     0,   273,     0,   274,     0,     0,     0,   275,
     276,     0,   277,     0,     0,   278,   279,     0,     0,     0,
     280,   281,   282,   283,     0,     0,   284,   285,   286,     0,
       0,   287,     0,     0,     0,     0,   288,   289,   290,     0,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,     0,     0,     0,   296,     0,   297,     0,     0,   298,
     299,     0,     0,   300,     0,     0,   301,   302,   596,     0,
       0,     0,     0,   303,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,     0,     0,     0,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,     0,   331,   332,   333,   334,     0,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,     0,     0,   358,   359,   360,   361,     0,
       0,     0,     0,   363,   364,     0,     0,     0,   365,     0,
     366,   367,     0,   368,   369,   370,     0,     0,   371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   372,   373,
     374,     0,   375,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,   387,     0,   388,
     389,   390,     0,   391,     0,     0,   393,   394,   395,     0,
       0,   397,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,     0,   412,     0,   413,   414,   415,     0,
       0,     0,   417,   418,   419,   420,   421,   422,   423,     0,
     424,     0,   425,   426,     0,   427,   428,   429,     0,   430,
       0,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,     0,   443,   444,     0,     0,     0,
     445,   446,   447,   448,     0,     0,     0,   449,     0,     0,
       0,     0,     0,   451,   452,   453,   454,     0,   455,   456,
     457,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,     0,     0,   476,   477,   478,   479,   480,   481,
       0,     0,     0,   483,   484,   485,     0,   486,   487,     0,
       0,   488,   489,   490,   491,     0,   154,   492,   493,     0,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,     0,     0,     0,   500,   501,   502,   503,     0,   504,
     505,     0,   506,   507,     0,   508,   509,     0,     0,   510,
       0,     0,   511,     0,   512,     0,   513,   514,     0,     0,
       0,     0,     0,   515,     0,   516,     0,     0,   517,     0,
       0,     0,   518,     0,   519,   520,   521,   522,     0,     0,
       0,     0,     0,     0,   523,   524,   525,     0,   526,   527,
     528,   529,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   158,   534,   159,   160,   161,   162,   163,     0,
       0,     0,   535,   536,   537,     0,   165,     0,     0,     0,
       0,   167,   168,   169,   170,   171,     0,     0,  -397,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,     0,     0,     0,     0,   182,
    4254,     0,   183,   184,     0,   185,   186,     0,     0,     0,
       0,   189,   190,   191,  4255,   193,   194,     0,   195,   196,
       0,   197,   198,     0,   200,     0,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,     0,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,     0,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,     0,
       0,     0,   234,   235,   236,     0,  -367,  -367,   237,     0,
    -367,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,  4256,   258,
     259,   260,   261,   262,     0,     0,     0,     0,     0,     0,
       0,     0,   266,     0,   267,     0,     0,     0,   268,     0,
       0,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,     0,   276,     0,     0,     0,     0,     0,   279,     0,
       0,     0,   280,   281,   282,   283,  4257,     0,   284,     0,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
       0,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,  4258,     0,     0,   296,     0,   297,     0,
       0,     0,   299,     0,     0,   300,  4259,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,  -352,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,     0,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,  4260,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   373,   374,     0,     0,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,     0,     0,   413,     0,
     415,  -352,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,     0,   425,     0,     0,   427,   428,   429,
    4261,   430,     0,     0,     0,   432,   433,   434,   435,   436,
     437,   438,   439,     0,   441,   442,     0,   443,     0,     0,
       0,     0,   445,   446,   447,     0,     0,     0,     0,   449,
       0,     0,     0,     0,     0,     0,   452,     0,   454,     0,
     455,     0,     0,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,     0,   470,   471,   472,   473,
       0,     0,     0,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,     0,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,     0,     0,     0,
       0,   510,     0,     0,   511,     0,     0,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,  -352,     0,     0,     0,   523,   524,     0,     0,
     526,     0,   528,   529,     0,     0,   530,     0,   158,     0,
     159,   160,   161,   162,   163,   534,     0,     0,     0,     0,
       0,     0,   165,     0,   535,   536,   537,   167,   168,   169,
     170,   171,     0,     0,  -397,     0,     0,     0,   174,     0,
       0,     0,   175,     0,     0,   176,   177,   178,     0,   179,
       0,     0,     0,     0,     0,   182,  4254,     0,   183,   184,
       0,   185,   186,     0,     0,     0,     0,   189,   190,   191,
    4255,   193,   194,     0,   195,   196,     0,   197,   198,     0,
     200,     0,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,     0,   214,     0,     0,     0,
     215,     0,     0,     0,     0,   216,     0,     0,   217,     0,
       0,     0,   218,   219,   220,     0,     0,   221,     0,     0,
       0,     0,   222,     0,     0,     0,     0,     0,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,     0,     0,     0,   234,   235,
     236,     0,  -388,     0,   237,     0,  -388,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,     0,   251,   252,   253,   254,   255,
       0,     0,   256,   257,  4256,   258,   259,   260,   261,   262,
       0,     0,     0,     0,     0,     0,     0,     0,   266,     0,
     267,     0,     0,     0,   268,     0,     0,   270,   271,   272,
       0,   273,     0,   274,     0,     0,     0,     0,   276,     0,
       0,     0,     0,     0,   279,     0,     0,     0,   280,   281,
     282,   283,  4257,     0,   284,     0,   286,     0,     0,   287,
       0,     0,     0,     0,   288,   289,     0,     0,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,  4258,
       0,     0,   296,     0,   297,     0,     0,     0,   299,     0,
       0,   300,  4259,     0,   301,   302,     0,     0,     0,     0,
       0,   303,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,     0,     0,  -352,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,     0,   331,   332,   333,   334,     0,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,     0,     0,   358,   359,   360,   361,   362,     0,     0,
       0,     0,   364,     0,     0,     0,   365,     0,   366,   367,
       0,   368,   369,  4260,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   373,   374,     0,
       0,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   397,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,     0,     0,   413,     0,   415,  -352,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,     0,     0,
     425,     0,     0,   427,   428,   429,  4261,   430,     0,     0,
       0,   432,   433,   434,   435,   436,   437,   438,   439,     0,
     441,   442,     0,   443,     0,     0,     0,     0,   445,   446,
     447,     0,     0,     0,     0,   449,     0,     0,     0,     0,
       0,     0,   452,     0,   454,     0,   455,     0,     0,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,     0,   470,   471,   472,   473,     0,     0,     0,   475,
       0,     0,   476,   477,   478,   479,   480,   481,     0,     0,
     482,   483,   484,   485,     0,   486,   487,     0,     0,   488,
     489,   490,   491,     0,     0,   492,   493,     0,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,     0,
       0,     0,     0,   501,   502,   503,     0,   504,   505,     0,
     506,   507,     0,     0,     0,     0,     0,   510,     0,     0,
     511,     0,     0,     0,   513,   514,     0,     0,     0,     0,
       0,   515,     0,   516,     0,     0,   517,     0,     0,     0,
     518,     0,   519,   520,   521,   522,  -388,     0,  -352,     0,
       0,     0,   523,   524,     0,     0,   526,     0,   528,   529,
       0,     0,   530,     0,   158,     0,   159,   160,   161,   162,
     163,   534,     0,     0,     0,     0,     0,     0,   165,     0,
     535,   536,   537,   167,   168,   169,   170,   171,     0,     0,
    -397,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,     0,     0,     0,
       0,   182,  4254,     0,   183,   184,     0,   185,   186,     0,
       0,     0,     0,   189,   190,   191,  4255,   193,   194,     0,
     195,   196,     0,   197,   198,     0,   200,     0,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,     0,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,     0,
       0,     0,     0,     0,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,     0,     0,     0,   234,   235,   236,     0,  -385,     0,
     237,     0,  -385,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
    4256,   258,   259,   260,   261,   262,     0,     0,     0,     0,
       0,     0,     0,     0,   266,     0,   267,     0,     0,     0,
     268,     0,     0,   270,   271,   272,     0,   273,     0,   274,
       0,     0,     0,     0,   276,     0,     0,     0,     0,     0,
     279,     0,     0,     0,   280,   281,   282,   283,  4257,     0,
     284,     0,   286,     0,     0,   287,     0,     0,     0,     0,
     288,   289,     0,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,  4258,     0,     0,   296,     0,
     297,     0,     0,     0,   299,     0,     0,   300,  4259,     0,
     301,   302,     0,     0,     0,     0,     0,   303,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,     0,     0,
    -352,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,   362,     0,     0,     0,     0,   364,     0,
       0,     0,   365,     0,   366,   367,     0,   368,   369,  4260,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   373,   374,     0,     0,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,     0,     0,
     413,     0,   415,  -352,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,     0,     0,   425,     0,     0,   427,
     428,   429,  4261,   430,     0,     0,     0,   432,   433,   434,
     435,   436,   437,   438,   439,     0,   441,   442,     0,   443,
       0,     0,     0,     0,   445,   446,   447,     0,     0,     0,
       0,   449,     0,     0,     0,     0,     0,     0,   452,     0,
     454,     0,   455,     0,     0,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,     0,   470,   471,
     472,   473,     0,     0,     0,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   482,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
       0,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,     0,     0,     0,     0,   501,
     502,   503,     0,   504,   505,     0,   506,   507,     0,     0,
       0,     0,     0,   510,     0,     0,   511,     0,     0,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,  -385,     0,  -352,     0,     0,     0,   523,   524,
       0,     0,   526,     0,   528,   529,     0,     0,   530,     0,
     158,     0,   159,   160,   161,   162,   163,   534,     0,     0,
       0,     0,     0,     0,   165,     0,   535,   536,   537,   167,
     168,   169,   170,   171,     0,     0,  -397,     0,     0,     0,
     174,     0,     0,     0,   175,     0,     0,   176,   177,   178,
       0,   179,     0,     0,     0,     0,     0,   182,  4254,     0,
     183,   184,     0,   185,   186,     0,     0,     0,     0,   189,
     190,   191,  4255,   193,   194,     0,   195,   196,     0,   197,
     198,     0,   200,     0,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,     0,   214,     0,
       0,     0,   215,     0,     0,     0,     0,   216,     0,     0,
     217,     0,     0,     0,   218,   219,   220,     0,     0,   221,
       0,     0,     0,     0,   222,     0,     0,     0,     0,     0,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,     0,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,  4463,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,     0,   251,   252,   253,
     254,   255,     0,     0,   256,   257,  4256,   258,   259,   260,
     261,   262,     0,     0,     0,     0,     0,     0,     0,     0,
     266,     0,   267,     0,     0,     0,   268,     0,     0,   270,
     271,   272,     0,   273,     0,   274,     0,     0,     0,     0,
     276,     0,     0,     0,     0,     0,   279,     0,     0,     0,
     280,   281,   282,   283,  4257,     0,   284,     0,   286,     0,
       0,   287,     0,     0,     0,     0,   288,   289,     0,     0,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,  4258,     0,     0,   296,     0,   297,     0,     0,     0,
     299,     0,     0,   300,  4259,     0,   301,   302,     0,     0,
       0,     0,     0,   303,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,     0,     0,  -352,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,     0,   331,   332,   333,   334,     0,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,     0,     0,   358,   359,   360,   361,   362,
       0,     0,     0,     0,   364,     0,     0,     0,   365,     0,
     366,   367,     0,   368,   369,  4260,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   373,
     374,     0,     0,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   397,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,     0,     0,   413,     0,   415,  -352,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
       0,     0,   425,     0,     0,   427,   428,   429,  4261,   430,
       0,     0,     0,   432,   433,   434,   435,   436,   437,   438,
     439,     0,   441,   442,     0,   443,     0,     0,     0,     0,
     445,   446,   447,     0,     0,     0,     0,   449,     0,     0,
       0,     0,     0,     0,   452,     0,   454,     0,   455,     0,
       0,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,     0,   470,   471,   472,   473,     0,     0,
       0,   475,     0,     0,   476,   477,   478,   479,   480,   481,
       0,     0,   482,   483,   484,   485,     0,   486,   487,     0,
       0,   488,   489,   490,   491,     0,     0,   492,   493,     0,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,     0,     0,     0,     0,   501,   502,   503,     0,   504,
     505,     0,   506,   507,     0,     0,     0,     0,     0,   510,
       0,     0,   511,     0,     0,     0,   513,   514,     0,     0,
       0,     0,     0,   515,     0,   516,     0,     0,   517,     0,
       0,     0,   518,     0,   519,   520,   521,   522,     0,     0,
    -352,     0,     0,     0,   523,   524,     0,     0,   526,     0,
     528,   529,     0,     0,   530,     0,   158,     0,   159,   160,
     161,   162,   163,   534,     0,     0,     0,     0,     0,     0,
     165,     0,   535,   536,   537,   167,   168,   169,   170,   171,
       0,     0,  -397,     0,     0,     0,   174,     0,     0,     0,
     175,     0,     0,   176,   177,   178,     0,   179,     0,     0,
       0,     0,     0,   182,  4254,     0,   183,   184,     0,   185,
     186,     0,     0,     0,     0,   189,   190,   191,  4255,   193,
     194,     0,   195,   196,     0,   197,   198,     0,   200,     0,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,     0,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,     0,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,     0,     0,     0,     0,     0,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,     0,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,  -390,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,  4256,   258,   259,   260,   261,   262,     0,     0,
       0,     0,     0,     0,     0,     0,   266,     0,   267,     0,
       0,     0,   268,     0,     0,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,     0,   276,     0,     0,     0,
       0,     0,   279,     0,     0,     0,   280,   281,   282,   283,
    4257,     0,   284,     0,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,     0,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,  4258,     0,     0,
     296,     0,   297,     0,     0,     0,   299,     0,     0,   300,
    4259,     0,   301,   302,     0,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,  -352,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,   360,   361,   362,     0,     0,     0,     0,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,  4260,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   373,   374,     0,     0,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
       0,     0,   413,     0,   415,  -352,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,     0,     0,   425,     0,
       0,   427,   428,   429,  4261,   430,     0,     0,     0,   432,
     433,   434,   435,   436,   437,   438,   439,     0,   441,   442,
       0,   443,     0,     0,     0,     0,   445,   446,   447,     0,
       0,     0,     0,   449,     0,     0,     0,     0,     0,     0,
     452,     0,   454,     0,   455,     0,     0,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,     0,
     470,   471,   472,   473,     0,     0,     0,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,     0,   492,   493,     0,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,     0,     0,     0,
       0,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,     0,     0,     0,     0,   510,     0,     0,   511,     0,
       0,     0,   513,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,  -352,     0,     0,     0,
     523,   524,     0,     0,   526,     0,   528,   529,     0,     0,
     530,     0,   158,     0,   159,   160,   161,   162,   163,   534,
       0,     0,     0,     0,     0,     0,   165,     0,   535,   536,
     537,   167,   168,   169,   170,   171,     0,     0,  -397,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,     0,     0,     0,     0,   182,
    4254,     0,   183,   184,     0,   185,   186,     0,     0,     0,
       0,   189,   190,   191,  4255,   193,   194,     0,   195,   196,
       0,   197,   198,     0,   200,     0,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,     0,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,     0,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,     0,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
    4522,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,  4256,   258,
     259,   260,   261,   262,     0,     0,     0,     0,     0,     0,
       0,     0,   266,     0,   267,     0,     0,     0,   268,     0,
       0,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,     0,   276,     0,     0,     0,     0,     0,   279,     0,
       0,     0,   280,   281,   282,   283,  4257,     0,   284,     0,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
       0,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,  4258,     0,     0,   296,     0,   297,     0,
       0,     0,   299,     0,     0,   300,  4259,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,  -352,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,     0,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,  4260,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   373,   374,     0,     0,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,     0,     0,   413,     0,
     415,  -352,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,     0,   425,     0,     0,   427,   428,   429,
    4261,   430,     0,     0,     0,   432,   433,   434,   435,   436,
     437,   438,   439,     0,   441,   442,     0,   443,     0,     0,
       0,     0,   445,   446,   447,     0,     0,     0,     0,   449,
       0,     0,     0,     0,     0,     0,   452,     0,   454,     0,
     455,     0,     0,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,     0,   470,   471,   472,   473,
       0,     0,     0,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,     0,     0,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,     0,     0,     0,
       0,   510,     0,     0,   511,     0,     0,     0,   513,   514,
       0,     0,     0,     0,     0,   515,     0,   516,     0,     0,
     517,     0,     0,     0,   518,     0,   519,   520,   521,   522,
       0,     0,  -352,     0,     0,     0,   523,   524,     0,     0,
     526,     0,   528,   529,     0,     0,   530,     0,   158,     0,
     159,   160,   161,   162,   163,   534,     0,     0,     0,     0,
       0,     0,   165,     0,   535,   536,   537,   167,   168,   169,
     170,   171,     0,     0,  -397,     0,     0,     0,   174,     0,
       0,     0,   175,     0,     0,   176,   177,   178,     0,   179,
       0,     0,     0,     0,     0,   182,  4254,     0,   183,   184,
       0,   185,   186,     0,     0,     0,     0,   189,   190,   191,
    4255,   193,   194,     0,   195,   196,     0,   197,   198,     0,
     200,     0,   202,   203,   204,   205,   206,   207,     0,   208,
     209,     0,   210,   211,   212,     0,   214,     0,     0,     0,
     215,     0,     0,     0,     0,   216,     0,     0,   217,     0,
       0,     0,   218,   219,   220,     0,     0,   221,     0,     0,
       0,     0,   222,     0,     0,     0,     0,     0,   224,   225,
       0,   226,     0,     0,     0,   227,     0,   228,   229,   230,
     231,   232,     0,     0,     0,     0,     0,     0,   234,   235,
     236,     0,     0,     0,   237,     0,  4549,   239,     0,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,     0,   251,   252,   253,   254,   255,
       0,     0,   256,   257,  4256,   258,   259,   260,   261,   262,
       0,     0,     0,     0,     0,     0,     0,     0,   266,     0,
     267,     0,     0,     0,   268,     0,     0,   270,   271,   272,
       0,   273,     0,   274,     0,     0,     0,     0,   276,     0,
       0,     0,     0,     0,   279,     0,     0,     0,   280,   281,
     282,   283,  4257,     0,   284,     0,   286,     0,     0,   287,
       0,     0,     0,     0,   288,   289,     0,     0,     0,     0,
     291,     0,     0,     0,   292,   293,     0,   294,   295,  4258,
       0,     0,   296,     0,   297,     0,     0,     0,   299,     0,
       0,   300,  4259,     0,   301,   302,     0,     0,     0,     0,
       0,   303,   304,     0,   305,     0,   306,     0,   307,   308,
       0,     0,     0,     0,  -352,     0,     0,   309,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,     0,   331,   332,   333,   334,     0,   335,   336,     0,
       0,     0,     0,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,     0,     0,   358,   359,   360,   361,   362,     0,     0,
       0,     0,   364,     0,     0,     0,   365,     0,   366,   367,
       0,   368,   369,  4260,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   373,   374,     0,
       0,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,   393,   394,   395,   396,     0,   397,
     398,   399,     0,     0,   400,     0,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
       0,   411,     0,     0,   413,     0,   415,  -352,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,     0,     0,
     425,     0,     0,   427,   428,   429,  4261,   430,     0,     0,
       0,   432,   433,   434,   435,   436,   437,   438,   439,     0,
     441,   442,     0,   443,     0,     0,     0,     0,   445,   446,
     447,     0,     0,     0,     0,   449,     0,     0,     0,     0,
       0,     0,   452,     0,   454,     0,   455,     0,     0,   458,
     459,     0,     0,     0,     0,     0,   460,   461,   462,     0,
     463,   464,     0,   465,     0,     0,   466,     0,   467,     0,
     468,     0,   470,   471,   472,   473,     0,     0,     0,   475,
       0,     0,   476,   477,   478,   479,   480,   481,     0,     0,
     482,   483,   484,   485,     0,   486,   487,     0,     0,   488,
     489,   490,   491,     0,     0,   492,   493,     0,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,     0,
       0,     0,     0,   501,   502,   503,     0,   504,   505,     0,
     506,   507,     0,     0,     0,     0,     0,   510,     0,     0,
     511,     0,     0,     0,   513,   514,     0,     0,     0,     0,
       0,   515,     0,   516,     0,     0,   517,     0,     0,     0,
     518,     0,   519,   520,   521,   522,     0,     0,  -352,     0,
       0,     0,   523,   524,     0,     0,   526,     0,   528,   529,
       0,     0,   530,     0,   158,     0,   159,   160,   161,   162,
     163,   534,     0,     0,     0,     0,     0,     0,   165,     0,
     535,   536,   537,   167,   168,   169,   170,   171,     0,     0,
    -397,     0,     0,     0,   174,     0,     0,     0,   175,     0,
       0,   176,   177,   178,     0,   179,     0,     0,     0,     0,
       0,   182,  4254,     0,   183,   184,     0,   185,   186,     0,
       0,     0,     0,   189,   190,   191,  4255,   193,   194,     0,
     195,   196,     0,   197,   198,     0,   200,     0,   202,   203,
     204,   205,   206,   207,     0,   208,   209,     0,   210,   211,
     212,     0,   214,     0,     0,     0,   215,     0,     0,     0,
       0,   216,     0,     0,   217,     0,     0,     0,   218,   219,
     220,     0,     0,   221,     0,     0,     0,     0,   222,     0,
       0,     0,     0,     0,   224,   225,     0,   226,     0,     0,
       0,   227,     0,   228,   229,   230,   231,   232,     0,     0,
       0,     0,     0,     0,   234,   235,   236,     0,     0,     0,
     237,     0,  -371,   239,     0,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
       0,   251,   252,   253,   254,   255,     0,     0,   256,   257,
    4256,   258,   259,   260,   261,   262,     0,     0,     0,     0,
       0,     0,     0,     0,   266,     0,   267,     0,     0,     0,
     268,     0,     0,   270,   271,   272,     0,   273,     0,   274,
       0,     0,     0,     0,   276,     0,     0,     0,     0,     0,
     279,     0,     0,     0,   280,   281,   282,   283,  4257,     0,
     284,     0,   286,     0,     0,   287,     0,     0,     0,     0,
     288,   289,     0,     0,     0,     0,   291,     0,     0,     0,
     292,   293,     0,   294,   295,  4258,     0,     0,   296,     0,
     297,     0,     0,     0,   299,     0,     0,   300,  4259,     0,
     301,   302,     0,     0,     0,     0,     0,   303,   304,     0,
     305,     0,   306,     0,   307,   308,     0,     0,     0,     0,
    -352,     0,     0,   309,     0,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,     0,   331,   332,
     333,   334,     0,   335,   336,     0,     0,     0,     0,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,     0,     0,   358,
     359,   360,   361,   362,     0,     0,     0,     0,   364,     0,
       0,     0,   365,     0,   366,   367,     0,   368,   369,  4260,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   373,   374,     0,     0,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
     393,   394,   395,   396,     0,   397,   398,   399,     0,     0,
     400,     0,     0,     0,   401,   402,   403,   404,   405,     0,
       0,   406,   407,   408,   409,   410,     0,   411,     0,     0,
     413,     0,   415,  -352,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,     0,     0,   425,     0,     0,   427,
     428,   429,  4261,   430,     0,     0,     0,   432,   433,   434,
     435,   436,   437,   438,   439,     0,   441,   442,     0,   443,
       0,     0,     0,     0,   445,   446,   447,     0,     0,     0,
       0,   449,     0,     0,     0,     0,     0,     0,   452,     0,
     454,     0,   455,     0,     0,   458,   459,     0,     0,     0,
       0,     0,   460,   461,   462,     0,   463,   464,     0,   465,
       0,     0,   466,     0,   467,     0,   468,     0,   470,   471,
     472,   473,     0,     0,     0,   475,     0,     0,   476,   477,
     478,   479,   480,   481,     0,     0,   482,   483,   484,   485,
       0,   486,   487,     0,     0,   488,   489,   490,   491,     0,
       0,   492,   493,     0,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,     0,     0,     0,     0,   501,
     502,   503,     0,   504,   505,     0,   506,   507,     0,     0,
       0,     0,     0,   510,     0,     0,   511,     0,     0,     0,
     513,   514,     0,     0,     0,     0,     0,   515,     0,   516,
       0,     0,   517,     0,     0,     0,   518,     0,   519,   520,
     521,   522,     0,     0,  -352,     0,     0,     0,   523,   524,
       0,     0,   526,     0,   528,   529,     0,     0,   530,     0,
     158,     0,   159,   160,   161,   162,   163,   534,     0,     0,
       0,     0,     0,     0,   165,     0,   535,   536,   537,   167,
     168,   169,   170,   171,     0,     0,  -397,     0,     0,     0,
     174,     0,     0,     0,   175,     0,     0,   176,   177,   178,
       0,   179,     0,     0,     0,     0,     0,   182,  4254,     0,
     183,   184,     0,   185,   186,     0,     0,     0,     0,   189,
     190,   191,  4255,   193,   194,     0,   195,   196,     0,   197,
     198,     0,   200,     0,   202,   203,   204,   205,   206,   207,
       0,   208,   209,     0,   210,   211,   212,     0,   214,     0,
       0,     0,   215,     0,     0,     0,     0,   216,     0,     0,
     217,     0,     0,     0,   218,   219,   220,     0,     0,   221,
       0,     0,     0,     0,   222,     0,     0,     0,     0,     0,
     224,   225,     0,   226,     0,     0,     0,   227,     0,   228,
     229,   230,   231,   232,     0,     0,     0,     0,     0,     0,
     234,   235,   236,     0,     0,     0,   237,     0,     0,   239,
       0,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,     0,   251,   252,   253,
     254,   255,     0,     0,   256,   257,  4256,   258,   259,   260,
     261,   262,     0,     0,     0,     0,     0,     0,     0,     0,
     266,     0,   267,     0,     0,     0,   268,     0,     0,   270,
     271,   272,     0,   273,     0,   274,     0,     0,     0,     0,
     276,     0,     0,     0,     0,     0,   279,     0,     0,     0,
     280,   281,   282,   283,  4257,     0,   284,     0,   286,     0,
       0,   287,     0,     0,     0,     0,   288,   289,     0,     0,
       0,     0,   291,     0,     0,     0,   292,   293,     0,   294,
     295,  4258,     0,     0,   296,     0,   297,     0,     0,     0,
     299,     0,     0,   300,  4259,     0,   301,   302,     0,     0,
       0,     0,     0,   303,   304,     0,   305,     0,   306,     0,
     307,   308,     0,     0,     0,     0,  -352,     0,     0,   309,
       0,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,     0,   331,   332,   333,   334,     0,   335,
     336,     0,     0,     0,     0,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,     0,     0,   358,   359,   360,   361,   362,
       0,     0,     0,     0,   364,     0,     0,     0,   365,     0,
     366,   367,     0,   368,   369,  4260,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   373,
     374,     0,     0,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,   393,   394,   395,   396,
       0,   397,   398,   399,     0,     0,   400,     0,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,     0,   411,     0,     0,   413,     0,   415,  -352,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
       0,     0,   425,     0,     0,   427,   428,   429,  4261,   430,
       0,     0,     0,   432,   433,   434,   435,   436,   437,   438,
     439,     0,   441,   442,     0,   443,     0,     0,     0,     0,
     445,   446,   447,     0,     0,     0,     0,   449,     0,     0,
       0,     0,     0,     0,   452,     0,   454,     0,   455,     0,
       0,   458,   459,     0,     0,     0,     0,     0,   460,   461,
     462,     0,   463,   464,     0,   465,     0,     0,   466,     0,
     467,     0,   468,     0,   470,   471,   472,   473,     0,     0,
       0,   475,     0,     0,   476,   477,   478,   479,   480,   481,
       0,     0,   482,   483,   484,   485,     0,   486,   487,     0,
       0,   488,   489,   490,   491,     0,     0,   492,   493,     0,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,     0,     0,     0,     0,   501,   502,   503,     0,   504,
     505,     0,   506,   507,     0,     0,     0,     0,     0,   510,
       0,     0,   511,     0,     0,     0,   513,   514,     0,     0,
       0,     0,     0,   515,     0,   516,     0,     0,   517,     0,
       0,     0,   518,     0,   519,   520,   521,   522,     0,     0,
    -352,     0,     0,     0,   523,   524,     0,     0,   526,     0,
     528,   529,     0,     0,   530,     0,   158,     0,   159,   160,
     161,   162,   163,   534,     0,     0,     0,     0,     0,     0,
     165,     0,   535,   536,   537,   167,   168,   169,   170,   171,
       0,     0,  -397,     0,     0,     0,   174,     0,     0,     0,
     175,     0,     0,   176,   177,   178,     0,   179,     0,     0,
       0,     0,     0,   182,  4254,     0,   183,   184,     0,   185,
     186,     0,     0,     0,     0,   189,   190,   191,  4255,   193,
     194,     0,   195,   196,     0,   197,   198,     0,   200,     0,
     202,   203,   204,   205,   206,   207,     0,   208,   209,     0,
     210,   211,   212,     0,   214,     0,     0,     0,   215,     0,
       0,     0,     0,   216,     0,     0,   217,     0,     0,     0,
     218,   219,   220,     0,     0,   221,     0,     0,     0,     0,
     222,     0,     0,     0,     0,     0,   224,   225,     0,   226,
       0,     0,     0,   227,     0,   228,   229,   230,   231,   232,
       0,     0,     0,     0,     0,     0,   234,   235,   236,     0,
       0,     0,   237,     0,     0,   239,     0,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,   251,   252,   253,   254,   255,     0,     0,
     256,   257,  4256,   258,   259,   260,   261,   262,     0,     0,
       0,     0,     0,     0,     0,     0,   266,     0,   267,     0,
       0,     0,   268,     0,     0,   270,   271,   272,     0,   273,
       0,   274,     0,     0,     0,     0,   276,     0,     0,     0,
       0,     0,   279,     0,     0,     0,   280,   281,   282,   283,
    4257,     0,   284,     0,   286,     0,     0,   287,     0,     0,
       0,     0,   288,   289,     0,     0,     0,     0,   291,     0,
       0,     0,   292,   293,     0,   294,   295,  4258,     0,     0,
     296,     0,   297,     0,     0,     0,   299,     0,     0,   300,
    4259,     0,   301,   302,     0,     0,     0,     0,     0,   303,
     304,     0,   305,     0,   306,     0,   307,   308,     0,     0,
       0,     0,  -352,     0,     0,   309,     0,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,     0,
     331,   332,   333,   334,     0,   335,   336,     0,     0,     0,
       0,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,     0,
       0,   358,   359,   360,   361,   362,     0,     0,     0,     0,
     364,     0,     0,     0,   365,     0,   366,   367,     0,   368,
     369,  4260,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   373,   374,     0,     0,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,   393,   394,   395,   396,     0,   397,   398,   399,
       0,     0,   400,     0,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,     0,   411,
       0,     0,   413,     0,   415,  -352,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,     0,     0,   425,     0,
       0,   427,   428,   429,  4261,   430,     0,     0,     0,   432,
     433,   434,   435,   436,   437,   438,   439,     0,   441,   442,
       0,   443,     0,     0,     0,     0,   445,   446,   447,     0,
       0,     0,     0,   449,     0,     0,     0,     0,     0,     0,
     452,     0,   454,     0,   455,     0,     0,   458,   459,     0,
       0,     0,     0,     0,   460,   461,   462,     0,   463,   464,
       0,   465,     0,     0,   466,     0,   467,     0,   468,     0,
     470,   471,   472,   473,     0,     0,     0,   475,     0,     0,
     476,   477,   478,   479,   480,   481,     0,     0,   482,   483,
     484,   485,     0,   486,   487,     0,     0,   488,   489,   490,
     491,     0,     0,   492,   493,     0,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,     0,     0,     0,
       0,   501,   502,   503,     0,   504,   505,     0,   506,   507,
       0,     0,     0,     0,     0,   510,     0,     0,  4466,     0,
       0,     0,   513,   514,     0,     0,     0,     0,     0,   515,
       0,   516,     0,     0,   517,     0,     0,     0,   518,     0,
     519,   520,   521,   522,     0,     0,  -352,     0,     0,     0,
     523,   524,     0,     0,   526,     0,   528,   529,     0,     0,
     530,     0,   158,     0,   159,   160,   161,   162,   163,   534,
       0,     0,     0,     0,     0,     0,   165,     0,   535,   536,
     537,   167,   168,   169,   170,   171,     0,     0,     0,     0,
       0,     0,   174,     0,     0,     0,   175,     0,     0,   176,
     177,   178,     0,   179,     0,     0,     0,     0,     0,   182,
       0,     0,   183,   184,     0,   185,   186,     0,     0,     0,
       0,   189,   190,   191,     0,   193,   194,     0,   195,   196,
       0,   197,   198,     0,   200,     0,   202,   203,   204,   205,
     206,   207,     0,   208,   209,     0,   210,   211,   212,     0,
     214,     0,     0,     0,   215,     0,     0,     0,     0,   216,
       0,     0,   217,     0,     0,     0,   218,   219,   220,     0,
       0,   221,     0,     0,     0,     0,   222,     0,     0,     0,
       0,     0,   224,   225,     0,   226,     0,     0,     0,   227,
       0,   228,   229,   230,   231,   232,     0,     0,     0,     0,
       0,     0,   234,   235,   236,     0,     0,     0,   237,     0,
       0,   239,     0,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,   251,
     252,   253,   254,   255,     0,     0,   256,   257,     0,   258,
     259,   260,   261,   262,     0,     0,     0,     0,     0,     0,
       0,     0,   266,     0,   267,     0,     0,     0,   268,     0,
       0,   270,   271,   272,     0,   273,     0,   274,     0,     0,
       0,     0,   276,     0,     0,     0,     0,     0,   279,     0,
       0,     0,   280,   281,   282,   283,     0,     0,   284,     0,
     286,     0,     0,   287,     0,     0,     0,     0,   288,   289,
       0,     0,     0,     0,   291,     0,     0,     0,   292,   293,
       0,   294,   295,     0,     0,     0,   296,     0,   297,     0,
       0,     0,   299,     0,     0,   300,     0,     0,   301,   302,
       0,     0,     0,     0,     0,   303,   304,     0,   305,     0,
     306,     0,   307,   308,     0,     0,     0,     0,     0,     0,
       0,   309,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,     0,   331,   332,   333,   334,
       0,   335,   336,     0,     0,     0,     0,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,     0,     0,   358,   359,   360,
     361,   362,     0,     0,     0,     0,   364,     0,     0,     0,
     365,     0,   366,   367,     0,   368,   369,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   373,   374,     0,     0,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,   393,   394,
     395,   396,     0,   397,   398,   399,     0,     0,   400,     0,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,     0,   411,     0,     0,   413,     0,
     415,     0,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,     0,   425,     0,     0,   427,   428,   429,
       0,   430,     0,     0,     0,   432,   433,   434,   435,   436,
     437,   438,   439,     0,   441,   442,     0,   443,     0,     0,
       0,     0,   445,   446,   447,     0,     0,     0,     0,   449,
       0,     0,     0,     0,     0,     0,   452,     0,   454,     0,
     455,     0,     0,   458,   459,     0,     0,     0,     0,     0,
     460,   461,   462,     0,   463,   464,     0,   465,     0,     0,
     466,     0,   467,     0,   468,     0,   470,   471,   472,   473,
       0,     0,     0,   475,     0,     0,   476,   477,   478,   479,
     480,   481,     0,     0,   482,   483,   484,   485,     0,   486,
     487,     0,     0,   488,   489,   490,   491,     0,     0,   492,
     493,     0,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,     0,     0,  1022,  1093,   501,   502,   503,
       0,   504,   505,     0,   506,   507,     0,     0,     0,     0,
       0,   510,     0,     0,   511,     0,     0,     0,   513,   514,
       0,  1094,   677,     0,     0,   515,     0,   516,     0,     0,
     517,     0,  1095,     0,   518,     0,   519,   520,   521,   522,
       0,     0,     0,     0,     0,     0,   523,   524,     0,     0,
     526,     0,   528,   529,     0,     0,   530,  1096,     0,  1097,
       0,     0,     0,     0,     0,   534,     0,     0,     0,  1098,
       0,     0,     0,     0,   535,   536,   537,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1769,  1099,     0,
       0,     0,     0,  1100,     0,     0,  1101,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1102,     0,
    1103,     0,     0,     0,     0,     0,     0,     0,     0,  1104,
       0,  1105,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1106,  1107,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1108,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1109,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1110,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1111,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1112,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1113,
    1114,     0,     0,  1115,  1116,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1117,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1118,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1119,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -2393,     0,     0,     0,  1120,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -2393,     0,     0,     0,     0,     0,
       0,  1122
};

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-3925)))

#define yytable_value_is_error(Yytable_value) \
  YYID (0)

static const yytype_int16 yycheck[] =
{
       6,     0,   694,     0,     0,   896,  1251,    43,   681,   682,
    1251,  1360,    18,   884,  1002,    19,    22,   932,   940,    96,
     693,   888,    78,    96,  1200,    31,    30,  1431,  1531,   761,
     886,    35,    38,  1695,     6,    41,  1383,    43,  1383,  2114,
      46,  1930,  1931,   958,    57,   722,    52,    53,  2195,   142,
      58,  1531,  2218,  1966,  1173,  1174,    58,  1482,  1046,  2053,
      59,  1323,    59,  2025,  1098,  1367,  1367,    21,    55,  2449,
    1911,  1966,    78,  1047,  2506,  1970,   941,  1972,  1966,  2608,
    1193,  1564,  1970,  1202,  1972,    39,  3030,  1974,  2193,  1123,
    1642,  2990,    21,  1678,  1974,  1214,  1215,  1216,  2245,  2692,
      99,  1220,  2172,  3043,   110,  2226,  2572,   972,  3118,  1603,
      39,  1696,  2343,  1993,  3054,  3055,  2347,   561,   562,  1704,
    1705,  2572,  2258,  2259,   875,   691,  1948,  2832,  3546,    21,
     136,  2011,   138,   549,   550,   141,   142,   143,   144,  2724,
    1259,   818,   819,   820,  1976,  2250,  2526,    39,  1980,  2724,
    2575,  2154,   829,  3732,  2116,   149,   889,     9,  1958,   840,
    2546,  1993,    99,  3682,  1124,    22,   138,    35,    21,   141,
      18,    19,    48,  2005,  2037,  2500,  2233,    29,  2564,    18,
      19,    19,    34,  3176,  3177,   125,  2099,  3180,  1053,  2584,
      18,    19,  3264,    18,    19,    62,   194,    21,   109,    64,
    1943,    18,    19,  3528,  2099,   150,  3199,    11,   125,    21,
      26,  2099,    52,    18,    19,    73,   156,  3057,   111,   125,
      18,    19,  3294,    21,   156,  1166,  1167,  1168,  3029,  3635,
      73,   246,    78,    18,    19,   197,  1177,    22,    21,   156,
      37,    47,    31,   194,  1100,  3660,    18,    19,    67,    52,
     156,   163,   194,    37,  1916,    19,   259,   130,  2724,   198,
     246,   563,     5,   144,    12,  3114,  1122,  1208,    68,   103,
    1211,    18,    19,  2724,   131,  3331,  3605,    35,    18,    19,
      21,   377,  3054,  3055,   246,  3344,  3601,   370,   378,  1230,
    1231,   292,   381,  1234,   276,   191,    18,    19,   230,  2828,
     152,    65,   275,   156,   176,   704,  3155,   160,    21,   333,
     160,  1252,  1253,   150,    64,   380,  1257,  1258,    18,    19,
    3260,  3261,    57,   150,    22,  2662,  2712,   327,   193,    23,
     388,   231,   156,  3622,   493,   493,  3625,    18,    19,    23,
     316,    35,   235,   222,    18,    19,   131,   493,   160,    18,
      19,   186,     9,    18,    19,    49,   258,    85,   404,    21,
    1041,   160,   128,   167,   316,  2751,   194,    61,    62,    18,
      19,   438,  2519,    25,    40,   736,   127,    61,    62,   127,
     277,  4305,   572,   280,  4308,  3329,   156,   501,  2860,  2861,
     127,   572,   197,   194,   282,   125,   200,   572,  2870,  2871,
     543,    77,   156,   369,   572,  1078,   388,   231,    18,    19,
     216,  2233,   110,  3992,   615,  3408,  1089,  2079,  2867,   130,
     197,   237,   219,   235,   156,   635,   447,  2089,  1377,  1378,
      23,   266,    18,    19,   654,   219,   935,   160,    70,   537,
      35,   235,    35,     9,   197,   806,   144,   160,   615,  2582,
      21,   263,   428,   641,   455,   563,    49,  1189,   566,   944,
     945,   400,  3534,   556,   547,    31,   965,    62,    61,    62,
     156,  1203,   692,   571,    70,   197,   686,    48,   637,   637,
    1429,   624,   448,   371,   285,   686,   156,   153,  3260,  3261,
     231,   692,   256,  1349,   684,  1351,   249,   248,   228,    18,
      19,  2163,   160,   919,   865,   457,   950,   323,    18,    19,
     691,   248,   626,   534,  4438,   683,   168,   413,  3933,   686,
      18,    19,    18,    19,   683,   683,   572,   293,    23,   186,
     623,   598,  3847,   430,   369,   511,  2873,   683,  3956,   387,
      35,   203,   390,   549,   550,   603,   570,   630,   387,   130,
     556,   390,   558,   418,    49,   971,   456,   429,   316,   387,
     566,  2223,   390,  1478,   570,   293,    61,    62,   574,   471,
     387,   510,   596,   390,    77,  2741,  3905,   401,   643,  3868,
     293,  3574,   387,  2424,  3483,   390,   262,   643,   681,   387,
     686,  3057,   390,  3586,   687,   688,   686,  3126,  4117,    65,
    1333,  3594,   387,   692,  1020,   390,  3057,  1288,  1289,  1286,
    1343,  1010,  2605,   619,  1030,   387,   420,   623,   390,  1352,
     501,   603,  2615,   629,  2465,  2466,  2467,  2468,  1747,    81,
     470,  3624,   456,   433,   369,   636,   642,   643,  1672,  3064,
     387,  1675,   390,   390,  2810,   947,  1680,   387,  3073,   652,
     390,  2644,   502,    18,    19,  3665,  1958,  1958,   694,  2572,
     241,   404,   635,  3719,   543,   387,   672,   470,   390,   493,
    1789,   686,  1706,  1707,  3069,   681,  3735,  4196,  4093,  4094,
     486,   687,   688,   683,  3524,   691,   637,   387,   686,   634,
     390,   441,   511,  3542,    18,    19,  2576,   703,   684,  2521,
    3501,   707,   536,   502,  2584,  4111,   387,  3087,  3033,   390,
     493,    18,    19,   387,  2555,   456,   390,   628,   387,   631,
     433,   390,   387,  2226,   686,   390,  2589,   579,  2313,   533,
    2593,   824,   686,  1852,  3674,  3675,   609,   745,   387,   604,
    4065,   390,  1702,   745,   686,   583,  2226,  2610,  2611,   595,
     690,  2592,   493,  2594,   647,   761,   623,   686,   690,   262,
    2623,   637,  2603,  2246,  1629,  3837,  2509,  3092,    77,  2632,
    3842,   583,  3844,   690,  2654,   572,   615,   387,  2619,   502,
     390,  4199,   859,   587,   690,   878,   859,   639,   572,   553,
     256,  2654,  1733,   645,   583,  2097,  2097,   634,  2639,  1531,
     648,   387,  2643,  2860,   390,    18,    19,   634,  1485,   648,
     903,  2724,   889,   637,   686,   683,   889,   823,   824,   825,
     648,  2815,   821,   648,   821,   683,   683,    18,    19,  2724,
    1721,   648,  2673,    73,  2675,  2676,  2724,   690,  2679,  2680,
     683,   689,   692,   648,   502,   901,   686,   686,  2689,  2690,
     648,   549,   550,   705,   637,   854,   684,   854,   864,   683,
    1801,   860,   686,   648,  1805,  2745,   690,   684,   387,   686,
     686,   390,   878,  4288,   967,  4293,   648,   387,   884,  3259,
     390,   686,  2745,  3269,   940,  3357,   684,  1828,   686,   387,
     896,   387,   390,   692,   390,   901,   637,   903,   609,   905,
     683,   648,  3674,  3675,  1389,  2705,   999,   601,   648,   686,
     916,   543,   684,   919,   686,   921,   686,   601,   924,  3024,
     690,  3026,   197,   860,  3373,  3374,   648,   933,   934,   935,
     643,   937,   686,   176,   940,   991,   690,   684,  3071,   686,
      18,    19,   683,   949,   916,  1618,   686,   543,   648,   955,
    3382,   285,   946,   262,   686,   961,   962,   963,   690,   965,
     966,   967,   684,   969,   970,   971,   373,   648,  1453,   692,
     976,  1648,   156,  1654,   648,   176,  1908,   293,  1910,   648,
     656,   657,   988,   648,  4056,   991,   686,   941,   160,  1045,
     962,  1435,   407,   999,   966,   156,  1002,   969,  3430,   648,
     686,  4520,  1008,   684,   690,   686,  1099,  1063,   601,   197,
     684,   275,   941,  1019,  1020,   684,   686,   686,   972,   684,
     690,   686,   387,  1029,  1030,   390,  1032,  1033,   609,  1894,
    4609,  3736,   473,   626,   692,   684,   488,   686,   648,  1045,
    1046,    18,    19,   972,    87,    44,    18,    19,  1054,  1003,
     501,    18,    19,   388,  1090,    18,    19,  1063,  3524,  1930,
    1931,   204,   648,   387,    18,    19,   390,  1799,  2909,    18,
      19,  1637,    12,  3524,  1003,  4068,   686,  4070,  1084,  1645,
     387,    18,    19,   390,  1090,  3078,  3466,   553,   204,   592,
     683,  3676,   276,  1099,  1510,   566,   192,  3100,   684,  1053,
     686,  3676,  3482,   378,   239,  3530,   601,  3487,    18,    19,
     402,  1003,   615,   123,   249,   276,   592,   433,   200,  4537,
     209,   487,  3115,   975,  1053,    26,    65,   622,   623,   648,
    3123,  3044,   653,   380,  3127,   231,  1142,   378,   648,    18,
      19,  1147,  1148,    71,  3057,    52,   287,  3527,   167,  3044,
     648,   433,   648,   656,   657,   407,  3044,   122,   566,    18,
      19,  3056,    22,  1914,   194,   684,   112,   686,  3056,   115,
      18,    19,   194,   583,   387,   363,   686,   390,  3344,   160,
    4190,   200,   422,  1189,    18,    19,   429,  1264,   686,  3069,
     686,  1264,  1285,   282,   231,   465,   387,  1203,   255,   390,
    1199,  3023,  1199,    18,    19,  2179,   139,  1940,  1941,   350,
    3676,  1304,  3608,   194,  1658,   401,   692,    71,  3081,   241,
     216,   919,   125,   921,  3217,  3676,    18,    19,   429,   404,
     209,  1324,  3353,  3096,  1221,   686,   139,   247,    18,    19,
     249,  2229,   401,   158,   659,  1251,   276,  2366,    59,  3319,
    3386,   692,  1308,   125,  2228,   285,   293,  3144,   393,  4294,
    2182,  2437,  2438,   272,  3144,  3145,  1359,   263,  4212,    18,
      19,   131,   606,   971,   278,  2394,   686,   684,  2312,  1285,
     683,  2315,  2316,   648,  1271,  1291,  1273,  1274,  1275,  1276,
    1277,  1278,  1279,  1280,  1281,  1282,  1283,  2791,  1304,  3892,
    3893,   125,  1308,   282,   615,  2652,  2653,  2652,  2653,   387,
     179,   165,   390,  3145,    18,    19,    26,   256,  1324,  2904,
     122,  1019,  1020,   563,   648,   290,  4225,   643,   637,  2442,
     502,  1029,  1030,  1332,  1032,  2887,   237,  2762,   420,  3333,
    3302,   648,   583,  1342,  3575,   285,   586,   656,   657,  3262,
    1356,   686,   276,  1359,     0,   637,   355,  2851,   388,    18,
      19,  1360,   686,  1360,  1360,   176,   108,  3262,   511,   180,
     613,   635,  4312,  4313,  3262,   686,   433,    33,   564,   686,
    2625,   692,  3223,   194,  2625,   428,  2251,  2252,  2253,  2872,
    2322,   683,   429,    26,  3499,   511,   643,   572,  1404,   332,
    3505,   420,   543,  2705,  2705,    18,    19,   659,   373,   498,
     387,   686,   613,   390,   212,   387,   686,   156,   390,   141,
     387,   245,   323,   390,   387,   435,   365,   390,   158,   332,
    1436,  1437,  1438,   387,   456,   648,   390,  4472,   387,  1532,
    1446,   390,   585,   686,  1142,   686,    18,    19,   158,  1455,
     387,   635,  2308,   390,  1460,   370,  1462,   648,   235,  1465,
     258,   389,   369,  2140,   388,  1437,  1438,    18,    19,   370,
    3999,   493,  4001,   686,   635,  1568,  1484,   387,   482,   221,
     390,   404,  1484,  1489,   566,  2426,   263,  1493,   290,    18,
      19,    18,    19,   558,  2226,   686,  1483,   366,   367,  1486,
     372,   153,  3898,   372,  1510,    74,   690,   237,   387,   574,
     503,   390,   164,   415,   533,     4,  1572,  1573,   614,   498,
     331,   502,  1615,   239,  1530,  1531,  1532,   237,   387,   690,
     237,   390,    21,   249,   608,   389,    53,   361,  1631,   387,
     550,  1547,   390,    18,    19,   128,  1552,    64,  1554,   684,
      39,  1557,   623,   387,  2816,   626,   390,   246,    18,    19,
      18,    19,  1568,   470,    18,    19,  1572,  1573,   587,  3735,
     648,   373,   387,   603,  4006,   390,    18,    19,    18,    19,
      18,    19,    18,    19,  2829,    21,  2927,  2832,  4020,  4058,
     388,  2832,   160,   249,   501,   387,   535,  1603,   390,  1605,
    2273,  1607,    18,    19,   237,  1607,   684,   387,  1664,  1615,
     390,  3524,   401,   323,   553,   637,   609,    13,   429,   275,
    1676,    18,    19,   345,   401,  1631,    18,    19,  3469,   594,
     576,  1637,   547,   579,  3865,    18,    19,   220,   387,  1645,
     370,   390,   179,    18,    19,   509,   547,   238,   160,   572,
      18,    19,   394,  1659,  1660,  1661,  1662,  1663,  1664,  1665,
     370,   683,   404,   370,    18,    19,   235,  1673,  1674,   411,
    1676,   648,   120,  1679,   653,  1629,   648,   393,  1632,   603,
     271,   648,   212,   387,  3564,   648,   390,  1659,  1660,  1661,
     323,  1663,    13,  1699,   648,  4164,  3559,     7,  2919,   648,
    1629,  3564,  1674,  1632,    13,   644,  1404,  1679,  2929,   686,
     293,   648,  1720,   210,   686,   630,    18,    19,  1720,   686,
     589,  4323,    86,   686,    18,    19,   480,  3689,   387,   630,
    3724,   390,   686,   615,   386,   122,   605,   686,   648,    18,
      19,   105,  2674,   607,   140,  2677,  2678,   684,    58,  2681,
    2682,  2683,  2684,  2685,  2686,  2687,  2688,  4258,  4259,  2691,
     684,  3927,  1460,  3676,  1857,   282,   572,   137,   230,   648,
      13,    18,    19,   515,   387,   564,   686,   390,   226,   216,
     127,  3676,   152,    13,   683,  3030,   442,   651,  3676,   648,
      18,    19,   594,  1799,  1800,  1493,    18,    19,    18,    19,
     648,   188,   684,  1896,   686,    18,    19,   686,   637,    18,
      19,   572,  1510,   635,   648,   387,  2591,   547,   390,   140,
     374,   548,  3163,   320,   321,   692,   263,   686,   325,   326,
    1923,   140,  1530,   648,   144,   372,   387,   547,   686,   390,
     547,   167,    18,    19,    18,    19,  2621,  2622,    13,  1547,
    3353,  1857,   686,  1859,  3195,  3196,   648,   686,   387,  1557,
     387,   390,   122,   390,   686,  2853,   583,   401,   648,   684,
     612,   639,  1878,  3353,  2796,   686,   683,   683,  4480,  4481,
    3760,  3761,   185,  3308,   691,  1921,   477,   335,    18,    19,
    1896,   339,   684,    77,    18,    19,   230,   140,   346,   648,
     630,   566,   629,   290,   684,  1603,  2894,    18,    19,   100,
     140,    59,   387,    18,    19,   390,   450,  1923,   686,   571,
     630,  3325,   683,   630,  1930,  1931,  1962,   387,   188,   387,
     390,   485,   390,   387,  4314,   684,   390,  1943,  3159,   227,
    1894,   229,  1948,   637,   648,   387,  1948,   387,   390,   387,
     390,   387,   390,  2809,   390,   677,   678,   679,   680,   108,
      18,    19,   367,   235,  1662,  1894,   433,  1665,  4469,  4470,
     130,   387,  1332,  3194,   390,   140,   676,   366,   367,   427,
     684,  3202,  1342,    19,   684,  4365,   373,   454,  3209,   648,
     387,   263,   686,   390,   637,   387,   235,   640,   390,    18,
      19,  1699,   300,   301,   387,    18,    19,   390,   676,    18,
      19,   416,   387,   141,   683,   390,   684,  2030,   167,   387,
      18,    19,   390,   692,   575,   684,    18,    19,   176,   496,
     290,  2037,   180,   387,   194,   648,   390,    18,    19,  2045,
     125,  2047,  2048,   491,  4119,  4120,   194,   238,    18,    19,
      19,   200,   589,   237,   122,    61,    62,   367,    18,    19,
      32,   122,  2155,   148,   125,    71,  4213,   258,   605,   683,
    2341,   684,    74,    19,  2860,   212,   648,  2348,   692,   563,
     271,   241,   566,  2869,  3329,   387,   197,  2764,   390,   684,
    3931,   686,  2098,   387,  2150,  2101,   390,   648,  2104,  2105,
    3626,   235,   187,  3629,  3630,  3608,  2112,    79,   387,  2115,
    3772,   390,   684,   373,   684,  2890,   686,  2116,   235,   648,
     188,   648,   432,  2131,   434,   212,  2182,   188,   612,  2131,
     668,  2139,   670,  2105,  2133,   135,  2133,  2139,  2144,   197,
     387,   630,   419,   390,  2150,    38,   481,   445,   446,  2155,
    2137,  2138,   654,    46,  2141,   684,   563,   684,   219,   387,
     385,  4050,   390,   683,   355,   387,  2172,   387,   390,   381,
     390,  2177,   141,   648,   387,  2181,  2182,   390,   387,   231,
     364,   390,   154,   331,   632,   378,   370,  3306,   648,   246,
     648,   193,  2198,  4034,   648,   141,  2202,   686,   684,   684,
     686,   686,   650,  2209,  2210,   246,   648,   594,   648,   684,
     648,   387,   648,   387,   390,   704,   390,   345,   197,  2218,
    2226,   197,   290,  2229,   684,  3401,   684,  2233,  2234,   290,
     684,  2233,   648,   235,  2233,   621,  2233,   197,   501,  4098,
    2276,   684,   684,   686,   684,  1943,   684,  4106,  3424,  3425,
    2343,   648,   493,   378,  2347,   439,   648,   387,    61,    62,
     390,   263,  4121,   387,  3942,   648,   390,   501,   684,  3947,
    2276,   420,  3448,   648,   656,   657,   387,  2283,   692,   390,
     648,   429,   387,   683,   684,   390,   477,   684,  4129,  4130,
    4131,  4132,   684,   684,   648,   686,   456,  2251,  2252,  2253,
     684,   684,   686,   683,   773,   373,   493,    77,  2314,   684,
     686,  3556,   373,   686,   501,  3556,   684,  3436,  2324,   150,
     151,   130,  2251,  2252,  2253,   794,  2637,  2638,   575,   387,
     684,    96,   390,   493,   594,  2652,  2653,  2343,   807,   808,
      77,  2347,   684,  3846,   686,  4186,   648,  2045,   572,  3696,
    2048,   684,  3697,   686,   648,   684,    93,   686,   549,   667,
     668,   683,   670,   547,   683,  3399,  3354,   683,   387,   648,
     684,   390,   686,   684,   387,   686,   345,   390,   387,   620,
     621,   390,   684,   683,  2371,   194,  1238,  1239,   158,   387,
     684,   684,   390,   686,   122,   387,   637,   683,   390,   345,
    2098,   648,   684,  2101,   686,   684,   387,  2500,   683,   390,
     122,  4312,  4313,   125,  2112,   599,   418,   566,   683,   683,
     648,  4099,   683,  4341,    13,   683,   648,   387,   648,  4107,
     390,   683,   241,   620,   621,   648,   692,  2443,   587,   648,
      48,   683,   683,   415,   684,   600,   630,   683,   603,   609,
     637,   683,   941,   608,    43,   684,   684,   686,   613,  2446,
     188,  2448,   684,   612,   684,   437,   955,   237,   684,   683,
     686,   684,   648,   683,   648,   684,   188,   637,   684,   628,
     686,   683,   683,   972,  4162,   684,  3731,   686,  4166,   156,
     684,  3736,   686,   684,  2500,  3736,   683,   683,   683,   227,
    2198,   229,    26,  2509,  2202,    94,   478,   219,   684,    98,
     684,  2209,  2210,   683,  1003,  2521,  2522,  2523,   648,  2521,
    2613,  1010,   683,   683,   648,   684,   594,   686,   265,    12,
     683,   683,  1021,   594,  3390,   504,   505,   648,   683,  4457,
    3431,  3397,    26,   648,   684,   683,   686,   675,   676,   677,
     678,   679,   680,    77,   684,   156,   683,   122,   504,   505,
     684,   684,   290,   686,  1053,  2601,   684,   539,   686,  2575,
     684,  3975,   686,  2577,   683,  3694,  2582,   683,   290,   684,
     690,  2587,  2588,  2589,   683,   683,  2590,  2593,   683,  2595,
     648,   683,  2596,    77,   364,   683,  4514,    13,  4516,  2605,
     370,   684,  2608,   686,  2610,  2611,   343,  2613,  2614,  2615,
     713,   714,  4530,   716,  2620,   718,  2314,  2623,   683,  2625,
    2624,  3353,   228,   188,  2628,   108,  2632,  2633,  2721,   648,
    2634,  2635,   369,  3500,   158,   648,  2642,   683,  2644,   648,
    4558,  4559,   691,   683,   127,   373,   683,   456,  2654,    64,
     648,   683,   683,   177,   219,   684,   648,   686,   683,    74,
     184,   373,   683,  2669,   253,   684,   684,   648,   686,   439,
    3343,   684,   683,   683,    89,   684,   684,  2754,   686,    48,
     684,  2754,   686,  2776,   493,   612,   684,    35,   648,   683,
     683,  3582,   684,   177,   431,   684,   683,   686,   141,   100,
     184,   683,  3593,   684,   673,   674,   675,   676,   677,   678,
     679,   680,  4553,   237,    62,  2721,   683,   200,    80,   684,
      82,   686,   683,  4564,   140,   290,   683,   673,   674,   675,
     676,   677,   678,   679,   680,   276,   684,  2743,   686,  2745,
    2796,   683,  2741,   332,  3920,   100,  2745,   684,  2745,   686,
     683,  2750,  2751,   237,   300,   301,  4597,  2756,  3746,   684,
     243,   686,   683,   125,   112,   683,  2772,   115,  2824,  2768,
    2776,  2768,   684,   683,   686,   123,   683,   547,   193,   684,
     683,   686,   320,   321,   199,  2791,   148,   325,   326,  2795,
    2796,   293,   684,  3715,   686,   684,   533,   686,   683,   323,
     609,   683,   683,   286,   220,   683,   683,   396,   373,   160,
     684,  2810,   686,   684,   683,   686,    21,   684,  2824,   686,
     235,   683,  2828,  2829,   683,   187,  2832,   683,   637,   599,
     684,    64,   686,  2832,   684,  2832,   686,   238,   683,   323,
     364,    74,   683,    18,    19,  2851,   370,  2853,   263,   684,
     683,   686,   122,   683,  2860,  2861,    89,   258,  2860,  2861,
     630,   683,   683,  2869,  2870,  2871,   594,  2869,  2870,  2871,
     271,   384,   692,   100,   683,   171,   684,   684,   686,   686,
     364,   533,   594,   238,  1978,  1979,   370,  1981,  2894,   193,
    1984,  1985,  1986,  1987,     7,   100,  1990,   456,    12,   445,
     446,  1995,   345,   258,   686,   692,  2000,  2001,  2002,  2003,
    2004,   684,   260,   686,  2008,  2009,   271,   684,   188,   686,
    2014,  2015,  2016,  2017,   378,  2019,  2020,   615,  2022,   518,
      77,   122,   563,  3824,  3825,  2633,  3827,   420,   516,  3032,
    3033,   116,   117,   118,   119,   120,    93,   686,   684,   219,
     686,   156,    50,   287,   355,   160,  3999,   522,  4001,   684,
     193,   686,   686,   583,    50,   686,   199,  4212,  3835,   686,
     487,   560,    71,   273,  2980,   686,  1465,   378,   524,   525,
     526,   686,  2988,   658,  2990,   691,   401,   134,   686,   194,
     692,   683,   166,   160,   161,   194,   543,   188,   166,  3092,
     355,   563,   235,   418,   543,   287,   354,   212,  2995,   357,
     686,   238,   217,   157,    88,   686,   499,  3023,   194,  3025,
     290,  3023,    21,   547,  3030,   686,  3032,  3033,   219,   594,
     263,   258,   379,   238,   201,   646,   559,    71,    13,   634,
     684,   246,   684,   140,   271,  2743,    37,   214,   223,   224,
     225,   226,    10,   258,   686,  2149,   692,    74,  3064,   684,
     684,   504,   505,   547,   502,  3071,   271,  3073,   684,  1558,
    1559,   276,  3078,   692,   156,  3081,   477,   684,   440,   108,
     285,   564,    48,   566,   654,   637,  3092,   254,   160,   160,
    3096,   160,   160,  2791,   160,   160,   686,   493,   481,   290,
     267,   160,   404,   373,   519,   501,   630,   572,   249,  3115,
     686,   527,   528,   529,   530,   531,   532,  3123,   265,   125,
    3126,  3127,   477,   316,   115,     7,   683,   294,   355,   612,
     110,   122,     4,   549,   492,   628,  3142,   686,   249,   610,
    1629,   686,   684,  1632,    57,   448,   630,   171,   549,   686,
     355,   378,   378,  2851,  4045,   111,  4047,  4048,   378,   200,
     335,   509,   337,   338,   339,   228,   378,   615,   683,    21,
     199,   346,   160,   378,   275,   158,   193,   686,  4069,  4050,
     692,   564,   373,   388,   691,   418,   569,    39,   179,   604,
      50,   287,   359,   287,   549,   287,   343,   188,   186,   287,
     287,   686,   108,    55,    56,   686,   235,   287,   160,   378,
     583,  3217,   387,   201,   615,   390,   686,   686,   235,   366,
     367,  4570,   369,   583,   620,   621,   214,   282,   219,   612,
     401,   579,   675,   676,   677,   678,   679,   680,   583,  3245,
     686,   637,  3248,    13,   160,   628,   263,   210,    21,   378,
     477,  3257,   427,   197,    27,    28,   635,   286,  3264,   607,
     197,   167,   458,   459,   460,   461,   462,   463,   464,   583,
     583,   654,   477,   683,   255,   433,   249,  3283,   266,   267,
     692,   692,   686,   692,   431,    56,   519,   683,  3294,  3295,
      63,   677,  3298,   692,   200,    66,   501,   252,   561,   290,
     181,   194,   686,   514,    77,    76,   294,    60,   194,   684,
      83,    84,   405,  3319,    87,   490,   491,   684,   684,    90,
      91,    92,   549,  3329,   594,   684,  3332,  4572,   684,   235,
     684,  4572,   684,   197,   684,   106,   676,   686,   111,   683,
     686,   684,   684,   684,   549,  3344,   684,  3353,  3354,   684,
    4595,  3357,   125,   686,  4595,  3357,   129,  4602,   684,   684,
     684,  4602,   692,  4608,   686,   356,   684,  4608,   680,   692,
     686,   604,   692,    77,   684,   363,   402,   368,   572,  4294,
     286,   372,   373,   156,   401,   158,   533,   572,   615,  1878,
     572,   572,   160,    27,   126,   686,   503,   692,   603,    87,
     263,   418,    74,   594,   401,  1894,   401,   111,   401,   136,
     615,   583,   261,   261,   401,   136,    21,   401,    48,  1908,
     686,  1910,    37,  1912,  1913,   401,  1915,   401,   686,   417,
     635,   401,   637,   401,  2528,  2529,   619,    71,   378,   619,
     683,    75,   160,    77,  3142,   160,   160,   160,   160,   160,
    2544,   160,   160,   160,   158,   160,   642,   632,   231,   160,
     160,   160,   235,  4155,   160,   160,   160,  2561,  2562,   242,
     499,   160,   614,   648,   649,   650,   160,  3483,   683,   684,
    1969,   686,  3575,   160,   689,   690,   160,   160,   141,   262,
     519,   125,   160,   160,   160,   100,   160,   160,   160,   160,
     115,   655,   275,   692,   683,   683,   683,   122,  2602,   415,
     572,   572,  3605,    33,   420,   572,   686,   236,   683,   692,
     141,   197,   686,  2617,  3530,   583,   385,   583,  3534,   212,
    2922,   235,   572,   433,  3570,   564,   684,   566,  3544,   197,
     569,   428,   615,   686,  4236,   336,   684,   154,   684,   322,
    3556,   156,   245,  3559,   245,   160,   684,  4472,  3564,   692,
     684,   684,   692,   334,   179,   156,   683,   340,   683,  3575,
     555,   683,    12,   188,   572,   604,   174,   160,   406,    73,
     351,   572,   342,   612,   669,   576,   533,   192,   579,   194,
     533,   141,   533,   499,  3600,   533,   492,   533,   589,  3605,
    3298,   403,   683,   594,   219,   451,   597,   212,   263,   141,
     686,   263,   217,  2707,  2708,  2709,  2710,   692,   322,   683,
     473,   141,   395,   683,   156,   654,   231,   286,   401,   263,
    3636,   404,   683,   238,  3332,   683,   340,  3643,   683,   683,
     683,   246,   692,   160,   683,    21,   683,   683,   385,  4564,
    4541,    27,   677,   258,  3660,   686,   282,   643,   564,  3715,
     364,   683,   160,   569,  3636,   686,   271,  3673,   197,   684,
     684,   276,   684,   684,   684,   290,   258,   258,    48,  3685,
     285,   587,  4597,   456,   675,   676,   217,   683,   391,   683,
    3689,   373,   345,    62,   684,    71,   247,    48,   247,    75,
     495,    77,   684,    48,   683,   683,   612,   684,   160,  3715,
     483,   160,   684,   684,   566,   278,  2205,   686,   489,   683,
     493,   683,   628,   684,   345,  3731,   686,   684,   111,   249,
    3736,  3737,   366,   367,   683,   683,  3735,   111,   372,   692,
    3746,   356,   141,   564,   378,   263,   637,   263,   654,   125,
     355,    56,   683,  4445,   686,   275,   564,   372,   373,   686,
     583,    66,  2251,  2252,  2253,  3157,  3158,   540,   541,   542,
    3162,    76,  3865,   378,   547,   414,   683,   583,   683,   683,
     551,   633,   684,   388,   418,    90,    91,    92,   686,  2278,
     384,   564,   212,   378,   567,   345,   516,   568,   378,   583,
     433,   106,   210,   683,   378,   231,  3812,   684,  3200,  3815,
     686,   197,  3905,   345,  3206,  3207,  3208,   692,   686,  3211,
     672,   258,   689,   689,   689,   345,   258,   203,   258,   373,
     603,  3837,   637,  2322,   686,   277,  3842,   684,  3844,   684,
     684,   684,   401,   547,  3850,  3851,   366,   367,    48,    48,
    3854,   504,   505,   153,    48,   388,   683,   677,   683,  3865,
     564,   683,   125,   497,   637,   125,   684,    35,   566,    35,
     722,   626,   477,   609,   125,   727,   263,   203,   263,   372,
     567,   568,   569,   504,   505,   572,   573,   263,   575,   576,
     577,   578,    35,   373,   416,   378,   501,   378,    77,  3905,
      21,   684,  3600,   692,   683,   757,   516,   684,   686,   141,
     683,   488,   684,   547,   285,    12,   175,   690,   285,   385,
     637,   147,   442,   269,   246,   684,   258,  3933,  3927,  3935,
    3936,   141,  4605,   258,   686,   683,   683,  3943,   684,   684,
     684,   684,   684,   684,   549,   684,   345,   342,   686,  3955,
     684,   265,   428,   686,   504,   505,   684,   572,  3964,   120,
     686,   576,    48,   650,   579,    48,   818,   819,   820,   821,
     604,    48,   504,   505,   589,   276,   368,   829,   621,   594,
      15,   683,   597,    21,   504,   505,   683,  3685,    81,   143,
     366,   367,   511,  3999,   686,  4001,   372,   517,   603,   684,
     686,   373,   378,   683,   683,   686,   194,   263,  2497,   614,
     615,   566,   194,   373,   692,   342,   173,   620,   637,   684,
     673,   674,   675,   676,   677,   678,   679,   680,   319,   334,
     635,   684,   637,   683,   683,   398,   684,   473,   149,   249,
     609,  2530,   418,   385,  4050,   683,   351,   684,   684,   684,
    4056,  2540,  2541,   674,   675,   676,   677,   678,   679,   680,
     675,   676,  2551,  2552,  2553,  2554,  4072,  2556,  2557,   683,
     922,   684,   683,   538,   378,   684,    48,   484,   686,   684,
      48,   686,   683,   574,   689,   690,   136,  4093,  4094,   941,
     136,   683,   158,   441,   155,   634,    32,   693,    64,   951,
     385,    64,   555,   554,   683,   504,   505,   634,  2597,  2598,
    2599,  2600,   684,   345,    32,   197,   385,   385,   684,   143,
     972,   497,   134,   673,   674,   675,   676,   677,   678,   679,
     680,  4137,     6,   378,   684,   345,   378,   246,  2627,   154,
     609,   673,   674,   675,   676,   677,   678,   679,   680,   690,
     130,  1003,  3850,   673,   674,   675,   676,   677,   678,   679,
     680,   634,   154,   230,   292,  4152,   690,   472,   693,   124,
     482,   547,  3266,  3267,    54,   575,   143,   690,   154,   228,
     686,   575,   215,   690,   489,  2674,    48,    54,  2677,  2678,
     154,   194,  2681,  2682,  2683,  2684,  2685,  2686,  2687,  2688,
     194,  1053,  2691,   194,   231,   455,  4212,   575,   636,  1061,
     125,   373,   683,  4219,  4220,   501,   686,   196,  4265,  4225,
    2780,  2702,  2696,  3935,  2700,  2698,  3931,  2693,   604,  3938,
    3946,  4194,  3053,  3953,  4428,   945,  4429,  4292,  3955,  4245,
    1092,  4116,  1374,  4597,  4553,    46,   551,   695,  2225,  4255,
    3319,  2177,  4180,  4180,  4260,  4180,  4180,  4180,  4180,  4180,
    4180,  4180,  4560,   568,  4180,  4483,  4265,  4360,  4265,  4265,
    4398,  4483,   504,   505,   673,   674,   675,   676,   677,   678,
     679,   680,  4288,  4470,  4424,   684,   973,  4423,  3676,  4382,
    4180,  4180,  4385,  4180,   504,   505,  3056,  3044,  1972,  1426,
    3262,  2751,  3689,  2750,  2756,  3478,  4037,  4367,  4477,  4315,
    1162,  1163,  4447,  4040,  4445,  3281,  2097,  2745,  4236,  1171,
    1172,  1173,  1174,  1175,  1176,   141,  4362,  4333,  3564,  2580,
    3565,  3177,  1184,  1185,    35,  1187,  1188,  3211,  3879,  3210,
    1192,  1193,  4394,  3616,  1196,  1197,  1198,  1199,  4362,  1201,
    1202,  3032,  2976,  4162,  4360,  4240,  4166,  1209,  1210,  4122,
    1212,  1213,  1214,  1215,  1216,  4099,  1218,  1219,  1220,  1221,
    1222,  1223,  1224,  1225,  1226,  1227,  4382,  1229,  4107,  4385,
    1232,  1233,  3943,  3076,  4371,  1237,  3593,  2725,  2474,  1241,
    1242,  1243,  2469,   141,  2103,  4062,  2653,  1712,  2653,  2652,
    1708,   700,  1254,  1255,  1256,  3561,  2895,  1259,  1358,  2215,
    3084,  1414,  2209,  2048,  1266,  3332,  2815,  3725,    59,  1271,
    1610,  1273,  1274,  1275,  1276,  1277,  1278,  1279,  1280,  1281,
    1282,  1283,   133,   249,  1286,   673,  1347,  2512,  1290,  4137,
    1292,   673,   674,   675,   676,   677,   678,   679,   680,   672,
    1878,  2441,   684,  1462,  2348,  2233,  2233,   158,  2233,    27,
      28,   162,  2233,   673,   674,   675,   676,   677,   678,   679,
     680,  4003,  1203,  3763,  4219,  3643,  4220,  1329,  2903,  3385,
     707,  2770,  4488,  2877,  3556,  4052,  1923,  1177,  1050,  4495,
    4477,  1147,    16,    61,    62,    63,  3718,  2148,  4591,  1360,
    1012,   202,  1494,    71,  1360,  2810,  2810,  3731,  2309,    77,
    2999,  3000,  3743,   891,   694,    83,    84,  1668,  1360,    87,
    1360,   222,  1357,  3012,  2310,  4531,  2165,  1693,  4503,   345,
    4536,  3142,  3335,  3831,  1583,  3495,  4527,  4608,  4602,  3736,
    3846,  1632,  2522,   111,  2276,  1088,    43,    43,  1086,  1627,
    1645,   657,  2202,    39,  1308,  1625,  1003,   125,  4564,  4127,
    2464,   129,   660,  4133,  1049,   885,  4572,   563,   563,    -1,
     945,  4570,   945,  4570,    -1,    -1,    -1,    -1,    -1,   945,
      -1,    -1,    -1,    -1,    -1,  4591,   287,    -1,    -1,  4595,
     158,  4597,    -1,    27,    28,    -1,  4602,   345,    -1,    -1,
      -1,    -1,  4608,    -1,  3093,    -1,    -1,    -1,    -1,    -1,
    1462,    -1,    -1,    -1,    -1,  3104,  1468,    -1,  1470,  1471,
      -1,    -1,    14,    -1,    -1,    17,    -1,    -1,    -1,    63,
    1482,  1483,    -1,  1485,  1486,    -1,    -1,    -1,    -1,    -1,
      32,    -1,    -1,    77,    36,    -1,    -1,    -1,    -1,    83,
      84,    -1,    -1,    87,    -1,    -1,    -1,    21,    50,    51,
      -1,    -1,    -1,    27,    28,    -1,    58,   235,    -1,    -1,
      -1,    63,    64,    -1,   242,    -1,    -1,   111,    -1,    -1,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    79,   504,   505,
      -1,   125,    -1,    -1,   262,   129,    -1,    -1,    -1,    63,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,
      -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,   419,    83,
      84,    -1,    -1,    87,   158,    -1,  4357,   428,    -1,   121,
     116,   117,   118,   119,   120,    -1,    -1,    -1,    -1,   131,
     132,    -1,   443,    -1,    -1,    -1,    -1,   111,    -1,    -1,
      -1,   143,   144,    -1,   322,    -1,   504,   505,    -1,    -1,
      -1,   125,  3251,    -1,   156,   129,    -1,   468,    -1,  3258,
      -1,    -1,   340,    -1,  4405,    -1,    -1,  1629,   170,    -1,
    1632,    -1,    -1,    -1,    -1,    -1,  1638,    -1,    -1,  4420,
    1642,    -1,   156,    -1,   158,    -1,  1648,    -1,   190,    -1,
      -1,   235,  4433,  1655,    -1,    -1,    -1,    -1,   242,    -1,
      -1,   512,    -1,    -1,    -1,    -1,   208,    -1,   210,    -1,
      -1,    -1,    -1,   215,    -1,    -1,   218,   395,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   404,   223,   224,   225,
     226,   233,   543,    -1,    -1,    -1,    -1,    -1,    -1,   241,
      -1,    -1,   244,    -1,    -1,  4486,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,  4496,    -1,   231,    -1,    -1,
    4501,   235,   264,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,  1735,    -1,    -1,    -1,  1739,   322,   281,
      35,    -1,    -1,   285,    -1,  1747,    -1,  1749,   262,    -1,
      -1,  4532,    -1,  4534,    -1,    -1,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4545,   483,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,    -1,    -1,    -1,    -1,  1789,    -1,    -1,
      -1,    -1,    -1,  4574,  4575,    -1,    -1,    -1,  4579,   335,
      -1,   337,   338,   339,    -1,    -1,    -1,    -1,   322,    -1,
     346,   395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     404,    -1,   540,   541,   542,    -1,   340,    -1,    -1,   547,
      -1,    -1,  1834,  1835,  1836,    -1,    -1,    -1,   133,    -1,
     382,    -1,    -1,    -1,    -1,    -1,   564,    -1,    -1,   567,
    1852,  3490,  4096,    -1,    -1,    -1,  1858,    -1,    -1,    -1,
      -1,    -1,    -1,   158,  1866,    -1,  1868,   162,    -1,    -1,
      -1,    -1,    -1,   415,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   395,    -1,    -1,   426,   603,    -1,   401,    -1,    -1,
     404,   427,  1894,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,    -1,    -1,    -1,    -1,   448,   202,    -1,   451,
      -1,   453,    -1,    -1,   456,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4180,    -1,   466,   467,    -1,   222,    -1,    -1,
      -1,    -1,    -1,    -1,   476,    -1,   478,    -1,    -1,   566,
      -1,    -1,   456,    -1,    -1,   487,    -1,    -1,    -1,    -1,
      -1,   493,    -1,    -1,   490,   491,   540,   541,   542,   501,
      -1,    -1,    -1,   547,   506,   507,   508,    -1,  3607,   483,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,
     564,    -1,    -1,   567,  4228,    -1,    -1,  4231,  4232,  4233,
    4234,    -1,   287,    -1,    -1,    -1,    -1,   539,    -1,    -1,
    4258,  4259,    -1,    -1,   546,    -1,   633,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,
      -1,    -1,    -1,    -1,    -1,    -1,   540,   541,   542,    -1,
      -1,    -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3683,   672,    -1,    -1,   590,    -1,
     564,    -1,    -1,   567,    -1,  2057,    -1,    -1,    -1,    -1,
     602,    -1,    -1,    -1,   606,    -1,  4310,  4311,    -1,    -1,
      -1,    -1,   614,    -1,    -1,  4319,    -1,    -1,    -1,    -1,
      -1,    -1,  4340,  4341,    -1,    -1,    -1,    -1,   383,   603,
      -1,    -1,    -1,    -1,    -1,   637,   632,    -1,    -1,  4357,
     727,    -1,    -1,   645,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   649,   650,    -1,    -1,    -1,    -1,   661,
     662,   663,   664,   637,   419,    -1,    -1,    -1,    -1,    -1,
     757,  2133,    -1,   428,    -1,  2137,  2138,    -1,  2140,  2141,
      -1,   683,    -1,    -1,    -1,    -1,    -1,  4405,   443,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4420,    -1,    -1,    -1,    -1,    -1,    -1,   683,
      -1,    -1,    -1,   468,    -1,  4433,   690,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   821,    -1,    -1,    -1,    -1,  4457,
      -1,    -1,  2204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4469,  4470,    -1,    -1,    -1,    -1,   512,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4486,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4496,    -1,
      -1,    -1,    -1,  4501,    -1,  2247,    -1,    -1,   543,  2251,
    2252,  2253,    -1,    -1,    -1,    -1,  4514,    -1,  4516,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,    -1,
      -1,   566,  4530,    -1,  4532,    -1,  4534,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3925,  4545,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3938,
    4558,  4559,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3952,    -1,    -1,  4574,  4575,    -1,    -1,
      -1,  4579,    -1,    -1,   951,    -1,    -1,  2329,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2338,  2339,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2358,  2359,    -1,  2361,
      -1,    -1,  2364,  2365,  2366,  2367,  2368,    -1,    -1,  2371,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2380,    -1,
      -1,    -1,    -1,    -1,  2386,    -1,  2388,    -1,  2390,  2391,
      -1,  2393,  2394,    -1,    -1,    -1,  2398,  2399,  2400,    -1,
      -1,    -1,  2404,  2405,  2406,    -1,  2408,    -1,  2410,   232,
    2412,    -1,  2414,    -1,  2416,    -1,    -1,    -1,    -1,  2421,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1061,    -1,    -1,    -1,    -1,  2441,
    2442,    -1,    -1,    -1,  2446,    -1,  2448,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4095,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1092,    -1,    -1,    -1,    -1,
      -1,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,
      -1,    -1,    14,    -1,  2506,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1162,  1163,    -1,    50,    51,
      -1,    -1,    -1,    -1,  1171,  1172,    58,    -1,  1175,  1176,
      -1,    63,    64,    -1,    -1,    -1,    -1,  1184,  1185,    -1,
    1187,  1188,    -1,    -1,    -1,  1192,    -1,    79,    -1,  1196,
    1197,  1198,  1199,    -1,  1201,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1209,  1210,    -1,  1212,  1213,    99,    -1,    -1,
      -1,  1218,  1219,    -1,    -1,  1222,  1223,  1224,  1225,  1226,
    1227,    -1,  1229,    -1,    -1,  1232,  1233,    -1,    -1,   121,
    1237,    -1,    -1,    -1,  1241,  1242,  1243,    -1,    -1,   131,
     132,    -1,   445,   446,    -1,    -1,    -1,  1254,  1255,  1256,
      -1,   143,   144,    -1,    -1,    -1,    -1,    -1,    -1,  1266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   170,    -1,
      -1,    -1,    -1,  1290,    -1,  1292,    -1,    -1,    -1,    -1,
    4309,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,   210,    -1,
      -1,    -1,  1329,   215,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,    -1,    -1,    -1,    34,    35,    -1,    -1,   241,
      -1,    40,   244,    42,    -1,    44,    45,  4376,  4377,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   264,    62,    -1,    -1,    -1,    -1,    -1,    -1,
    2762,    -1,  2764,    -1,    -1,    -1,  2768,    -1,    -1,   281,
      -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   142,    -1,  1462,    -1,    -1,    -1,    -1,
      -1,  1468,    -1,  1470,  1471,    -1,    -1,    -1,    -1,    -1,
     159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   187,    -1,
     189,    -1,    -1,    -1,    -1,  2887,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2896,    -1,   205,   206,    -1,    -1,
      -1,    -1,    -1,   415,    -1,    -1,    -1,    -1,    -1,  2911,
      -1,    -1,  2914,    -1,   426,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2936,  2937,   448,    -1,   247,   451,
      -1,   453,    -1,    -1,   456,    -1,    -1,    -1,    -1,    -1,
      -1,   260,    -1,    -1,   466,   467,  2958,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   476,  2967,   478,  2969,    -1,  2971,
     279,    -1,    -1,    -1,    -1,   487,    -1,    -1,    -1,   288,
     289,   493,   291,    -1,    -1,    -1,    -1,    -1,    -1,   501,
      -1,    -1,    -1,  2995,   506,   507,   508,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1638,    -1,    -1,    -1,  1642,    -1,    -1,    -1,   328,
     329,   330,    -1,    -1,    -1,    -1,    -1,   539,  1655,    -1,
      -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,   347,   348,
     349,  3043,    -1,    -1,    -1,   354,    -1,    -1,   357,    -1,
      -1,    -1,  3054,  3055,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,   376,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   590,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     602,    -1,    -1,    -1,   606,    -1,    -1,    -1,    -1,    -1,
     409,   410,   614,    -1,    -1,    -1,    -1,    -1,  1735,    -1,
      -1,    -1,  1739,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1749,    -1,    -1,   637,   435,    -1,    -1,    -1,
      -1,    -1,    -1,   645,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   683,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    -1,
      -1,    -1,   501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   513,    -1,    -1,  1834,  1835,  1836,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1858,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1866,
      -1,  1868,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3260,  3261,
      -1,    -1,    -1,    -1,   573,    -1,    -1,   576,    -1,    -1,
     579,   580,   581,   582,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     7,    -1,    -1,    -1,    -1,    12,    -1,    14,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    27,    28,  3306,    -1,  3308,    -1,    -1,    -1,
      -1,    -1,    -1,   622,   623,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    63,    -1,
      -1,   650,    -1,    -1,    -1,    -1,    -1,    -1,  3350,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    96,    -1,    -1,    -1,    -1,    -1,   686,    -1,    -1,
    3382,  3383,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,  3404,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   137,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,  3428,   152,  3430,    -1,
    2057,  3433,  3434,   158,  3436,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3445,    -1,    -1,    -1,    -1,  3450,    -1,
      -1,  3453,    -1,  3455,  3456,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     7,    -1,    -1,    -1,    -1,    12,    -1,    14,
      -1,    -1,    17,    -1,    -1,    -1,  2133,    -1,    -1,    -1,
     235,    -1,    27,    28,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3529,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    61,    62,    63,    64,
      -1,    -1,    -1,    -1,    69,    -1,    71,    -1,    -1,    -1,
     285,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,  2204,    -1,    -1,
      -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,   322,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,    -1,    -1,   129,   340,    -1,    -1,    -1,   344,
    2247,    -1,   137,   138,    -1,    -1,    -1,    -1,    -1,   144,
      -1,  3633,  3634,    -1,    -1,    -1,    -1,   152,    -1,    -1,
      -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   169,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   388,    -1,    -1,    -1,    -1,    -1,    -1,
     395,    -1,  3674,  3675,    -1,    -1,    -1,   192,    -1,   404,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3694,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2329,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2338,  2339,    -1,    -1,    -1,  3718,    -1,   233,    -1,
     235,    -1,    -1,    -1,    -1,    -1,   451,   242,    -1,    -1,
    3732,  2358,  2359,    -1,  2361,    -1,    -1,  2364,  2365,  2366,
    2367,  2368,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,  3754,  2380,  3756,    -1,    -1,    -1,   483,  2386,
      -1,  2388,    -1,  2390,  2391,    -1,  2393,    -1,    -1,    -1,
     285,  2398,  2399,  2400,    -1,    -1,    -1,  2404,  2405,  2406,
      -1,  2408,    -1,  2410,    -1,  2412,    -1,  2414,    -1,  2416,
      -1,    -1,    -1,    -1,  2421,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,    -1,    -1,
      -1,    -1,    -1,    -1,  2441,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,   340,    -1,    -1,    -1,   344,
       7,    -1,    -1,    -1,    -1,    12,    -1,    14,    -1,   564,
      17,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   382,    -1,    -1,
      -1,    -1,    -1,   388,    -1,    -1,    -1,    -1,   603,  2506,
     395,    58,    -1,    -1,    -1,    -1,    63,    64,    -1,   404,
      -1,    -1,    69,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,
      87,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,    96,
      -1,   436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   111,    -1,   451,   452,   453,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,
      -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     137,   138,    -1,    -1,    -1,    -1,    -1,   144,   483,    -1,
      -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,
      -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3992,    -1,   169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4006,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,  4020,    -1,
    4022,    -1,    -1,    -1,    -1,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,
      -1,    -1,   567,    -1,    -1,    -1,   233,    -1,   235,    -1,
      -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   590,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,   603,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2768,    -1,    -1,    -1,   322,    -1,    -1,    -1,    -1,
    4152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   340,    -1,    -1,    -1,   344,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4177,    -1,    -1,  4180,    -1,
      -1,    -1,    -1,    -1,    -1,  4187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   382,    -1,    -1,    -1,    -1,
      -1,   388,    -1,    -1,    -1,    -1,    -1,    -1,   395,    -1,
      -1,    -1,    -1,    -1,    34,    35,    -1,   404,    -1,    -1,
      40,    -1,    42,    -1,    44,    45,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4252,    -1,    62,    -1,    -1,    -1,  4258,  4259,    -1,   436,
    2887,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2896,
      -1,    -1,    -1,    -1,   451,   452,   453,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2911,    -1,    -1,  2914,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   112,    -1,    -1,   115,   483,    -1,    -1,  2936,
    2937,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4326,    -1,  4328,    -1,    -1,    -1,
      -1,  2958,   142,    -1,    -1,    -1,  4338,    -1,  4340,  4341,
    2967,    -1,  2969,    -1,  2971,    -1,    -1,    -1,    -1,   159,
      -1,    -1,    -1,    -1,    -1,  4357,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   540,   541,   542,    -1,    -1,    -1,  4371,
     547,    -1,    -1,    -1,    -1,    -1,    -1,   187,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,    -1,    -1,
     567,    -1,    -1,    -1,    -1,   205,   206,    -1,    -1,    -1,
      -1,  4403,    -1,  4405,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   590,    -1,    -1,    -1,    -1,  4420,  4421,
      -1,    -1,    -1,    -1,    -1,    -1,   603,    -1,    -1,    -1,
      -1,  4433,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     260,    -1,    -1,    -1,  4456,  4457,    -1,    -1,    -1,    -1,
     637,    -1,    -1,   640,    -1,    -1,    -1,  4469,  4470,   279,
      -1,    -1,    -1,    -1,    -1,  4477,    -1,    -1,   288,   289,
      -1,   291,    -1,    -1,  4486,    -1,    -1,    -1,    -1,    -1,
      -1,  4493,    -1,    -1,  4496,    -1,    -1,    -1,    -1,  4501,
      -1,    -1,    -1,    -1,    -1,  4507,    -1,    -1,    -1,    -1,
      -1,    -1,  4514,    -1,  4516,    -1,    -1,    -1,   328,   329,
     330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4530,    -1,
    4532,    -1,  4534,    -1,    -1,    -1,    -1,   347,   348,   349,
      -1,    -1,    -1,  4545,   354,    -1,    -1,   357,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4558,  4559,    -1,    -1,
      -1,    -1,    -1,  4565,    -1,   375,   376,    -1,    -1,    -1,
      -1,    -1,  4574,  4575,    -1,    -1,    -1,  4579,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   409,
     410,    -1,    -1,    -1,    -1,    -1,    -1,  4609,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    -1,    -1,
      -1,   501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   513,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3350,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3382,  3383,    -1,    -1,    -1,
      -1,    -1,    -1,   573,    -1,    -1,   576,    -1,    -1,   579,
     580,   581,   582,    -1,    -1,    -1,    -1,  3404,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3428,    -1,  3430,    -1,    -1,  3433,  3434,    -1,    -1,
      -1,    -1,   622,   623,    -1,    -1,    -1,    -1,  3445,    -1,
      -1,    -1,    -1,  3450,    -1,    -1,  3453,    -1,  3455,  3456,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3529,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3633,  3634,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,  3718,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,  3732,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,  3754,    78,  3756,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,  3992,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,  4006,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,  4020,   344,  4022,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   395,   396,    -1,    -1,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
      -1,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,    -1,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,   491,    -1,    -1,    -1,    -1,   496,   497,   498,    -1,
    4177,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,    -1,    -1,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,  4252,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
      -1,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,    -1,    -1,   644,    -1,   646,   647,    -1,  4326,
     650,  4328,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   659,
      -1,  4338,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   686,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4403,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4421,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4456,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4493,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
    4507,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      46,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,  4565,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,  4609,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,   268,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,   584,   585,
     586,    -1,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,    -1,    -1,    -1,   675,
     676,    -1,    -1,    -1,    -1,   681,    -1,   683,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,   692,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,   493,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,   637,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,    -1,    -1,    -1,   675,   676,    -1,
      -1,    -1,    -1,   681,    -1,   683,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,   692,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,    -1,    -1,    -1,   675,   676,    -1,    -1,    -1,
      -1,   681,    -1,   683,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,   692,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
      -1,    -1,    -1,   675,   676,   677,    -1,    -1,    -1,   681,
      -1,   683,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
     692,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,    -1,    -1,
      -1,   675,   676,   677,    -1,    -1,    -1,   681,    -1,   683,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,   692,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,    -1,    -1,    -1,   675,
     676,    -1,    -1,    -1,    -1,   681,    -1,   683,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,   692,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,    -1,    -1,    -1,   675,   676,    -1,
      -1,    -1,    -1,   681,    -1,   683,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,   692,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,    -1,    -1,    -1,   675,   676,    -1,    -1,    -1,
      -1,   681,    -1,   683,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,   692,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
      -1,    -1,    -1,   675,   676,    -1,    -1,    -1,    -1,   681,
      -1,   683,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
     692,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,    -1,    -1,
      -1,   675,   676,    -1,    -1,    -1,    -1,   681,    -1,   683,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,   692,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,    -1,    -1,    -1,   675,
     676,    -1,    -1,    -1,    -1,   681,    -1,   683,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,   692,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,    -1,    -1,    -1,   675,   676,    -1,
      -1,    -1,    -1,   681,    -1,   683,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,   692,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,    -1,    -1,    -1,   675,   676,    -1,    -1,    -1,
      -1,   681,    -1,   683,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,   692,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
      -1,    -1,    -1,   675,   676,    -1,    -1,    -1,    -1,   681,
      -1,   683,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
     692,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,    -1,    -1,
      -1,   675,   676,    -1,    -1,    -1,    -1,   681,    -1,   683,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,   692,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,    -1,    -1,    -1,   675,
     676,    -1,    -1,    -1,    -1,   681,    -1,   683,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,   692,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,    -1,    -1,    -1,   675,   676,    -1,
      -1,    -1,    -1,   681,    -1,   683,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,   692,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,    -1,    -1,    -1,   675,   676,    -1,    -1,    -1,
      -1,   681,    -1,   683,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,   692,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    37,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,   691,
     692,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,   199,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,   275,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,   493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,   519,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,   637,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,   683,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     692,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,   199,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,   519,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
     692,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,   683,
      -1,    15,    -1,    -1,   688,    -1,    20,    -1,   692,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,   683,
     684,    15,    -1,    -1,    -1,    -1,    20,    -1,   692,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,   145,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,   683,
      -1,    15,    -1,    -1,   688,    -1,    20,    -1,   692,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,   683,
      -1,    15,    -1,    -1,   688,    -1,    20,    -1,   692,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
     684,    15,    -1,    -1,    -1,    -1,    20,   691,   692,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,   683,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   692,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,   677,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   692,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,   683,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   692,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,   683,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   692,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,   691,   692,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,   692,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,   692,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,   692,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,   692,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,   691,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
      -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,   691,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,   691,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
     691,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,   691,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,   438,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,   691,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,   691,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,   691,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,   684,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,   684,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,   677,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,   677,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,   677,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,     5,     6,   677,     8,     9,    10,    11,    12,    13,
      14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
     144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,   210,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,   506,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,   587,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,   609,   610,   611,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    14,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,   130,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,   285,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,   493,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,   506,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,   587,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,   609,   610,   611,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,   210,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,   493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,   506,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,   587,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,   609,   610,   611,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,    -1,    -1,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,   521,   522,   523,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,   594,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    18,    19,
      20,    21,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,   387,    -1,    -1,
     390,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,   648,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,   502,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,   594,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,   104,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
     104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    95,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
     522,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,   660,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,   418,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,    -1,   422,   423,   424,    -1,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,   452,   453,   454,    -1,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
      -1,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,    -1,
     422,   423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
     452,   453,   454,    -1,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,    -1,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,    -1,   422,   423,   424,    -1,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,    -1,   450,    -1,   452,   453,   454,    -1,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,     6,   659,     8,     9,    10,    11,    12,    -1,
      -1,    -1,   668,   669,   670,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    -1,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,   151,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
      -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,    -1,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,    -1,   491,    -1,    -1,
      -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,     6,    -1,
       8,     9,    10,    11,    12,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    -1,   668,   669,   670,    25,    26,    27,
      28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,    -1,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,
      -1,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,
     498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,   634,    -1,   636,    -1,
      -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,     6,    -1,     8,     9,    10,    11,
      12,   659,    -1,    -1,    -1,    -1,    -1,    -1,    20,    -1,
     668,   669,   670,    25,    26,    27,    28,    29,    -1,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,    -1,    -1,
     452,    -1,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,    -1,   488,   489,    -1,   491,
      -1,    -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,   634,    -1,   636,    -1,    -1,    -1,   640,   641,
      -1,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
       6,    -1,     8,     9,    10,    11,    12,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    -1,   668,   669,   670,    25,
      26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,    -1,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,
     396,    -1,    -1,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,    -1,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,    -1,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,    -1,   491,    -1,    -1,    -1,    -1,
     496,   497,   498,    -1,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,    -1,
      -1,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,    -1,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,    -1,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,     6,    -1,     8,     9,
      10,    11,    12,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    -1,   668,   669,   670,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   395,   396,    -1,    -1,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
      -1,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,    -1,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,   491,    -1,    -1,    -1,    -1,   496,   497,   498,    -1,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,    -1,    -1,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
      -1,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,    -1,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,     6,    -1,     8,     9,    10,    11,    12,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    -1,   668,   669,
     670,    25,    26,    27,    28,    29,    -1,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
      -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,    -1,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,    -1,   491,    -1,    -1,
      -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,     6,    -1,
       8,     9,    10,    11,    12,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    -1,   668,   669,   670,    25,    26,    27,
      28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,    -1,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,
      -1,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,
     498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,     6,    -1,     8,     9,    10,    11,
      12,   659,    -1,    -1,    -1,    -1,    -1,    -1,    20,    -1,
     668,   669,   670,    25,    26,    27,    28,    29,    -1,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,    -1,    -1,
     452,    -1,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,    -1,   488,   489,    -1,   491,
      -1,    -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,
      -1,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
       6,    -1,     8,     9,    10,    11,    12,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    -1,   668,   669,   670,    25,
      26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,    -1,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,
     396,    -1,    -1,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,    -1,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,    -1,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,    -1,   491,    -1,    -1,    -1,    -1,
     496,   497,   498,    -1,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,    -1,
      -1,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,    -1,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,    -1,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,     6,    -1,     8,     9,
      10,    11,    12,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    -1,   668,   669,   670,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   395,   396,    -1,    -1,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
      -1,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,    -1,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,   491,    -1,    -1,    -1,    -1,   496,   497,   498,    -1,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,    -1,    -1,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
      -1,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,    -1,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,     6,    -1,     8,     9,    10,    11,    12,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    -1,   668,   669,
     670,    25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
      -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,    -1,    -1,   452,    -1,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,    -1,   491,    -1,    -1,
      -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    35,    36,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,   613,
      -1,    61,    62,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    72,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,    -1,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    97,    -1,    99,
      -1,    -1,    -1,    -1,    -1,   659,    -1,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,   158,    -1,
      -1,    -1,    -1,   163,    -1,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   198,    -1,
     200,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   234,   235,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   316,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   419,
     420,    -1,    -1,   423,   424,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   444,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   498,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   511,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   543,    -1,    -1,    -1,   547,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   624,    -1,    -1,    -1,    -1,    -1,
      -1,   631
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   590,
     602,   606,   614,   637,   645,   661,   662,   663,   664,   683,
     695,   696,   699,   700,   701,   702,   703,   705,   710,   712,
     734,   735,   738,   760,   782,   789,   790,  1029,  1037,  1072,
    1073,  1074,  1077,  1091,  1093,  1097,  1098,  1099,  1103,  1105,
    1110,  1117,  1128,  1129,  1130,  1131,  1132,  1133,  1134,  1229,
    1260,  1262,  1273,  1274,  1292,  1293,  1297,  1301,  1308,  1323,
    1326,  1329,  1338,  1347,  1351,  1353,  1354,  1413,  1415,  1437,
    1443,  1445,  1446,  1448,  1455,  1457,  1479,  1485,  1486,  1487,
    1488,  1523,  1530,  1531,  1533,    12,   108,   127,   200,   243,
     286,   420,   499,   564,   566,   612,  1497,  1498,  1499,  1502,
     282,   371,  1104,  1480,   572,  1398,   235,     5,     6,     8,
       9,    10,    11,    12,    15,    20,    23,    25,    26,    27,
      28,    29,    30,    32,    36,    40,    43,    44,    45,    47,
      49,    50,    53,    56,    57,    59,    60,    61,    63,    65,
      66,    67,    68,    69,    70,    72,    73,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    87,    88,
      90,    91,    92,    93,    94,    98,   103,   106,   110,   111,
     112,   115,   120,   121,   126,   127,   129,   133,   135,   136,
     137,   138,   139,   143,   146,   147,   148,   152,   154,   155,
     157,   158,   159,   162,   163,   165,   166,   167,   168,   169,
     170,   173,   174,   175,   176,   177,   180,   181,   183,   184,
     185,   186,   187,   190,   191,   195,   196,   198,   202,   204,
     205,   206,   207,   209,   211,   215,   216,   218,   221,   222,
     226,   227,   228,   229,   232,   233,   234,   237,   242,   243,
     244,   248,   252,   253,   255,   256,   260,   262,   265,   266,
     269,   272,   273,   279,   280,   282,   284,   286,   287,   295,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   316,   317,
     318,   320,   321,   322,   323,   325,   326,   331,   332,   333,
     334,   335,   336,   339,   340,   342,   344,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   357,   358,   361,   362,
     363,   364,   365,   369,   370,   374,   376,   377,   379,   380,
     381,   384,   394,   395,   396,   398,   400,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   413,   415,   416,
     417,   419,   421,   422,   423,   424,   425,   427,   428,   429,
     432,   436,   437,   438,   439,   440,   443,   444,   445,   446,
     447,   449,   450,   452,   453,   454,   457,   458,   459,   460,
     461,   462,   463,   464,   466,   468,   469,   471,   472,   473,
     475,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   491,   492,   496,   497,   498,   499,   503,
     507,   509,   510,   511,   512,   514,   515,   516,   517,   518,
     524,   525,   526,   528,   529,   531,   534,   536,   538,   539,
     540,   541,   542,   543,   546,   547,   550,   551,   552,   553,
     554,   555,   558,   559,   560,   561,   563,   564,   567,   568,
     569,   570,   573,   574,   576,   577,   578,   579,   585,   586,
     590,   591,   592,   593,   595,   596,   598,   599,   601,   602,
     605,   608,   610,   612,   613,   619,   621,   624,   628,   630,
     631,   632,   633,   640,   641,   642,   644,   645,   646,   647,
     650,   654,   656,   657,   659,   668,   669,   670,   754,  1395,
    1401,  1408,  1409,  1410,  1411,   316,   457,   563,   566,  1439,
    1439,   641,  1481,   108,   199,   286,   499,   519,   564,   569,
     604,   612,   654,   737,  1008,  1269,  1261,   108,   167,   200,
     235,   286,   420,   499,   564,   587,   612,   628,   654,  1269,
    1401,  1104,   103,   536,   791,    13,    14,    99,   130,   144,
     167,   170,   183,   210,   235,   241,   274,   285,   421,   425,
     441,   449,   457,   493,   506,   507,   558,   587,   609,   611,
    1395,  1398,  1402,  1405,  1409,  1411,  1412,  1461,  1462,   692,
    1392,  1394,  1401,   711,   566,   128,   220,   293,  1275,   407,
     659,    87,   428,  1352,   111,   235,   647,  1358,  1439,  1104,
    1401,  1348,   487,   612,  1439,  1104,   128,   293,  1276,  1296,
     653,  1339,   522,   779,   783,   784,  1401,    13,   425,  1461,
    1481,  1401,    13,   140,   220,   527,   528,   529,   530,   531,
     532,   549,  1139,  1140,  1141,  1493,    61,    62,   125,   209,
     282,   352,   404,   498,   585,   653,   654,   691,   979,  1401,
    1414,  1421,  1426,  1427,  1309,   783,   204,   511,   585,   204,
     511,   566,  1303,   407,   659,  1444,  1401,   660,  1230,  1231,
    1401,    32,    79,   154,   415,   437,   478,   539,  1526,     8,
      23,    29,    35,    37,    38,    39,    41,    54,    55,    61,
      62,    69,    72,    96,    97,   102,   104,   107,   108,   113,
     114,   115,   120,   122,   125,   171,   178,   179,   188,   195,
     205,   207,   213,   219,   226,   230,   241,   245,   271,   279,
     290,   319,   324,   335,   339,   341,   345,   346,   347,   348,
     349,   356,   366,   368,   372,   373,   397,   404,   409,   410,
     412,   427,   455,   456,   475,   477,   484,   485,   491,   544,
     545,   552,   556,   557,   562,   572,   576,   577,   578,   579,
     588,   589,   590,   594,   597,   612,   616,   617,   618,   620,
     625,   627,   632,   633,   650,   665,   666,   671,   675,   676,
     681,   683,   687,   688,   691,   692,   977,  1132,  1156,  1160,
    1163,  1164,  1165,  1166,  1167,  1168,  1175,  1176,  1177,  1178,
    1378,  1380,  1382,  1383,  1384,  1388,  1390,  1395,  1401,  1490,
    1492,  1395,   401,   902,   683,  1491,  1492,  1129,  1130,  1132,
    1229,     0,   156,   697,   415,   104,   274,   612,  1044,  1398,
    1401,  1404,  1406,  1470,  1471,   608,  1075,  1089,   246,  1258,
     388,   603,  1241,  1242,   276,   603,  1242,  1246,  1131,  1132,
     130,   609,   176,   195,   402,  1327,  1392,  1401,   160,  1048,
    1401,   160,   754,   480,  1447,   212,   754,  1404,   856,   857,
     860,   883,  1401,  1392,   230,  1268,   167,  1035,  1497,  1439,
    1481,  1111,   683,   761,   692,   583,   185,  1265,  1392,  1265,
      19,  1482,   230,   931,   235,   212,  1404,   235,   858,   883,
     931,   931,   390,  1494,  1498,  1499,  1500,  1501,  1502,   235,
     566,   367,   677,  1149,  1150,  1153,  1154,  1155,  1156,  1386,
    1401,  1268,  1268,  1268,  1401,   212,  1268,  1268,   883,  1268,
    1268,  1268,  1268,  1439,   706,  1330,   135,   419,  1460,   481,
     481,   564,   569,   612,   628,   654,   654,   385,   683,  1472,
     563,   378,  1472,    67,   511,  1472,   109,   628,  1472,   691,
    1472,   378,   583,   686,  1401,   381,    68,   433,   692,  1404,
     197,   231,  1068,  1401,  1398,  1532,  1153,   246,  1355,  1438,
    1439,   197,    35,   316,  1314,  1349,  1401,  1107,  1406,  1106,
    1439,   246,  1277,  1268,  1341,   316,   428,   511,  1340,  1342,
     621,   780,   501,   785,  1460,   378,   197,   378,   583,  1482,
    1149,  1141,   501,   654,   692,    35,   125,   160,   502,   980,
     981,  1285,  1404,   194,  1285,   255,   433,  1428,  1429,  1431,
    1433,    13,   125,   365,  1405,  1407,  1469,   691,  1404,    35,
     125,   983,   984,  1404,   692,   125,   585,  1417,  1425,  1427,
     686,  1418,  1285,    36,    61,    72,    97,    99,   109,   158,
     163,   166,   198,   200,   209,   211,   234,   235,   261,   282,
     316,   381,   408,   419,   420,   423,   424,   444,   498,   511,
     547,   566,   631,   979,  1007,  1310,  1314,  1315,  1317,  1422,
     785,   447,   534,  1086,  1087,  1088,   433,   637,  1078,  1079,
    1080,  1086,  1302,  1401,  1532,  1439,  1230,   686,   683,  1232,
      37,   219,   572,  1379,  1399,  1525,  1525,  1525,    96,  1524,
    1525,  1525,   683,   683,   683,  1163,   683,   683,   683,  1153,
    1190,   683,   683,   683,   683,   683,   683,   683,   683,  1152,
    1152,   683,   965,   683,   683,   683,   572,   683,   683,   683,
    1491,   683,   683,   683,   683,   683,   683,   683,   683,   683,
    1153,   683,   683,   683,  1188,  1189,  1388,  1401,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   965,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   965,   572,   683,   683,   683,
     572,   683,   683,   683,    37,   219,   572,   683,  1152,   965,
     965,   683,   683,   683,   683,   683,   683,   683,   683,   683,
    1163,  1163,  1163,  1130,  1132,  1153,  1401,   691,  1179,  1404,
    1401,   141,   156,   345,   504,   505,   673,   674,   675,   676,
     677,   678,   679,   680,  1163,    71,   389,  1399,   259,   652,
     683,   692,   683,    48,   156,   156,   684,   684,   684,   690,
    1401,  1152,   683,   228,   691,   125,   228,   465,   686,  1474,
     300,   301,   445,   446,   524,   525,   526,   732,  1090,   612,
    1081,  1082,   146,   392,   691,  1256,  1257,  1259,  1404,    48,
      13,   140,  1489,  1245,  1246,   290,   373,   594,  1247,  1248,
    1380,  1401,  1489,  1245,   194,   285,  1142,  1143,  1144,  1241,
    1142,  1242,  1246,   231,   293,   429,  1299,  1300,  1296,   160,
    1324,  1328,  1379,  1401,   333,   570,   596,  1031,  1406,  1033,
    1404,   862,   884,  1401,  1032,   384,     7,    58,   144,   367,
     432,   434,   885,  1030,   171,   754,   533,  1503,  1504,  1034,
    1265,  1112,  1113,  1114,  1115,  1392,  1153,  1186,  1187,  1401,
     713,   714,   176,   429,   686,  1092,    59,   176,   180,   194,
     331,   429,  1100,  1101,  1102,    57,   369,   369,   448,  1483,
     366,   367,  1159,  1401,  1401,   861,   884,   193,  1401,     7,
    1406,  1470,  1469,   456,    11,   167,   200,   420,   587,   741,
    1496,  1504,  1510,  1512,  1513,  1518,   200,   741,  1495,  1504,
    1510,  1513,  1518,  1497,  1502,   692,  1020,  1026,  1391,  1401,
     931,  1153,   686,    18,    19,    21,   387,   390,   648,  1151,
    1157,  1158,  1398,  1401,   160,   161,   201,   214,   254,   267,
     294,   359,  1161,    33,   249,   275,   442,   517,  1159,   692,
    1401,   754,  1401,   378,   884,   754,  1404,   370,   630,   894,
     896,  1270,  1271,  1272,  1315,   754,  1406,  1468,  1265,  1469,
    1268,   615,   707,    35,   133,   158,   162,   202,   222,   287,
     383,   419,   428,   443,   468,   512,   543,  1331,  1335,  1336,
    1439,    86,   691,   792,   793,   794,   795,  1401,  1458,   563,
    1401,  1473,  1406,  1404,   200,   420,   566,  1459,  1468,  1462,
      21,   160,  1223,  1224,  1449,  1401,  1532,  1277,   516,   686,
      50,    85,   293,  1360,  1392,  1440,  1441,  1265,   691,   704,
    1398,   287,   686,   583,  1108,  1109,  1392,  1265,  1392,  1401,
    1344,    50,  1343,   686,  1399,    56,    66,    76,    90,    91,
      92,   106,   334,   351,   489,   551,   568,   786,   788,   686,
    1456,  1406,  1468,  1459,   487,  1484,  1483,   197,  1135,  1136,
    1258,    13,   365,  1469,  1401,    71,   986,  1153,  1406,   404,
     572,  1435,   273,   380,   643,   686,  1432,   686,  1430,   658,
    1416,   691,   686,   209,   282,   498,   653,  1424,  1285,  1401,
    1428,  1418,  1285,  1419,  1420,  1421,  1426,    13,    35,   125,
     378,  1153,  1436,   166,   275,   635,  1322,   683,   108,   167,
     200,   420,   566,   587,   612,   628,  1322,    13,  1404,  1245,
     197,   249,  1316,  1318,    70,   543,   194,   543,   563,    70,
     543,    13,    43,    94,    98,   253,   332,   396,   518,   560,
    1304,  1305,  1306,   166,   222,   543,   543,  1245,  1322,  1318,
     287,   157,    73,   422,   563,   586,   543,   624,   686,   380,
     643,    88,   686,   194,   733,  1266,  1392,  1231,  1233,  1401,
      21,   686,   379,  1528,   559,  1529,   646,   258,   471,  1527,
    1153,  1153,    13,   140,  1184,  1225,  1184,  1184,  1184,   634,
    1192,  1153,  1153,  1187,  1187,  1153,  1153,   140,  1184,  1225,
     684,   373,   684,   684,  1153,  1153,  1153,  1153,  1388,   116,
     117,   118,   119,   120,   223,   224,   225,   226,   335,   337,
     338,   339,   346,   427,   490,   491,   632,   649,   650,  1220,
    1221,  1153,  1186,   112,   115,   576,   579,  1222,   140,  1180,
    1153,  1153,  1153,  1153,  1220,  1153,  1187,  1189,    10,   686,
     692,   140,  1184,  1153,  1153,   140,  1184,  1153,  1153,  1187,
    1187,  1187,  1153,  1153,  1187,  1156,  1153,  1153,  1153,  1153,
    1153,  1153,   684,  1153,  1184,  1184,  1153,  1153,   140,  1184,
    1153,  1221,  1221,  1153,    46,   268,   584,  1153,  1153,   684,
    1389,  1390,  1401,  1184,  1184,  1153,  1153,  1153,  1184,  1184,
    1187,   684,   686,  1153,   209,   282,   498,  1423,   502,   692,
    1156,  1156,  1156,  1156,  1156,  1156,   245,  1156,   245,  1156,
    1156,  1156,  1156,  1156,  1404,  1163,  1399,  1399,  1153,  1172,
    1173,  1174,  1401,  1153,   277,   280,   430,   903,   904,   156,
     698,   684,    48,  1404,   654,    48,   637,    65,   256,   365,
     535,   553,   644,  1465,  1466,  1471,   637,  1041,   160,   160,
     160,   160,   160,   160,   686,   160,  1076,   404,  1083,   572,
    1400,  1400,  1404,   686,  1153,  1243,  1387,  1132,  1133,  1142,
     377,   686,  1132,  1133,  1142,   503,   609,  1145,   249,  1144,
    1245,  1245,  1142,   197,  1267,  1393,  1401,  1299,  1068,  1404,
     194,  1128,  1273,  1274,  1292,  1297,  1325,   125,   929,   930,
     937,   938,   989,   755,   316,     7,   863,   755,   683,   110,
     880,   880,   880,     4,     7,    12,    14,    17,    27,    28,
      58,    63,    64,    69,    77,    83,    84,    87,    96,   111,
     129,   137,   138,   144,   152,   158,   169,   192,   233,   235,
     242,   262,   285,   322,   340,   344,   382,   388,   395,   404,
     436,   451,   452,   453,   483,   540,   541,   542,   547,   564,
     567,   590,   603,   637,   640,   932,   935,   937,   938,  1049,
    1050,  1051,  1054,  1057,  1058,  1059,  1060,  1061,  1062,  1063,
    1065,  1066,  1238,  1036,   492,   628,  1504,   249,   686,   235,
     263,   401,  1005,  1123,  1125,  1126,   684,   686,   232,   295,
     296,   297,   298,   299,   302,   303,   304,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   317,   318,   728,
     729,   732,   458,   459,   460,   461,   462,   463,   464,   715,
     716,  1392,   610,  1101,    57,   448,   171,   736,   378,   863,
     111,   378,   880,  1474,   200,   931,   754,  1401,   754,   754,
    1504,  1401,   378,   615,   592,   692,  1392,  1150,  1398,  1401,
    1153,  1153,  1153,   179,   372,   589,   605,  1159,    13,    20,
    1155,  1162,  1156,   683,  1491,  1163,  1156,   275,    33,   249,
     275,   442,   677,  1401,   692,  1392,  1270,   686,   934,   158,
     686,    52,   470,  1069,  1265,   691,   708,   709,   287,   287,
     287,   287,    50,   287,   287,   686,  1265,  1337,   115,   576,
     579,   787,   797,  1178,  1382,  1388,  1404,   686,   160,   378,
     684,   686,   583,   677,  1392,  1401,  1467,   637,  1463,  1401,
     186,   363,  1401,  1450,  1451,  1392,  1398,  1398,  1118,   282,
    1359,  1224,   686,  1404,    31,   583,  1350,  1406,  1406,   686,
     583,   176,   429,   613,  1094,  1095,  1096,   401,  1201,  1202,
     583,  1346,    13,  1345,  1342,   686,   160,   210,   378,   197,
    1467,  1401,   145,   683,   688,  1137,  1138,  1193,  1195,  1203,
    1204,  1205,  1206,  1207,  1208,  1392,  1491,   635,  1226,  1227,
    1135,   583,   583,   583,   125,   985,   988,  1404,  1285,   683,
     433,   454,   496,  1434,  1431,  1429,  1469,  1404,  1407,   692,
     692,   692,   692,  1427,  1153,  1436,   686,  1425,   249,  1319,
    1399,  1153,   677,   931,   754,   754,   754,  1392,   754,  1406,
    1392,   287,   350,   543,  1313,  1313,  1322,  1401,   754,  1322,
    1406,  1316,   754,  1322,   252,   561,   181,   194,  1307,   686,
    1319,   733,  1316,  1392,  1318,  1316,  1316,  1322,  1322,  1088,
     514,  1080,    60,   684,   686,  1491,  1379,   405,   194,   686,
     684,  1184,   684,  1153,   684,   684,   684,  1153,   150,   634,
    1191,    21,   684,   615,   684,   684,   684,   615,   686,  1187,
     684,   677,   684,   686,   686,   684,   684,   684,   197,   686,
     684,   686,  1187,   684,   686,   686,   686,   676,   686,   684,
     684,   683,  1388,  1401,  1184,   684,   684,   684,  1184,   684,
     686,   684,   684,   684,   684,   684,   686,   684,   249,   684,
     686,   686,   684,   686,   686,   684,   684,   684,   686,   197,
     686,  1184,   684,   684,   686,   686,   686,   684,   197,  1153,
     197,  1153,   197,  1153,   197,   684,   686,   684,   684,   684,
     684,   686,    21,   684,   686,   684,   686,   684,   684,  1187,
     689,   692,   692,   692,  1404,  1153,  1401,  1153,  1153,  1151,
     684,   686,   683,   692,   684,    73,   683,    73,   683,   402,
     906,   216,   263,   572,    13,   365,  1469,   404,   572,  1404,
     572,   572,   572,    19,  1464,   320,   321,   325,   326,  1042,
    1043,     5,   404,  1038,  1039,  1040,  1396,  1398,   122,   188,
     290,   373,   594,  1252,  1396,   122,   188,   219,   290,   373,
     594,  1250,  1398,  1398,   732,  1398,   733,   160,   126,  1084,
     979,   982,  1257,    22,   131,  1244,   686,  1248,  1248,   667,
     668,   670,  1146,  1147,  1148,   503,  1142,  1142,  1267,  1392,
    1401,   197,   686,   692,  1298,  1138,    87,   930,    71,   979,
      77,    93,   265,   343,   369,   431,   533,   757,   759,   263,
     438,   598,   881,   882,   237,   877,   878,   879,   886,   894,
     896,   108,   221,   394,   404,   411,   515,   612,   739,   740,
    1398,    26,   323,   871,   872,   873,   886,   887,   888,   894,
     896,   864,   865,   871,    74,    89,   199,   401,   519,   946,
     948,   949,  1003,  1005,  1009,  1067,  1285,  1286,   235,  1067,
     401,  1286,  1286,  1067,  1286,   401,   401,  1286,  1286,  1286,
    1286,   583,   136,  1286,   261,   401,   564,   193,   401,   418,
    1005,  1067,   261,  1286,   401,   401,   564,   136,  1286,  1286,
    1286,  1286,  1286,  1067,   401,    48,  1286,  1286,   401,    21,
     160,   583,  1005,  1071,   401,   401,  1286,  1286,  1286,  1286,
     139,   332,  1286,  1286,   401,  1286,   619,   619,   935,   450,
     902,  1055,   686,   686,   683,  1391,  1401,   378,   749,  1045,
     127,   248,  1392,   125,  1116,  1401,  1114,  1392,  1124,   683,
    1125,  1153,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   686,   733,   160,   160,   160,   160,   160,
     160,   160,   686,   733,   928,   929,  1392,    77,   364,   439,
     599,   874,   875,   876,   886,   890,   891,   892,   893,   894,
     896,   642,  1392,   614,   859,  1041,  1401,   754,   683,   473,
    1519,     9,    31,   854,  1392,    47,   216,   486,  1023,  1023,
    1401,    21,   231,   275,   456,   683,   898,   899,   900,   901,
     902,   933,   935,  1130,  1132,  1282,  1362,   179,   372,   589,
     605,  1491,    19,  1153,   165,  1234,  1156,  1156,   683,  1491,
    1163,  1156,   692,  1401,  1263,  1272,  1286,  1406,  1069,  1404,
     686,   733,  1336,  1332,   795,   798,   799,   794,   374,   485,
     796,  1459,  1401,  1470,   692,   692,   583,   655,   160,   186,
     201,   214,   266,   267,   294,   363,   417,  1452,  1454,  1226,
    1201,  1119,  1120,  1121,  1122,  1392,   236,   293,   433,   643,
    1442,  1441,  1153,  1398,   583,  1109,  1392,  1096,   683,   501,
     620,   621,   683,  1278,  1279,  1281,  1282,  1283,   122,   188,
     219,   290,   373,   594,  1251,  1254,  1255,   733,   788,   787,
     385,  1459,  1468,   197,  1138,  1195,  1204,  1205,  1206,  1207,
    1401,   686,   100,   238,   258,   271,   355,   477,   549,  1196,
    1197,  1198,  1201,  1224,  1153,   212,  1235,  1226,  1469,  1469,
    1469,   404,  1435,  1435,    78,   595,   433,  1285,  1420,  1398,
     197,  1320,   684,  1401,   615,   275,   635,  1321,   428,  1245,
    1306,  1320,  1322,  1316,  1392,  1322,  1322,  1396,  1401,   686,
     336,   245,  1153,   684,   575,  1153,  1153,   154,    35,    62,
     112,   115,   123,   260,   354,   357,   509,   579,   607,   955,
    1185,   980,   980,  1185,   684,   684,   245,   245,  1153,  1153,
    1153,   388,  1182,  1153,  1153,  1153,  1153,  1153,  1156,   684,
     684,  1153,  1153,  1153,  1153,  1153,  1153,  1187,   245,  1153,
    1153,  1153,   684,  1153,  1153,  1153,  1153,   197,  1153,   197,
    1153,   197,  1153,  1153,  1153,    35,    62,  1250,  1184,   684,
     692,  1027,  1220,  1220,  1174,  1186,  1401,   156,   683,  1156,
     683,  1156,  1251,   555,   907,   683,    12,   905,   572,    21,
      48,  1465,  1250,  1250,  1250,  1250,  1043,   285,   606,   174,
    1040,  1398,   160,   406,  1085,   981,    73,  1363,  1387,  1267,
     669,  1147,   342,   615,  1201,   692,  1138,  1393,   677,  1401,
     501,  1251,  1286,  1286,  1398,   533,   533,   533,   533,   533,
     492,  1398,  1398,  1286,   934,  1398,  1398,  1398,  1398,  1250,
    1398,  1398,   684,   686,  1286,  1286,   934,   866,   867,   886,
     887,   888,  1026,  1005,  1006,  1104,    64,   193,   418,   604,
     947,  1004,  1020,  1006,   125,  1401,  1401,  1391,  1104,  1252,
    1250,  1391,  1250,    13,  1056,  1219,  1401,  1104,  1398,  1398,
    1398,  1398,   979,  1286,  1250,  1056,   263,  1219,   263,  1391,
    1391,  1404,  1401,  1056,  1286,   186,   266,   369,   940,  1250,
     125,  1401,  1252,  1252,  1391,  1104,  1239,  1240,  1389,   125,
     936,  1250,  1398,  1104,  1391,  1392,  1104,  1104,    80,    82,
     125,   148,   187,   440,   939,   936,   936,   125,  1250,  1401,
    1250,  1056,   683,   403,     7,   144,  1062,  1063,  1051,  1059,
    1063,   942,   943,   944,   946,  1391,    34,    35,    40,    42,
      44,    45,    62,   112,   115,   123,   142,   159,   187,   189,
     205,   206,   247,   260,   279,   288,   289,   291,   328,   329,
     330,   347,   348,   349,   354,   357,   375,   376,   409,   410,
     435,   497,   501,   513,   573,   576,   579,   580,   581,   582,
     622,   623,   650,   950,   953,   954,   955,   956,   957,   958,
     959,   961,    81,   488,   451,  1046,  1232,   683,   418,  1215,
    1216,  1217,  1401,   683,  1250,  1396,  1250,  1250,  1396,  1396,
    1250,  1250,  1396,  1396,  1396,  1396,  1396,  1396,  1396,  1396,
    1250,  1250,  1396,  1383,   729,   683,   717,   717,   683,   722,
     722,   683,   725,   725,   683,   720,   716,   683,  1286,  1286,
    1286,  1286,   934,  1404,   683,   286,   177,   184,   868,   869,
     870,   886,   887,   888,   889,   892,   893,   894,   895,   896,
    1038,   473,   742,  1514,   123,   247,   435,   550,   941,   683,
     130,   241,   609,   855,   683,   692,  1282,  1392,   275,   942,
     900,   899,   934,   901,  1155,   684,   686,  1163,    19,  1153,
    1234,   677,  1264,  1404,   709,   194,   637,  1333,   160,   686,
    1467,   637,  1476,   677,   677,  1470,   385,  1453,  1245,   501,
    1278,  1279,   686,  1123,  1125,  1400,   643,   282,  1406,  1218,
    1219,  1294,  1295,  1389,   684,  1280,  1385,  1386,  1389,  1401,
     683,  1284,  1287,   160,   197,  1467,  1468,   686,   684,   684,
     684,   684,   684,  1193,  1194,  1195,  1203,  1193,   258,   258,
     391,  1200,   238,   271,   477,  1199,  1200,  1203,  1193,  1193,
    1224,  1232,    48,   217,  1228,  1235,   683,   684,  1436,  1252,
    1311,   163,   631,  1468,  1398,  1153,   373,  1312,  1227,  1316,
    1250,  1153,   684,  1153,   575,   683,   969,   970,   970,   683,
     964,   683,   962,   963,   969,    62,   247,   964,   247,   970,
     684,   684,   684,   684,  1153,  1153,   684,   684,   686,   684,
      48,   495,  1181,   686,   686,   684,   686,   684,   249,  1169,
    1170,   684,   684,   684,   684,   686,   684,   684,  1153,   684,
     194,   684,   684,   686,   684,   686,   686,   684,  1153,   684,
    1153,   684,  1153,   684,   684,   684,   683,   994,   994,   686,
     684,  1401,   684,   909,  1401,   684,   909,   684,    48,   683,
     911,  1156,   160,   683,  1398,  1398,   125,   245,   361,  1398,
     160,   153,   164,   386,   571,  1364,  1365,   278,  1366,  1138,
    1226,  1401,  1226,   692,  1298,  1294,   988,   981,   111,   111,
     127,   248,   290,   373,   594,   897,  1253,  1254,  1395,   879,
     740,   897,   897,   873,   686,   867,  1026,   402,   683,   683,
     263,   263,  1006,  1020,   683,  1026,   656,   657,  1022,   144,
     501,  1056,  1391,  1100,   686,  1251,   981,  1398,   564,  1391,
    1069,   637,   564,  1398,   950,  1056,   686,  1244,  1056,   583,
    1219,  1056,  1337,   684,   686,   950,   969,   969,   970,    23,
      35,    49,   601,   626,   969,   979,   990,   991,   992,   964,
     414,   960,   683,   992,    62,   622,   956,   992,   992,    62,
     623,   623,   626,   683,   970,   964,   964,   992,   969,   970,
     441,   945,   947,   997,    27,    71,    75,    77,   125,   372,
     378,   418,   497,   547,   604,   972,   973,   974,   987,   996,
    1159,    35,   969,   993,   969,   969,   970,   683,   963,   971,
     962,   367,   416,    25,   168,   743,   583,   137,   152,   745,
    1505,  1056,   684,   686,   730,   731,  1250,   684,   718,   719,
    1401,   684,   723,   724,  1401,   684,   726,   727,  1396,  1397,
     683,   684,   721,  1024,  1025,  1401,  1398,  1251,   897,   897,
     876,   384,  1024,   212,  1286,  1286,   934,   941,   378,   762,
     763,   764,  1401,   516,  1520,   378,  1024,  1401,  1392,   684,
     935,  1187,  1155,   684,   686,  1064,  1065,  1066,  1334,   433,
      56,    66,    76,    90,    91,    92,   106,   334,   351,   472,
     489,   551,   568,   800,   799,   583,   210,  1474,   683,  1294,
     378,  1291,  1291,  1121,  1392,  1125,   231,  1127,  1361,  1362,
     684,   686,  1285,  1281,  1282,   684,   686,   692,   125,  1153,
    1288,  1289,  1290,   686,   787,  1468,   197,  1193,   689,   258,
    1200,  1200,   258,   258,   378,   615,   378,   615,   192,   231,
     614,  1210,  1211,  1212,  1213,  1214,  1236,  1387,  1153,  1228,
    1435,  1245,  1245,  1322,  1220,  1153,   122,   290,   373,   594,
     992,   373,   373,  1220,  1220,  1153,  1183,  1387,  1379,   684,
    1153,  1153,  1187,    44,   355,   684,   637,  1171,  1153,  1220,
    1153,  1153,  1153,  1153,   684,   684,   684,  1251,   684,   684,
    1250,   684,   686,   684,   904,   401,   912,   913,   684,  1251,
     908,   909,  1251,  1398,    48,    48,   153,    48,  1365,   537,
     571,  1367,  1368,  1226,  1241,  1226,   867,   683,  1251,   912,
    1153,  1026,   683,  1024,   683,   125,   125,   950,  1401,   986,
     566,     9,   186,  1070,  1052,  1240,  1391,   246,  1094,   684,
     943,   945,    35,    23,   601,   979,    35,   992,   980,  1028,
    1379,   992,   626,  1028,   992,   509,   607,   651,   966,   967,
     968,  1392,  1070,   985,   125,   148,   187,   975,  1398,   115,
     576,   579,   675,   676,   977,   978,  1381,  1382,   609,   125,
     125,   139,   332,   976,   263,    71,   974,   203,   951,   263,
     372,   993,   992,   993,   966,   373,   966,   966,   416,  1153,
    1153,   378,   749,   754,   378,    77,   750,    21,   684,  1216,
     684,   686,   684,   686,   684,   686,   692,   684,   686,   719,
     684,   686,   684,   686,   683,  1244,   683,   684,  1401,   897,
     897,   870,   516,   488,   684,   686,   953,  1398,   239,   249,
     393,   765,   766,   767,   768,  1392,   684,   684,   898,   684,
    1187,  1066,  1065,   175,   285,  1470,   385,   637,  1475,  1289,
    1291,   147,  1127,   269,   246,  1295,  1290,  1281,  1282,  1385,
    1401,   684,   686,  1287,  1468,   684,   258,   258,  1153,   683,
    1153,   683,  1005,  1005,  1211,   639,   686,  1237,   684,   733,
     684,   684,   684,   684,   684,   684,   686,   684,   684,   684,
     686,   684,   686,   684,   342,   265,   428,   684,   684,   684,
     684,   684,   684,   995,   686,  1401,   216,   263,  1401,   684,
     686,   684,   120,  1379,  1379,    48,  1379,    48,    48,  1368,
     276,  1249,  1241,  1024,   684,   684,   683,  1024,   684,  1024,
    1381,  1070,  1392,  1401,  1104,   683,   980,   993,   684,   686,
     684,   968,   683,   998,  1383,  1383,   977,   621,   985,    15,
      21,  1220,   511,  1398,   143,  1047,  1282,  1506,   731,   719,
     724,  1401,   727,   686,   683,    77,   262,   637,  1010,  1011,
    1012,  1019,  1022,  1025,   373,   739,  1013,  1014,  1015,  1019,
    1398,   743,  1515,   764,   986,   684,   686,  1401,   194,   592,
     615,  1016,  1017,  1018,  1019,  1021,   684,  1474,   210,   320,
     321,   325,   326,  1477,  1478,   684,   263,   566,  1290,  1218,
    1218,   194,  1209,  1209,  1387,   373,  1387,  1153,   342,   173,
     684,  1250,   683,   905,   620,   914,   913,  1379,  1379,  1379,
    1248,  1249,   684,  1024,   684,  1016,   684,  1053,  1054,   912,
     992,  1379,   992,   999,  1401,   319,  1000,   683,   744,   751,
     752,   637,  1507,   719,   719,  1398,  1286,   398,  1064,  1012,
     684,   684,  1064,  1015,   748,   749,   473,  1521,   767,   953,
     149,  1023,  1023,  1064,  1018,  1475,   385,  1250,  1250,  1250,
    1250,  1478,   609,  1392,   684,   684,   212,   258,   388,   683,
     683,   684,   684,   684,  1156,   683,   249,   272,    77,   111,
     235,   322,   340,   364,   564,   925,   926,   927,  1315,  1010,
     684,  1016,  1013,   684,   684,   686,   198,   400,   510,   378,
    1001,  1153,   538,   746,    54,    68,   182,   230,   257,   270,
     381,   474,   753,   804,   806,   807,   808,   810,   811,   812,
     813,   814,   815,   817,   825,   826,   829,   840,   843,   845,
     846,  1395,  1403,  1410,    53,    64,   282,   684,   686,  1250,
    1395,  1244,   745,   953,   756,   986,   484,  1294,  1201,    48,
      48,  1215,  1217,   684,   909,   683,   916,   918,   574,  1286,
     136,   136,  1286,  1286,  1286,  1286,   683,   922,   927,   158,
     997,  1401,   130,   609,   684,  1153,   155,   747,   827,   830,
    1401,   197,   363,   818,   805,  1403,  1403,  1401,   809,   700,
     292,   455,   636,   849,    32,   847,   693,    64,   385,    64,
     719,   750,   986,   134,   757,   758,  1159,  1522,   191,   413,
    1508,  1509,  1356,   684,   684,   554,   910,   684,   683,   917,
     918,   919,   327,   915,   918,  1398,  1286,  1286,  1253,  1253,
    1251,  1401,   555,   923,   924,  1286,    52,   369,   470,   501,
    1002,  1002,   548,   629,   952,  1153,  1153,   634,   832,   836,
     197,  1401,   820,   821,  1153,   770,   803,   804,   806,   808,
     810,   812,   813,   814,   815,   817,   825,   840,   843,   845,
     770,   850,   848,   841,   844,   385,   385,   684,   143,  1516,
     134,   803,  1404,  1511,   982,  1251,   910,   684,   686,   327,
     920,   921,  1156,  1398,  1398,  1404,   684,   686,  1404,     6,
     125,   372,   378,   378,   972,   828,   837,   150,   836,   839,
     246,   154,  1153,   154,   803,   690,   608,  1153,   771,   849,
     847,   751,   756,   803,  1357,   918,   684,   686,   925,   924,
     609,   130,   634,   831,   833,  1153,   770,   154,   816,   230,
     822,   292,   690,   852,   851,   124,   769,   772,   842,  1403,
     842,  1517,   482,  1369,   921,  1002,  1002,   834,   833,   839,
     838,    54,   819,  1401,   575,  1153,   143,    95,   172,   775,
     801,  1401,   154,   803,   690,   803,   228,  1363,  1153,   154,
     575,   686,   770,   853,   770,   215,   686,   953,    86,   105,
     690,    48,  1366,   835,    54,   770,  1401,   823,   154,   154,
     194,  1401,   986,   194,   194,  1379,   231,  1370,   575,   150,
     151,   824,   455,   636,   773,   125,   802,   778,   779,  1250,
     774,   373,   683,  1372,   770,   770,   820,   521,   523,   776,
     777,   778,   781,  1159,  1401,  1153,  1128,   278,   482,  1371,
     684,   691,  1373,  1374,  1389,   501,  1375,   686,   803,   196,
    1404,   684,   686,  1376,  1377,  1389,   777,  1374,   686,  1285,
    1377,  1290
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  However,
   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
   discussed.  */

#define YYFAIL		goto yyerrlab
#if defined YYFAIL
  /* This is here to suppress warnings from the GCC cpp's
     -Wunused-macros.  Normally we don't worry about that warning, but
     some users do, and we want to make it easy for users to remove
     YYFAIL uses, which will produce warnings from Bison 2.5.  */
#endif

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))

/* Error token number */
#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (YYID (N))                                                     \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (YYID (0))
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

__attribute__((__unused__))
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
#else
static unsigned
yy_location_print_ (yyo, yylocp)
    FILE *yyo;
    YYLTYPE const * const yylocp;
#endif
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += fprintf (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += fprintf (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += fprintf (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += fprintf (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += fprintf (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */
#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, YYTHD)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, YYTHD); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (YYTHD);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
        break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
#else
static void
yy_stack_print (yybottom, yytop)
    yytype_int16 *yybottom;
    yytype_int16 *yytop;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, YYTHD)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    class THD *YYTHD;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , YYTHD);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, YYTHD); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULL;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - Assume YYFAIL is not used.  It's too flawed to consider.  See
       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
       for details.  YYERROR is fine as it does not invoke this
       function.
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, YYTHD)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    class THD *YYTHD;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
        break;
    }
}




/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (class THD *YYTHD)
#else
int
yyparse (YYTHD)
    class THD *YYTHD;
#endif
#endif
{
/* The lookahead symbol.  */
int yychar;


#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
static YYSTYPE yyval_default;
# define YY_INITIAL_VALUE(Value) = Value
#endif
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);

/* Location data for the lookahead symbol.  */
YYLTYPE yylloc = yyloc_default;


    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       `yyss': related to states.
       `yyvs': related to semantic values.
       `yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);

	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss_alloc, yyss);
	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
	YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
/* Line 1792 of yacc.c  */
#line 1736 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[(2) - (3)].item);
          }
    break;

  case 4:
/* Line 1792 of yacc.c  */
#line 1741 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[(2) - (3)].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[(2) - (3)].partition_clause)->part_info;
          }
    break;

  case 5:
/* Line 1792 of yacc.c  */
#line 1751 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (my_strcasecmp(system_charset_info, (yyvsp[(2) - (6)].lex_str).str, "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Generated_column;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[(4) - (6)].item), &(yyvsp[(4) - (6)].item));
            gcol_info->expr_item= (yyvsp[(4) - (6)].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
    break;

  case 6:
/* Line 1792 of yacc.c  */
#line 1769 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[(2) - (3)].subquery);
          }
    break;

  case 7:
/* Line 1792 of yacc.c  */
#line 1776 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 8:
/* Line 1792 of yacc.c  */
#line 1788 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 10:
/* Line 1792 of yacc.c  */
#line 1813 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 18:
/* Line 1792 of yacc.c  */
#line 1834 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 25:
/* Line 1792 of yacc.c  */
#line 1841 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 27:
/* Line 1792 of yacc.c  */
#line 1843 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].select_stmt)); }
    break;

  case 37:
/* Line 1792 of yacc.c  */
#line 1853 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 50:
/* Line 1792 of yacc.c  */
#line 1866 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 56:
/* Line 1792 of yacc.c  */
#line 1872 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].select_stmt)); }
    break;

  case 57:
/* Line 1792 of yacc.c  */
#line 1873 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].set)); }
    break;

  case 58:
/* Line 1792 of yacc.c  */
#line 1874 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 61:
/* Line 1792 of yacc.c  */
#line 1877 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 67:
/* Line 1792 of yacc.c  */
#line 1883 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 70:
/* Line 1792 of yacc.c  */
#line 1890 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 73:
/* Line 1792 of yacc.c  */
#line 1905 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (4)].lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
    break;

  case 74:
/* Line 1792 of yacc.c  */
#line 1925 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 75:
/* Line 1792 of yacc.c  */
#line 1932 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 76:
/* Line 1792 of yacc.c  */
#line 1942 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 77:
/* Line 1792 of yacc.c  */
#line 1949 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 82:
/* Line 1792 of yacc.c  */
#line 1964 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 83:
/* Line 1792 of yacc.c  */
#line 1976 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 84:
/* Line 1792 of yacc.c  */
#line 1984 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 85:
/* Line 1792 of yacc.c  */
#line 1995 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
    break;

  case 86:
/* Line 1792 of yacc.c  */
#line 2006 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 87:
/* Line 1792 of yacc.c  */
#line 2008 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 88:
/* Line 1792 of yacc.c  */
#line 2018 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 91:
/* Line 1792 of yacc.c  */
#line 2027 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_DB);
          }
    break;

  case 92:
/* Line 1792 of yacc.c  */
#line 2034 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_DB);
          }
    break;

  case 93:
/* Line 1792 of yacc.c  */
#line 2041 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_TABLE);
          }
    break;

  case 94:
/* Line 1792 of yacc.c  */
#line 2048 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
    break;

  case 95:
/* Line 1792 of yacc.c  */
#line 2055 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
    break;

  case 96:
/* Line 1792 of yacc.c  */
#line 2062 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
    break;

  case 97:
/* Line 1792 of yacc.c  */
#line 2070 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_REWRITE_DB);
          }
    break;

  case 98:
/* Line 1792 of yacc.c  */
#line 2079 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 99:
/* Line 1792 of yacc.c  */
#line 2085 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 100:
/* Line 1792 of yacc.c  */
#line 2092 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 101:
/* Line 1792 of yacc.c  */
#line 2099 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 102:
/* Line 1792 of yacc.c  */
#line 2107 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
    break;

  case 103:
/* Line 1792 of yacc.c  */
#line 2116 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 104:
/* Line 1792 of yacc.c  */
#line 2122 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 105:
/* Line 1792 of yacc.c  */
#line 2128 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (5)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (5)].item));
          }
    break;

  case 106:
/* Line 1792 of yacc.c  */
#line 2136 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(4) - (7)].item));
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(6) - (7)].item));
            (yyval.item_list)= (yyvsp[(1) - (7)].item_list);
          }
    break;

  case 107:
/* Line 1792 of yacc.c  */
#line 2144 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 108:
/* Line 1792 of yacc.c  */
#line 2150 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 109:
/* Line 1792 of yacc.c  */
#line 2157 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 110:
/* Line 1792 of yacc.c  */
#line 2164 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 111:
/* Line 1792 of yacc.c  */
#line 2172 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[(1) - (3)].lex_str).str, (yyvsp[(1) - (3)].lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            (yyval.item)= table_item;
          }
    break;

  case 112:
/* Line 1792 of yacc.c  */
#line 2184 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 113:
/* Line 1792 of yacc.c  */
#line 2190 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 114:
/* Line 1792 of yacc.c  */
#line 2197 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 115:
/* Line 1792 of yacc.c  */
#line 2204 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 116:
/* Line 1792 of yacc.c  */
#line 2212 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
    break;

  case 119:
/* Line 1792 of yacc.c  */
#line 2227 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 120:
/* Line 1792 of yacc.c  */
#line 2231 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 121:
/* Line 1792 of yacc.c  */
#line 2235 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 122:
/* Line 1792 of yacc.c  */
#line 2239 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
            if (strlen((yyvsp[(3) - (3)].lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
    break;

  case 123:
/* Line 1792 of yacc.c  */
#line 2249 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 124:
/* Line 1792 of yacc.c  */
#line 2253 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 125:
/* Line 1792 of yacc.c  */
#line 2257 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 126:
/* Line 1792 of yacc.c  */
#line 2262 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[(3) - (3)]).cpp.start, (yylsp[(3) - (3)]).cpp.end - (yylsp[(3) - (3)]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 127:
/* Line 1792 of yacc.c  */
#line 2273 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 128:
/* Line 1792 of yacc.c  */
#line 2278 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 129:
/* Line 1792 of yacc.c  */
#line 2282 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 130:
/* Line 1792 of yacc.c  */
#line 2286 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.tls_version= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 131:
/* Line 1792 of yacc.c  */
#line 2290 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 132:
/* Line 1792 of yacc.c  */
#line 2294 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 133:
/* Line 1792 of yacc.c  */
#line 2298 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 134:
/* Line 1792 of yacc.c  */
#line 2302 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 135:
/* Line 1792 of yacc.c  */
#line 2307 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 136:
/* Line 1792 of yacc.c  */
#line 2311 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 137:
/* Line 1792 of yacc.c  */
#line 2316 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Item *num= (yyvsp[(3) - (3)].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 138:
/* Line 1792 of yacc.c  */
#line 2350 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 139:
/* Line 1792 of yacc.c  */
#line 2355 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 144:
/* Line 1792 of yacc.c  */
#line 2372 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[(1) - (1)].ulong_num));
          }
    break;

  case 145:
/* Line 1792 of yacc.c  */
#line 2378 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 146:
/* Line 1792 of yacc.c  */
#line 2382 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 147:
/* Line 1792 of yacc.c  */
#line 2398 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 148:
/* Line 1792 of yacc.c  */
#line 2402 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 149:
/* Line 1792 of yacc.c  */
#line 2412 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
    break;

  case 150:
/* Line 1792 of yacc.c  */
#line 2417 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[(3) - (3)].lex_str).str);
         Lex->mi.channel= (yyvsp[(3) - (3)].lex_str).str;
         Lex->mi.for_channel= true;
       }
    break;

  case 151:
/* Line 1792 of yacc.c  */
#line 2433 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_create_table_stmt((yyvsp[(2) - (9)].is_not_empty), (yyvsp[(4) - (9)].is_not_empty), (yyvsp[(5) - (9)].table),
                                             (yyvsp[(7) - (9)].table_element_list),
                                             (yyvsp[(9) - (9)].create_table_tail).opt_create_table_options,
                                             (yyvsp[(9) - (9)].create_table_tail).opt_partitioning,
                                             (yyvsp[(9) - (9)].create_table_tail).on_duplicate,
                                             (yyvsp[(9) - (9)].create_table_tail).opt_query_expression);
          }
    break;

  case 152:
/* Line 1792 of yacc.c  */
#line 2443 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_create_table_stmt((yyvsp[(2) - (6)].is_not_empty), (yyvsp[(4) - (6)].is_not_empty), (yyvsp[(5) - (6)].table),
                                             NULL,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_create_table_options,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_partitioning,
                                             (yyvsp[(6) - (6)].create_table_tail).on_duplicate,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_query_expression);
          }
    break;

  case 153:
/* Line 1792 of yacc.c  */
#line 2453 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_create_table_stmt((yyvsp[(2) - (7)].is_not_empty), (yyvsp[(4) - (7)].is_not_empty), (yyvsp[(5) - (7)].table), (yyvsp[(7) - (7)].table));
          }
    break;

  case 154:
/* Line 1792 of yacc.c  */
#line 2458 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_create_table_stmt((yyvsp[(2) - (9)].is_not_empty), (yyvsp[(4) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(8) - (9)].table));
          }
    break;

  case 155:
/* Line 1792 of yacc.c  */
#line 2464 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 156:
/* Line 1792 of yacc.c  */
#line 2465 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].index_definition_stmt)); }
    break;

  case 157:
/* Line 1792 of yacc.c  */
#line 2467 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
    break;

  case 158:
/* Line 1792 of yacc.c  */
#line 2475 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info->options= (yyvsp[(3) - (6)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
    break;

  case 159:
/* Line 1792 of yacc.c  */
#line 2482 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 160:
/* Line 1792 of yacc.c  */
#line 2491 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 161:
/* Line 1792 of yacc.c  */
#line 2494 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[(3) - (7)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
    break;

  case 162:
/* Line 1792 of yacc.c  */
#line 2503 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_ROLE;
            PT_statement *tmp= NEW_PTN PT_create_role(!!(yyvsp[(3) - (4)].is_not_empty), (yyvsp[(4) - (4)].user_list));
            MAKE_CMD(tmp);
          }
    break;

  case 163:
/* Line 1792 of yacc.c  */
#line 2509 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 164:
/* Line 1792 of yacc.c  */
#line 2513 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 165:
/* Line 1792 of yacc.c  */
#line 2518 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[(3) - (11)].lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[(3) - (11)].lex_str);
            Lex->server_options.set_scheme((yyvsp[(7) - (11)].lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
    break;

  case 166:
/* Line 1792 of yacc.c  */
#line 2536 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_definition_stmt)= NEW_PTN PT_index_definition_stmt((yyvsp[(2) - (11)].key_type), (yyvsp[(4) - (11)].index_name_and_type).name, (yyvsp[(4) - (11)].index_name_and_type).type, (yyvsp[(6) - (11)].table), (yyvsp[(8) - (11)].index_column_list),
                                                 (yyvsp[(10) - (11)].index_options), (yyvsp[(11) - (11)].index_options));
          }
    break;

  case 167:
/* Line 1792 of yacc.c  */
#line 2542 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_definition_stmt)= NEW_PTN PT_index_definition_stmt(KEYTYPE_FULLTEXT, (yyvsp[(4) - (11)].lex_str), NULL,
                                                 (yyvsp[(6) - (11)].table), (yyvsp[(8) - (11)].index_column_list), (yyvsp[(10) - (11)].index_options), (yyvsp[(11) - (11)].index_options));
          }
    break;

  case 168:
/* Line 1792 of yacc.c  */
#line 2548 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_definition_stmt)= NEW_PTN PT_index_definition_stmt(KEYTYPE_SPATIAL, (yyvsp[(4) - (11)].lex_str), NULL, (yyvsp[(6) - (11)].table),
                                                 (yyvsp[(8) - (11)].index_column_list), (yyvsp[(10) - (11)].index_options), (yyvsp[(11) - (11)].index_options));
          }
    break;

  case 171:
/* Line 1792 of yacc.c  */
#line 2561 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_username((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 172:
/* Line 1792 of yacc.c  */
#line 2565 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_host((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 173:
/* Line 1792 of yacc.c  */
#line 2569 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_db((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 174:
/* Line 1792 of yacc.c  */
#line 2573 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_owner((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 175:
/* Line 1792 of yacc.c  */
#line 2577 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_password((yyvsp[(2) - (2)].lex_str));
            Lex->contains_plaintext_password= true;
          }
    break;

  case 176:
/* Line 1792 of yacc.c  */
#line 2582 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_socket((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 177:
/* Line 1792 of yacc.c  */
#line 2586 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_port((yyvsp[(2) - (2)].ulong_num));
          }
    break;

  case 178:
/* Line 1792 of yacc.c  */
#line 2593 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->create_info->options= (yyvsp[(2) - (3)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(3) - (3)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 179:
/* Line 1792 of yacc.c  */
#line 2613 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 180:
/* Line 1792 of yacc.c  */
#line 2624 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));

            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 182:
/* Line 1792 of yacc.c  */
#line 2633 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 183:
/* Line 1792 of yacc.c  */
#line 2641 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 184:
/* Line 1792 of yacc.c  */
#line 2643 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 185:
/* Line 1792 of yacc.c  */
#line 2649 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 186:
/* Line 1792 of yacc.c  */
#line 2655 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 187:
/* Line 1792 of yacc.c  */
#line 2664 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 188:
/* Line 1792 of yacc.c  */
#line 2671 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 190:
/* Line 1792 of yacc.c  */
#line 2681 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 191:
/* Line 1792 of yacc.c  */
#line 2689 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 193:
/* Line 1792 of yacc.c  */
#line 2695 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 194:
/* Line 1792 of yacc.c  */
#line 2701 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 195:
/* Line 1792 of yacc.c  */
#line 2709 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 196:
/* Line 1792 of yacc.c  */
#line 2711 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 197:
/* Line 1792 of yacc.c  */
#line 2718 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[(0) - (0)]).cpp.end);
          }
    break;

  case 198:
/* Line 1792 of yacc.c  */
#line 2764 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 212:
/* Line 1792 of yacc.c  */
#line 2793 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 213:
/* Line 1792 of yacc.c  */
#line 2807 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (sp_check_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(to_lex_cstring(db), (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 214:
/* Line 1792 of yacc.c  */
#line 2825 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 215:
/* Line 1792 of yacc.c  */
#line 2826 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 216:
/* Line 1792 of yacc.c  */
#line 2830 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 217:
/* Line 1792 of yacc.c  */
#line 2831 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 218:
/* Line 1792 of yacc.c  */
#line 2837 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[(2) - (2)].lex_str)); }
    break;

  case 219:
/* Line 1792 of yacc.c  */
#line 2839 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 220:
/* Line 1792 of yacc.c  */
#line 2841 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 221:
/* Line 1792 of yacc.c  */
#line 2843 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 222:
/* Line 1792 of yacc.c  */
#line 2845 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 223:
/* Line 1792 of yacc.c  */
#line 2847 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 224:
/* Line 1792 of yacc.c  */
#line 2849 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 225:
/* Line 1792 of yacc.c  */
#line 2854 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 226:
/* Line 1792 of yacc.c  */
#line 2855 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 227:
/* Line 1792 of yacc.c  */
#line 2856 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 228:
/* Line 1792 of yacc.c  */
#line 2861 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 229:
/* Line 1792 of yacc.c  */
#line 2865 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 230:
/* Line 1792 of yacc.c  */
#line 2872 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_call((yyvsp[(2) - (3)].spname), (yyvsp[(3) - (3)].item_list2));
          }
    break;

  case 231:
/* Line 1792 of yacc.c  */
#line 2878 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 232:
/* Line 1792 of yacc.c  */
#line 2880 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
              (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2);
            }
    break;

  case 237:
/* Line 1792 of yacc.c  */
#line 2898 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[(2) - (3)].type));
            enum_field_types field_type= (yyvsp[(2) - (3)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(2) - (3)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(3) - (3)].charset)))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[(1) - (3)].lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(1) - (3)].lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[(2) - (3)].type)->get_length(), (yyvsp[(2) - (3)].type)->get_dec(),
                                      (yyvsp[(2) - (3)].type)->get_type_flags(),
                                      NULL, NULL, &NULL_STR, 0,
                                      (yyvsp[(2) - (3)].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[(2) - (3)].type)->get_uint_geom_type(), NULL))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
    break;

  case 242:
/* Line 1792 of yacc.c  */
#line 2958 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[(2) - (4)].lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[(2) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(2) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[(3) - (4)].type));
            enum_field_types field_type= (yyvsp[(3) - (4)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(3) - (4)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(4) - (4)].charset)))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(2) - (4)].lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[(3) - (4)].type)->get_length(), (yyvsp[(3) - (4)].type)->get_dec(),
                                      (yyvsp[(3) - (4)].type)->get_type_flags(),
                                      NULL, NULL, &NULL_STR, 0,
                                      (yyvsp[(3) - (4)].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[(3) - (4)].type)->get_uint_geom_type(), NULL))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
    break;

  case 243:
/* Line 1792 of yacc.c  */
#line 3005 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 244:
/* Line 1792 of yacc.c  */
#line 3006 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 245:
/* Line 1792 of yacc.c  */
#line 3007 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 246:
/* Line 1792 of yacc.c  */
#line 3008 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 247:
/* Line 1792 of yacc.c  */
#line 3012 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 249:
/* Line 1792 of yacc.c  */
#line 3017 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 251:
/* Line 1792 of yacc.c  */
#line 3023 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 252:
/* Line 1792 of yacc.c  */
#line 3027 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 253:
/* Line 1792 of yacc.c  */
#line 3055 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[(2) - (5)].num));

            CONTEXTUALIZE((yyvsp[(3) - (5)].type));
            enum enum_field_types var_type= (yyvsp[(3) - (5)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(3) - (5)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(4) - (5)].charset)))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[(5) - (5)].sp_default).expr;

            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[(5) - (5)].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[(5) - (5)]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[(3) - (5)].type)->get_length(), (yyvsp[(3) - (5)].type)->get_dec(),
                                        (yyvsp[(3) - (5)].type)->get_type_flags(),
                                        NULL, NULL, &NULL_STR, 0,
                                        (yyvsp[(3) - (5)].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[(3) - (5)].type)->get_uint_geom_type(), NULL))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.maybe_null= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 254:
/* Line 1792 of yacc.c  */
#line 3148 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 255:
/* Line 1792 of yacc.c  */
#line 3165 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
    break;

  case 256:
/* Line 1792 of yacc.c  */
#line 3206 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 257:
/* Line 1792 of yacc.c  */
#line 3243 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[(4) - (4)]).raw.end);
          }
    break;

  case 258:
/* Line 1792 of yacc.c  */
#line 3252 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {             /*$7*/
            MAKE_CMD((yyvsp[(6) - (6)].select_stmt));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[(2) - (6)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (6)].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(6) - (6)]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[(2) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 259:
/* Line 1792 of yacc.c  */
#line 3315 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 260:
/* Line 1792 of yacc.c  */
#line 3316 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 261:
/* Line 1792 of yacc.c  */
#line 3322 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 262:
/* Line 1792 of yacc.c  */
#line 3324 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 263:
/* Line 1792 of yacc.c  */
#line 3329 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 264:
/* Line 1792 of yacc.c  */
#line 3352 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 266:
/* Line 1792 of yacc.c  */
#line 3367 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 267:
/* Line 1792 of yacc.c  */
#line 3388 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 268:
/* Line 1792 of yacc.c  */
#line 3389 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 269:
/* Line 1792 of yacc.c  */
#line 3394 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 270:
/* Line 1792 of yacc.c  */
#line 3398 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 271:
/* Line 1792 of yacc.c  */
#line 3411 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 272:
/* Line 1792 of yacc.c  */
#line 3417 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 273:
/* Line 1792 of yacc.c  */
#line 3423 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 274:
/* Line 1792 of yacc.c  */
#line 3432 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 275:
/* Line 1792 of yacc.c  */
#line 3445 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 276:
/* Line 1792 of yacc.c  */
#line 3471 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 277:
/* Line 1792 of yacc.c  */
#line 3476 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 278:
/* Line 1792 of yacc.c  */
#line 3478 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 279:
/* Line 1792 of yacc.c  */
#line 3483 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
    break;

  case 280:
/* Line 1792 of yacc.c  */
#line 3485 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= (yyvsp[(2) - (2)].signal_item_list); }
    break;

  case 281:
/* Line 1792 of yacc.c  */
#line 3490 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[(1) - (3)].da_condition_item_name), (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 282:
/* Line 1792 of yacc.c  */
#line 3497 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= (yyvsp[(1) - (5)].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[(3) - (5)].da_condition_item_name), (yyvsp[(5) - (5)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 283:
/* Line 1792 of yacc.c  */
#line 3509 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 284:
/* Line 1792 of yacc.c  */
#line 3511 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 285:
/* Line 1792 of yacc.c  */
#line 3531 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 286:
/* Line 1792 of yacc.c  */
#line 3537 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
    break;

  case 287:
/* Line 1792 of yacc.c  */
#line 3539 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
    break;

  case 288:
/* Line 1792 of yacc.c  */
#line 3541 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
    break;

  case 289:
/* Line 1792 of yacc.c  */
#line 3543 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
    break;

  case 290:
/* Line 1792 of yacc.c  */
#line 3545 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
    break;

  case 291:
/* Line 1792 of yacc.c  */
#line 3547 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
    break;

  case 292:
/* Line 1792 of yacc.c  */
#line 3549 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
    break;

  case 293:
/* Line 1792 of yacc.c  */
#line 3551 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
    break;

  case 294:
/* Line 1792 of yacc.c  */
#line 3553 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
    break;

  case 295:
/* Line 1792 of yacc.c  */
#line 3555 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
    break;

  case 296:
/* Line 1792 of yacc.c  */
#line 3557 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
    break;

  case 297:
/* Line 1792 of yacc.c  */
#line 3559 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
    break;

  case 298:
/* Line 1792 of yacc.c  */
#line 3564 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 299:
/* Line 1792 of yacc.c  */
#line 3578 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 300:
/* Line 1792 of yacc.c  */
#line 3594 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 301:
/* Line 1792 of yacc.c  */
#line 3596 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 302:
/* Line 1792 of yacc.c  */
#line 3598 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
    break;

  case 303:
/* Line 1792 of yacc.c  */
#line 3603 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 304:
/* Line 1792 of yacc.c  */
#line 3609 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 305:
/* Line 1792 of yacc.c  */
#line 3618 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 306:
/* Line 1792 of yacc.c  */
#line 3624 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 307:
/* Line 1792 of yacc.c  */
#line 3633 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 308:
/* Line 1792 of yacc.c  */
#line 3641 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[(1) - (1)].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[(1) - (1)]).raw.start,
                (yylsp[(1) - (1)]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 309:
/* Line 1792 of yacc.c  */
#line 3669 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[(2) - (2)].lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
    break;

  case 310:
/* Line 1792 of yacc.c  */
#line 3677 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 311:
/* Line 1792 of yacc.c  */
#line 3679 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 312:
/* Line 1792 of yacc.c  */
#line 3688 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 313:
/* Line 1792 of yacc.c  */
#line 3693 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 314:
/* Line 1792 of yacc.c  */
#line 3699 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 315:
/* Line 1792 of yacc.c  */
#line 3708 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 316:
/* Line 1792 of yacc.c  */
#line 3716 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 317:
/* Line 1792 of yacc.c  */
#line 3718 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 318:
/* Line 1792 of yacc.c  */
#line 3720 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 319:
/* Line 1792 of yacc.c  */
#line 3722 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 320:
/* Line 1792 of yacc.c  */
#line 3724 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 321:
/* Line 1792 of yacc.c  */
#line 3726 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 322:
/* Line 1792 of yacc.c  */
#line 3728 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 323:
/* Line 1792 of yacc.c  */
#line 3730 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 324:
/* Line 1792 of yacc.c  */
#line 3732 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 325:
/* Line 1792 of yacc.c  */
#line 3734 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 326:
/* Line 1792 of yacc.c  */
#line 3736 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 327:
/* Line 1792 of yacc.c  */
#line 3738 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 328:
/* Line 1792 of yacc.c  */
#line 3740 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 329:
/* Line 1792 of yacc.c  */
#line 3745 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(1) - (1)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 330:
/* Line 1792 of yacc.c  */
#line 3765 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(3) - (3)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 331:
/* Line 1792 of yacc.c  */
#line 3788 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
    break;

  case 332:
/* Line 1792 of yacc.c  */
#line 3793 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.sp_default).expr_start= (yylsp[(1) - (2)]).raw.end;
            (yyval.sp_default).expr= (yyvsp[(2) - (2)].item);
          }
    break;

  case 346:
/* Line 1792 of yacc.c  */
#line 3817 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
    break;

  case 347:
/* Line 1792 of yacc.c  */
#line 3819 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 348:
/* Line 1792 of yacc.c  */
#line 3827 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
    break;

  case 349:
/* Line 1792 of yacc.c  */
#line 3836 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(2) - (2)]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 350:
/* Line 1792 of yacc.c  */
#line 3884 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 351:
/* Line 1792 of yacc.c  */
#line 3892 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;

            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 352:
/* Line 1792 of yacc.c  */
#line 3940 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
    break;

  case 353:
/* Line 1792 of yacc.c  */
#line 3951 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 354:
/* Line 1792 of yacc.c  */
#line 3963 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 355:
/* Line 1792 of yacc.c  */
#line 4020 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 356:
/* Line 1792 of yacc.c  */
#line 4067 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 357:
/* Line 1792 of yacc.c  */
#line 4090 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 358:
/* Line 1792 of yacc.c  */
#line 4110 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 359:
/* Line 1792 of yacc.c  */
#line 4115 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 363:
/* Line 1792 of yacc.c  */
#line 4144 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 364:
/* Line 1792 of yacc.c  */
#line 4162 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 365:
/* Line 1792 of yacc.c  */
#line 4182 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 366:
/* Line 1792 of yacc.c  */
#line 4190 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(0) - (2)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(2) - (2)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[(2) - (2)].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 367:
/* Line 1792 of yacc.c  */
#line 4228 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
    break;

  case 368:
/* Line 1792 of yacc.c  */
#line 4246 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 374:
/* Line 1792 of yacc.c  */
#line 4269 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
    break;

  case 375:
/* Line 1792 of yacc.c  */
#line 4279 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[(3) - (3)].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 376:
/* Line 1792 of yacc.c  */
#line 4324 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
    break;

  case 377:
/* Line 1792 of yacc.c  */
#line 4331 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_case(YYTHD);
          }
    break;

  case 378:
/* Line 1792 of yacc.c  */
#line 4338 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_end_case(Lex, false);
          }
    break;

  case 383:
/* Line 1792 of yacc.c  */
#line 4355 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 384:
/* Line 1792 of yacc.c  */
#line 4363 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[(3) - (3)].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 385:
/* Line 1792 of yacc.c  */
#line 4405 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 386:
/* Line 1792 of yacc.c  */
#line 4413 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 387:
/* Line 1792 of yacc.c  */
#line 4421 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 388:
/* Line 1792 of yacc.c  */
#line 4459 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 389:
/* Line 1792 of yacc.c  */
#line 4467 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 391:
/* Line 1792 of yacc.c  */
#line 4485 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 392:
/* Line 1792 of yacc.c  */
#line 4503 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
    break;

  case 393:
/* Line 1792 of yacc.c  */
#line 4522 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 394:
/* Line 1792 of yacc.c  */
#line 4523 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 395:
/* Line 1792 of yacc.c  */
#line 4528 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 396:
/* Line 1792 of yacc.c  */
#line 4544 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 397:
/* Line 1792 of yacc.c  */
#line 4561 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
    break;

  case 398:
/* Line 1792 of yacc.c  */
#line 4572 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
    break;

  case 399:
/* Line 1792 of yacc.c  */
#line 4580 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
    break;

  case 400:
/* Line 1792 of yacc.c  */
#line 4595 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[(3) - (5)].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
    break;

  case 401:
/* Line 1792 of yacc.c  */
#line 4629 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 402:
/* Line 1792 of yacc.c  */
#line 4642 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 403:
/* Line 1792 of yacc.c  */
#line 4650 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 404:
/* Line 1792 of yacc.c  */
#line 4691 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 405:
/* Line 1792 of yacc.c  */
#line 4708 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 406:
/* Line 1792 of yacc.c  */
#line 4716 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                             /*$6*/
            ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(3) - (5)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(5) - (5)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[(5) - (5)].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
    break;

  case 408:
/* Line 1792 of yacc.c  */
#line 4759 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_BEFORE; }
    break;

  case 409:
/* Line 1792 of yacc.c  */
#line 4761 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_AFTER; }
    break;

  case 410:
/* Line 1792 of yacc.c  */
#line 4766 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_INSERT; }
    break;

  case 411:
/* Line 1792 of yacc.c  */
#line 4768 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_UPDATE; }
    break;

  case 412:
/* Line 1792 of yacc.c  */
#line 4770 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_DELETE; }
    break;

  case 416:
/* Line 1792 of yacc.c  */
#line 4804 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 417:
/* Line 1792 of yacc.c  */
#line 4806 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 418:
/* Line 1792 of yacc.c  */
#line 4816 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE;
          }
    break;

  case 419:
/* Line 1792 of yacc.c  */
#line 4822 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE;
          }
    break;

  case 424:
/* Line 1792 of yacc.c  */
#line 4845 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 472:
/* Line 1792 of yacc.c  */
#line 4940 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 473:
/* Line 1792 of yacc.c  */
#line 4948 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 474:
/* Line 1792 of yacc.c  */
#line 4956 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 475:
/* Line 1792 of yacc.c  */
#line 4964 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 476:
/* Line 1792 of yacc.c  */
#line 4976 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 477:
/* Line 1792 of yacc.c  */
#line 4988 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 478:
/* Line 1792 of yacc.c  */
#line 4993 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 479:
/* Line 1792 of yacc.c  */
#line 4998 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 480:
/* Line 1792 of yacc.c  */
#line 5006 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 481:
/* Line 1792 of yacc.c  */
#line 5014 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 482:
/* Line 1792 of yacc.c  */
#line 5022 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 483:
/* Line 1792 of yacc.c  */
#line 5030 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 484:
/* Line 1792 of yacc.c  */
#line 5038 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 485:
/* Line 1792 of yacc.c  */
#line 5046 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 486:
/* Line 1792 of yacc.c  */
#line 5054 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 487:
/* Line 1792 of yacc.c  */
#line 5067 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 488:
/* Line 1792 of yacc.c  */
#line 5080 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            if (resolve_engine(YYTHD, (yyvsp[(4) - (4)].lex_str), false, false,
                  &lex->alter_tablespace_info->storage_engine))
              MYSQL_YYABORT;
          }
    break;

  case 489:
/* Line 1792 of yacc.c  */
#line 5096 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->file_block_size != 0)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "FILE_BLOCK_SIZE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->file_block_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 490:
/* Line 1792 of yacc.c  */
#line 5110 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 491:
/* Line 1792 of yacc.c  */
#line 5115 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 492:
/* Line 1792 of yacc.c  */
#line 5127 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulonglong_number);}
    break;

  case 493:
/* Line 1792 of yacc.c  */
#line 5129 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            size_t str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 494:
/* Line 1792 of yacc.c  */
#line 5205 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail)= (yyvsp[(2) - (2)].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[(1) - (2)].create_table_options);
          }
    break;

  case 496:
/* Line 1792 of yacc.c  */
#line 5214 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail)= (yyvsp[(2) - (2)].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[(1) - (2)].partition_clause);
          }
    break;

  case 498:
/* Line 1792 of yacc.c  */
#line 5223 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
    break;

  case 499:
/* Line 1792 of yacc.c  */
#line 5231 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[(1) - (2)].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[(2) - (2)].query_expression);
          }
    break;

  case 500:
/* Line 1792 of yacc.c  */
#line 5238 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[(1) - (1)].query_expression);
          }
    break;

  case 501:
/* Line 1792 of yacc.c  */
#line 5247 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.query_expression)= (yyvsp[(2) - (2)].query_expression); }
    break;

  case 503:
/* Line 1792 of yacc.c  */
#line 5264 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[(3) - (6)].part_type_def), (yyvsp[(4) - (6)].ulong_num), (yyvsp[(5) - (6)].opt_sub_part), (yylsp[(6) - (6)]), (yyvsp[(6) - (6)].part_def_list));
          }
    break;

  case 504:
/* Line 1792 of yacc.c  */
#line 5271 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[(1) - (6)].is_not_empty), (yyvsp[(3) - (6)].opt_key_algo), (yyvsp[(5) - (6)].name_list));
          }
    break;

  case 505:
/* Line 1792 of yacc.c  */
#line 5275 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[(1) - (5)].is_not_empty), (yylsp[(4) - (5)]), (yyvsp[(4) - (5)].item));
          }
    break;

  case 506:
/* Line 1792 of yacc.c  */
#line 5279 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[(3) - (4)]), (yyvsp[(3) - (4)].item));
          }
    break;

  case 507:
/* Line 1792 of yacc.c  */
#line 5283 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[(4) - (5)].name_list));
          }
    break;

  case 508:
/* Line 1792 of yacc.c  */
#line 5287 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[(3) - (4)]), (yyvsp[(3) - (4)].item));
          }
    break;

  case 509:
/* Line 1792 of yacc.c  */
#line 5291 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[(4) - (5)].name_list));
          }
    break;

  case 510:
/* Line 1792 of yacc.c  */
#line 5297 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 511:
/* Line 1792 of yacc.c  */
#line 5298 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 512:
/* Line 1792 of yacc.c  */
#line 5303 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
    break;

  case 513:
/* Line 1792 of yacc.c  */
#line 5305 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            switch ((yyvsp[(3) - (3)].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 514:
/* Line 1792 of yacc.c  */
#line 5322 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 515:
/* Line 1792 of yacc.c  */
#line 5324 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 516:
/* Line 1792 of yacc.c  */
#line 5335 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_sub_part)= NULL; }
    break;

  case 517:
/* Line 1792 of yacc.c  */
#line 5338 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[(3) - (8)].is_not_empty), (yylsp[(6) - (8)]), (yyvsp[(6) - (8)].item), (yyvsp[(8) - (8)].ulong_num));
          }
    break;

  case 518:
/* Line 1792 of yacc.c  */
#line 5343 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].opt_key_algo), (yyvsp[(7) - (9)].name_list), (yyvsp[(9) - (9)].ulong_num));
          }
    break;

  case 519:
/* Line 1792 of yacc.c  */
#line 5350 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.name_list)= NULL; }
    break;

  case 521:
/* Line 1792 of yacc.c  */
#line 5357 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[(1) - (1)].lex_str).str))
              MYSQL_YYABORT;
          }
    break;

  case 522:
/* Line 1792 of yacc.c  */
#line 5363 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.name_list)= (yyvsp[(1) - (3)].name_list);
            if ((yyval.name_list)->push_back((yyvsp[(3) - (3)].lex_str).str))
              MYSQL_YYABORT;
          }
    break;

  case 523:
/* Line 1792 of yacc.c  */
#line 5372 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 524:
/* Line 1792 of yacc.c  */
#line 5374 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 525:
/* Line 1792 of yacc.c  */
#line 5385 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.part_def_list)= NULL; }
    break;

  case 526:
/* Line 1792 of yacc.c  */
#line 5386 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.part_def_list)= (yyvsp[(2) - (3)].part_def_list); }
    break;

  case 527:
/* Line 1792 of yacc.c  */
#line 5391 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_def_list)= NEW_PTN Trivial_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[(1) - (1)].part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 528:
/* Line 1792 of yacc.c  */
#line 5397 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_def_list)= (yyvsp[(1) - (3)].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[(3) - (3)].part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 529:
/* Line 1792 of yacc.c  */
#line 5406 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[(0) - (5)]), (yyvsp[(2) - (5)].lex_str), (yyvsp[(3) - (5)].opt_part_values).type, (yyvsp[(3) - (5)].opt_part_values).values, (yylsp[(3) - (5)]),
                                           (yyvsp[(4) - (5)].partition_option_list), (yyvsp[(5) - (5)].sub_part_list), (yylsp[(5) - (5)]));
          }
    break;

  case 530:
/* Line 1792 of yacc.c  */
#line 5414 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
    break;

  case 531:
/* Line 1792 of yacc.c  */
#line 5418 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[(4) - (4)].part_value_item_list_paren);
          }
    break;

  case 532:
/* Line 1792 of yacc.c  */
#line 5423 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[(3) - (3)].part_values);
          }
    break;

  case 533:
/* Line 1792 of yacc.c  */
#line 5430 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.part_value_item_list_paren)= NULL; }
    break;

  case 535:
/* Line 1792 of yacc.c  */
#line 5436 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].part_value_item_list_paren));
          }
    break;

  case 536:
/* Line 1792 of yacc.c  */
#line 5440 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[(3) - (3)]), (yyvsp[(2) - (3)].part_value_list));
          }
    break;

  case 537:
/* Line 1792 of yacc.c  */
#line 5447 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_list)= NEW_PTN
              Trivial_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[(1) - (1)].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 538:
/* Line 1792 of yacc.c  */
#line 5454 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_list)= (yyvsp[(1) - (3)].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[(3) - (3)].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 539:
/* Line 1792 of yacc.c  */
#line 5463 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
    break;

  case 540:
/* Line 1792 of yacc.c  */
#line 5474 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[(3) - (4)].part_value_item_list), (yylsp[(4) - (4)]));
          }
    break;

  case 541:
/* Line 1792 of yacc.c  */
#line 5481 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_item_list)= NEW_PTN Trivial_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[(1) - (1)].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 542:
/* Line 1792 of yacc.c  */
#line 5487 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_item_list)= (yyvsp[(1) - (3)].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[(3) - (3)].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 543:
/* Line 1792 of yacc.c  */
#line 5495 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[(1) - (1)])); }
    break;

  case 544:
/* Line 1792 of yacc.c  */
#line 5496 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].item)); }
    break;

  case 545:
/* Line 1792 of yacc.c  */
#line 5501 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.sub_part_list)= NULL; }
    break;

  case 546:
/* Line 1792 of yacc.c  */
#line 5502 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.sub_part_list)= (yyvsp[(2) - (3)].sub_part_list); }
    break;

  case 547:
/* Line 1792 of yacc.c  */
#line 5507 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.sub_part_list)= NEW_PTN Trivial_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[(1) - (1)].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 548:
/* Line 1792 of yacc.c  */
#line 5513 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.sub_part_list)= (yyvsp[(1) - (3)].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[(3) - (3)].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 549:
/* Line 1792 of yacc.c  */
#line 5522 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[(1) - (3)]), (yyvsp[(2) - (3)].lex_str).str, (yyvsp[(3) - (3)].partition_option_list));
          }
    break;

  case 550:
/* Line 1792 of yacc.c  */
#line 5528 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option_list)= NULL; }
    break;

  case 552:
/* Line 1792 of yacc.c  */
#line 5534 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.partition_option_list)= (yyvsp[(1) - (2)].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[(2) - (2)].partition_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 553:
/* Line 1792 of yacc.c  */
#line 5540 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.partition_option_list)= NEW_PTN Trivial_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[(1) - (1)].partition_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 554:
/* Line 1792 of yacc.c  */
#line 5549 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[(3) - (3)].lex_str).str); }
    break;

  case 555:
/* Line 1792 of yacc.c  */
#line 5551 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_engine((yyvsp[(4) - (4)].lex_str)); }
    break;

  case 556:
/* Line 1792 of yacc.c  */
#line 5553 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[(3) - (3)].ulong_num)); }
    break;

  case 557:
/* Line 1792 of yacc.c  */
#line 5555 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[(3) - (3)].ulonglong_number)); }
    break;

  case 558:
/* Line 1792 of yacc.c  */
#line 5557 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[(3) - (3)].ulonglong_number)); }
    break;

  case 559:
/* Line 1792 of yacc.c  */
#line 5559 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[(4) - (4)].lex_str).str); }
    break;

  case 560:
/* Line 1792 of yacc.c  */
#line 5561 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[(4) - (4)].lex_str).str); }
    break;

  case 561:
/* Line 1792 of yacc.c  */
#line 5563 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[(3) - (3)].lex_str).str); }
    break;

  case 562:
/* Line 1792 of yacc.c  */
#line 5571 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 563:
/* Line 1792 of yacc.c  */
#line 5572 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 564:
/* Line 1792 of yacc.c  */
#line 5576 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 565:
/* Line 1792 of yacc.c  */
#line 5577 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 566:
/* Line 1792 of yacc.c  */
#line 5581 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].create_table_option)); }
    break;

  case 567:
/* Line 1792 of yacc.c  */
#line 5582 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].create_table_option)); }
    break;

  case 568:
/* Line 1792 of yacc.c  */
#line 5586 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 569:
/* Line 1792 of yacc.c  */
#line 5587 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 570:
/* Line 1792 of yacc.c  */
#line 5592 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_options)= NEW_PTN Trivial_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[(1) - (1)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 571:
/* Line 1792 of yacc.c  */
#line 5598 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_options)= (yyvsp[(1) - (2)].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[(2) - (2)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 572:
/* Line 1792 of yacc.c  */
#line 5607 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_options)= NEW_PTN Trivial_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[(1) - (1)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 573:
/* Line 1792 of yacc.c  */
#line 5613 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_options)= (yyvsp[(1) - (3)].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[(3) - (3)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 576:
/* Line 1792 of yacc.c  */
#line 5627 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 577:
/* Line 1792 of yacc.c  */
#line 5631 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 578:
/* Line 1792 of yacc.c  */
#line 5635 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 579:
/* Line 1792 of yacc.c  */
#line 5639 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 580:
/* Line 1792 of yacc.c  */
#line 5643 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 581:
/* Line 1792 of yacc.c  */
#line 5647 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 582:
/* Line 1792 of yacc.c  */
#line 5651 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[(3) - (3)].lex_str));
	  }
    break;

  case 583:
/* Line 1792 of yacc.c  */
#line 5655 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[(3) - (3)].lex_str));
	  }
    break;

  case 584:
/* Line 1792 of yacc.c  */
#line 5659 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 585:
/* Line 1792 of yacc.c  */
#line 5663 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 586:
/* Line 1792 of yacc.c  */
#line 5667 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 587:
/* Line 1792 of yacc.c  */
#line 5671 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 588:
/* Line 1792 of yacc.c  */
#line 5675 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[(3) - (3)].ulong_num) == 0 || (yyvsp[(3) - (3)].ulong_num) > 0xffff)
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 589:
/* Line 1792 of yacc.c  */
#line 5692 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
    break;

  case 590:
/* Line 1792 of yacc.c  */
#line 5696 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 591:
/* Line 1792 of yacc.c  */
#line 5700 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 592:
/* Line 1792 of yacc.c  */
#line 5704 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 593:
/* Line 1792 of yacc.c  */
#line 5708 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[(3) - (3)].row_type));
          }
    break;

  case 594:
/* Line 1792 of yacc.c  */
#line 5712 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[(4) - (5)].table_list));
          }
    break;

  case 597:
/* Line 1792 of yacc.c  */
#line 5718 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 598:
/* Line 1792 of yacc.c  */
#line 5722 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 599:
/* Line 1792 of yacc.c  */
#line 5726 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 600:
/* Line 1792 of yacc.c  */
#line 5730 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 601:
/* Line 1792 of yacc.c  */
#line 5734 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
    break;

  case 602:
/* Line 1792 of yacc.c  */
#line 5738 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
    break;

  case 603:
/* Line 1792 of yacc.c  */
#line 5742 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 604:
/* Line 1792 of yacc.c  */
#line 5746 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 605:
/* Line 1792 of yacc.c  */
#line 5753 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(1) - (1)].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
          }
    break;

  case 606:
/* Line 1792 of yacc.c  */
#line 5766 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
    break;

  case 607:
/* Line 1792 of yacc.c  */
#line 5771 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[(4) - (4)].charset));
          }
    break;

  case 608:
/* Line 1792 of yacc.c  */
#line 5778 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[(4) - (4)].charset));
          }
    break;

  case 609:
/* Line 1792 of yacc.c  */
#line 5784 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 610:
/* Line 1792 of yacc.c  */
#line 5785 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 611:
/* Line 1792 of yacc.c  */
#line 5786 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 612:
/* Line 1792 of yacc.c  */
#line 5787 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 613:
/* Line 1792 of yacc.c  */
#line 5788 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 614:
/* Line 1792 of yacc.c  */
#line 5789 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 615:
/* Line 1792 of yacc.c  */
#line 5793 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 616:
/* Line 1792 of yacc.c  */
#line 5794 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 617:
/* Line 1792 of yacc.c  */
#line 5795 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 618:
/* Line 1792 of yacc.c  */
#line 5799 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 619:
/* Line 1792 of yacc.c  */
#line 5800 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 620:
/* Line 1792 of yacc.c  */
#line 5801 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 621:
/* Line 1792 of yacc.c  */
#line 5802 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 622:
/* Line 1792 of yacc.c  */
#line 5807 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_element_list)= NEW_PTN Trivial_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[(1) - (1)].table_element)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 623:
/* Line 1792 of yacc.c  */
#line 5813 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_element_list)= (yyvsp[(1) - (3)].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[(3) - (3)].table_element)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 624:
/* Line 1792 of yacc.c  */
#line 5821 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_element)= (yyvsp[(1) - (1)].column_def); }
    break;

  case 625:
/* Line 1792 of yacc.c  */
#line 5822 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_element)= (yyvsp[(1) - (1)].table_constraint_def); }
    break;

  case 626:
/* Line 1792 of yacc.c  */
#line 5827 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[(1) - (3)].field_ident), (yyvsp[(2) - (3)].field_def), (yyvsp[(3) - (3)].check_constraint));
          }
    break;

  case 627:
/* Line 1792 of yacc.c  */
#line 5833 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.check_constraint)= NULL; }
    break;

  case 628:
/* Line 1792 of yacc.c  */
#line 5835 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              Currently we ignore the CHECK clause.

              Return expression for syntax validation purposes only:
            */
            (yyval.check_constraint)= (yyvsp[(1) - (1)].check_constraint);
          }
    break;

  case 629:
/* Line 1792 of yacc.c  */
#line 5844 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* Currently we ignore FK references here: */
            (yyval.check_constraint)= NULL;
          }
    break;

  case 630:
/* Line 1792 of yacc.c  */
#line 5853 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[(1) - (6)].key_type), (yyvsp[(2) - (6)].index_name_and_type).name, (yyvsp[(2) - (6)].index_name_and_type).type, (yyvsp[(4) - (6)].index_column_list),
                                                   (yyvsp[(6) - (6)].index_options));
          }
    break;

  case 631:
/* Line 1792 of yacc.c  */
#line 5859 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[(3) - (7)].field_ident), NULL,
                                                   (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 632:
/* Line 1792 of yacc.c  */
#line 5865 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[(1) - (7)].key_type), (yyvsp[(3) - (7)].field_ident), NULL, (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 633:
/* Line 1792 of yacc.c  */
#line 5870 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            PT_field_ident *name= (yyvsp[(3) - (7)].index_name_and_type).name != NULL ? (yyvsp[(3) - (7)].index_name_and_type).name : (yyvsp[(1) - (7)].field_ident);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[(2) - (7)].key_type), name, (yyvsp[(3) - (7)].index_name_and_type).type, (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 634:
/* Line 1792 of yacc.c  */
#line 5879 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[(1) - (8)].field_ident), (yyvsp[(4) - (8)].field_ident), (yyvsp[(6) - (8)].index_column_list), (yyvsp[(8) - (8)].fk_references).table_name,
                                                  (yyvsp[(8) - (8)].fk_references).reference_list,
                                                  (yyvsp[(8) - (8)].fk_references).fk_match_option,
                                                  (yyvsp[(8) - (8)].fk_references).fk_update_opt,
                                                  (yyvsp[(8) - (8)].fk_references).fk_delete_opt);
          }
    break;

  case 635:
/* Line 1792 of yacc.c  */
#line 5887 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= (yyvsp[(2) - (2)].check_constraint);
          }
    break;

  case 636:
/* Line 1792 of yacc.c  */
#line 5894 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              Currently we ignore CHECK clauses in the query executor.

              Return expression for syntax validation purposes only:
            */
            (yyval.check_constraint)= NEW_PTN PT_check_constraint((yyvsp[(3) - (4)].item));
          }
    break;

  case 637:
/* Line 1792 of yacc.c  */
#line 5905 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.field_ident)= NULL; }
    break;

  case 639:
/* Line 1792 of yacc.c  */
#line 5910 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.field_ident)=(yyvsp[(2) - (2)].field_ident); }
    break;

  case 640:
/* Line 1792 of yacc.c  */
#line 5915 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[(1) - (2)].type), (yyvsp[(2) - (2)].col_attr_list));
          }
    break;

  case 641:
/* Line 1792 of yacc.c  */
#line 5921 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            auto *opt_attrs= (yyvsp[(9) - (9)].col_attr_list);
            if ((yyvsp[(2) - (9)].col_attr) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Trivial_array<PT_column_attr_base *>(YYMEM_ROOT);
                if (opt_attrs == NULL)
                  MYSQL_YYABORT; // OOM
              }
              if (opt_attrs->push_back((yyvsp[(2) - (9)].col_attr)))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[(1) - (9)].type), (yyvsp[(6) - (9)].item), (yyvsp[(8) - (9)].virtual_or_stored), opt_attrs);
          }
    break;

  case 644:
/* Line 1792 of yacc.c  */
#line 5945 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
    break;

  case 645:
/* Line 1792 of yacc.c  */
#line 5946 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
    break;

  case 646:
/* Line 1792 of yacc.c  */
#line 5947 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
    break;

  case 647:
/* Line 1792 of yacc.c  */
#line 5952 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[(1) - (3)].int_type), (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 648:
/* Line 1792 of yacc.c  */
#line 5956 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[(1) - (3)].numeric_type), (yyvsp[(2) - (3)].precision).length, (yyvsp[(2) - (3)].precision).dec, (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 649:
/* Line 1792 of yacc.c  */
#line 5960 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[(1) - (3)].numeric_type), (yyvsp[(2) - (3)].precision).length, (yyvsp[(2) - (3)].precision).dec, (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 650:
/* Line 1792 of yacc.c  */
#line 5964 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
    break;

  case 651:
/* Line 1792 of yacc.c  */
#line 5968 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 652:
/* Line 1792 of yacc.c  */
#line 5972 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
    break;

  case 653:
/* Line 1792 of yacc.c  */
#line 5976 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
    break;

  case 654:
/* Line 1792 of yacc.c  */
#line 5980 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 655:
/* Line 1792 of yacc.c  */
#line 5985 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 656:
/* Line 1792 of yacc.c  */
#line 5990 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(3) - (3)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (3)].c_str), cs);
          }
    break;

  case 657:
/* Line 1792 of yacc.c  */
#line 5998 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(2) - (2)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
          }
    break;

  case 658:
/* Line 1792 of yacc.c  */
#line 6006 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (2)].c_str), &my_charset_bin);
          }
    break;

  case 659:
/* Line 1792 of yacc.c  */
#line 6010 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
    break;

  case 660:
/* Line 1792 of yacc.c  */
#line 6014 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 661:
/* Line 1792 of yacc.c  */
#line 6019 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(3) - (3)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (3)].c_str), cs);
          }
    break;

  case 662:
/* Line 1792 of yacc.c  */
#line 6027 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (2)].c_str), &my_charset_bin);
          }
    break;

  case 663:
/* Line 1792 of yacc.c  */
#line 6031 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (3)].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[(2) - (3)].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
    break;

  case 664:
/* Line 1792 of yacc.c  */
#line 6047 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
    break;

  case 665:
/* Line 1792 of yacc.c  */
#line 6051 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[(2) - (2)].c_str));
          }
    break;

  case 666:
/* Line 1792 of yacc.c  */
#line 6055 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[(2) - (2)].c_str));
            else
              (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 667:
/* Line 1792 of yacc.c  */
#line 6062 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[(2) - (2)].c_str));
          }
    break;

  case 668:
/* Line 1792 of yacc.c  */
#line 6066 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
    break;

  case 669:
/* Line 1792 of yacc.c  */
#line 6070 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 671:
/* Line 1792 of yacc.c  */
#line 6075 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
    break;

  case 672:
/* Line 1792 of yacc.c  */
#line 6079 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
    break;

  case 673:
/* Line 1792 of yacc.c  */
#line 6083 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
    break;

  case 674:
/* Line 1792 of yacc.c  */
#line 6087 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 675:
/* Line 1792 of yacc.c  */
#line 6092 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 676:
/* Line 1792 of yacc.c  */
#line 6097 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 677:
/* Line 1792 of yacc.c  */
#line 6102 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 678:
/* Line 1792 of yacc.c  */
#line 6107 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 679:
/* Line 1792 of yacc.c  */
#line 6112 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[(3) - (5)].string_list), (yyvsp[(5) - (5)].charset_with_opt_binary).charset, (yyvsp[(5) - (5)].charset_with_opt_binary).force_binary);
          }
    break;

  case 680:
/* Line 1792 of yacc.c  */
#line 6116 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[(3) - (5)].string_list), (yyvsp[(5) - (5)].charset_with_opt_binary).charset, (yyvsp[(5) - (5)].charset_with_opt_binary).force_binary);
          }
    break;

  case 681:
/* Line 1792 of yacc.c  */
#line 6120 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 682:
/* Line 1792 of yacc.c  */
#line 6125 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
    break;

  case 683:
/* Line 1792 of yacc.c  */
#line 6129 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
    break;

  case 684:
/* Line 1792 of yacc.c  */
#line 6136 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
    break;

  case 685:
/* Line 1792 of yacc.c  */
#line 6138 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
    break;

  case 686:
/* Line 1792 of yacc.c  */
#line 6140 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
    break;

  case 687:
/* Line 1792 of yacc.c  */
#line 6142 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
    break;

  case 688:
/* Line 1792 of yacc.c  */
#line 6144 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
    break;

  case 689:
/* Line 1792 of yacc.c  */
#line 6146 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
    break;

  case 690:
/* Line 1792 of yacc.c  */
#line 6148 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
    break;

  case 691:
/* Line 1792 of yacc.c  */
#line 6150 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
    break;

  case 692:
/* Line 1792 of yacc.c  */
#line 6154 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 693:
/* Line 1792 of yacc.c  */
#line 6155 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 694:
/* Line 1792 of yacc.c  */
#line 6159 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 695:
/* Line 1792 of yacc.c  */
#line 6160 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 696:
/* Line 1792 of yacc.c  */
#line 6164 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 697:
/* Line 1792 of yacc.c  */
#line 6165 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 698:
/* Line 1792 of yacc.c  */
#line 6166 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 699:
/* Line 1792 of yacc.c  */
#line 6167 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 700:
/* Line 1792 of yacc.c  */
#line 6168 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 701:
/* Line 1792 of yacc.c  */
#line 6172 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::INT; }
    break;

  case 702:
/* Line 1792 of yacc.c  */
#line 6173 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::TINYINT; }
    break;

  case 703:
/* Line 1792 of yacc.c  */
#line 6174 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::SMALLINT; }
    break;

  case 704:
/* Line 1792 of yacc.c  */
#line 6175 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::MEDIUMINT; }
    break;

  case 705:
/* Line 1792 of yacc.c  */
#line 6176 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::BIGINT; }
    break;

  case 706:
/* Line 1792 of yacc.c  */
#line 6181 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
    break;

  case 707:
/* Line 1792 of yacc.c  */
#line 6186 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
    break;

  case 710:
/* Line 1792 of yacc.c  */
#line 6195 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
    break;

  case 711:
/* Line 1792 of yacc.c  */
#line 6196 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 712:
/* Line 1792 of yacc.c  */
#line 6197 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 713:
/* Line 1792 of yacc.c  */
#line 6198 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 714:
/* Line 1792 of yacc.c  */
#line 6203 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
    break;

  case 715:
/* Line 1792 of yacc.c  */
#line 6208 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(1) - (1)].c_str);
            (yyval.precision).dec= NULL;
          }
    break;

  case 717:
/* Line 1792 of yacc.c  */
#line 6217 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(2) - (5)].lex_str).str;
            (yyval.precision).dec= (yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 718:
/* Line 1792 of yacc.c  */
#line 6225 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 719:
/* Line 1792 of yacc.c  */
#line 6226 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 720:
/* Line 1792 of yacc.c  */
#line 6230 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 721:
/* Line 1792 of yacc.c  */
#line 6231 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 722:
/* Line 1792 of yacc.c  */
#line 6233 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 723:
/* Line 1792 of yacc.c  */
#line 6240 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::NONE; }
    break;

  case 725:
/* Line 1792 of yacc.c  */
#line 6246 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_option)= static_cast<Field_option>(static_cast<ulong>((yyvsp[(1) - (2)].field_option)) |
                                          static_cast<ulong>((yyvsp[(2) - (2)].field_option)));
          }
    break;

  case 727:
/* Line 1792 of yacc.c  */
#line 6254 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::NONE; }
    break;

  case 728:
/* Line 1792 of yacc.c  */
#line 6255 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::UNSIGNED; }
    break;

  case 729:
/* Line 1792 of yacc.c  */
#line 6256 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::ZEROFILL_UNSIGNED; }
    break;

  case 730:
/* Line 1792 of yacc.c  */
#line 6260 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 731:
/* Line 1792 of yacc.c  */
#line 6261 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 732:
/* Line 1792 of yacc.c  */
#line 6262 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 733:
/* Line 1792 of yacc.c  */
#line 6263 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 734:
/* Line 1792 of yacc.c  */
#line 6266 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; /* use default length */ }
    break;

  case 736:
/* Line 1792 of yacc.c  */
#line 6272 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
    break;

  case 738:
/* Line 1792 of yacc.c  */
#line 6280 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.col_attr_list)= NULL; }
    break;

  case 740:
/* Line 1792 of yacc.c  */
#line 6286 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr_list)= (yyvsp[(1) - (2)].col_attr_list);
            if ((yyval.col_attr_list)->push_back((yyvsp[(2) - (2)].col_attr)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 741:
/* Line 1792 of yacc.c  */
#line 6292 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr_list)=
              NEW_PTN Trivial_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[(1) - (1)].col_attr)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 742:
/* Line 1792 of yacc.c  */
#line 6302 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
    break;

  case 743:
/* Line 1792 of yacc.c  */
#line 6306 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
    break;

  case 744:
/* Line 1792 of yacc.c  */
#line 6310 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[(2) - (2)].item));
          }
    break;

  case 745:
/* Line 1792 of yacc.c  */
#line 6314 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[(3) - (3)].ulong_num)));
          }
    break;

  case 746:
/* Line 1792 of yacc.c  */
#line 6318 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
    break;

  case 747:
/* Line 1792 of yacc.c  */
#line 6322 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
    break;

  case 748:
/* Line 1792 of yacc.c  */
#line 6326 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
    break;

  case 749:
/* Line 1792 of yacc.c  */
#line 6330 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
    break;

  case 750:
/* Line 1792 of yacc.c  */
#line 6334 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
    break;

  case 751:
/* Line 1792 of yacc.c  */
#line 6338 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 752:
/* Line 1792 of yacc.c  */
#line 6342 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yyvsp[(2) - (2)].charset));
          }
    break;

  case 753:
/* Line 1792 of yacc.c  */
#line 6346 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[(2) - (2)].column_format));
          }
    break;

  case 754:
/* Line 1792 of yacc.c  */
#line 6350 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[(2) - (2)].storage_media));
          }
    break;

  case 755:
/* Line 1792 of yacc.c  */
#line 6357 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
    break;

  case 756:
/* Line 1792 of yacc.c  */
#line 6358 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
    break;

  case 757:
/* Line 1792 of yacc.c  */
#line 6359 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
    break;

  case 758:
/* Line 1792 of yacc.c  */
#line 6363 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_DEFAULT; }
    break;

  case 759:
/* Line 1792 of yacc.c  */
#line 6364 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_DISK; }
    break;

  case 760:
/* Line 1792 of yacc.c  */
#line 6365 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_MEMORY; }
    break;

  case 761:
/* Line 1792 of yacc.c  */
#line 6370 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 762:
/* Line 1792 of yacc.c  */
#line 6376 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 764:
/* Line 1792 of yacc.c  */
#line 6383 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 765:
/* Line 1792 of yacc.c  */
#line 6384 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 766:
/* Line 1792 of yacc.c  */
#line 6389 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 767:
/* Line 1792 of yacc.c  */
#line 6396 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 768:
/* Line 1792 of yacc.c  */
#line 6400 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 769:
/* Line 1792 of yacc.c  */
#line 6401 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 770:
/* Line 1792 of yacc.c  */
#line 6405 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 771:
/* Line 1792 of yacc.c  */
#line 6406 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 772:
/* Line 1792 of yacc.c  */
#line 6411 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 773:
/* Line 1792 of yacc.c  */
#line 6419 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 774:
/* Line 1792 of yacc.c  */
#line 6423 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 775:
/* Line 1792 of yacc.c  */
#line 6424 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 776:
/* Line 1792 of yacc.c  */
#line 6429 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 777:
/* Line 1792 of yacc.c  */
#line 6436 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 778:
/* Line 1792 of yacc.c  */
#line 6437 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 779:
/* Line 1792 of yacc.c  */
#line 6441 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.col_attr)= NULL; }
    break;

  case 780:
/* Line 1792 of yacc.c  */
#line 6443 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yyvsp[(2) - (2)].charset)); }
    break;

  case 781:
/* Line 1792 of yacc.c  */
#line 6447 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 782:
/* Line 1792 of yacc.c  */
#line 6448 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 783:
/* Line 1792 of yacc.c  */
#line 6452 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 784:
/* Line 1792 of yacc.c  */
#line 6453 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 785:
/* Line 1792 of yacc.c  */
#line 6458 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1; }
    break;

  case 786:
/* Line 1792 of yacc.c  */
#line 6459 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 787:
/* Line 1792 of yacc.c  */
#line 6460 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 788:
/* Line 1792 of yacc.c  */
#line 6465 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 789:
/* Line 1792 of yacc.c  */
#line 6473 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 790:
/* Line 1792 of yacc.c  */
#line 6478 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 791:
/* Line 1792 of yacc.c  */
#line 6486 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 792:
/* Line 1792 of yacc.c  */
#line 6491 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 793:
/* Line 1792 of yacc.c  */
#line 6496 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 794:
/* Line 1792 of yacc.c  */
#line 6501 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 795:
/* Line 1792 of yacc.c  */
#line 6506 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(3) - (3)].is_not_empty) ? get_bin_collation((yyvsp[(2) - (3)].charset)) : (yyvsp[(2) - (3)].charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 796:
/* Line 1792 of yacc.c  */
#line 6513 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
    break;

  case 797:
/* Line 1792 of yacc.c  */
#line 6518 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[(3) - (3)].charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 798:
/* Line 1792 of yacc.c  */
#line 6527 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 799:
/* Line 1792 of yacc.c  */
#line 6528 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 800:
/* Line 1792 of yacc.c  */
#line 6533 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
    break;

  case 801:
/* Line 1792 of yacc.c  */
#line 6541 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 804:
/* Line 1792 of yacc.c  */
#line 6555 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_references).table_name= (yyvsp[(2) - (5)].table);
            (yyval.fk_references).reference_list= (yyvsp[(3) - (5)].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[(4) - (5)].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[(5) - (5)].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[(5) - (5)].fk_options).fk_delete_opt;
          }
    break;

  case 805:
/* Line 1792 of yacc.c  */
#line 6565 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.reference_list)= NULL; }
    break;

  case 806:
/* Line 1792 of yacc.c  */
#line 6566 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.reference_list)= (yyvsp[(2) - (3)].reference_list); }
    break;

  case 807:
/* Line 1792 of yacc.c  */
#line 6571 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.reference_list)= (yyvsp[(1) - (3)].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[(3) - (3)].lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
    break;

  case 808:
/* Line 1792 of yacc.c  */
#line 6578 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[(1) - (1)].lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
    break;

  case 809:
/* Line 1792 of yacc.c  */
#line 6587 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
    break;

  case 810:
/* Line 1792 of yacc.c  */
#line 6588 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
    break;

  case 811:
/* Line 1792 of yacc.c  */
#line 6589 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
    break;

  case 812:
/* Line 1792 of yacc.c  */
#line 6590 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
    break;

  case 813:
/* Line 1792 of yacc.c  */
#line 6595 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 814:
/* Line 1792 of yacc.c  */
#line 6600 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 815:
/* Line 1792 of yacc.c  */
#line 6605 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 816:
/* Line 1792 of yacc.c  */
#line 6611 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 817:
/* Line 1792 of yacc.c  */
#line 6617 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 818:
/* Line 1792 of yacc.c  */
#line 6624 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
    break;

  case 819:
/* Line 1792 of yacc.c  */
#line 6625 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
    break;

  case 820:
/* Line 1792 of yacc.c  */
#line 6626 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
    break;

  case 821:
/* Line 1792 of yacc.c  */
#line 6627 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
    break;

  case 822:
/* Line 1792 of yacc.c  */
#line 6628 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
    break;

  case 823:
/* Line 1792 of yacc.c  */
#line 6632 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 824:
/* Line 1792 of yacc.c  */
#line 6636 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
    break;

  case 825:
/* Line 1792 of yacc.c  */
#line 6637 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 826:
/* Line 1792 of yacc.c  */
#line 6641 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 827:
/* Line 1792 of yacc.c  */
#line 6642 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 828:
/* Line 1792 of yacc.c  */
#line 6646 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 830:
/* Line 1792 of yacc.c  */
#line 6651 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 831:
/* Line 1792 of yacc.c  */
#line 6652 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 832:
/* Line 1792 of yacc.c  */
#line 6653 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 833:
/* Line 1792 of yacc.c  */
#line 6657 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 834:
/* Line 1792 of yacc.c  */
#line 6658 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 835:
/* Line 1792 of yacc.c  */
#line 6663 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_type)= KEYTYPE_SPATIAL;
          }
    break;

  case 836:
/* Line 1792 of yacc.c  */
#line 6669 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 838:
/* Line 1792 of yacc.c  */
#line 6675 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 839:
/* Line 1792 of yacc.c  */
#line 6681 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 841:
/* Line 1792 of yacc.c  */
#line 6691 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING plugin_name= {(yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
          }
    break;

  case 842:
/* Line 1792 of yacc.c  */
#line 6704 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 844:
/* Line 1792 of yacc.c  */
#line 6710 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 845:
/* Line 1792 of yacc.c  */
#line 6716 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 847:
/* Line 1792 of yacc.c  */
#line 6728 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 849:
/* Line 1792 of yacc.c  */
#line 6734 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 850:
/* Line 1792 of yacc.c  */
#line 6740 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 851:
/* Line 1792 of yacc.c  */
#line 6748 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_option)= (yyvsp[(1) - (1)].index_option); }
    break;

  case 852:
/* Line 1792 of yacc.c  */
#line 6749 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_option)= (yyvsp[(1) - (1)].index_type); }
    break;

  case 853:
/* Line 1792 of yacc.c  */
#line 6754 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[(3) - (3)].ulong_num)); }
    break;

  case 854:
/* Line 1792 of yacc.c  */
#line 6756 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[(2) - (2)].lex_str)));
          }
    break;

  case 855:
/* Line 1792 of yacc.c  */
#line 6760 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[(1) - (1)].visibility));
          }
    break;

  case 856:
/* Line 1792 of yacc.c  */
#line 6783 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_name_and_type)= {(yyvsp[(1) - (1)].field_ident), NULL}; }
    break;

  case 857:
/* Line 1792 of yacc.c  */
#line 6784 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_name_and_type)= {(yyvsp[(1) - (3)].field_ident), NEW_PTN PT_index_type((yyvsp[(3) - (3)].key_alg))}; }
    break;

  case 858:
/* Line 1792 of yacc.c  */
#line 6786 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_name_and_type)= { NEW_PTN PT_field_ident((yyvsp[(1) - (3)].lex_str)), NEW_PTN PT_index_type((yyvsp[(3) - (3)].key_alg)) };
          }
    break;

  case 859:
/* Line 1792 of yacc.c  */
#line 6792 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_type)= NEW_PTN PT_index_type((yyvsp[(2) - (2)].key_alg)); }
    break;

  case 860:
/* Line 1792 of yacc.c  */
#line 6793 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_type)= NEW_PTN PT_index_type((yyvsp[(2) - (2)].key_alg)); }
    break;

  case 861:
/* Line 1792 of yacc.c  */
#line 6797 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.visibility)= true; }
    break;

  case 862:
/* Line 1792 of yacc.c  */
#line 6798 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.visibility)= false; }
    break;

  case 863:
/* Line 1792 of yacc.c  */
#line 6802 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 864:
/* Line 1792 of yacc.c  */
#line 6803 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 865:
/* Line 1792 of yacc.c  */
#line 6804 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 866:
/* Line 1792 of yacc.c  */
#line 6809 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].index_column_list)->push_back((yyvsp[(3) - (3)].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[(1) - (3)].index_column_list);
          }
    break;

  case 867:
/* Line 1792 of yacc.c  */
#line 6815 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            // The order is ignored.
            (yyval.index_column_list)= new List<Key_part_spec>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[(1) - (1)].key_part)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 868:
/* Line 1792 of yacc.c  */
#line 6825 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec(to_lex_cstring((yyvsp[(1) - (2)].lex_str)), 0, (enum_order) (yyvsp[(2) - (2)].num));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 869:
/* Line 1792 of yacc.c  */
#line 6831 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (5)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec(to_lex_cstring((yyvsp[(1) - (5)].lex_str)), (uint) key_part_len,
                                  (enum_order) (yyvsp[(5) - (5)].num));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 870:
/* Line 1792 of yacc.c  */
#line 6845 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.field_ident)= NULL; }
    break;

  case 872:
/* Line 1792 of yacc.c  */
#line 6850 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 873:
/* Line 1792 of yacc.c  */
#line 6851 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 874:
/* Line 1792 of yacc.c  */
#line 6856 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[(1) - (1)].string)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 875:
/* Line 1792 of yacc.c  */
#line 6862 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.string_list)->push_back((yyvsp[(3) - (3)].string)))
              MYSQL_YYABORT;
          }
    break;

  case 876:
/* Line 1792 of yacc.c  */
#line 6874 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->select_lex->init_order();
            lex->select_lex->db=
                    const_cast<char*>((lex->select_lex->table_list.first)->db);
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->db_type= 0;
            lex->create_info->default_table_charset= NULL;
            lex->create_info->row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
    break;

  case 877:
/* Line 1792 of yacc.c  */
#line 6902 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 878:
/* Line 1792 of yacc.c  */
#line 6914 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
    break;

  case 879:
/* Line 1792 of yacc.c  */
#line 6922 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 880:
/* Line 1792 of yacc.c  */
#line 6931 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 881:
/* Line 1792 of yacc.c  */
#line 6942 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 882:
/* Line 1792 of yacc.c  */
#line 6949 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 883:
/* Line 1792 of yacc.c  */
#line 6960 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 884:
/* Line 1792 of yacc.c  */
#line 6967 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
    break;

  case 885:
/* Line 1792 of yacc.c  */
#line 6978 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 886:
/* Line 1792 of yacc.c  */
#line 6985 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
    break;

  case 887:
/* Line 1792 of yacc.c  */
#line 6997 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 888:
/* Line 1792 of yacc.c  */
#line 6999 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 889:
/* Line 1792 of yacc.c  */
#line 7019 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 890:
/* Line 1792 of yacc.c  */
#line 7032 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 891:
/* Line 1792 of yacc.c  */
#line 7037 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 892:
/* Line 1792 of yacc.c  */
#line 7042 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 893:
/* Line 1792 of yacc.c  */
#line 7047 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 894:
/* Line 1792 of yacc.c  */
#line 7052 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[(3) - (7)].lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
    break;

  case 896:
/* Line 1792 of yacc.c  */
#line 7062 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(2) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(2) - (5)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 897:
/* Line 1792 of yacc.c  */
#line 7068 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 898:
/* Line 1792 of yacc.c  */
#line 7070 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            List<LEX_USER> *users= new List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new List<LEX_USER>;
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
              PT_statement *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list, ROLE_ALL);
              MAKE_CMD(tmp);
          }
    break;

  case 899:
/* Line 1792 of yacc.c  */
#line 7082 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            List<LEX_USER> *users= new List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new List<LEX_USER>;
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
              PT_statement *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list, ROLE_NONE);
              MAKE_CMD(tmp);
          }
    break;

  case 900:
/* Line 1792 of yacc.c  */
#line 7094 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            List<LEX_USER> *users= new List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
            PT_statement *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[(5) - (5)].user_list), ROLE_NAME);
            MAKE_CMD(tmp);
          }
    break;

  case 901:
/* Line 1792 of yacc.c  */
#line 7108 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
          }
    break;

  case 902:
/* Line 1792 of yacc.c  */
#line 7116 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 906:
/* Line 1792 of yacc.c  */
#line 7127 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
    break;

  case 907:
/* Line 1792 of yacc.c  */
#line 7133 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
    break;

  case 908:
/* Line 1792 of yacc.c  */
#line 7139 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
    break;

  case 909:
/* Line 1792 of yacc.c  */
#line 7147 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(4) - (5)].ulong_num) == 0 || (yyvsp[(4) - (5)].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              my_snprintf(buf, sizeof(buf), "%lu", (yyvsp[(4) - (5)].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[(4) - (5)].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 910:
/* Line 1792 of yacc.c  */
#line 7162 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 911:
/* Line 1792 of yacc.c  */
#line 7170 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
    break;

  case 912:
/* Line 1792 of yacc.c  */
#line 7180 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 914:
/* Line 1792 of yacc.c  */
#line 7185 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 915:
/* Line 1792 of yacc.c  */
#line 7186 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 916:
/* Line 1792 of yacc.c  */
#line 7191 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 917:
/* Line 1792 of yacc.c  */
#line 7197 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 918:
/* Line 1792 of yacc.c  */
#line 7203 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 919:
/* Line 1792 of yacc.c  */
#line 7209 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 920:
/* Line 1792 of yacc.c  */
#line 7218 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(st_lex_user));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
    break;

  case 921:
/* Line 1792 of yacc.c  */
#line 7231 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 922:
/* Line 1792 of yacc.c  */
#line 7232 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 923:
/* Line 1792 of yacc.c  */
#line 7233 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 924:
/* Line 1792 of yacc.c  */
#line 7234 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 925:
/* Line 1792 of yacc.c  */
#line 7238 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 926:
/* Line 1792 of yacc.c  */
#line 7240 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname);
            (yyval.num)= 1;
          }
    break;

  case 927:
/* Line 1792 of yacc.c  */
#line 7251 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 928:
/* Line 1792 of yacc.c  */
#line 7252 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 929:
/* Line 1792 of yacc.c  */
#line 7256 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 930:
/* Line 1792 of yacc.c  */
#line 7257 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 932:
/* Line 1792 of yacc.c  */
#line 7263 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            CONTEXTUALIZE((yyvsp[(2) - (2)].partition_clause));
            Lex->part_info= &(yyvsp[(2) - (2)].partition_clause)->part_info;
          }
    break;

  case 940:
/* Line 1792 of yacc.c  */
#line 7282 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DISCARD_TABLESPACE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_discard_import_tablespace();
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 941:
/* Line 1792 of yacc.c  */
#line 7289 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_IMPORT_TABLESPACE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_discard_import_tablespace();
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 942:
/* Line 1792 of yacc.c  */
#line 7303 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].add_partition_rule)); }
    break;

  case 943:
/* Line 1792 of yacc.c  */
#line 7305 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
            DBUG_ASSERT(Lex->alter_info.partition_names.is_empty());
            Lex->alter_info.partition_names= *(yyvsp[(3) - (3)].string_list);
          }
    break;

  case 944:
/* Line 1792 of yacc.c  */
#line 7312 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 945:
/* Line 1792 of yacc.c  */
#line 7319 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 947:
/* Line 1792 of yacc.c  */
#line 7332 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 948:
/* Line 1792 of yacc.c  */
#line 7343 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            lex->check_opt.flags|= (yyvsp[(4) - (4)].mi_type).flags;
            lex->check_opt.sql_flags|= (yyvsp[(4) - (4)].mi_type).sql_flags;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 949:
/* Line 1792 of yacc.c  */
#line 7357 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (5)].num);
            lex->check_opt.init();
            lex->check_opt.flags|= (yyvsp[(5) - (5)].mi_type).flags;
            lex->check_opt.sql_flags|= (yyvsp[(5) - (5)].mi_type).sql_flags;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 950:
/* Line 1792 of yacc.c  */
#line 7370 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 951:
/* Line 1792 of yacc.c  */
#line 7377 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 953:
/* Line 1792 of yacc.c  */
#line 7389 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            String *s= NEW_PTN String((const char *) (yyvsp[(3) - (7)].lex_str).str,
                                      (yyvsp[(3) - (7)].lex_str).length,
                                      system_charset_info);
            if (s == NULL || lex->alter_info.partition_names.push_back(s))
              MYSQL_YYABORT;

            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(6) - (7)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name.str= const_cast<char*>((yyvsp[(6) - (7)].table)->table.str);
            lex->name.length= (yyvsp[(6) - (7)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (7)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 954:
/* Line 1792 of yacc.c  */
#line 7421 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DISCARD_TABLESPACE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_discard_import_tablespace();
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 955:
/* Line 1792 of yacc.c  */
#line 7429 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_IMPORT_TABLESPACE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_discard_import_tablespace();
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 958:
/* Line 1792 of yacc.c  */
#line 7444 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation= Alter_info::ALTER_WITH_VALIDATION;
          }
    break;

  case 959:
/* Line 1792 of yacc.c  */
#line 7448 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation=
              Alter_info::ALTER_WITHOUT_VALIDATION;
          }
    break;

  case 960:
/* Line 1792 of yacc.c  */
#line 7456 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 961:
/* Line 1792 of yacc.c  */
#line 7463 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
    break;

  case 962:
/* Line 1792 of yacc.c  */
#line 7467 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->alter_info.partition_names.is_empty());
            Lex->alter_info.partition_names= *(yyvsp[(1) - (1)].string_list);
          }
    break;

  case 963:
/* Line 1792 of yacc.c  */
#line 7475 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.add_partition_rule)= NEW_PTN PT_add_partition((yyvsp[(3) - (3)].num));
          }
    break;

  case 964:
/* Line 1792 of yacc.c  */
#line 7479 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.add_partition_rule)= NEW_PTN PT_add_partition_def_list((yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].part_def_list));
          }
    break;

  case 965:
/* Line 1792 of yacc.c  */
#line 7483 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.add_partition_rule)= NEW_PTN PT_add_partition_num((yyvsp[(3) - (5)].num), (yyvsp[(5) - (5)].ulong_num));
          }
    break;

  case 966:
/* Line 1792 of yacc.c  */
#line 7490 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX * const lex= Lex;
            lex->part_info= NEW_PTN partition_info();
            if (!lex->part_info)
              MYSQL_YYABORT;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
            lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
    break;

  case 967:
/* Line 1792 of yacc.c  */
#line 7500 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX * const lex= Lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (8)].num);
            lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;

            DBUG_ASSERT(lex->alter_info.partition_names.is_empty());
            lex->alter_info.partition_names= *(yyvsp[(4) - (8)].string_list);

            partition_info * const part_info= NEW_PTN partition_info();
            if (part_info == NULL)
              MYSQL_YYABORT;

            Partition_parse_context pc(YYTHD, part_info);
            if (YYTHD->is_error())
              MYSQL_YYABORT;

            for (auto part_def : *(yyvsp[(7) - (8)].part_def_list))
            {
              if (part_def->contextualize(&pc))
                MYSQL_YYABORT;
            }

            part_info->num_parts= part_info->partitions.elements;

            lex->part_info= part_info;
          }
    break;

  case 973:
/* Line 1792 of yacc.c  */
#line 7545 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
    break;

  case 974:
/* Line 1792 of yacc.c  */
#line 7553 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(2) - (5)].field_ident));
            CONTEXTUALIZE((yyvsp[(3) - (5)].field_def));
            if ((yyvsp[(4) - (5)].check_constraint))
              CONTEXTUALIZE((yyvsp[(4) - (5)].check_constraint));

            Lex->alter_info.flags|= (yyvsp[(3) - (5)].field_def)->alter_info_flags;
            if (Lex->alter_info.add_field(YYTHD,
                                          &(yyvsp[(2) - (5)].field_ident)->field_name,
                                          (yyvsp[(3) - (5)].field_def)->type,
                                          (yyvsp[(3) - (5)].field_def)->length,
                                          (yyvsp[(3) - (5)].field_def)->dec,
                                          (yyvsp[(3) - (5)].field_def)->type_flags,
                                          (yyvsp[(3) - (5)].field_def)->default_value,
                                          (yyvsp[(3) - (5)].field_def)->on_update_value,
                                          &(yyvsp[(3) - (5)].field_def)->comment,
                                          NULL,
                                          (yyvsp[(3) - (5)].field_def)->interval_list,
                                          (yyvsp[(3) - (5)].field_def)->charset,
                                          (yyvsp[(3) - (5)].field_def)->uint_geom_type,
                                          (yyvsp[(3) - (5)].field_def)->gcol_info,
                                          (yyvsp[(5) - (5)].c_str)))
              MYSQL_YYABORT;

            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 975:
/* Line 1792 of yacc.c  */
#line 7580 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(2) - (2)].table_constraint_def));
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 976:
/* Line 1792 of yacc.c  */
#line 7586 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            for (auto element : *(yyvsp[(3) - (4)].table_element_list))
              CONTEXTUALIZE(element);
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 977:
/* Line 1792 of yacc.c  */
#line 7594 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (6)].field_ident));
            CONTEXTUALIZE((yyvsp[(4) - (6)].field_ident));
            CONTEXTUALIZE((yyvsp[(5) - (6)].field_def));
            lex->alter_info.flags|= (yyvsp[(5) - (6)].field_def)->alter_info_flags;
            if (lex->alter_info.add_field(YYTHD, &(yyvsp[(4) - (6)].field_ident)->field_name, (yyvsp[(5) - (6)].field_def)->type,
                                          (yyvsp[(5) - (6)].field_def)->length, (yyvsp[(5) - (6)].field_def)->dec, (yyvsp[(5) - (6)].field_def)->type_flags,
                                          (yyvsp[(5) - (6)].field_def)->default_value,
                                          (yyvsp[(5) - (6)].field_def)->on_update_value,
                                          &(yyvsp[(5) - (6)].field_def)->comment,
                                          (yyvsp[(3) - (6)].field_ident)->field_name.str,
                                          (yyvsp[(5) - (6)].field_def)->interval_list,
                                          (yyvsp[(5) - (6)].field_def)->charset,
                                          (yyvsp[(5) - (6)].field_def)->uint_geom_type,
                                          (yyvsp[(5) - (6)].field_def)->gcol_info,
                                          (yyvsp[(6) - (6)].c_str)))
              MYSQL_YYABORT;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            if ((yyvsp[(5) - (6)].field_def)->default_value)
               lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 978:
/* Line 1792 of yacc.c  */
#line 7620 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (5)].field_ident));
            CONTEXTUALIZE((yyvsp[(4) - (5)].field_def));
            lex->alter_info.flags|= (yyvsp[(4) - (5)].field_def)->alter_info_flags;
            if (lex->alter_info.add_field(YYTHD, &(yyvsp[(3) - (5)].field_ident)->field_name,
                                          (yyvsp[(4) - (5)].field_def)->type,
                                          (yyvsp[(4) - (5)].field_def)->length, (yyvsp[(4) - (5)].field_def)->dec, (yyvsp[(4) - (5)].field_def)->type_flags,
                                          (yyvsp[(4) - (5)].field_def)->default_value,
                                          (yyvsp[(4) - (5)].field_def)->on_update_value,
                                          &(yyvsp[(4) - (5)].field_def)->comment,
                                          (yyvsp[(3) - (5)].field_ident)->field_name.str,
                                          (yyvsp[(4) - (5)].field_def)->interval_list,
                                          (yyvsp[(4) - (5)].field_def)->charset,
                                          (yyvsp[(4) - (5)].field_def)->uint_geom_type,
                                          (yyvsp[(4) - (5)].field_def)->gcol_info,
                                          (yyvsp[(5) - (5)].c_str)))
              MYSQL_YYABORT;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            if ((yyvsp[(4) - (5)].field_def)->default_value)
               lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 979:
/* Line 1792 of yacc.c  */
#line 7644 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (4)].field_ident));
            lex->drop_mode= (yyvsp[(4) - (4)].opt_restrict);
            auto ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].field_ident)->field_name.str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
    break;

  case 980:
/* Line 1792 of yacc.c  */
#line 7655 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(4) - (4)].field_ident));
            auto ad= new Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[(4) - (4)].field_ident)->field_name.str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
    break;

  case 981:
/* Line 1792 of yacc.c  */
#line 7665 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 982:
/* Line 1792 of yacc.c  */
#line 7674 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (3)].field_ident));
            auto ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].field_ident)->field_name.str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 983:
/* Line 1792 of yacc.c  */
#line 7684 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 984:
/* Line 1792 of yacc.c  */
#line 7690 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 985:
/* Line 1792 of yacc.c  */
#line 7696 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (6)].field_ident));
            ITEMIZE((yyvsp[(6) - (6)].item), &(yyvsp[(6) - (6)].item));
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].field_ident)->field_name.str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 986:
/* Line 1792 of yacc.c  */
#line 7707 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            auto ac= new Alter_index_visibility((yyvsp[(3) - (4)].lex_str).str, (yyvsp[(4) - (4)].visibility));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_index_visibility_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_INDEX_VISIBILITY;
          }
    break;

  case 987:
/* Line 1792 of yacc.c  */
#line 7716 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (5)].field_ident));
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].field_ident)->field_name.str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 988:
/* Line 1792 of yacc.c  */
#line 7726 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(3) - (3)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            Ident_name_check ident_check_status=
              check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length);
            if (ident_check_status == Ident_name_check::WRONG)
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            else if (ident_check_status == Ident_name_check::TOO_LONG)
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            LEX_STRING db_str= to_lex_string((yyvsp[(3) - (3)].table)->db);
            if (db_str.str &&
                (check_and_convert_db_name(&db_str, false) !=
                 Ident_name_check::OK))
              MYSQL_YYABORT;
            lex->name.str= const_cast<char*>((yyvsp[(3) - (3)].table)->table.str);
            lex->name.length= (yyvsp[(3) - (3)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
    break;

  case 989:
/* Line 1792 of yacc.c  */
#line 7757 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (5)].field_ident));
            CONTEXTUALIZE((yyvsp[(5) - (5)].field_ident));
            Alter_rename_key *ak=
              NEW_PTN Alter_rename_key((yyvsp[(3) - (5)].field_ident)->field_name.str, (yyvsp[(5) - (5)].field_ident)->field_name.str);
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= Alter_info::ALTER_RENAME_INDEX;
          }
    break;

  case 990:
/* Line 1792 of yacc.c  */
#line 7769 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }

            LEX *lex= Lex;
            HA_CREATE_INFO *cinfo= lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(5) - (5)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(5) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }

            cinfo->table_charset= cinfo->default_table_charset= (yyvsp[(5) - (5)].charset);
            cinfo->used_fields|= (HA_CREATE_USED_CHARSET |
                                  HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
          }
    break;

  case 991:
/* Line 1792 of yacc.c  */
#line 7801 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            for (auto *option : *(yyvsp[(1) - (1)].create_table_options))
              CONTEXTUALIZE(option);

            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info->used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info->db_type)
            {
              lex->create_info->used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
    break;

  case 992:
/* Line 1792 of yacc.c  */
#line 7814 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
    break;

  case 993:
/* Line 1792 of yacc.c  */
#line 7818 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
    break;

  case 994:
/* Line 1792 of yacc.c  */
#line 7825 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].index_option)); }
    break;

  case 995:
/* Line 1792 of yacc.c  */
#line 7826 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].index_option)); }
    break;

  case 997:
/* Line 1792 of yacc.c  */
#line 7831 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 998:
/* Line 1792 of yacc.c  */
#line 7833 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 999:
/* Line 1792 of yacc.c  */
#line 7839 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1000:
/* Line 1792 of yacc.c  */
#line 7845 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (2)].index_option)) || (yyval.index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1001:
/* Line 1792 of yacc.c  */
#line 7851 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (2)].index_option)) || (yyval.index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1002:
/* Line 1792 of yacc.c  */
#line 7860 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_requested_algorithm(default_word);
          }
    break;

  case 1003:
/* Line 1792 of yacc.c  */
#line 7864 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_requested_algorithm((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1004:
/* Line 1792 of yacc.c  */
#line 7871 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_requested_lock(default_word);
          }
    break;

  case 1005:
/* Line 1792 of yacc.c  */
#line 7875 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_requested_lock((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1006:
/* Line 1792 of yacc.c  */
#line 7881 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1007:
/* Line 1792 of yacc.c  */
#line 7882 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1008:
/* Line 1792 of yacc.c  */
#line 7886 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1009:
/* Line 1792 of yacc.c  */
#line 7887 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1010:
/* Line 1792 of yacc.c  */
#line 7891 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_DEFAULT; }
    break;

  case 1011:
/* Line 1792 of yacc.c  */
#line 7892 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_RESTRICT; }
    break;

  case 1012:
/* Line 1792 of yacc.c  */
#line 7893 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_CASCADE; }
    break;

  case 1013:
/* Line 1792 of yacc.c  */
#line 7897 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 1014:
/* Line 1792 of yacc.c  */
#line 7898 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1015:
/* Line 1792 of yacc.c  */
#line 7899 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= first_keyword; }
    break;

  case 1016:
/* Line 1792 of yacc.c  */
#line 7903 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1017:
/* Line 1792 of yacc.c  */
#line 7904 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1018:
/* Line 1792 of yacc.c  */
#line 7905 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1019:
/* Line 1792 of yacc.c  */
#line 7906 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1020:
/* Line 1792 of yacc.c  */
#line 7911 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
    break;

  case 1021:
/* Line 1792 of yacc.c  */
#line 7916 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
    break;

  case 1022:
/* Line 1792 of yacc.c  */
#line 7923 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1023:
/* Line 1792 of yacc.c  */
#line 7925 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[(3) - (4)].num);
        }
    break;

  case 1024:
/* Line 1792 of yacc.c  */
#line 7935 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1025:
/* Line 1792 of yacc.c  */
#line 7950 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1027:
/* Line 1792 of yacc.c  */
#line 7971 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1028:
/* Line 1792 of yacc.c  */
#line 7987 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1029:
/* Line 1792 of yacc.c  */
#line 7991 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1030:
/* Line 1792 of yacc.c  */
#line 7998 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1031:
/* Line 1792 of yacc.c  */
#line 8002 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1032:
/* Line 1792 of yacc.c  */
#line 8009 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 1033:
/* Line 1792 of yacc.c  */
#line 8013 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 1034:
/* Line 1792 of yacc.c  */
#line 8017 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 1036:
/* Line 1792 of yacc.c  */
#line 8028 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1037:
/* Line 1792 of yacc.c  */
#line 8032 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1038:
/* Line 1792 of yacc.c  */
#line 8038 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1039:
/* Line 1792 of yacc.c  */
#line 8042 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 1040:
/* Line 1792 of yacc.c  */
#line 8048 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1041:
/* Line 1792 of yacc.c  */
#line 8052 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1042:
/* Line 1792 of yacc.c  */
#line 8058 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1043:
/* Line 1792 of yacc.c  */
#line 8062 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1044:
/* Line 1792 of yacc.c  */
#line 8069 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1045:
/* Line 1792 of yacc.c  */
#line 8073 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1046:
/* Line 1792 of yacc.c  */
#line 8080 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1047:
/* Line 1792 of yacc.c  */
#line 8084 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1048:
/* Line 1792 of yacc.c  */
#line 8091 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_SQL;
          }
    break;

  case 1049:
/* Line 1792 of yacc.c  */
#line 8095 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_IO;
          }
    break;

  case 1050:
/* Line 1792 of yacc.c  */
#line 8102 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
    break;

  case 1051:
/* Line 1792 of yacc.c  */
#line 8107 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
    break;

  case 1054:
/* Line 1792 of yacc.c  */
#line 8134 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
    break;

  case 1055:
/* Line 1792 of yacc.c  */
#line 8139 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
    break;

  case 1056:
/* Line 1792 of yacc.c  */
#line 8144 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.until_after_gaps= true;
          }
    break;

  case 1057:
/* Line 1792 of yacc.c  */
#line 8151 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[(3) - (4)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 1058:
/* Line 1792 of yacc.c  */
#line 8164 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 1059:
/* Line 1792 of yacc.c  */
#line 8165 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= T_QUICK; }
    break;

  case 1060:
/* Line 1792 of yacc.c  */
#line 8166 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= T_EXTEND; }
    break;

  case 1061:
/* Line 1792 of yacc.c  */
#line 8172 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (5)].num);
            lex->check_opt.init();
            lex->check_opt.flags|= (yyvsp[(5) - (5)].mi_type).flags;
            lex->check_opt.sql_flags|= (yyvsp[(5) - (5)].mi_type).sql_flags;
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(thd, (yyvsp[(4) - (5)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1062:
/* Line 1792 of yacc.c  */
#line 8194 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1065:
/* Line 1792 of yacc.c  */
#line 8201 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.mi_type).flags= (yyvsp[(1) - (2)].mi_type).flags | (yyvsp[(2) - (2)].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[(1) - (2)].mi_type).sql_flags | (yyvsp[(2) - (2)].mi_type).sql_flags;
          }
    break;

  case 1066:
/* Line 1792 of yacc.c  */
#line 8208 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
    break;

  case 1067:
/* Line 1792 of yacc.c  */
#line 8209 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1068:
/* Line 1792 of yacc.c  */
#line 8210 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
    break;

  case 1069:
/* Line 1792 of yacc.c  */
#line 8215 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (4)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(thd, (yyvsp[(4) - (4)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1070:
/* Line 1792 of yacc.c  */
#line 8236 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1071:
/* Line 1792 of yacc.c  */
#line 8244 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->check_opt.flags|= (yyvsp[(4) - (4)].mi_type).flags;
            lex->check_opt.sql_flags|= (yyvsp[(4) - (4)].mi_type).sql_flags;
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(thd, (yyvsp[(3) - (4)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1072:
/* Line 1792 of yacc.c  */
#line 8271 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1075:
/* Line 1792 of yacc.c  */
#line 8278 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.mi_type).flags= (yyvsp[(1) - (2)].mi_type).flags | (yyvsp[(2) - (2)].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[(1) - (2)].mi_type).sql_flags | (yyvsp[(2) - (2)].mi_type).sql_flags;
          }
    break;

  case 1076:
/* Line 1792 of yacc.c  */
#line 8286 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
    break;

  case 1077:
/* Line 1792 of yacc.c  */
#line 8288 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
    break;

  case 1078:
/* Line 1792 of yacc.c  */
#line 8290 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
    break;

  case 1079:
/* Line 1792 of yacc.c  */
#line 8292 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
    break;

  case 1080:
/* Line 1792 of yacc.c  */
#line 8294 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1081:
/* Line 1792 of yacc.c  */
#line 8296 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
    break;

  case 1082:
/* Line 1792 of yacc.c  */
#line 8301 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (4)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(thd, (yyvsp[(4) - (4)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1083:
/* Line 1792 of yacc.c  */
#line 8321 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1084:
/* Line 1792 of yacc.c  */
#line 8322 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1085:
/* Line 1792 of yacc.c  */
#line 8323 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1086:
/* Line 1792 of yacc.c  */
#line 8328 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1087:
/* Line 1792 of yacc.c  */
#line 8332 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1088:
/* Line 1792 of yacc.c  */
#line 8334 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1089:
/* Line 1792 of yacc.c  */
#line 8341 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1090:
/* Line 1792 of yacc.c  */
#line 8346 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1093:
/* Line 1792 of yacc.c  */
#line 8359 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1094:
/* Line 1792 of yacc.c  */
#line 8372 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 1095:
/* Line 1792 of yacc.c  */
#line 8376 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 1100:
/* Line 1792 of yacc.c  */
#line 8395 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (2)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1101:
/* Line 1792 of yacc.c  */
#line 8405 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1102:
/* Line 1792 of yacc.c  */
#line 8414 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1103:
/* Line 1792 of yacc.c  */
#line 8415 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1104:
/* Line 1792 of yacc.c  */
#line 8420 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 1105:
/* Line 1792 of yacc.c  */
#line 8426 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1110:
/* Line 1792 of yacc.c  */
#line 8441 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1111:
/* Line 1792 of yacc.c  */
#line 8451 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (4)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1112:
/* Line 1792 of yacc.c  */
#line 8461 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
    break;

  case 1115:
/* Line 1792 of yacc.c  */
#line 8472 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1116:
/* Line 1792 of yacc.c  */
#line 8474 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(3) - (4)].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[(3) - (4)].key_usage_list);
          }
    break;

  case 1117:
/* Line 1792 of yacc.c  */
#line 8484 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1118:
/* Line 1792 of yacc.c  */
#line 8485 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1119:
/* Line 1792 of yacc.c  */
#line 8490 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_stmt)= NEW_PTN PT_select_stmt((yyvsp[(1) - (1)].query_expression));
          }
    break;

  case 1120:
/* Line 1792 of yacc.c  */
#line 8494 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.select_stmt)= NEW_PTN PT_select_stmt((yyvsp[(1) - (1)].query_expression));
          }
    break;

  case 1122:
/* Line 1792 of yacc.c  */
#line 8536 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_stmt)= (yyvsp[(2) - (3)].select_stmt);
          }
    break;

  case 1123:
/* Line 1792 of yacc.c  */
#line 8540 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (2)].query_expression)->has_into_clause())
              YYTHD->syntax_error_at((yylsp[(2) - (2)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));

            (yyval.select_stmt)= NEW_PTN PT_select_stmt((yyvsp[(1) - (2)].query_expression), (yyvsp[(2) - (2)].into_destination));
          }
    break;

  case 1124:
/* Line 1792 of yacc.c  */
#line 8588 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (4)].query_expression_body), (yyvsp[(2) - (4)].order), (yyvsp[(3) - (4)].limit_clause), (yyvsp[(4) - (4)].locking_clause_list));
          }
    break;

  case 1125:
/* Line 1792 of yacc.c  */
#line 8596 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (5)].with_clause), (yyvsp[(2) - (5)].query_expression_body), (yyvsp[(3) - (5)].order), (yyvsp[(4) - (5)].limit_clause), (yyvsp[(5) - (5)].locking_clause_list));
          }
    break;

  case 1126:
/* Line 1792 of yacc.c  */
#line 8603 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            auto nested= NEW_PTN PT_nested_query_expression((yyvsp[(1) - (4)].query_expression));
            auto body= NEW_PTN PT_query_expression_body_primary(nested);
            (yyval.query_expression)= NEW_PTN PT_query_expression(body, (yyvsp[(2) - (4)].order), (yyvsp[(3) - (4)].limit_clause), (yyvsp[(4) - (4)].locking_clause_list));
          }
    break;

  case 1127:
/* Line 1792 of yacc.c  */
#line 8613 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            auto nested= NEW_PTN PT_nested_query_expression((yyvsp[(2) - (5)].query_expression));
            auto body= NEW_PTN PT_query_expression_body_primary(nested);
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (5)].with_clause), body, (yyvsp[(3) - (5)].order), (yyvsp[(4) - (5)].limit_clause), (yyvsp[(5) - (5)].locking_clause_list));
          }
    break;

  case 1128:
/* Line 1792 of yacc.c  */
#line 8621 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (3)].query_expression)->body(), NULL, (yyvsp[(2) - (3)].limit_clause), (yyvsp[(3) - (3)].locking_clause_list));
          }
    break;

  case 1129:
/* Line 1792 of yacc.c  */
#line 8630 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (4)].with_clause), (yyvsp[(2) - (4)].query_expression)->body(), NULL, (yyvsp[(3) - (4)].limit_clause), (yyvsp[(4) - (4)].locking_clause_list));
          }
    break;

  case 1130:
/* Line 1792 of yacc.c  */
#line 8638 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (3)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (3)].with_clause), (yyvsp[(2) - (3)].query_expression)->body(), NULL, NULL, (yyvsp[(3) - (3)].locking_clause_list));
          }
    break;

  case 1131:
/* Line 1792 of yacc.c  */
#line 8647 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_expression_body)= NEW_PTN PT_query_expression_body_primary((yyvsp[(1) - (1)].query_primary));
          }
    break;

  case 1132:
/* Line 1792 of yacc.c  */
#line 8651 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_expression_body)= NEW_PTN PT_union(NEW_PTN PT_query_expression((yyvsp[(1) - (4)].query_expression_body)), (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].query_primary));
          }
    break;

  case 1133:
/* Line 1792 of yacc.c  */
#line 8655 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            (yyvsp[(1) - (4)].query_expression)->set_parentheses();

            (yyval.query_expression_body)= NEW_PTN PT_union((yyvsp[(1) - (4)].query_expression), (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].query_primary));
          }
    break;

  case 1134:
/* Line 1792 of yacc.c  */
#line 8664 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(4) - (4)].query_expression)->is_union())
              YYTHD->syntax_error_at((yylsp[(4) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));

            auto lhs_qe= NEW_PTN PT_query_expression((yyvsp[(1) - (4)].query_expression_body));
            PT_nested_query_expression *nested_qe=
              NEW_PTN PT_nested_query_expression((yyvsp[(4) - (4)].query_expression));

            (yyval.query_expression_body)= NEW_PTN PT_union(lhs_qe, (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), nested_qe);
          }
    break;

  case 1135:
/* Line 1792 of yacc.c  */
#line 8678 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (4)].query_expression) == NULL || (yyvsp[(4) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(4) - (4)].query_expression)->is_union())
              YYTHD->syntax_error_at((yylsp[(4) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));

            (yyvsp[(1) - (4)].query_expression)->set_parentheses();

            PT_nested_query_expression *nested_qe=
              NEW_PTN PT_nested_query_expression((yyvsp[(4) - (4)].query_expression));
            (yyval.query_expression_body)= NEW_PTN PT_union((yyvsp[(1) - (4)].query_expression), (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), nested_qe);
          }
    break;

  case 1136:
/* Line 1792 of yacc.c  */
#line 8695 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.query_expression)= (yyvsp[(2) - (3)].query_expression); }
    break;

  case 1137:
/* Line 1792 of yacc.c  */
#line 8697 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              We don't call set_parentheses() on a query expression here. It
              makes no difference to the contextualization phase whether a
              query expression was within parentheses unless it is used in
              conjunction with UNION. Therefore set_parentheses() is called
              only in the rules producing UNION syntax.

              The need for set_parentheses() is purely to support legacy parse
              rules, and we are gradually moving away from them and using the
              query_expression_body to define UNION syntax. When this move is
              complete, we will not need set_parentheses() any more, and the
              contextualize() phase can be greatly simplified.
            */
            (yyval.query_expression)= (yyvsp[(2) - (3)].query_expression);
          }
    break;

  case 1138:
/* Line 1792 of yacc.c  */
#line 8717 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[(1) - (1)].query_primary);
          }
    break;

  case 1139:
/* Line 1792 of yacc.c  */
#line 8732 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[(1) - (8)].optimizer_hints),  // SELECT_SYM
                                      (yyvsp[(2) - (8)].select_options),  // select_options
                                      (yyvsp[(3) - (8)].item_list2),  // select_item_list
                                      (yyvsp[(4) - (8)].into_destination),  // into_clause
                                      (yyvsp[(5) - (8)].table_reference_list),  // from
                                      (yyvsp[(6) - (8)].item),  // where
                                      (yyvsp[(7) - (8)].group),  // group
                                      (yyvsp[(8) - (8)].item)); // having
          }
    break;

  case 1140:
/* Line 1792 of yacc.c  */
#line 8750 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[(1) - (7)].optimizer_hints),  // SELECT_SYM
                                      (yyvsp[(2) - (7)].select_options),  // select_options
                                      (yyvsp[(3) - (7)].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[(4) - (7)].table_reference_list),  // from
                                      (yyvsp[(5) - (7)].item),  // where
                                      (yyvsp[(6) - (7)].group),  // group
                                      (yyvsp[(7) - (7)].item)); // having
          }
    break;

  case 1141:
/* Line 1792 of yacc.c  */
#line 8764 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
    break;

  case 1143:
/* Line 1792 of yacc.c  */
#line 8769 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (2)].table_reference_list); }
    break;

  case 1144:
/* Line 1792 of yacc.c  */
#line 8773 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
    break;

  case 1146:
/* Line 1792 of yacc.c  */
#line 8779 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[(1) - (1)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1147:
/* Line 1792 of yacc.c  */
#line 8785 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list)= (yyvsp[(1) - (3)].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[(3) - (3)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1148:
/* Line 1792 of yacc.c  */
#line 8794 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1150:
/* Line 1792 of yacc.c  */
#line 8803 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.select_options).merge((yyvsp[(1) - (2)].select_options), (yyvsp[(2) - (2)].select_options)))
              MYSQL_YYABORT;
          }
    break;

  case 1152:
/* Line 1792 of yacc.c  */
#line 8812 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= (yyvsp[(1) - (1)].ulonglong_number);
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1153:
/* Line 1792 of yacc.c  */
#line 8817 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
    break;

  case 1154:
/* Line 1792 of yacc.c  */
#line 8826 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE;
          }
    break;

  case 1155:
/* Line 1792 of yacc.c  */
#line 8837 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.locking_clause_list)= NULL; }
    break;

  case 1157:
/* Line 1792 of yacc.c  */
#line 8843 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.locking_clause_list)= (yyvsp[(1) - (2)].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[(2) - (2)].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1158:
/* Line 1792 of yacc.c  */
#line 8849 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[(1) - (1)].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1159:
/* Line 1792 of yacc.c  */
#line 8858 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[(2) - (3)].lock_strength), (yyvsp[(3) - (3)].locked_row_action));
          }
    break;

  case 1160:
/* Line 1792 of yacc.c  */
#line 8862 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[(2) - (4)].lock_strength), (yyvsp[(3) - (4)].table_ident_list), (yyvsp[(4) - (4)].locked_row_action));
          }
    break;

  case 1161:
/* Line 1792 of yacc.c  */
#line 8866 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
    break;

  case 1162:
/* Line 1792 of yacc.c  */
#line 8872 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
    break;

  case 1163:
/* Line 1792 of yacc.c  */
#line 8873 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lock_strength)= Lock_strength::SHARE; }
    break;

  case 1164:
/* Line 1792 of yacc.c  */
#line 8877 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_ident_list)= (yyvsp[(2) - (2)].table_ident_list); }
    break;

  case 1165:
/* Line 1792 of yacc.c  */
#line 8881 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
    break;

  case 1167:
/* Line 1792 of yacc.c  */
#line 8886 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
    break;

  case 1168:
/* Line 1792 of yacc.c  */
#line 8887 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
    break;

  case 1169:
/* Line 1792 of yacc.c  */
#line 8892 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1170:
/* Line 1792 of yacc.c  */
#line 8898 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1171:
/* Line 1792 of yacc.c  */
#line 8904 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
    break;

  case 1172:
/* Line 1792 of yacc.c  */
#line 8913 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1173:
/* Line 1792 of yacc.c  */
#line 8915 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[(1) - (2)].item), (yylsp[(1) - (2)]).cpp, (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1174:
/* Line 1792 of yacc.c  */
#line 8922 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1175:
/* Line 1792 of yacc.c  */
#line 8923 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1176:
/* Line 1792 of yacc.c  */
#line 8924 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1177:
/* Line 1792 of yacc.c  */
#line 8925 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1178:
/* Line 1792 of yacc.c  */
#line 8926 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1179:
/* Line 1792 of yacc.c  */
#line 8930 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1180:
/* Line 1792 of yacc.c  */
#line 8931 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1181:
/* Line 1792 of yacc.c  */
#line 8937 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1182:
/* Line 1792 of yacc.c  */
#line 8943 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1183:
/* Line 1792 of yacc.c  */
#line 8948 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1184:
/* Line 1792 of yacc.c  */
#line 8954 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1185:
/* Line 1792 of yacc.c  */
#line 8958 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_istrue((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1186:
/* Line 1792 of yacc.c  */
#line 8962 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnottrue((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1187:
/* Line 1792 of yacc.c  */
#line 8966 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isfalse((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1188:
/* Line 1792 of yacc.c  */
#line 8970 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotfalse((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1189:
/* Line 1792 of yacc.c  */
#line 8974 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1190:
/* Line 1792 of yacc.c  */
#line 8978 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1192:
/* Line 1792 of yacc.c  */
#line 8986 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1193:
/* Line 1792 of yacc.c  */
#line 8990 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1194:
/* Line 1792 of yacc.c  */
#line 8994 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(2) - (3)].boolfunc2creator), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1195:
/* Line 1792 of yacc.c  */
#line 8998 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (4)].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[(2) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(2) - (4)].boolfunc2creator), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].subquery));
          }
    break;

  case 1197:
/* Line 1792 of yacc.c  */
#line 9015 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].subquery));
          }
    break;

  case 1198:
/* Line 1792 of yacc.c  */
#line 9019 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(4) - (4)].subquery));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1199:
/* Line 1792 of yacc.c  */
#line 9024 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
          }
    break;

  case 1200:
/* Line 1792 of yacc.c  */
#line 9028 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item_list2) == NULL || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(4) - (7)].item)) || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(1) - (7)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(6) - (7)].item_list2), false);
          }
    break;

  case 1201:
/* Line 1792 of yacc.c  */
#line 9035 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
          }
    break;

  case 1202:
/* Line 1792 of yacc.c  */
#line 9039 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(7) - (8)].item_list2) == NULL || (yyvsp[(7) - (8)].item_list2)->push_front((yyvsp[(5) - (8)].item)) || (yyvsp[(7) - (8)].item_list2)->value.push_front((yyvsp[(1) - (8)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(7) - (8)].item_list2), true);
          }
    break;

  case 1203:
/* Line 1792 of yacc.c  */
#line 9046 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].item), false);
          }
    break;

  case 1204:
/* Line 1792 of yacc.c  */
#line 9050 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].item), true);
          }
    break;

  case 1205:
/* Line 1792 of yacc.c  */
#line 9054 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(1) - (4)].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
    break;

  case 1206:
/* Line 1792 of yacc.c  */
#line 9062 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(3) - (4)].item), (yyvsp[(4) - (4)].item));
          }
    break;

  case 1207:
/* Line 1792 of yacc.c  */
#line 9066 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_not((yyloc), item);
          }
    break;

  case 1208:
/* Line 1792 of yacc.c  */
#line 9073 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1209:
/* Line 1792 of yacc.c  */
#line 9077 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(4) - (4)].item));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1211:
/* Line 1792 of yacc.c  */
#line 9086 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1212:
/* Line 1792 of yacc.c  */
#line 9090 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1213:
/* Line 1792 of yacc.c  */
#line 9094 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1214:
/* Line 1792 of yacc.c  */
#line 9098 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1215:
/* Line 1792 of yacc.c  */
#line 9102 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1216:
/* Line 1792 of yacc.c  */
#line 9106 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1217:
/* Line 1792 of yacc.c  */
#line 9110 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 0);
          }
    break;

  case 1218:
/* Line 1792 of yacc.c  */
#line 9114 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 1);
          }
    break;

  case 1219:
/* Line 1792 of yacc.c  */
#line 9118 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1220:
/* Line 1792 of yacc.c  */
#line 9122 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1221:
/* Line 1792 of yacc.c  */
#line 9126 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1222:
/* Line 1792 of yacc.c  */
#line 9130 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1223:
/* Line 1792 of yacc.c  */
#line 9134 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1224:
/* Line 1792 of yacc.c  */
#line 9138 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1234:
/* Line 1792 of yacc.c  */
#line 9165 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1235:
/* Line 1792 of yacc.c  */
#line 9166 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
    break;

  case 1236:
/* Line 1792 of yacc.c  */
#line 9167 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1237:
/* Line 1792 of yacc.c  */
#line 9168 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1238:
/* Line 1792 of yacc.c  */
#line 9169 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1239:
/* Line 1792 of yacc.c  */
#line 9170 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1240:
/* Line 1792 of yacc.c  */
#line 9171 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1241:
/* Line 1792 of yacc.c  */
#line 9175 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1242:
/* Line 1792 of yacc.c  */
#line 9176 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1248:
/* Line 1792 of yacc.c  */
#line 9186 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1250:
/* Line 1792 of yacc.c  */
#line 9190 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].param_marker); }
    break;

  case 1253:
/* Line 1792 of yacc.c  */
#line 9194 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1254:
/* Line 1792 of yacc.c  */
#line 9198 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
    break;

  case 1255:
/* Line 1792 of yacc.c  */
#line 9202 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1256:
/* Line 1792 of yacc.c  */
#line 9206 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1257:
/* Line 1792 of yacc.c  */
#line 9210 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1258:
/* Line 1792 of yacc.c  */
#line 9214 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[(1) - (1)].subquery));
          }
    break;

  case 1259:
/* Line 1792 of yacc.c  */
#line 9217 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1260:
/* Line 1792 of yacc.c  */
#line 9219 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item_list2)->value);
          }
    break;

  case 1261:
/* Line 1792 of yacc.c  */
#line 9223 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item_list2)->value);
          }
    break;

  case 1262:
/* Line 1792 of yacc.c  */
#line 9227 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[(2) - (2)].subquery));
          }
    break;

  case 1263:
/* Line 1792 of yacc.c  */
#line 9231 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[(2) - (4)].lex_str), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1264:
/* Line 1792 of yacc.c  */
#line 9235 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[(2) - (7)].item_list2), (yyvsp[(5) - (7)].item), (yyvsp[(6) - (7)].num));
          }
    break;

  case 1265:
/* Line 1792 of yacc.c  */
#line 9239 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(2) - (2)]), (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
    break;

  case 1266:
/* Line 1792 of yacc.c  */
#line 9243 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1267:
/* Line 1792 of yacc.c  */
#line 9247 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
          }
    break;

  case 1268:
/* Line 1792 of yacc.c  */
#line 9251 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1269:
/* Line 1792 of yacc.c  */
#line 9255 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
          }
    break;

  case 1270:
/* Line 1792 of yacc.c  */
#line 9259 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1271:
/* Line 1792 of yacc.c  */
#line 9263 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1272:
/* Line 1792 of yacc.c  */
#line 9268 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(5) - (5)].item), (yyvsp[(2) - (5)].item), (yyvsp[(3) - (5)].interval), 0);
          }
    break;

  case 1273:
/* Line 1792 of yacc.c  */
#line 9272 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
          }
    break;

  case 1274:
/* Line 1792 of yacc.c  */
#line 9279 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
    break;

  case 1275:
/* Line 1792 of yacc.c  */
#line 9296 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1276:
/* Line 1792 of yacc.c  */
#line 9300 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (6)].item_list2), (yyvsp[(5) - (6)].charset));
          }
    break;

  case 1277:
/* Line 1792 of yacc.c  */
#line 9304 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
    break;

  case 1278:
/* Line 1792 of yacc.c  */
#line 9308 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1279:
/* Line 1792 of yacc.c  */
#line 9312 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1280:
/* Line 1792 of yacc.c  */
#line 9316 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1281:
/* Line 1792 of yacc.c  */
#line 9320 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].item), (yyvsp[(7) - (10)].item), (yyvsp[(9) - (10)].item));
          }
    break;

  case 1282:
/* Line 1792 of yacc.c  */
#line 9324 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1283:
/* Line 1792 of yacc.c  */
#line 9328 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item_list2));
          }
    break;

  case 1284:
/* Line 1792 of yacc.c  */
#line 9332 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1285:
/* Line 1792 of yacc.c  */
#line 9336 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1286:
/* Line 1792 of yacc.c  */
#line 9340 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1287:
/* Line 1792 of yacc.c  */
#line 9344 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1288:
/* Line 1792 of yacc.c  */
#line 9348 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1289:
/* Line 1792 of yacc.c  */
#line 9352 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_time_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1290:
/* Line 1792 of yacc.c  */
#line 9356 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_datetime_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1291:
/* Line 1792 of yacc.c  */
#line 9360 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
          }
    break;

  case 1292:
/* Line 1792 of yacc.c  */
#line 9364 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(3) - (4)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1293:
/* Line 1792 of yacc.c  */
#line 9369 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1294:
/* Line 1792 of yacc.c  */
#line 9374 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1295:
/* Line 1792 of yacc.c  */
#line 9379 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1296:
/* Line 1792 of yacc.c  */
#line 9383 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1297:
/* Line 1792 of yacc.c  */
#line 9387 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1298:
/* Line 1792 of yacc.c  */
#line 9391 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1299:
/* Line 1792 of yacc.c  */
#line 9395 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), (yyvsp[(3) - (6)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1300:
/* Line 1792 of yacc.c  */
#line 9400 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
    break;

  case 1301:
/* Line 1792 of yacc.c  */
#line 9404 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1302:
/* Line 1792 of yacc.c  */
#line 9423 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 0);
          }
    break;

  case 1303:
/* Line 1792 of yacc.c  */
#line 9427 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1304:
/* Line 1792 of yacc.c  */
#line 9431 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
    break;

  case 1305:
/* Line 1792 of yacc.c  */
#line 9435 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1306:
/* Line 1792 of yacc.c  */
#line 9440 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1307:
/* Line 1792 of yacc.c  */
#line 9445 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1308:
/* Line 1792 of yacc.c  */
#line 9449 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1309:
/* Line 1792 of yacc.c  */
#line 9453 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1310:
/* Line 1792 of yacc.c  */
#line 9457 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 1311:
/* Line 1792 of yacc.c  */
#line 9462 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
          }
    break;

  case 1312:
/* Line 1792 of yacc.c  */
#line 9466 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 1);
          }
    break;

  case 1313:
/* Line 1792 of yacc.c  */
#line 9470 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1314:
/* Line 1792 of yacc.c  */
#line 9474 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1315:
/* Line 1792 of yacc.c  */
#line 9478 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1316:
/* Line 1792 of yacc.c  */
#line 9482 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1317:
/* Line 1792 of yacc.c  */
#line 9486 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1318:
/* Line 1792 of yacc.c  */
#line 9490 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1319:
/* Line 1792 of yacc.c  */
#line 9495 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(7) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(3) - (8)].interval_time_st), 0);
          }
    break;

  case 1320:
/* Line 1792 of yacc.c  */
#line 9499 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
          }
    break;

  case 1321:
/* Line 1792 of yacc.c  */
#line 9503 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
    break;

  case 1322:
/* Line 1792 of yacc.c  */
#line 9507 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1323:
/* Line 1792 of yacc.c  */
#line 9511 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1324:
/* Line 1792 of yacc.c  */
#line 9523 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1325:
/* Line 1792 of yacc.c  */
#line 9527 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1326:
/* Line 1792 of yacc.c  */
#line 9531 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1327:
/* Line 1792 of yacc.c  */
#line 9535 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1328:
/* Line 1792 of yacc.c  */
#line 9539 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
    break;

  case 1329:
/* Line 1792 of yacc.c  */
#line 9543 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1330:
/* Line 1792 of yacc.c  */
#line 9547 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1331:
/* Line 1792 of yacc.c  */
#line 9551 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
          }
    break;

  case 1332:
/* Line 1792 of yacc.c  */
#line 9555 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1333:
/* Line 1792 of yacc.c  */
#line 9559 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1334:
/* Line 1792 of yacc.c  */
#line 9563 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_password((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1335:
/* Line 1792 of yacc.c  */
#line 9567 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1336:
/* Line 1792 of yacc.c  */
#line 9571 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1337:
/* Line 1792 of yacc.c  */
#line 9575 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1338:
/* Line 1792 of yacc.c  */
#line 9579 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1339:
/* Line 1792 of yacc.c  */
#line 9583 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
    break;

  case 1340:
/* Line 1792 of yacc.c  */
#line 9587 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
          }
    break;

  case 1341:
/* Line 1792 of yacc.c  */
#line 9591 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (4)].item), NULL);
          }
    break;

  case 1342:
/* Line 1792 of yacc.c  */
#line 9595 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1343:
/* Line 1792 of yacc.c  */
#line 9599 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (4)].item), 0, 0, 0);
          }
    break;

  case 1344:
/* Line 1792 of yacc.c  */
#line 9603 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (7)].item), 0, (yyvsp[(6) - (7)].ulong_num), 0);
          }
    break;

  case 1345:
/* Line 1792 of yacc.c  */
#line 9607 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (7)].item), 0, (yyvsp[(6) - (7)].ulong_num), 0, true);
          }
    break;

  case 1346:
/* Line 1792 of yacc.c  */
#line 9611 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
          }
    break;

  case 1348:
/* Line 1792 of yacc.c  */
#line 9619 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
    break;

  case 1349:
/* Line 1792 of yacc.c  */
#line 9625 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
    break;

  case 1350:
/* Line 1792 of yacc.c  */
#line 9631 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
    break;

  case 1351:
/* Line 1792 of yacc.c  */
#line 9637 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
    break;

  case 1352:
/* Line 1792 of yacc.c  */
#line 9643 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
    break;

  case 1353:
/* Line 1792 of yacc.c  */
#line 9649 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1354:
/* Line 1792 of yacc.c  */
#line 9653 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
    break;

  case 1355:
/* Line 1792 of yacc.c  */
#line 9671 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1356:
/* Line 1792 of yacc.c  */
#line 9675 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), (yyvsp[(5) - (6)].item_list2));
          }
    break;

  case 1357:
/* Line 1792 of yacc.c  */
#line 9682 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1358:
/* Line 1792 of yacc.c  */
#line 9684 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                MYSQLerror(NULL,thd,"syntax error");
                            });
          }
    break;

  case 1359:
/* Line 1792 of yacc.c  */
#line 9696 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1360:
/* Line 1792 of yacc.c  */
#line 9697 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1361:
/* Line 1792 of yacc.c  */
#line 9701 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1362:
/* Line 1792 of yacc.c  */
#line 9702 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1363:
/* Line 1792 of yacc.c  */
#line 9706 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1364:
/* Line 1792 of yacc.c  */
#line 9707 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1365:
/* Line 1792 of yacc.c  */
#line 9712 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1366:
/* Line 1792 of yacc.c  */
#line 9718 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1367:
/* Line 1792 of yacc.c  */
#line 9727 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].lex_str), (yylsp[(1) - (2)]).cpp);
          }
    break;

  case 1370:
/* Line 1792 of yacc.c  */
#line 9739 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1371:
/* Line 1792 of yacc.c  */
#line 9743 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1372:
/* Line 1792 of yacc.c  */
#line 9747 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1373:
/* Line 1792 of yacc.c  */
#line 9751 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1374:
/* Line 1792 of yacc.c  */
#line 9755 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_json_array((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1375:
/* Line 1792 of yacc.c  */
#line 9759 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_json_object((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1376:
/* Line 1792 of yacc.c  */
#line 9763 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1377:
/* Line 1792 of yacc.c  */
#line 9767 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc));
          }
    break;

  case 1378:
/* Line 1792 of yacc.c  */
#line 9771 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1379:
/* Line 1792 of yacc.c  */
#line 9775 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[(4) - (5)].item_list2));
          }
    break;

  case 1380:
/* Line 1792 of yacc.c  */
#line 9779 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1381:
/* Line 1792 of yacc.c  */
#line 9788 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1382:
/* Line 1792 of yacc.c  */
#line 9792 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1383:
/* Line 1792 of yacc.c  */
#line 9796 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1384:
/* Line 1792 of yacc.c  */
#line 9800 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1385:
/* Line 1792 of yacc.c  */
#line 9804 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1386:
/* Line 1792 of yacc.c  */
#line 9808 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1387:
/* Line 1792 of yacc.c  */
#line 9812 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1388:
/* Line 1792 of yacc.c  */
#line 9816 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1389:
/* Line 1792 of yacc.c  */
#line 9820 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1390:
/* Line 1792 of yacc.c  */
#line 9827 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[(3) - (7)].num), (yyvsp[(4) - (7)].item_list2), (yyvsp[(5) - (7)].order_list), (yyvsp[(6) - (7)].string));
          }
    break;

  case 1391:
/* Line 1792 of yacc.c  */
#line 9834 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1392:
/* Line 1792 of yacc.c  */
#line 9840 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1393:
/* Line 1792 of yacc.c  */
#line 9845 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1394:
/* Line 1792 of yacc.c  */
#line 9849 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1395:
/* Line 1792 of yacc.c  */
#line 9853 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yylsp[(3) - (4)]), (yyvsp[(4) - (4)].lex_str));
          }
    break;

  case 1396:
/* Line 1792 of yacc.c  */
#line 9859 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1397:
/* Line 1792 of yacc.c  */
#line 9860 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1398:
/* Line 1792 of yacc.c  */
#line 9865 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1399:
/* Line 1792 of yacc.c  */
#line 9870 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1400:
/* Line 1792 of yacc.c  */
#line 9874 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= NULL; }
    break;

  case 1401:
/* Line 1792 of yacc.c  */
#line 9875 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= (yyvsp[(3) - (3)].order_list); }
    break;

  case 1402:
/* Line 1792 of yacc.c  */
#line 9880 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1403:
/* Line 1792 of yacc.c  */
#line 9885 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1404:
/* Line 1792 of yacc.c  */
#line 9895 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1405:
/* Line 1792 of yacc.c  */
#line 9902 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1406:
/* Line 1792 of yacc.c  */
#line 9909 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[(2) - (3)].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[(3) - (3)].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[(3) - (3)].charset_with_opt_binary).charset ? (yyvsp[(3) - (3)].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[(3) - (3)].charset_with_opt_binary).charset;
          }
    break;

  case 1407:
/* Line 1792 of yacc.c  */
#line 9928 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1408:
/* Line 1792 of yacc.c  */
#line 9935 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1409:
/* Line 1792 of yacc.c  */
#line 9942 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1410:
/* Line 1792 of yacc.c  */
#line 9949 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1411:
/* Line 1792 of yacc.c  */
#line 9956 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1412:
/* Line 1792 of yacc.c  */
#line 9963 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1413:
/* Line 1792 of yacc.c  */
#line 9970 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1414:
/* Line 1792 of yacc.c  */
#line 9977 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1415:
/* Line 1792 of yacc.c  */
#line 9984 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].precision).length;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].precision).dec;
          }
    break;

  case 1416:
/* Line 1792 of yacc.c  */
#line 9991 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1417:
/* Line 1792 of yacc.c  */
#line 10000 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1419:
/* Line 1792 of yacc.c  */
#line 10006 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1420:
/* Line 1792 of yacc.c  */
#line 10012 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1421:
/* Line 1792 of yacc.c  */
#line 10020 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1422:
/* Line 1792 of yacc.c  */
#line 10021 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1423:
/* Line 1792 of yacc.c  */
#line 10026 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1424:
/* Line 1792 of yacc.c  */
#line 10032 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1425:
/* Line 1792 of yacc.c  */
#line 10040 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1426:
/* Line 1792 of yacc.c  */
#line 10041 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1427:
/* Line 1792 of yacc.c  */
#line 10045 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1428:
/* Line 1792 of yacc.c  */
#line 10046 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1429:
/* Line 1792 of yacc.c  */
#line 10051 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1430:
/* Line 1792 of yacc.c  */
#line 10059 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1431:
/* Line 1792 of yacc.c  */
#line 10067 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].table_reference); }
    break;

  case 1432:
/* Line 1792 of yacc.c  */
#line 10068 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].join_table); }
    break;

  case 1433:
/* Line 1792 of yacc.c  */
#line 10069 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(3) - (4)].table_reference); }
    break;

  case 1434:
/* Line 1792 of yacc.c  */
#line 10080 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].table_reference); }
    break;

  case 1435:
/* Line 1792 of yacc.c  */
#line 10081 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].join_table); }
    break;

  case 1436:
/* Line 1792 of yacc.c  */
#line 10163 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[(1) - (5)].table_reference), (yylsp[(2) - (5)]), (yyvsp[(2) - (5)].join_type), (yyvsp[(3) - (5)].table_reference), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1437:
/* Line 1792 of yacc.c  */
#line 10168 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (7)].table_reference), (yylsp[(2) - (7)]), (yyvsp[(2) - (7)].join_type), (yyvsp[(3) - (7)].table_reference), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1438:
/* Line 1792 of yacc.c  */
#line 10172 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[(1) - (5)].table_reference), (yylsp[(2) - (5)]), (yyvsp[(2) - (5)].join_type), (yyvsp[(3) - (5)].table_reference), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1439:
/* Line 1792 of yacc.c  */
#line 10176 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (7)].table_reference), (yylsp[(2) - (7)]), (yyvsp[(2) - (7)].join_type), (yyvsp[(3) - (7)].table_reference), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1440:
/* Line 1792 of yacc.c  */
#line 10181 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[(1) - (3)].table_reference), (yylsp[(2) - (3)]), (yyvsp[(2) - (3)].join_type), NULL);

            if ((yyvsp[(3) - (3)].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[(3) - (3)].table_reference)->add_cross_join(this_cross_join);
          }
    break;

  case 1441:
/* Line 1792 of yacc.c  */
#line 10190 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (3)].table_reference), (yylsp[(2) - (3)]), (yyvsp[(2) - (3)].join_type), (yyvsp[(3) - (3)].table_reference));
          }
    break;

  case 1442:
/* Line 1792 of yacc.c  */
#line 10196 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_INNER; }
    break;

  case 1443:
/* Line 1792 of yacc.c  */
#line 10197 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
    break;

  case 1444:
/* Line 1792 of yacc.c  */
#line 10198 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
    break;

  case 1445:
/* Line 1792 of yacc.c  */
#line 10202 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1446:
/* Line 1792 of yacc.c  */
#line 10203 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1447:
/* Line 1792 of yacc.c  */
#line 10204 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1448:
/* Line 1792 of yacc.c  */
#line 10205 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
    break;

  case 1449:
/* Line 1792 of yacc.c  */
#line 10208 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_LEFT; }
    break;

  case 1450:
/* Line 1792 of yacc.c  */
#line 10209 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_RIGHT; }
    break;

  case 1455:
/* Line 1792 of yacc.c  */
#line 10227 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.string_list)= NULL; }
    break;

  case 1457:
/* Line 1792 of yacc.c  */
#line 10233 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (4)].string_list);
          }
    break;

  case 1460:
/* Line 1792 of yacc.c  */
#line 10263 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference) = (yyvsp[(1) - (1)].derived_table); }
    break;

  case 1461:
/* Line 1792 of yacc.c  */
#line 10265 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[(1) - (1)].join_table)); }
    break;

  case 1462:
/* Line 1792 of yacc.c  */
#line 10267 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[(1) - (1)].table_reference_list)); }
    break;

  case 1463:
/* Line 1792 of yacc.c  */
#line 10271 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (3)].table_reference_list); }
    break;

  case 1464:
/* Line 1792 of yacc.c  */
#line 10273 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list)= (yyvsp[(2) - (5)].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[(4) - (5)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1465:
/* Line 1792 of yacc.c  */
#line 10281 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(2) - (3)].table_reference); }
    break;

  case 1466:
/* Line 1792 of yacc.c  */
#line 10282 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(2) - (3)].table_reference); }
    break;

  case 1467:
/* Line 1792 of yacc.c  */
#line 10287 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[(1) - (4)].table), (yyvsp[(2) - (4)].string_list), (yyvsp[(3) - (4)].lex_str_ptr), (yyvsp[(4) - (4)].key_usage_list));
          }
    break;

  case 1468:
/* Line 1792 of yacc.c  */
#line 10293 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.join_table)= (yyvsp[(2) - (3)].join_table); }
    break;

  case 1469:
/* Line 1792 of yacc.c  */
#line 10294 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.join_table)= (yyvsp[(2) - (3)].join_table); }
    break;

  case 1470:
/* Line 1792 of yacc.c  */
#line 10299 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[(2) - (3)].lex_str_ptr) == NULL)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table((yyvsp[(1) - (3)].subquery), (yyvsp[(2) - (3)].lex_str_ptr), &(yyvsp[(3) - (3)].simple_ident_list));
          }
    break;

  case 1471:
/* Line 1792 of yacc.c  */
#line 10315 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
    break;

  case 1472:
/* Line 1792 of yacc.c  */
#line 10318 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1473:
/* Line 1792 of yacc.c  */
#line 10319 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1474:
/* Line 1792 of yacc.c  */
#line 10320 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1475:
/* Line 1792 of yacc.c  */
#line 10324 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1476:
/* Line 1792 of yacc.c  */
#line 10325 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1477:
/* Line 1792 of yacc.c  */
#line 10331 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), (yyvsp[(1) - (6)].index_hint), (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1478:
/* Line 1792 of yacc.c  */
#line 10337 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), INDEX_HINT_USE, (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1480:
/* Line 1792 of yacc.c  */
#line 10346 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].key_usage_list)->concat((yyvsp[(1) - (2)].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[(2) - (2)].key_usage_list);
          }
    break;

  case 1481:
/* Line 1792 of yacc.c  */
#line 10353 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1484:
/* Line 1792 of yacc.c  */
#line 10363 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
    break;

  case 1486:
/* Line 1792 of yacc.c  */
#line 10374 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1487:
/* Line 1792 of yacc.c  */
#line 10380 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1488:
/* Line 1792 of yacc.c  */
#line 10389 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[(1) - (1)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1489:
/* Line 1792 of yacc.c  */
#line 10395 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[(3) - (3)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1491:
/* Line 1792 of yacc.c  */
#line 10407 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[(1) - (1)].lex_str).str),
                                               (yyvsp[(1) - (1)].lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
    break;

  case 1492:
/* Line 1792 of yacc.c  */
#line 10416 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[(3) - (3)].lex_str).str),
                                               (yyvsp[(3) - (3)].lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[(1) - (3)].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1493:
/* Line 1792 of yacc.c  */
#line 10427 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1494:
/* Line 1792 of yacc.c  */
#line 10428 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1495:
/* Line 1792 of yacc.c  */
#line 10429 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1496:
/* Line 1792 of yacc.c  */
#line 10430 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1497:
/* Line 1792 of yacc.c  */
#line 10431 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1498:
/* Line 1792 of yacc.c  */
#line 10432 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1499:
/* Line 1792 of yacc.c  */
#line 10433 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1500:
/* Line 1792 of yacc.c  */
#line 10434 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1501:
/* Line 1792 of yacc.c  */
#line 10435 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1502:
/* Line 1792 of yacc.c  */
#line 10436 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1503:
/* Line 1792 of yacc.c  */
#line 10437 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1504:
/* Line 1792 of yacc.c  */
#line 10438 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1505:
/* Line 1792 of yacc.c  */
#line 10442 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1506:
/* Line 1792 of yacc.c  */
#line 10443 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1507:
/* Line 1792 of yacc.c  */
#line 10444 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1508:
/* Line 1792 of yacc.c  */
#line 10445 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1509:
/* Line 1792 of yacc.c  */
#line 10446 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1510:
/* Line 1792 of yacc.c  */
#line 10447 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1511:
/* Line 1792 of yacc.c  */
#line 10448 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1512:
/* Line 1792 of yacc.c  */
#line 10449 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1513:
/* Line 1792 of yacc.c  */
#line 10450 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1514:
/* Line 1792 of yacc.c  */
#line 10454 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1515:
/* Line 1792 of yacc.c  */
#line 10455 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1516:
/* Line 1792 of yacc.c  */
#line 10456 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1517:
/* Line 1792 of yacc.c  */
#line 10457 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1521:
/* Line 1792 of yacc.c  */
#line 10467 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1522:
/* Line 1792 of yacc.c  */
#line 10469 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1525:
/* Line 1792 of yacc.c  */
#line 10483 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].item) != NULL)
              (yyval.item)= new PTI_context<CTX_WHERE>((yyloc), (yyvsp[(1) - (1)].item));
            else
              (yyval.item)= NULL;
          }
    break;

  case 1526:
/* Line 1792 of yacc.c  */
#line 10491 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1527:
/* Line 1792 of yacc.c  */
#line 10493 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1528:
/* Line 1792 of yacc.c  */
#line 10499 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1529:
/* Line 1792 of yacc.c  */
#line 10501 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new PTI_context<CTX_HAVING>((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1530:
/* Line 1792 of yacc.c  */
#line 10508 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[(2) - (2)].with_list), false);
          }
    break;

  case 1531:
/* Line 1792 of yacc.c  */
#line 10512 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[(3) - (3)].with_list), true);
          }
    break;

  case 1532:
/* Line 1792 of yacc.c  */
#line 10519 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].with_list)->push_back((yyvsp[(3) - (3)].common_table_expr)))
              MYSQL_YYABORT;
          }
    break;

  case 1533:
/* Line 1792 of yacc.c  */
#line 10524 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[(1) - (1)].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
    break;

  case 1534:
/* Line 1792 of yacc.c  */
#line 10533 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[(4) - (4)]).raw.length();
            subq_text.str= YYTHD->strmake((yylsp[(4) - (4)]).raw.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[(4) - (4)]).raw.start - YYLIP->get_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[(1) - (4)].lex_str), subq_text, subq_text_offset,
                                             (yyvsp[(4) - (4)].subquery), &(yyvsp[(2) - (4)].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
    break;

  case 1535:
/* Line 1792 of yacc.c  */
#line 10549 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
    break;

  case 1536:
/* Line 1792 of yacc.c  */
#line 10558 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_ident_list)= (yyvsp[(2) - (3)].simple_ident_list);
          }
    break;

  case 1537:
/* Line 1792 of yacc.c  */
#line 10565 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[(1) - (1)].lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
    break;

  case 1538:
/* Line 1792 of yacc.c  */
#line 10571 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_ident_list)= (yyvsp[(1) - (3)].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[(3) - (3)].lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
    break;

  case 1539:
/* Line 1792 of yacc.c  */
#line 10579 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1540:
/* Line 1792 of yacc.c  */
#line 10580 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1541:
/* Line 1792 of yacc.c  */
#line 10588 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.group)= NULL; }
    break;

  case 1542:
/* Line 1792 of yacc.c  */
#line 10590 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[(3) - (4)].order_list), (yyvsp[(4) - (4)].olap_type));
          }
    break;

  case 1543:
/* Line 1792 of yacc.c  */
#line 10597 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1544:
/* Line 1792 of yacc.c  */
#line 10602 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1545:
/* Line 1792 of yacc.c  */
#line 10611 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
    break;

  case 1546:
/* Line 1792 of yacc.c  */
#line 10612 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= ROLLUP_TYPE; }
    break;

  case 1550:
/* Line 1792 of yacc.c  */
#line 10637 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (2)].item), &(yyvsp[(1) - (2)].item));

            THD *thd= YYTHD;
            ORDER *order= (ORDER *) thd->alloc(sizeof(ORDER));
            if (order == NULL)
              MYSQL_YYABORT;
            order->item_ptr= (yyvsp[(1) - (2)].item);
            order->direction= ((yyvsp[(2) - (2)].num) == ORDER_DESC) ? ORDER_DESC
                                                 : ORDER_ASC;
            order->is_explicit= ((yyvsp[(2) - (2)].num) != ORDER_NOT_RELEVANT);
            order->is_position= false;
            add_order_to_list(thd, order);
          }
    break;

  case 1551:
/* Line 1792 of yacc.c  */
#line 10658 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.order)= NULL; }
    break;

  case 1553:
/* Line 1792 of yacc.c  */
#line 10664 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[(3) - (3)].order_list));
          }
    break;

  case 1554:
/* Line 1792 of yacc.c  */
#line 10671 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1555:
/* Line 1792 of yacc.c  */
#line 10676 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1556:
/* Line 1792 of yacc.c  */
#line 10685 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= ORDER_NOT_RELEVANT; }
    break;

  case 1557:
/* Line 1792 of yacc.c  */
#line 10686 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= ORDER_ASC; }
    break;

  case 1558:
/* Line 1792 of yacc.c  */
#line 10687 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= ORDER_DESC; }
    break;

  case 1559:
/* Line 1792 of yacc.c  */
#line 10691 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.limit_clause)= NULL; }
    break;

  case 1561:
/* Line 1792 of yacc.c  */
#line 10697 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[(2) - (2)].limit_options));
          }
    break;

  case 1562:
/* Line 1792 of yacc.c  */
#line 10704 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (1)].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1563:
/* Line 1792 of yacc.c  */
#line 10710 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).is_offset_first= true;
          }
    break;

  case 1564:
/* Line 1792 of yacc.c  */
#line 10716 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1565:
/* Line 1792 of yacc.c  */
#line 10725 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), (yyvsp[(1) - (1)].lex_str), (yylsp[(1) - (1)]).raw);
          }
    break;

  case 1566:
/* Line 1792 of yacc.c  */
#line 10729 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[(1) - (1)].param_marker));
          }
    break;

  case 1567:
/* Line 1792 of yacc.c  */
#line 10733 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1568:
/* Line 1792 of yacc.c  */
#line 10737 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1569:
/* Line 1792 of yacc.c  */
#line 10741 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1570:
/* Line 1792 of yacc.c  */
#line 10747 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1571:
/* Line 1792 of yacc.c  */
#line 10748 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1572:
/* Line 1792 of yacc.c  */
#line 10752 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1573:
/* Line 1792 of yacc.c  */
#line 10753 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1574:
/* Line 1792 of yacc.c  */
#line 10754 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1575:
/* Line 1792 of yacc.c  */
#line 10755 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1576:
/* Line 1792 of yacc.c  */
#line 10756 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1577:
/* Line 1792 of yacc.c  */
#line 10757 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1578:
/* Line 1792 of yacc.c  */
#line 10761 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1579:
/* Line 1792 of yacc.c  */
#line 10762 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1580:
/* Line 1792 of yacc.c  */
#line 10763 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1581:
/* Line 1792 of yacc.c  */
#line 10764 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1582:
/* Line 1792 of yacc.c  */
#line 10765 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1583:
/* Line 1792 of yacc.c  */
#line 10769 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1584:
/* Line 1792 of yacc.c  */
#line 10770 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1585:
/* Line 1792 of yacc.c  */
#line 10771 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1586:
/* Line 1792 of yacc.c  */
#line 10772 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1587:
/* Line 1792 of yacc.c  */
#line 10773 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1588:
/* Line 1792 of yacc.c  */
#line 10777 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1589:
/* Line 1792 of yacc.c  */
#line 10778 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1590:
/* Line 1792 of yacc.c  */
#line 10779 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1591:
/* Line 1792 of yacc.c  */
#line 10780 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1592:
/* Line 1792 of yacc.c  */
#line 10785 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { my_syntax_error(YYTHD, ER_THD(YYTHD, ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1595:
/* Line 1792 of yacc.c  */
#line 10795 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= (yyvsp[(1) - (3)].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(3) - (3)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1596:
/* Line 1792 of yacc.c  */
#line 10801 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(1) - (1)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1597:
/* Line 1792 of yacc.c  */
#line 10810 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1598:
/* Line 1792 of yacc.c  */
#line 10814 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1599:
/* Line 1792 of yacc.c  */
#line 10821 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= (yyvsp[(2) - (2)].into_destination);
          }
    break;

  case 1600:
/* Line 1792 of yacc.c  */
#line 10830 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[(2) - (5)].lex_str), (yyvsp[(3) - (5)].charset), (yyvsp[(4) - (5)].field_separators), (yyvsp[(5) - (5)].line_separators));
          }
    break;

  case 1601:
/* Line 1792 of yacc.c  */
#line 10834 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1602:
/* Line 1792 of yacc.c  */
#line 10837 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.into_destination)= (yyvsp[(1) - (1)].select_var_list); }
    break;

  case 1603:
/* Line 1792 of yacc.c  */
#line 10846 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_stmt)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_expression_body_primary(
                      NEW_PTN PT_query_specification((yyvsp[(2) - (3)].select_options), (yyvsp[(3) - (3)].item_list2)))));
          }
    break;

  case 1604:
/* Line 1792 of yacc.c  */
#line 10856 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1605:
/* Line 1792 of yacc.c  */
#line 10868 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (6)].is_not_empty);
            lex->drop_if_exists= (yyvsp[(4) - (6)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[(5) - (6)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            lex->drop_mode= (yyvsp[(6) - (6)].opt_restrict);
          }
    break;

  case 1606:
/* Line 1792 of yacc.c  */
#line 10880 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1607:
/* Line 1792 of yacc.c  */
#line 10881 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
    break;

  case 1608:
/* Line 1792 of yacc.c  */
#line 10897 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Parse_context pc(YYTHD, Select);
            if (YYTHD->is_error() || contextualize_nodes((yyvsp[(8) - (8)].index_options), &pc))
              MYSQL_YYABORT;
          }
    break;

  case 1609:
/* Line 1792 of yacc.c  */
#line 10903 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1610:
/* Line 1792 of yacc.c  */
#line 10910 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(6) - (6)].lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name(to_lex_cstring((yyvsp[(4) - (6)].lex_str)), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1611:
/* Line 1792 of yacc.c  */
#line 10933 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(4) - (4)].lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(to_lex_cstring(db), (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1612:
/* Line 1792 of yacc.c  */
#line 10965 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1613:
/* Line 1792 of yacc.c  */
#line 10977 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[(3) - (4)].num);
             lex->users_list= *(yyvsp[(4) - (4)].user_list);
          }
    break;

  case 1614:
/* Line 1792 of yacc.c  */
#line 10984 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (5)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[(4) - (5)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            lex->drop_mode= (yyvsp[(5) - (5)].opt_restrict);
          }
    break;

  case 1615:
/* Line 1792 of yacc.c  */
#line 10996 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1616:
/* Line 1792 of yacc.c  */
#line 11002 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
    break;

  case 1617:
/* Line 1792 of yacc.c  */
#line 11010 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1618:
/* Line 1792 of yacc.c  */
#line 11015 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1619:
/* Line 1792 of yacc.c  */
#line 11020 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[(4) - (4)].lex_str), (yyvsp[(3) - (4)].num));
          }
    break;

  case 1620:
/* Line 1792 of yacc.c  */
#line 11025 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_DROP_ROLE;
            PT_statement *tmp= NEW_PTN PT_drop_role((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].user_list));
            MAKE_CMD(tmp);
          }
    break;

  case 1621:
/* Line 1792 of yacc.c  */
#line 11034 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list)= NEW_PTN Trivial_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[(1) - (1)].table)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1622:
/* Line 1792 of yacc.c  */
#line 11040 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list)= (yyvsp[(1) - (3)].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[(3) - (3)].table)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1623:
/* Line 1792 of yacc.c  */
#line 11049 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1624:
/* Line 1792 of yacc.c  */
#line 11060 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[(1) - (1)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1625:
/* Line 1792 of yacc.c  */
#line 11066 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list)= (yyvsp[(1) - (3)].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[(3) - (3)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1626:
/* Line 1792 of yacc.c  */
#line 11074 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1627:
/* Line 1792 of yacc.c  */
#line 11075 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1628:
/* Line 1792 of yacc.c  */
#line 11079 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1629:
/* Line 1792 of yacc.c  */
#line 11080 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1636:
/* Line 1792 of yacc.c  */
#line 11109 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].column_row_value_list_pair).column_list, (yyvsp[(7) - (8)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1637:
/* Line 1792 of yacc.c  */
#line 11124 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(8) - (9)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(6) - (9)].string_list),
                                  (yyvsp[(8) - (9)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[(9) - (9)].column_value_list_pair).column_list, (yyvsp[(9) - (9)].column_value_list_pair).value_list);
          }
    break;

  case 1638:
/* Line 1792 of yacc.c  */
#line 11141 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].insert_query_expression).column_list, NULL,
                                  (yyvsp[(7) - (8)].insert_query_expression).insert_query_expression,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1639:
/* Line 1792 of yacc.c  */
#line 11156 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].column_row_value_list_pair).column_list, (yyvsp[(6) - (6)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1640:
/* Line 1792 of yacc.c  */
#line 11169 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(7) - (7)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].lock_type), false, (yyvsp[(4) - (7)].table), (yyvsp[(5) - (7)].string_list),
                                  (yyvsp[(7) - (7)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1641:
/* Line 1792 of yacc.c  */
#line 11184 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].insert_query_expression).column_list, NULL,
                                  (yyvsp[(6) - (6)].insert_query_expression).insert_query_expression,
                                  NULL, NULL);
          }
    break;

  case 1642:
/* Line 1792 of yacc.c  */
#line 11193 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
    break;

  case 1643:
/* Line 1792 of yacc.c  */
#line 11194 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1644:
/* Line 1792 of yacc.c  */
#line 11196 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
    break;

  case 1645:
/* Line 1792 of yacc.c  */
#line 11204 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1646:
/* Line 1792 of yacc.c  */
#line 11208 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1647:
/* Line 1792 of yacc.c  */
#line 11210 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
    break;

  case 1650:
/* Line 1792 of yacc.c  */
#line 11227 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(1) - (1)].values_list);
          }
    break;

  case 1651:
/* Line 1792 of yacc.c  */
#line 11232 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(3) - (3)].values_list);
          }
    break;

  case 1652:
/* Line 1792 of yacc.c  */
#line 11237 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(4) - (4)].values_list);
          }
    break;

  case 1653:
/* Line 1792 of yacc.c  */
#line 11245 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(1) - (1)].query_expression);
          }
    break;

  case 1654:
/* Line 1792 of yacc.c  */
#line 11250 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(3) - (3)].query_expression);
          }
    break;

  case 1655:
/* Line 1792 of yacc.c  */
#line 11255 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(4) - (4)].query_expression);
          }
    break;

  case 1656:
/* Line 1792 of yacc.c  */
#line 11263 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1657:
/* Line 1792 of yacc.c  */
#line 11269 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1658:
/* Line 1792 of yacc.c  */
#line 11278 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= (yyvsp[(2) - (2)].values_list);
          }
    break;

  case 1663:
/* Line 1792 of yacc.c  */
#line 11295 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.values_list)->push_back(&(yyvsp[(3) - (3)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1664:
/* Line 1792 of yacc.c  */
#line 11300 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[(1) - (1)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1669:
/* Line 1792 of yacc.c  */
#line 11319 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1670:
/* Line 1792 of yacc.c  */
#line 11324 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1672:
/* Line 1792 of yacc.c  */
#line 11334 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1673:
/* Line 1792 of yacc.c  */
#line 11340 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1675:
/* Line 1792 of yacc.c  */
#line 11350 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
    break;

  case 1676:
/* Line 1792 of yacc.c  */
#line 11357 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
    break;

  case 1677:
/* Line 1792 of yacc.c  */
#line 11362 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(5) - (5)].column_value_list_pair);
          }
    break;

  case 1678:
/* Line 1792 of yacc.c  */
#line 11380 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_update((yyvsp[(1) - (10)].with_clause), (yyvsp[(2) - (10)].optimizer_hints), (yyvsp[(3) - (10)].lock_type), (yyvsp[(4) - (10)].is_not_empty), (yyvsp[(5) - (10)].table_reference_list), (yyvsp[(7) - (10)].column_value_list_pair).column_list, (yyvsp[(7) - (10)].column_value_list_pair).value_list,
                                  (yyvsp[(8) - (10)].item), (yyvsp[(9) - (10)].order), (yyvsp[(10) - (10)].item));
          }
    break;

  case 1679:
/* Line 1792 of yacc.c  */
#line 11387 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.with_clause)= NULL; }
    break;

  case 1680:
/* Line 1792 of yacc.c  */
#line 11388 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.with_clause)= (yyvsp[(1) - (1)].with_clause); }
    break;

  case 1681:
/* Line 1792 of yacc.c  */
#line 11393 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(1) - (3)].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[(3) - (3)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(3) - (3)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1682:
/* Line 1792 of yacc.c  */
#line 11400 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[(1) - (1)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(1) - (1)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1683:
/* Line 1792 of yacc.c  */
#line 11412 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_pair).column= (yyvsp[(1) - (3)].item);
            (yyval.column_value_pair).value= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1684:
/* Line 1792 of yacc.c  */
#line 11419 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1685:
/* Line 1792 of yacc.c  */
#line 11420 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1686:
/* Line 1792 of yacc.c  */
#line 11435 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (9)].with_clause), (yyvsp[(2) - (9)].optimizer_hints), (yyvsp[(3) - (9)].num), (yyvsp[(5) - (9)].table), (yyvsp[(6) - (9)].string_list), (yyvsp[(7) - (9)].item), (yyvsp[(8) - (9)].order), (yyvsp[(9) - (9)].item));
          }
    break;

  case 1687:
/* Line 1792 of yacc.c  */
#line 11445 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (7)].with_clause), (yyvsp[(2) - (7)].optimizer_hints), (yyvsp[(3) - (7)].num), (yyvsp[(4) - (7)].table_ident_list), (yyvsp[(6) - (7)].table_reference_list), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1688:
/* Line 1792 of yacc.c  */
#line 11456 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (8)].with_clause), (yyvsp[(2) - (8)].optimizer_hints), (yyvsp[(3) - (8)].num), (yyvsp[(5) - (8)].table_ident_list), (yyvsp[(7) - (8)].table_reference_list), (yyvsp[(8) - (8)].item));
          }
    break;

  case 1691:
/* Line 1792 of yacc.c  */
#line 11467 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1692:
/* Line 1792 of yacc.c  */
#line 11468 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].opt_delete_option) | (yyvsp[(2) - (2)].num); }
    break;

  case 1693:
/* Line 1792 of yacc.c  */
#line 11472 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_QUICK; }
    break;

  case 1694:
/* Line 1792 of yacc.c  */
#line 11473 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
    break;

  case 1695:
/* Line 1792 of yacc.c  */
#line 11474 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
    break;

  case 1696:
/* Line 1792 of yacc.c  */
#line 11479 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1697:
/* Line 1792 of yacc.c  */
#line 11487 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1704:
/* Line 1792 of yacc.c  */
#line 11512 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1705:
/* Line 1792 of yacc.c  */
#line 11516 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1706:
/* Line 1792 of yacc.c  */
#line 11520 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1707:
/* Line 1792 of yacc.c  */
#line 11524 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1708:
/* Line 1792 of yacc.c  */
#line 11528 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1709:
/* Line 1792 of yacc.c  */
#line 11532 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1710:
/* Line 1792 of yacc.c  */
#line 11536 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1711:
/* Line 1792 of yacc.c  */
#line 11540 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1712:
/* Line 1792 of yacc.c  */
#line 11544 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1713:
/* Line 1792 of yacc.c  */
#line 11551 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
      Lex->query_id= 0;
    }
    break;

  case 1714:
/* Line 1792 of yacc.c  */
#line 11555 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
      int error;
      Lex->query_id= static_cast<my_thread_id>(my_strtoll10((yyvsp[(3) - (3)].lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
    break;

  case 1715:
/* Line 1792 of yacc.c  */
#line 11567 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1717:
/* Line 1792 of yacc.c  */
#line 11578 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
             Lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (Lex->set_wild((yyvsp[(2) - (2)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_databases_query(
                       (yyloc), YYTHD, Lex->wild, (yyvsp[(2) - (2)].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1718:
/* Line 1792 of yacc.c  */
#line 11587 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->verbose= (yyvsp[(1) - (4)].is_not_empty);
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (Lex->set_wild((yyvsp[(4) - (4)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         (yyvsp[(4) - (4)].wild_or_where).where, false) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1719:
/* Line 1792 of yacc.c  */
#line 11599 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->verbose= (yyvsp[(1) - (4)].is_not_empty);
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (Lex->set_wild((yyvsp[(4) - (4)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_triggers_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[(4) - (4)].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1720:
/* Line 1792 of yacc.c  */
#line 11611 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[(2) - (3)].simple_string);
             if (Lex->set_wild((yyvsp[(3) - (3)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_events_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1721:
/* Line 1792 of yacc.c  */
#line 11622 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (Lex->set_wild((yyvsp[(4) - (4)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         (yyvsp[(4) - (4)].wild_or_where).where, true) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1722:
/* Line 1792 of yacc.c  */
#line 11633 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1723:
/* Line 1792 of yacc.c  */
#line 11641 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1724:
/* Line 1792 of yacc.c  */
#line 11648 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            const bool is_temp_table=
              Lex->create_info->options & HA_LEX_CREATE_TMP_TABLE;
            if (resolve_engine(YYTHD, (yyvsp[(2) - (3)].lex_str), is_temp_table, true,
                               &Lex->create_info->db_type))
              MYSQL_YYABORT;
          }
    break;

  case 1725:
/* Line 1792 of yacc.c  */
#line 11656 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->create_info->db_type= NULL; }
    break;

  case 1726:
/* Line 1792 of yacc.c  */
#line 11658 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));

            Item *where= (yyvsp[(6) - (6)].wild_or_where).where;
            LEX_STRING wild= (yyvsp[(6) - (6)].wild_or_where).wild;
            DBUG_ASSERT((wild.str == nullptr) || (where == nullptr));

            auto *p= where ? NEW_PTN PT_show_fields((yyloc), (yyvsp[(1) - (6)].is_not_empty), (yyvsp[(4) - (6)].table), where)
                           : NEW_PTN PT_show_fields((yyloc), (yyvsp[(1) - (6)].is_not_empty), (yyvsp[(4) - (6)].table), wild);

            lex->sql_command= SQLCOM_SHOW_FIELDS;
            MAKE_CMD(p);
          }
    break;

  case 1727:
/* Line 1792 of yacc.c  */
#line 11676 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1728:
/* Line 1792 of yacc.c  */
#line 11680 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1729:
/* Line 1792 of yacc.c  */
#line 11684 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1730:
/* Line 1792 of yacc.c  */
#line 11689 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (6)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (6)].limit_clause));
          }
    break;

  case 1731:
/* Line 1792 of yacc.c  */
#line 11694 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1732:
/* Line 1792 of yacc.c  */
#line 11699 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (7)].limit_clause));
          }
    break;

  case 1733:
/* Line 1792 of yacc.c  */
#line 11708 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));

            auto *p= NEW_PTN PT_show_keys((yyloc), (yyvsp[(3) - (5)].table), (yyvsp[(5) - (5)].item));

            lex->sql_command= SQLCOM_SHOW_KEYS;
            MAKE_CMD(p);
          }
    break;

  case 1734:
/* Line 1792 of yacc.c  */
#line 11721 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1735:
/* Line 1792 of yacc.c  */
#line 11728 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "warning_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
    break;

  case 1736:
/* Line 1792 of yacc.c  */
#line 11736 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "error_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
    break;

  case 1737:
/* Line 1792 of yacc.c  */
#line 11744 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
    break;

  case 1738:
/* Line 1792 of yacc.c  */
#line 11752 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
    break;

  case 1739:
/* Line 1792 of yacc.c  */
#line 11760 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
    break;

  case 1740:
/* Line 1792 of yacc.c  */
#line 11768 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(4) - (4)].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1741:
/* Line 1792 of yacc.c  */
#line 11778 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_STATUS;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[(3) - (3)].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
            {
              if (build_show_session_status(
                    (yyloc), thd, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_status(
                    (yyloc), thd, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1742:
/* Line 1792 of yacc.c  */
#line 11800 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;
            Lex->verbose= (yyvsp[(1) - (2)].is_not_empty);
          }
    break;

  case 1743:
/* Line 1792 of yacc.c  */
#line 11805 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_VARIABLES;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[(3) - (3)].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
            {
              if (build_show_session_variables(
                    (yyloc), thd, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_variables(
                    (yyloc), thd, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1744:
/* Line 1792 of yacc.c  */
#line 11827 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (Lex->set_wild((yyvsp[(2) - (2)].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_character_set_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[(2) - (2)].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 1745:
/* Line 1792 of yacc.c  */
#line 11836 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (Lex->set_wild((yyvsp[(2) - (2)].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_collation_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[(2) - (2)].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 1746:
/* Line 1792 of yacc.c  */
#line 11845 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
            /* Show all available grants in the server */
          }
    break;

  case 1747:
/* Line 1792 of yacc.c  */
#line 11851 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;			
            PT_statement *tmp= NEW_PTN PT_show_privileges(0, 0);
            MAKE_CMD(tmp);
          }
    break;

  case 1748:
/* Line 1792 of yacc.c  */
#line 11857 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            PT_statement *tmp= NEW_PTN PT_show_privileges((yyvsp[(3) - (3)].lex_user), 0);
            MAKE_CMD(tmp);
          }
    break;

  case 1749:
/* Line 1792 of yacc.c  */
#line 11864 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            PT_statement *tmp= NEW_PTN PT_show_privileges((yyvsp[(3) - (5)].lex_user), (yyvsp[(5) - (5)].user_list));
            MAKE_CMD(tmp);
          }
    break;

  case 1750:
/* Line 1792 of yacc.c  */
#line 11870 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info->options= (yyvsp[(3) - (4)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1751:
/* Line 1792 of yacc.c  */
#line 11876 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1752:
/* Line 1792 of yacc.c  */
#line 11885 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1753:
/* Line 1792 of yacc.c  */
#line 11893 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1754:
/* Line 1792 of yacc.c  */
#line 11897 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1755:
/* Line 1792 of yacc.c  */
#line 11901 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1756:
/* Line 1792 of yacc.c  */
#line 11908 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1757:
/* Line 1792 of yacc.c  */
#line 11915 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1758:
/* Line 1792 of yacc.c  */
#line 11921 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
             if (Lex->set_wild((yyvsp[(3) - (3)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 1759:
/* Line 1792 of yacc.c  */
#line 11931 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
             if (Lex->set_wild((yyvsp[(3) - (3)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 1760:
/* Line 1792 of yacc.c  */
#line 11941 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1761:
/* Line 1792 of yacc.c  */
#line 11946 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1762:
/* Line 1792 of yacc.c  */
#line 11951 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1763:
/* Line 1792 of yacc.c  */
#line 11956 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
          }
    break;

  case 1764:
/* Line 1792 of yacc.c  */
#line 11965 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1765:
/* Line 1792 of yacc.c  */
#line 11967 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1766:
/* Line 1792 of yacc.c  */
#line 11969 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1771:
/* Line 1792 of yacc.c  */
#line 11983 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1772:
/* Line 1792 of yacc.c  */
#line 11984 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1773:
/* Line 1792 of yacc.c  */
#line 11988 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= 0; }
    break;

  case 1774:
/* Line 1792 of yacc.c  */
#line 11989 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= 1; }
    break;

  case 1777:
/* Line 1792 of yacc.c  */
#line 11998 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1778:
/* Line 1792 of yacc.c  */
#line 11999 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1779:
/* Line 1792 of yacc.c  */
#line 12003 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1780:
/* Line 1792 of yacc.c  */
#line 12004 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1782:
/* Line 1792 of yacc.c  */
#line 12010 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (Lex->set_wild((yyvsp[(2) - (2)].lex_str)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1783:
/* Line 1792 of yacc.c  */
#line 12015 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Select->set_where_cond((yyvsp[(2) - (2)].item));
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1784:
/* Line 1792 of yacc.c  */
#line 12025 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.wild_or_where)= { NULL_STR, nullptr }; }
    break;

  case 1785:
/* Line 1792 of yacc.c  */
#line 12026 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.wild_or_where)= { (yyvsp[(2) - (2)].lex_str), nullptr}; }
    break;

  case 1786:
/* Line 1792 of yacc.c  */
#line 12027 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.wild_or_where)= { NULL_STR, (yyvsp[(2) - (2)].item)}; }
    break;

  case 1787:
/* Line 1792 of yacc.c  */
#line 12033 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
            lex->select_lex->db= NULL;

            auto *p= NEW_PTN PT_show_fields((yyloc), false, (yyvsp[(2) - (3)].table));

            lex->sql_command= SQLCOM_SHOW_FIELDS;
            MAKE_CMD(p);

            // WL#6599 opt_describe_column is handled during prepare stage in
            // prepare_schema_dd_view instead of execution stage
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1788:
/* Line 1792 of yacc.c  */
#line 12048 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->describe|= DESCRIBE_NORMAL;
          }
    break;

  case 1790:
/* Line 1792 of yacc.c  */
#line 12055 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].select_stmt)); }
    break;

  case 1791:
/* Line 1792 of yacc.c  */
#line 12056 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1792:
/* Line 1792 of yacc.c  */
#line 12057 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1793:
/* Line 1792 of yacc.c  */
#line 12058 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1794:
/* Line 1792 of yacc.c  */
#line 12059 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1795:
/* Line 1792 of yacc.c  */
#line 12061 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_EXPLAIN_OTHER;
            if (Lex->sphead)
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "non-standalone EXPLAIN FOR CONNECTION");
              MYSQL_YYABORT;
            }
            Lex->query_id= (my_thread_id)((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 1798:
/* Line 1792 of yacc.c  */
#line 12080 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1799:
/* Line 1792 of yacc.c  */
#line 12085 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "EXTENDED");
          }
    break;

  case 1800:
/* Line 1792 of yacc.c  */
#line 12091 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "PARTITIONS");
          }
    break;

  case 1801:
/* Line 1792 of yacc.c  */
#line 12097 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1802:
/* Line 1792 of yacc.c  */
#line 12117 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1803:
/* Line 1792 of yacc.c  */
#line 12118 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1804:
/* Line 1792 of yacc.c  */
#line 12120 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= NEW_PTN String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                      (yyvsp[(1) - (1)].lex_str).length,
                                      system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1805:
/* Line 1792 of yacc.c  */
#line 12134 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1806:
/* Line 1792 of yacc.c  */
#line 12141 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1807:
/* Line 1792 of yacc.c  */
#line 12146 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[(2) - (2)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1808:
/* Line 1792 of yacc.c  */
#line 12158 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1810:
/* Line 1792 of yacc.c  */
#line 12163 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1811:
/* Line 1792 of yacc.c  */
#line 12165 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1812:
/* Line 1792 of yacc.c  */
#line 12177 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_NO_TABLES_USED));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1813:
/* Line 1792 of yacc.c  */
#line 12185 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1815:
/* Line 1792 of yacc.c  */
#line 12201 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1816:
/* Line 1792 of yacc.c  */
#line 12206 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1817:
/* Line 1792 of yacc.c  */
#line 12208 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1818:
/* Line 1792 of yacc.c  */
#line 12210 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1819:
/* Line 1792 of yacc.c  */
#line 12212 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1820:
/* Line 1792 of yacc.c  */
#line 12214 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1821:
/* Line 1792 of yacc.c  */
#line 12216 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1822:
/* Line 1792 of yacc.c  */
#line 12218 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1823:
/* Line 1792 of yacc.c  */
#line 12220 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1824:
/* Line 1792 of yacc.c  */
#line 12222 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1825:
/* Line 1792 of yacc.c  */
#line 12224 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1826:
/* Line 1792 of yacc.c  */
#line 12226 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1827:
/* Line 1792 of yacc.c  */
#line 12228 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1828:
/* Line 1792 of yacc.c  */
#line 12230 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1829:
/* Line 1792 of yacc.c  */
#line 12232 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
    break;

  case 1830:
/* Line 1792 of yacc.c  */
#line 12236 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.table_list)= NULL; }
    break;

  case 1832:
/* Line 1792 of yacc.c  */
#line 12242 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1833:
/* Line 1792 of yacc.c  */
#line 12247 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1834:
/* Line 1792 of yacc.c  */
#line 12249 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
    break;

  case 1837:
/* Line 1792 of yacc.c  */
#line 12264 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
    break;

  case 1838:
/* Line 1792 of yacc.c  */
#line 12270 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[(1) - (2)].num);
            lex->name= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1839:
/* Line 1792 of yacc.c  */
#line 12278 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1841:
/* Line 1792 of yacc.c  */
#line 12280 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1843:
/* Line 1792 of yacc.c  */
#line 12282 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1844:
/* Line 1792 of yacc.c  */
#line 12286 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1845:
/* Line 1792 of yacc.c  */
#line 12287 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1846:
/* Line 1792 of yacc.c  */
#line 12291 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1847:
/* Line 1792 of yacc.c  */
#line 12293 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulong_num) == 0 || (yyvsp[(2) - (2)].ulong_num) > MAX_LOG_UNIQUE_FN_EXT)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[(2) - (2)].ulong_num), MAX_LOG_UNIQUE_FN_EXT);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 1848:
/* Line 1792 of yacc.c  */
#line 12307 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1849:
/* Line 1792 of yacc.c  */
#line 12313 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1851:
/* Line 1792 of yacc.c  */
#line 12322 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1852:
/* Line 1792 of yacc.c  */
#line 12326 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1853:
/* Line 1792 of yacc.c  */
#line 12340 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1854:
/* Line 1792 of yacc.c  */
#line 12351 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1855:
/* Line 1792 of yacc.c  */
#line 12352 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1856:
/* Line 1792 of yacc.c  */
#line 12353 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1857:
/* Line 1792 of yacc.c  */
#line 12360 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1858:
/* Line 1792 of yacc.c  */
#line 12371 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0),
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1859:
/* Line 1792 of yacc.c  */
#line 12384 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (12)].num);
            lex->duplicates= DUP_ERROR;
            lex->set_ignore(false);
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (12)].lex_str).str, 0, (yyvsp[(2) - (12)].filetype))))
              MYSQL_YYABORT;

            switch ((yyvsp[(8) - (12)].on_duplicate)) {
            case On_duplicate::ERROR:
              Lex->duplicates=DUP_ERROR;
              break;
            case On_duplicate::IGNORE_DUP:
              Lex->set_ignore(true);
              break;
            case On_duplicate::REPLACE_DUP:
              Lex->duplicates=DUP_REPLACE;
              break;
            }

            /* Fix lock for LOAD DATA CONCURRENT REPLACE */
            if (lex->duplicates == DUP_REPLACE && (yyvsp[(4) - (12)].lock_type) == TL_WRITE_CONCURRENT_INSERT)
              (yyvsp[(4) - (12)].lock_type)= TL_WRITE_DEFAULT;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(11) - (12)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (12)].lock_type), (yyvsp[(4) - (12)].lock_type) == TL_WRITE_LOW_PRIORITY ?
                                               MDL_SHARED_WRITE_LOW_PRIO :
                                               MDL_SHARED_WRITE, NULL, (yyvsp[(12) - (12)].string_list)))
              MYSQL_YYABORT;
            lex->load_field_list.empty();
            lex->load_update_list.empty();
            lex->load_value_list.empty();
            /* We can't give an error in the middle when using LOCAL files */
            if (lex->local_file && lex->duplicates == DUP_ERROR)
              lex->set_ignore(true);
          }
    break;

  case 1860:
/* Line 1792 of yacc.c  */
#line 12421 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(14) - (14)].charset); }
    break;

  case 1861:
/* Line 1792 of yacc.c  */
#line 12425 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->exchange->field.merge_field_separators((yyvsp[(17) - (21)].field_separators));
            Lex->exchange->line.merge_line_separators((yyvsp[(18) - (21)].line_separators));
          }
    break;

  case 1862:
/* Line 1792 of yacc.c  */
#line 12432 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1863:
/* Line 1792 of yacc.c  */
#line 12433 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1864:
/* Line 1792 of yacc.c  */
#line 12437 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1865:
/* Line 1792 of yacc.c  */
#line 12438 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1866:
/* Line 1792 of yacc.c  */
#line 12442 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1867:
/* Line 1792 of yacc.c  */
#line 12443 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
    break;

  case 1868:
/* Line 1792 of yacc.c  */
#line 12444 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1869:
/* Line 1792 of yacc.c  */
#line 12448 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
    break;

  case 1871:
/* Line 1792 of yacc.c  */
#line 12453 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
    break;

  case 1872:
/* Line 1792 of yacc.c  */
#line 12454 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
    break;

  case 1873:
/* Line 1792 of yacc.c  */
#line 12458 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators).cleanup(); }
    break;

  case 1874:
/* Line 1792 of yacc.c  */
#line 12459 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators)= (yyvsp[(2) - (2)].field_separators); }
    break;

  case 1875:
/* Line 1792 of yacc.c  */
#line 12464 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators)= (yyvsp[(1) - (2)].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[(2) - (2)].field_separators));
          }
    break;

  case 1877:
/* Line 1792 of yacc.c  */
#line 12473 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1878:
/* Line 1792 of yacc.c  */
#line 12478 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(4) - (4)].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
    break;

  case 1879:
/* Line 1792 of yacc.c  */
#line 12484 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1880:
/* Line 1792 of yacc.c  */
#line 12489 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1881:
/* Line 1792 of yacc.c  */
#line 12496 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators).cleanup(); }
    break;

  case 1882:
/* Line 1792 of yacc.c  */
#line 12497 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators)= (yyvsp[(2) - (2)].line_separators); }
    break;

  case 1883:
/* Line 1792 of yacc.c  */
#line 12502 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators)= (yyvsp[(1) - (2)].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[(2) - (2)].line_separators));
          }
    break;

  case 1885:
/* Line 1792 of yacc.c  */
#line 12511 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1886:
/* Line 1792 of yacc.c  */
#line 12516 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1887:
/* Line 1792 of yacc.c  */
#line 12523 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1888:
/* Line 1792 of yacc.c  */
#line 12525 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->exchange->line.line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1890:
/* Line 1792 of yacc.c  */
#line 12530 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1891:
/* Line 1792 of yacc.c  */
#line 12537 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1892:
/* Line 1792 of yacc.c  */
#line 12539 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1893:
/* Line 1792 of yacc.c  */
#line 12543 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1894:
/* Line 1792 of yacc.c  */
#line 12544 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1895:
/* Line 1792 of yacc.c  */
#line 12545 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1896:
/* Line 1792 of yacc.c  */
#line 12550 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1897:
/* Line 1792 of yacc.c  */
#line 12552 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1898:
/* Line 1792 of yacc.c  */
#line 12556 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 1899:
/* Line 1792 of yacc.c  */
#line 12558 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1900:
/* Line 1792 of yacc.c  */
#line 12566 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1901:
/* Line 1792 of yacc.c  */
#line 12567 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1904:
/* Line 1792 of yacc.c  */
#line 12577 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (3)].item), &(yyvsp[(1) - (3)].item));
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex= Lex;
            uint length= (uint) ((yylsp[(3) - (3)]).cpp.end - (yylsp[(2) - (3)]).cpp.start);
            String *val= NEW_PTN String((yylsp[(2) - (3)]).cpp.start,
                                        length,
                                        YYTHD->charset());
            if (val == NULL)
              MYSQL_YYABORT;
            if (lex->load_update_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->load_value_list.push_back((yyvsp[(3) - (3)].item)) ||
                lex->load_set_str_list.push_back(val))
                MYSQL_YYABORT;
            (yyvsp[(3) - (3)].item)->item_name.copy((yylsp[(2) - (3)]).cpp.start, length, YYTHD->charset());
          }
    break;

  case 1905:
/* Line 1792 of yacc.c  */
#line 12600 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1906:
/* Line 1792 of yacc.c  */
#line 12605 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1907:
/* Line 1792 of yacc.c  */
#line 12610 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1908:
/* Line 1792 of yacc.c  */
#line 12615 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].text_literal), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1909:
/* Line 1792 of yacc.c  */
#line 12623 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= NEW_PTN String((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1910:
/* Line 1792 of yacc.c  */
#line 12630 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_hex_string::make_hex_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1911:
/* Line 1792 of yacc.c  */
#line 12637 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_bin_string::make_bin_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1912:
/* Line 1792 of yacc.c  */
#line 12647 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.param_marker)= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                   (uint) ((yylsp[(1) - (1)]).raw.start - YYLIP->get_buf()));
          }
    break;

  case 1914:
/* Line 1792 of yacc.c  */
#line 12655 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item_num); }
    break;

  case 1915:
/* Line 1792 of yacc.c  */
#line 12657 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[(2) - (2)].item_num)->max_length++;
            (yyval.item)= (yyvsp[(2) - (2)].item_num)->neg();
          }
    break;

  case 1916:
/* Line 1792 of yacc.c  */
#line 12667 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].text_literal); }
    break;

  case 1917:
/* Line 1792 of yacc.c  */
#line 12668 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item_num); }
    break;

  case 1919:
/* Line 1792 of yacc.c  */
#line 12671 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
    break;

  case 1920:
/* Line 1792 of yacc.c  */
#line 12683 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("FALSE"), 0, 1);
          }
    break;

  case 1921:
/* Line 1792 of yacc.c  */
#line 12687 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("TRUE"), 1, 1);
          }
    break;

  case 1922:
/* Line 1792 of yacc.c  */
#line 12691 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1923:
/* Line 1792 of yacc.c  */
#line 12695 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1924:
/* Line 1792 of yacc.c  */
#line 12699 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1925:
/* Line 1792 of yacc.c  */
#line 12703 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1926:
/* Line 1792 of yacc.c  */
#line 12710 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1927:
/* Line 1792 of yacc.c  */
#line 12714 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1928:
/* Line 1792 of yacc.c  */
#line 12718 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1929:
/* Line 1792 of yacc.c  */
#line 12722 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, YYCSCL);
          }
    break;

  case 1930:
/* Line 1792 of yacc.c  */
#line 12726 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1931:
/* Line 1792 of yacc.c  */
#line 12734 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
    break;

  case 1932:
/* Line 1792 of yacc.c  */
#line 12738 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
    break;

  case 1933:
/* Line 1792 of yacc.c  */
#line 12742 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
    break;

  case 1936:
/* Line 1792 of yacc.c  */
#line 12761 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[(1) - (3)].lex_str).str);
          }
    break;

  case 1937:
/* Line 1792 of yacc.c  */
#line 12765 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str);
          }
    break;

  case 1938:
/* Line 1792 of yacc.c  */
#line 12772 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[(1) - (2)].item), (enum_order) (yyvsp[(2) - (2)].num));
          }
    break;

  case 1939:
/* Line 1792 of yacc.c  */
#line 12779 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1941:
/* Line 1792 of yacc.c  */
#line 12787 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1943:
/* Line 1792 of yacc.c  */
#line 12795 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 1944:
/* Line 1792 of yacc.c  */
#line 12799 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), NULL, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 1945:
/* Line 1792 of yacc.c  */
#line 12803 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
          }
    break;

  case 1946:
/* Line 1792 of yacc.c  */
#line 12810 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_ident)= NEW_PTN PT_field_ident((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1947:
/* Line 1792 of yacc.c  */
#line 12814 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_ident)= NEW_PTN PT_field_ident_3d((yyvsp[(1) - (5)].lex_str), (yyvsp[(3) - (5)].lex_str), (yyvsp[(5) - (5)].lex_str));
          }
    break;

  case 1948:
/* Line 1792 of yacc.c  */
#line 12818 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_ident)= NEW_PTN PT_field_ident_3d((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1949:
/* Line 1792 of yacc.c  */
#line 12822 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_ident)= NEW_PTN PT_field_ident((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1950:
/* Line 1792 of yacc.c  */
#line 12829 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (1)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1951:
/* Line 1792 of yacc.c  */
#line 12835 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1952:
/* Line 1792 of yacc.c  */
#line 12845 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /* For Delphi */
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(2) - (2)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1953:
/* Line 1792 of yacc.c  */
#line 12855 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (2)].lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1954:
/* Line 1792 of yacc.c  */
#line 12861 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[(1) - (4)].lex_str)),
                                    to_lex_cstring((yyvsp[(3) - (4)].lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1955:
/* Line 1792 of yacc.c  */
#line 12872 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING db= { any_db, strlen(any_db) };
            (yyval.table)= new Table_ident(YYTHD->get_protocol(),
                                db, to_lex_cstring((yyvsp[(1) - (1)].lex_str)), 0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1956:
/* Line 1792 of yacc.c  */
#line 12882 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1957:
/* Line 1792 of yacc.c  */
#line 12884 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                     (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                     (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1958:
/* Line 1792 of yacc.c  */
#line 12914 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1959:
/* Line 1792 of yacc.c  */
#line 12927 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (strcont((yyvsp[(1) - (1)].lex_str).str, "."))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1960:
/* Line 1792 of yacc.c  */
#line 12940 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1961:
/* Line 1792 of yacc.c  */
#line 12956 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1962:
/* Line 1792 of yacc.c  */
#line 12972 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1963:
/* Line 1792 of yacc.c  */
#line 12988 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1964:
/* Line 1792 of yacc.c  */
#line 12990 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1966:
/* Line 1792 of yacc.c  */
#line 13002 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str).str= YYTHD->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1967:
/* Line 1792 of yacc.c  */
#line 13011 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1968:
/* Line 1792 of yacc.c  */
#line 13013 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1969:
/* Line 1792 of yacc.c  */
#line 13023 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1970:
/* Line 1792 of yacc.c  */
#line 13024 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1971:
/* Line 1792 of yacc.c  */
#line 13025 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1975:
/* Line 1792 of yacc.c  */
#line 13036 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= st_lex_user::alloc(YYTHD, &(yyvsp[(1) - (1)].lex_str), NULL)))
              MYSQL_YYABORT;
          }
    break;

  case 1976:
/* Line 1792 of yacc.c  */
#line 13041 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= st_lex_user::alloc(YYTHD, &(yyvsp[(1) - (3)].lex_str), &(yyvsp[(3) - (3)].lex_str))))
              MYSQL_YYABORT;
          }
    break;

  case 1977:
/* Line 1792 of yacc.c  */
#line 13046 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 1978:
/* Line 1792 of yacc.c  */
#line 13060 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= st_lex_user::alloc(YYTHD, &(yyvsp[(1) - (1)].lex_str), NULL)))
              MYSQL_YYABORT;
          }
    break;

  case 1979:
/* Line 1792 of yacc.c  */
#line 13065 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= st_lex_user::alloc(YYTHD, &(yyvsp[(1) - (3)].lex_str), &(yyvsp[(3) - (3)].lex_str))))
              MYSQL_YYABORT;
          }
    break;

  case 1980:
/* Line 1792 of yacc.c  */
#line 13085 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1981:
/* Line 1792 of yacc.c  */
#line 13086 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1982:
/* Line 1792 of yacc.c  */
#line 13087 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1983:
/* Line 1792 of yacc.c  */
#line 13088 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1984:
/* Line 1792 of yacc.c  */
#line 13093 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1985:
/* Line 1792 of yacc.c  */
#line 13094 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1986:
/* Line 1792 of yacc.c  */
#line 13095 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1987:
/* Line 1792 of yacc.c  */
#line 13096 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1988:
/* Line 1792 of yacc.c  */
#line 13097 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1989:
/* Line 1792 of yacc.c  */
#line 13098 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1990:
/* Line 1792 of yacc.c  */
#line 13099 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1991:
/* Line 1792 of yacc.c  */
#line 13100 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1992:
/* Line 1792 of yacc.c  */
#line 13101 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1993:
/* Line 1792 of yacc.c  */
#line 13102 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1994:
/* Line 1792 of yacc.c  */
#line 13103 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1995:
/* Line 1792 of yacc.c  */
#line 13104 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1996:
/* Line 1792 of yacc.c  */
#line 13105 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1997:
/* Line 1792 of yacc.c  */
#line 13106 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1998:
/* Line 1792 of yacc.c  */
#line 13107 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1999:
/* Line 1792 of yacc.c  */
#line 13108 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2000:
/* Line 1792 of yacc.c  */
#line 13109 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2001:
/* Line 1792 of yacc.c  */
#line 13110 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2002:
/* Line 1792 of yacc.c  */
#line 13111 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2003:
/* Line 1792 of yacc.c  */
#line 13112 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2004:
/* Line 1792 of yacc.c  */
#line 13113 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2005:
/* Line 1792 of yacc.c  */
#line 13114 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2006:
/* Line 1792 of yacc.c  */
#line 13115 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2007:
/* Line 1792 of yacc.c  */
#line 13116 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2008:
/* Line 1792 of yacc.c  */
#line 13117 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2009:
/* Line 1792 of yacc.c  */
#line 13118 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2010:
/* Line 1792 of yacc.c  */
#line 13119 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2011:
/* Line 1792 of yacc.c  */
#line 13120 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2012:
/* Line 1792 of yacc.c  */
#line 13121 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2013:
/* Line 1792 of yacc.c  */
#line 13122 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2014:
/* Line 1792 of yacc.c  */
#line 13123 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2015:
/* Line 1792 of yacc.c  */
#line 13124 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2016:
/* Line 1792 of yacc.c  */
#line 13125 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2017:
/* Line 1792 of yacc.c  */
#line 13126 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2018:
/* Line 1792 of yacc.c  */
#line 13127 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2019:
/* Line 1792 of yacc.c  */
#line 13128 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2020:
/* Line 1792 of yacc.c  */
#line 13129 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2021:
/* Line 1792 of yacc.c  */
#line 13130 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2022:
/* Line 1792 of yacc.c  */
#line 13131 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2023:
/* Line 1792 of yacc.c  */
#line 13132 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2024:
/* Line 1792 of yacc.c  */
#line 13133 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2025:
/* Line 1792 of yacc.c  */
#line 13134 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2026:
/* Line 1792 of yacc.c  */
#line 13135 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2027:
/* Line 1792 of yacc.c  */
#line 13136 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2028:
/* Line 1792 of yacc.c  */
#line 13137 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2029:
/* Line 1792 of yacc.c  */
#line 13138 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2030:
/* Line 1792 of yacc.c  */
#line 13139 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2031:
/* Line 1792 of yacc.c  */
#line 13140 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2032:
/* Line 1792 of yacc.c  */
#line 13141 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2033:
/* Line 1792 of yacc.c  */
#line 13142 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2034:
/* Line 1792 of yacc.c  */
#line 13143 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2035:
/* Line 1792 of yacc.c  */
#line 13144 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2036:
/* Line 1792 of yacc.c  */
#line 13145 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2037:
/* Line 1792 of yacc.c  */
#line 13146 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2038:
/* Line 1792 of yacc.c  */
#line 13147 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2039:
/* Line 1792 of yacc.c  */
#line 13148 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2040:
/* Line 1792 of yacc.c  */
#line 13149 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2041:
/* Line 1792 of yacc.c  */
#line 13159 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2042:
/* Line 1792 of yacc.c  */
#line 13160 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2043:
/* Line 1792 of yacc.c  */
#line 13161 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2044:
/* Line 1792 of yacc.c  */
#line 13162 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2045:
/* Line 1792 of yacc.c  */
#line 13163 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2046:
/* Line 1792 of yacc.c  */
#line 13164 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2047:
/* Line 1792 of yacc.c  */
#line 13165 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2048:
/* Line 1792 of yacc.c  */
#line 13166 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2049:
/* Line 1792 of yacc.c  */
#line 13167 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2050:
/* Line 1792 of yacc.c  */
#line 13172 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2051:
/* Line 1792 of yacc.c  */
#line 13173 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2052:
/* Line 1792 of yacc.c  */
#line 13174 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2053:
/* Line 1792 of yacc.c  */
#line 13175 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2054:
/* Line 1792 of yacc.c  */
#line 13176 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2055:
/* Line 1792 of yacc.c  */
#line 13177 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2056:
/* Line 1792 of yacc.c  */
#line 13178 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2057:
/* Line 1792 of yacc.c  */
#line 13179 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2058:
/* Line 1792 of yacc.c  */
#line 13180 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2059:
/* Line 1792 of yacc.c  */
#line 13181 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2060:
/* Line 1792 of yacc.c  */
#line 13182 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2061:
/* Line 1792 of yacc.c  */
#line 13183 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2062:
/* Line 1792 of yacc.c  */
#line 13184 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2063:
/* Line 1792 of yacc.c  */
#line 13185 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2064:
/* Line 1792 of yacc.c  */
#line 13186 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2065:
/* Line 1792 of yacc.c  */
#line 13187 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2066:
/* Line 1792 of yacc.c  */
#line 13188 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2067:
/* Line 1792 of yacc.c  */
#line 13189 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2068:
/* Line 1792 of yacc.c  */
#line 13190 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2069:
/* Line 1792 of yacc.c  */
#line 13191 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2070:
/* Line 1792 of yacc.c  */
#line 13192 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2071:
/* Line 1792 of yacc.c  */
#line 13193 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2072:
/* Line 1792 of yacc.c  */
#line 13194 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2073:
/* Line 1792 of yacc.c  */
#line 13195 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2074:
/* Line 1792 of yacc.c  */
#line 13196 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2075:
/* Line 1792 of yacc.c  */
#line 13197 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2076:
/* Line 1792 of yacc.c  */
#line 13198 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2077:
/* Line 1792 of yacc.c  */
#line 13199 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2078:
/* Line 1792 of yacc.c  */
#line 13200 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2079:
/* Line 1792 of yacc.c  */
#line 13201 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2080:
/* Line 1792 of yacc.c  */
#line 13202 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2081:
/* Line 1792 of yacc.c  */
#line 13203 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2082:
/* Line 1792 of yacc.c  */
#line 13204 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2083:
/* Line 1792 of yacc.c  */
#line 13205 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2084:
/* Line 1792 of yacc.c  */
#line 13206 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2085:
/* Line 1792 of yacc.c  */
#line 13207 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2086:
/* Line 1792 of yacc.c  */
#line 13208 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2087:
/* Line 1792 of yacc.c  */
#line 13209 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2088:
/* Line 1792 of yacc.c  */
#line 13210 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2089:
/* Line 1792 of yacc.c  */
#line 13211 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2090:
/* Line 1792 of yacc.c  */
#line 13212 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2091:
/* Line 1792 of yacc.c  */
#line 13213 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2092:
/* Line 1792 of yacc.c  */
#line 13214 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2093:
/* Line 1792 of yacc.c  */
#line 13215 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2094:
/* Line 1792 of yacc.c  */
#line 13216 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2095:
/* Line 1792 of yacc.c  */
#line 13217 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2096:
/* Line 1792 of yacc.c  */
#line 13218 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2097:
/* Line 1792 of yacc.c  */
#line 13223 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2098:
/* Line 1792 of yacc.c  */
#line 13224 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2099:
/* Line 1792 of yacc.c  */
#line 13225 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2100:
/* Line 1792 of yacc.c  */
#line 13226 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2101:
/* Line 1792 of yacc.c  */
#line 13227 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2102:
/* Line 1792 of yacc.c  */
#line 13228 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2103:
/* Line 1792 of yacc.c  */
#line 13229 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2104:
/* Line 1792 of yacc.c  */
#line 13230 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2105:
/* Line 1792 of yacc.c  */
#line 13231 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2106:
/* Line 1792 of yacc.c  */
#line 13232 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2107:
/* Line 1792 of yacc.c  */
#line 13233 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2108:
/* Line 1792 of yacc.c  */
#line 13234 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2109:
/* Line 1792 of yacc.c  */
#line 13235 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2110:
/* Line 1792 of yacc.c  */
#line 13236 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2111:
/* Line 1792 of yacc.c  */
#line 13237 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2112:
/* Line 1792 of yacc.c  */
#line 13238 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2113:
/* Line 1792 of yacc.c  */
#line 13239 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2114:
/* Line 1792 of yacc.c  */
#line 13240 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2115:
/* Line 1792 of yacc.c  */
#line 13241 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2116:
/* Line 1792 of yacc.c  */
#line 13242 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2117:
/* Line 1792 of yacc.c  */
#line 13243 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2118:
/* Line 1792 of yacc.c  */
#line 13244 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2119:
/* Line 1792 of yacc.c  */
#line 13245 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2120:
/* Line 1792 of yacc.c  */
#line 13246 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2121:
/* Line 1792 of yacc.c  */
#line 13247 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2122:
/* Line 1792 of yacc.c  */
#line 13248 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2123:
/* Line 1792 of yacc.c  */
#line 13249 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2124:
/* Line 1792 of yacc.c  */
#line 13250 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2125:
/* Line 1792 of yacc.c  */
#line 13251 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2126:
/* Line 1792 of yacc.c  */
#line 13252 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2127:
/* Line 1792 of yacc.c  */
#line 13253 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2128:
/* Line 1792 of yacc.c  */
#line 13254 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2129:
/* Line 1792 of yacc.c  */
#line 13255 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2130:
/* Line 1792 of yacc.c  */
#line 13256 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2131:
/* Line 1792 of yacc.c  */
#line 13257 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2132:
/* Line 1792 of yacc.c  */
#line 13258 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2133:
/* Line 1792 of yacc.c  */
#line 13259 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2134:
/* Line 1792 of yacc.c  */
#line 13260 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2135:
/* Line 1792 of yacc.c  */
#line 13261 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2136:
/* Line 1792 of yacc.c  */
#line 13262 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2137:
/* Line 1792 of yacc.c  */
#line 13263 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2138:
/* Line 1792 of yacc.c  */
#line 13264 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2139:
/* Line 1792 of yacc.c  */
#line 13265 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2140:
/* Line 1792 of yacc.c  */
#line 13266 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2141:
/* Line 1792 of yacc.c  */
#line 13267 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2142:
/* Line 1792 of yacc.c  */
#line 13268 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2143:
/* Line 1792 of yacc.c  */
#line 13269 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2144:
/* Line 1792 of yacc.c  */
#line 13270 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2145:
/* Line 1792 of yacc.c  */
#line 13271 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2146:
/* Line 1792 of yacc.c  */
#line 13272 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2147:
/* Line 1792 of yacc.c  */
#line 13273 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2148:
/* Line 1792 of yacc.c  */
#line 13274 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2149:
/* Line 1792 of yacc.c  */
#line 13275 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2150:
/* Line 1792 of yacc.c  */
#line 13276 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2151:
/* Line 1792 of yacc.c  */
#line 13277 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2152:
/* Line 1792 of yacc.c  */
#line 13278 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2153:
/* Line 1792 of yacc.c  */
#line 13279 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2154:
/* Line 1792 of yacc.c  */
#line 13280 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2155:
/* Line 1792 of yacc.c  */
#line 13281 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2156:
/* Line 1792 of yacc.c  */
#line 13282 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2157:
/* Line 1792 of yacc.c  */
#line 13283 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2158:
/* Line 1792 of yacc.c  */
#line 13284 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2159:
/* Line 1792 of yacc.c  */
#line 13285 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2160:
/* Line 1792 of yacc.c  */
#line 13286 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2161:
/* Line 1792 of yacc.c  */
#line 13287 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2162:
/* Line 1792 of yacc.c  */
#line 13288 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2163:
/* Line 1792 of yacc.c  */
#line 13289 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2164:
/* Line 1792 of yacc.c  */
#line 13290 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2165:
/* Line 1792 of yacc.c  */
#line 13291 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2166:
/* Line 1792 of yacc.c  */
#line 13292 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2167:
/* Line 1792 of yacc.c  */
#line 13293 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2168:
/* Line 1792 of yacc.c  */
#line 13294 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2169:
/* Line 1792 of yacc.c  */
#line 13295 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2170:
/* Line 1792 of yacc.c  */
#line 13296 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2171:
/* Line 1792 of yacc.c  */
#line 13297 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2172:
/* Line 1792 of yacc.c  */
#line 13298 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2173:
/* Line 1792 of yacc.c  */
#line 13299 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2174:
/* Line 1792 of yacc.c  */
#line 13300 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2175:
/* Line 1792 of yacc.c  */
#line 13301 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2176:
/* Line 1792 of yacc.c  */
#line 13302 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2177:
/* Line 1792 of yacc.c  */
#line 13303 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2178:
/* Line 1792 of yacc.c  */
#line 13304 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2179:
/* Line 1792 of yacc.c  */
#line 13305 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2180:
/* Line 1792 of yacc.c  */
#line 13306 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2181:
/* Line 1792 of yacc.c  */
#line 13307 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2182:
/* Line 1792 of yacc.c  */
#line 13308 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2183:
/* Line 1792 of yacc.c  */
#line 13309 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2184:
/* Line 1792 of yacc.c  */
#line 13310 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2185:
/* Line 1792 of yacc.c  */
#line 13311 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2186:
/* Line 1792 of yacc.c  */
#line 13312 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2187:
/* Line 1792 of yacc.c  */
#line 13313 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2188:
/* Line 1792 of yacc.c  */
#line 13314 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2189:
/* Line 1792 of yacc.c  */
#line 13315 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2190:
/* Line 1792 of yacc.c  */
#line 13316 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2191:
/* Line 1792 of yacc.c  */
#line 13317 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2192:
/* Line 1792 of yacc.c  */
#line 13318 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2193:
/* Line 1792 of yacc.c  */
#line 13319 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2194:
/* Line 1792 of yacc.c  */
#line 13320 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2195:
/* Line 1792 of yacc.c  */
#line 13321 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2196:
/* Line 1792 of yacc.c  */
#line 13322 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2197:
/* Line 1792 of yacc.c  */
#line 13323 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2198:
/* Line 1792 of yacc.c  */
#line 13324 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2199:
/* Line 1792 of yacc.c  */
#line 13325 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2200:
/* Line 1792 of yacc.c  */
#line 13326 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2201:
/* Line 1792 of yacc.c  */
#line 13327 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2202:
/* Line 1792 of yacc.c  */
#line 13328 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2203:
/* Line 1792 of yacc.c  */
#line 13329 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2204:
/* Line 1792 of yacc.c  */
#line 13330 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2205:
/* Line 1792 of yacc.c  */
#line 13331 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2206:
/* Line 1792 of yacc.c  */
#line 13332 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2207:
/* Line 1792 of yacc.c  */
#line 13333 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2208:
/* Line 1792 of yacc.c  */
#line 13334 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2209:
/* Line 1792 of yacc.c  */
#line 13335 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2210:
/* Line 1792 of yacc.c  */
#line 13336 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2211:
/* Line 1792 of yacc.c  */
#line 13337 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2212:
/* Line 1792 of yacc.c  */
#line 13338 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2213:
/* Line 1792 of yacc.c  */
#line 13339 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2214:
/* Line 1792 of yacc.c  */
#line 13340 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2215:
/* Line 1792 of yacc.c  */
#line 13341 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2216:
/* Line 1792 of yacc.c  */
#line 13342 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2217:
/* Line 1792 of yacc.c  */
#line 13343 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2218:
/* Line 1792 of yacc.c  */
#line 13344 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2219:
/* Line 1792 of yacc.c  */
#line 13345 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2220:
/* Line 1792 of yacc.c  */
#line 13346 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2221:
/* Line 1792 of yacc.c  */
#line 13347 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2222:
/* Line 1792 of yacc.c  */
#line 13348 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2223:
/* Line 1792 of yacc.c  */
#line 13349 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2224:
/* Line 1792 of yacc.c  */
#line 13350 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2225:
/* Line 1792 of yacc.c  */
#line 13351 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2226:
/* Line 1792 of yacc.c  */
#line 13352 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2227:
/* Line 1792 of yacc.c  */
#line 13353 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2228:
/* Line 1792 of yacc.c  */
#line 13354 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2229:
/* Line 1792 of yacc.c  */
#line 13355 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2230:
/* Line 1792 of yacc.c  */
#line 13356 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2231:
/* Line 1792 of yacc.c  */
#line 13357 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2232:
/* Line 1792 of yacc.c  */
#line 13358 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2233:
/* Line 1792 of yacc.c  */
#line 13359 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2234:
/* Line 1792 of yacc.c  */
#line 13360 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2235:
/* Line 1792 of yacc.c  */
#line 13361 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2236:
/* Line 1792 of yacc.c  */
#line 13362 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2237:
/* Line 1792 of yacc.c  */
#line 13363 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2238:
/* Line 1792 of yacc.c  */
#line 13364 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2239:
/* Line 1792 of yacc.c  */
#line 13365 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2240:
/* Line 1792 of yacc.c  */
#line 13366 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2241:
/* Line 1792 of yacc.c  */
#line 13367 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2242:
/* Line 1792 of yacc.c  */
#line 13368 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2243:
/* Line 1792 of yacc.c  */
#line 13369 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2244:
/* Line 1792 of yacc.c  */
#line 13370 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2245:
/* Line 1792 of yacc.c  */
#line 13371 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2246:
/* Line 1792 of yacc.c  */
#line 13372 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2247:
/* Line 1792 of yacc.c  */
#line 13373 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2248:
/* Line 1792 of yacc.c  */
#line 13374 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2249:
/* Line 1792 of yacc.c  */
#line 13375 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2250:
/* Line 1792 of yacc.c  */
#line 13376 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2251:
/* Line 1792 of yacc.c  */
#line 13377 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2252:
/* Line 1792 of yacc.c  */
#line 13378 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2253:
/* Line 1792 of yacc.c  */
#line 13379 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2254:
/* Line 1792 of yacc.c  */
#line 13380 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2255:
/* Line 1792 of yacc.c  */
#line 13381 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2256:
/* Line 1792 of yacc.c  */
#line 13382 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2257:
/* Line 1792 of yacc.c  */
#line 13383 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2258:
/* Line 1792 of yacc.c  */
#line 13384 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2259:
/* Line 1792 of yacc.c  */
#line 13385 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2260:
/* Line 1792 of yacc.c  */
#line 13386 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2261:
/* Line 1792 of yacc.c  */
#line 13387 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2262:
/* Line 1792 of yacc.c  */
#line 13388 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2263:
/* Line 1792 of yacc.c  */
#line 13389 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2264:
/* Line 1792 of yacc.c  */
#line 13390 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2265:
/* Line 1792 of yacc.c  */
#line 13391 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2266:
/* Line 1792 of yacc.c  */
#line 13392 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2267:
/* Line 1792 of yacc.c  */
#line 13393 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2268:
/* Line 1792 of yacc.c  */
#line 13394 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2269:
/* Line 1792 of yacc.c  */
#line 13395 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2270:
/* Line 1792 of yacc.c  */
#line 13396 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2271:
/* Line 1792 of yacc.c  */
#line 13397 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2272:
/* Line 1792 of yacc.c  */
#line 13398 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2273:
/* Line 1792 of yacc.c  */
#line 13399 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2274:
/* Line 1792 of yacc.c  */
#line 13400 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2275:
/* Line 1792 of yacc.c  */
#line 13401 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2276:
/* Line 1792 of yacc.c  */
#line 13402 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2277:
/* Line 1792 of yacc.c  */
#line 13403 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2278:
/* Line 1792 of yacc.c  */
#line 13404 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2279:
/* Line 1792 of yacc.c  */
#line 13405 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2280:
/* Line 1792 of yacc.c  */
#line 13406 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2281:
/* Line 1792 of yacc.c  */
#line 13407 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2282:
/* Line 1792 of yacc.c  */
#line 13408 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2283:
/* Line 1792 of yacc.c  */
#line 13409 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2284:
/* Line 1792 of yacc.c  */
#line 13410 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2285:
/* Line 1792 of yacc.c  */
#line 13411 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2286:
/* Line 1792 of yacc.c  */
#line 13412 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2287:
/* Line 1792 of yacc.c  */
#line 13413 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2288:
/* Line 1792 of yacc.c  */
#line 13414 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2289:
/* Line 1792 of yacc.c  */
#line 13415 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2290:
/* Line 1792 of yacc.c  */
#line 13416 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2291:
/* Line 1792 of yacc.c  */
#line 13417 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2292:
/* Line 1792 of yacc.c  */
#line 13418 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2293:
/* Line 1792 of yacc.c  */
#line 13419 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2294:
/* Line 1792 of yacc.c  */
#line 13420 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2295:
/* Line 1792 of yacc.c  */
#line 13421 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2296:
/* Line 1792 of yacc.c  */
#line 13422 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2297:
/* Line 1792 of yacc.c  */
#line 13423 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2298:
/* Line 1792 of yacc.c  */
#line 13424 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2299:
/* Line 1792 of yacc.c  */
#line 13425 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2300:
/* Line 1792 of yacc.c  */
#line 13426 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2301:
/* Line 1792 of yacc.c  */
#line 13427 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2302:
/* Line 1792 of yacc.c  */
#line 13428 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2303:
/* Line 1792 of yacc.c  */
#line 13429 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2304:
/* Line 1792 of yacc.c  */
#line 13430 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2305:
/* Line 1792 of yacc.c  */
#line 13431 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2306:
/* Line 1792 of yacc.c  */
#line 13432 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2307:
/* Line 1792 of yacc.c  */
#line 13433 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2308:
/* Line 1792 of yacc.c  */
#line 13434 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2309:
/* Line 1792 of yacc.c  */
#line 13435 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2310:
/* Line 1792 of yacc.c  */
#line 13436 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2311:
/* Line 1792 of yacc.c  */
#line 13437 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2312:
/* Line 1792 of yacc.c  */
#line 13438 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2313:
/* Line 1792 of yacc.c  */
#line 13439 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2314:
/* Line 1792 of yacc.c  */
#line 13440 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2315:
/* Line 1792 of yacc.c  */
#line 13441 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2316:
/* Line 1792 of yacc.c  */
#line 13442 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2317:
/* Line 1792 of yacc.c  */
#line 13443 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2318:
/* Line 1792 of yacc.c  */
#line 13444 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2319:
/* Line 1792 of yacc.c  */
#line 13445 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2320:
/* Line 1792 of yacc.c  */
#line 13446 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2321:
/* Line 1792 of yacc.c  */
#line 13447 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2322:
/* Line 1792 of yacc.c  */
#line 13448 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2323:
/* Line 1792 of yacc.c  */
#line 13449 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2324:
/* Line 1792 of yacc.c  */
#line 13450 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2325:
/* Line 1792 of yacc.c  */
#line 13451 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2326:
/* Line 1792 of yacc.c  */
#line 13452 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2327:
/* Line 1792 of yacc.c  */
#line 13453 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2328:
/* Line 1792 of yacc.c  */
#line 13454 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2329:
/* Line 1792 of yacc.c  */
#line 13455 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2330:
/* Line 1792 of yacc.c  */
#line 13456 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2331:
/* Line 1792 of yacc.c  */
#line 13457 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2332:
/* Line 1792 of yacc.c  */
#line 13458 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2333:
/* Line 1792 of yacc.c  */
#line 13459 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2334:
/* Line 1792 of yacc.c  */
#line 13460 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2335:
/* Line 1792 of yacc.c  */
#line 13461 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2336:
/* Line 1792 of yacc.c  */
#line 13462 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2337:
/* Line 1792 of yacc.c  */
#line 13463 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2338:
/* Line 1792 of yacc.c  */
#line 13464 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2339:
/* Line 1792 of yacc.c  */
#line 13465 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2340:
/* Line 1792 of yacc.c  */
#line 13466 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2341:
/* Line 1792 of yacc.c  */
#line 13467 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2342:
/* Line 1792 of yacc.c  */
#line 13468 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2343:
/* Line 1792 of yacc.c  */
#line 13469 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2344:
/* Line 1792 of yacc.c  */
#line 13470 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2345:
/* Line 1792 of yacc.c  */
#line 13471 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2346:
/* Line 1792 of yacc.c  */
#line 13472 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2347:
/* Line 1792 of yacc.c  */
#line 13473 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2348:
/* Line 1792 of yacc.c  */
#line 13474 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2349:
/* Line 1792 of yacc.c  */
#line 13475 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2350:
/* Line 1792 of yacc.c  */
#line 13476 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2351:
/* Line 1792 of yacc.c  */
#line 13477 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2352:
/* Line 1792 of yacc.c  */
#line 13478 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2353:
/* Line 1792 of yacc.c  */
#line 13479 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2354:
/* Line 1792 of yacc.c  */
#line 13480 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2355:
/* Line 1792 of yacc.c  */
#line 13481 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2356:
/* Line 1792 of yacc.c  */
#line 13482 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2357:
/* Line 1792 of yacc.c  */
#line 13483 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2358:
/* Line 1792 of yacc.c  */
#line 13484 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2359:
/* Line 1792 of yacc.c  */
#line 13485 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2360:
/* Line 1792 of yacc.c  */
#line 13486 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2361:
/* Line 1792 of yacc.c  */
#line 13487 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2364:
/* Line 1792 of yacc.c  */
#line 13520 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].start_option_value_list));
          }
    break;

  case 2365:
/* Line 1792 of yacc.c  */
#line 13529 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[(1) - (2)].option_value_no_option_type), (yylsp[(1) - (2)]), (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2366:
/* Line 1792 of yacc.c  */
#line 13533 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[(2) - (2)].transaction_characteristics), (yylsp[(2) - (2)]));
          }
    break;

  case 2367:
/* Line 1792 of yacc.c  */
#line 13537 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].start_option_value_list_following_option_type));
          }
    break;

  case 2368:
/* Line 1792 of yacc.c  */
#line 13541 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(3) - (3)].simple_string), (yylsp[(3) - (3)]));
          }
    break;

  case 2369:
/* Line 1792 of yacc.c  */
#line 13545 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD = '<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(5) - (6)].simple_string), (yylsp[(5) - (6)]));
          }
    break;

  case 2370:
/* Line 1792 of yacc.c  */
#line 13552 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (5)].lex_user), (yyvsp[(5) - (5)].simple_string), (yylsp[(5) - (5)]));
          }
    break;

  case 2371:
/* Line 1792 of yacc.c  */
#line 13556 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD FOR <user> = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD FOR <user> = "
                                 "'<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (8)].lex_user), (yyvsp[(7) - (8)].simple_string), (yylsp[(7) - (8)]));
          }
    break;

  case 2372:
/* Line 1792 of yacc.c  */
#line 13567 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_set_role((yyvsp[(3) - (3)].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2373:
/* Line 1792 of yacc.c  */
#line 13572 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_set_role(ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2374:
/* Line 1792 of yacc.c  */
#line 13577 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_set_role(ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2375:
/* Line 1792 of yacc.c  */
#line 13582 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), (yyvsp[(4) - (6)].user_list), ROLE_NAME);
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
          }
    break;

  case 2376:
/* Line 1792 of yacc.c  */
#line 13587 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), NULL, ROLE_NONE);
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
          }
    break;

  case 2377:
/* Line 1792 of yacc.c  */
#line 13592 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), NULL, ROLE_ALL);
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
          }
    break;

  case 2378:
/* Line 1792 of yacc.c  */
#line 13597 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_set_role(ROLE_ALL, (yyvsp[(4) - (4)].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2379:
/* Line 1792 of yacc.c  */
#line 13604 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.user_list)= NULL; }
    break;

  case 2380:
/* Line 1792 of yacc.c  */
#line 13605 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.user_list)= (yyvsp[(2) - (2)].user_list); }
    break;

  case 2381:
/* Line 1792 of yacc.c  */
#line 13611 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[(1) - (2)].option_value_following_option_type),
                                                                          (yylsp[(1) - (2)]),
                                                                          (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2382:
/* Line 1792 of yacc.c  */
#line 13618 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[(2) - (2)].transaction_characteristics),
                                                                           (yylsp[(2) - (2)]));
          }
    break;

  case 2383:
/* Line 1792 of yacc.c  */
#line 13627 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= NULL; }
    break;

  case 2384:
/* Line 1792 of yacc.c  */
#line 13628 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= (yyvsp[(2) - (2)].option_value_list); }
    break;

  case 2385:
/* Line 1792 of yacc.c  */
#line 13634 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[(0) - (1)]), (yyvsp[(1) - (1)].node), (yylsp[(1) - (1)]));
          }
    break;

  case 2386:
/* Line 1792 of yacc.c  */
#line 13638 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[(1) - (3)].option_value_list), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].node), (yylsp[(3) - (3)]));
          }
    break;

  case 2387:
/* Line 1792 of yacc.c  */
#line 13646 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].option_value_following_option_type));
          }
    break;

  case 2388:
/* Line 1792 of yacc.c  */
#line 13649 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].option_value_no_option_type); }
    break;

  case 2389:
/* Line 1792 of yacc.c  */
#line 13653 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2390:
/* Line 1792 of yacc.c  */
#line 13654 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_PERSIST; }
    break;

  case 2391:
/* Line 1792 of yacc.c  */
#line 13655 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2392:
/* Line 1792 of yacc.c  */
#line 13656 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2393:
/* Line 1792 of yacc.c  */
#line 13660 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2394:
/* Line 1792 of yacc.c  */
#line 13661 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2395:
/* Line 1792 of yacc.c  */
#line 13662 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2396:
/* Line 1792 of yacc.c  */
#line 13663 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2397:
/* Line 1792 of yacc.c  */
#line 13667 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2398:
/* Line 1792 of yacc.c  */
#line 13668 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2399:
/* Line 1792 of yacc.c  */
#line 13669 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2400:
/* Line 1792 of yacc.c  */
#line 13670 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2401:
/* Line 1792 of yacc.c  */
#line 13674 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2402:
/* Line 1792 of yacc.c  */
#line 13675 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_PERSIST; }
    break;

  case 2403:
/* Line 1792 of yacc.c  */
#line 13676 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2404:
/* Line 1792 of yacc.c  */
#line 13677 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2405:
/* Line 1792 of yacc.c  */
#line 13678 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2406:
/* Line 1792 of yacc.c  */
#line 13684 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item));
          }
    break;

  case 2407:
/* Line 1792 of yacc.c  */
#line 13694 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item), (yylsp[(3) - (3)]));
          }
    break;

  case 2408:
/* Line 1792 of yacc.c  */
#line 13698 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item));
          }
    break;

  case 2409:
/* Line 1792 of yacc.c  */
#line 13703 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[(3) - (6)].var_type), (yyvsp[(4) - (6)].internal_variable_name), (yyvsp[(6) - (6)].item));
          }
    break;

  case 2410:
/* Line 1792 of yacc.c  */
#line 13707 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[(2) - (2)].charset));
          }
    break;

  case 2411:
/* Line 1792 of yacc.c  */
#line 13711 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[(2) - (3)]));
          }
    break;

  case 2412:
/* Line 1792 of yacc.c  */
#line 13718 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names_charset((yyvsp[(2) - (3)].charset), (yyvsp[(3) - (3)].charset));
          }
    break;

  case 2413:
/* Line 1792 of yacc.c  */
#line 13725 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2414:
/* Line 1792 of yacc.c  */
#line 13729 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2415:
/* Line 1792 of yacc.c  */
#line 13733 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2416:
/* Line 1792 of yacc.c  */
#line 13740 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].transaction_access_mode), (yyvsp[(2) - (2)].isolation_level));
          }
    break;

  case 2417:
/* Line 1792 of yacc.c  */
#line 13744 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].isolation_level), (yyvsp[(2) - (2)].transaction_access_mode));
          }
    break;

  case 2418:
/* Line 1792 of yacc.c  */
#line 13751 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[(1) - (1)].num));
          }
    break;

  case 2419:
/* Line 1792 of yacc.c  */
#line 13757 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= NULL; }
    break;

  case 2420:
/* Line 1792 of yacc.c  */
#line 13758 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= (yyvsp[(2) - (2)].transaction_access_mode); }
    break;

  case 2421:
/* Line 1792 of yacc.c  */
#line 13763 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[(3) - (3)].tx_isolation));
          }
    break;

  case 2422:
/* Line 1792 of yacc.c  */
#line 13769 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= NULL; }
    break;

  case 2423:
/* Line 1792 of yacc.c  */
#line 13770 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= (yyvsp[(2) - (2)].isolation_level); }
    break;

  case 2424:
/* Line 1792 of yacc.c  */
#line 13774 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2425:
/* Line 1792 of yacc.c  */
#line 13775 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2426:
/* Line 1792 of yacc.c  */
#line 13779 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2427:
/* Line 1792 of yacc.c  */
#line 13780 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2428:
/* Line 1792 of yacc.c  */
#line 13781 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2429:
/* Line 1792 of yacc.c  */
#line 13782 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2430:
/* Line 1792 of yacc.c  */
#line 13787 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2432:
/* Line 1792 of yacc.c  */
#line 13796 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 2433:
/* Line 1792 of yacc.c  */
#line 13798 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON",  2, system_charset_info);
          }
    break;

  case 2434:
/* Line 1792 of yacc.c  */
#line 13802 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
    break;

  case 2435:
/* Line 1792 of yacc.c  */
#line 13806 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
    break;

  case 2436:
/* Line 1792 of yacc.c  */
#line 13815 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2437:
/* Line 1792 of yacc.c  */
#line 13826 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2442:
/* Line 1792 of yacc.c  */
#line 13841 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
    break;

  case 2443:
/* Line 1792 of yacc.c  */
#line 13868 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2444:
/* Line 1792 of yacc.c  */
#line 13869 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2445:
/* Line 1792 of yacc.c  */
#line 13871 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2446:
/* Line 1792 of yacc.c  */
#line 13875 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2447:
/* Line 1792 of yacc.c  */
#line 13880 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2448:
/* Line 1792 of yacc.c  */
#line 13891 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2449:
/* Line 1792 of yacc.c  */
#line 13897 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.statement)= NEW_PTN PT_shutdown();
          }
    break;

  case 2450:
/* Line 1792 of yacc.c  */
#line 13905 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.statement)= NEW_PTN PT_alter_instance((yyvsp[(3) - (3)].alter_instance_action));
          }
    break;

  case 2451:
/* Line 1792 of yacc.c  */
#line 13912 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(2) - (4)].lex_str).str, "INNODB"))
            {
              (yyval.alter_instance_action)= ROTATE_INNODB_MASTER_KEY;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[(2) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2452:
/* Line 1792 of yacc.c  */
#line 13931 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2453:
/* Line 1792 of yacc.c  */
#line 13947 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2454:
/* Line 1792 of yacc.c  */
#line 13965 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                     /* #4 */
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= NEW_PTN Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select()->select_limit= one;
            lex->current_select()->offset_limit= 0;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2455:
/* Line 1792 of yacc.c  */
#line 13985 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item) != NULL)
              ITEMIZE((yyvsp[(6) - (7)].item), &(yyvsp[(6) - (7)].item));
            Select->set_where_cond((yyvsp[(6) - (7)].item));

            if ((yyvsp[(7) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(7) - (7)].limit_clause));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= NEW_PTN Sql_cmd_handler_read((yyvsp[(5) - (7)].ha_read_mode),
                                  lex->ident.str, lex->handler_insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2456:
/* Line 1792 of yacc.c  */
#line 14012 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[(1) - (1)].ha_read_mode); }
    break;

  case 2457:
/* Line 1792 of yacc.c  */
#line 14013 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); (yyval.ha_read_mode)=(yyvsp[(2) - (2)].ha_read_mode); }
    break;

  case 2458:
/* Line 1792 of yacc.c  */
#line 14017 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
    break;

  case 2459:
/* Line 1792 of yacc.c  */
#line 14018 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
    break;

  case 2460:
/* Line 1792 of yacc.c  */
#line 14022 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
    break;

  case 2461:
/* Line 1792 of yacc.c  */
#line 14023 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
    break;

  case 2462:
/* Line 1792 of yacc.c  */
#line 14024 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
    break;

  case 2463:
/* Line 1792 of yacc.c  */
#line 14025 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
    break;

  case 2464:
/* Line 1792 of yacc.c  */
#line 14027 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[(1) - (1)].ha_rkey_mode);
          }
    break;

  case 2465:
/* Line 1792 of yacc.c  */
#line 14031 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(4) - (5)].item_list2));
            Lex->handler_insert_list= &(yyvsp[(4) - (5)].item_list2)->value;
            (yyval.ha_read_mode)= enum_ha_read_modes::RKEY;
          }
    break;

  case 2466:
/* Line 1792 of yacc.c  */
#line 14039 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2467:
/* Line 1792 of yacc.c  */
#line 14040 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2468:
/* Line 1792 of yacc.c  */
#line 14041 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2469:
/* Line 1792 of yacc.c  */
#line 14042 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2470:
/* Line 1792 of yacc.c  */
#line 14043 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2471:
/* Line 1792 of yacc.c  */
#line 14050 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            PT_statement *tmp= NEW_PTN PT_revoke_roles((yyvsp[(2) - (4)].role_or_privilege_list), (yyvsp[(4) - (4)].user_list));
            MAKE_CMD(tmp);
          }
    break;

  case 2472:
/* Line 1792 of yacc.c  */
#line 14056 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[(2) - (7)].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[(4) - (7)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(4) - (7)].acl_type));
            lex->users_list= *(yyvsp[(7) - (7)].user_list);
          }
    break;

  case 2473:
/* Line 1792 of yacc.c  */
#line 14071 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2474:
/* Line 1792 of yacc.c  */
#line 14076 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[(6) - (9)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(6) - (9)].acl_type));
            lex->users_list= *(yyvsp[(9) - (9)].user_list);
          }
    break;

  case 2475:
/* Line 1792 of yacc.c  */
#line 14090 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[(8) - (8)].user_list);
          }
    break;

  case 2476:
/* Line 1792 of yacc.c  */
#line 14095 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[(6) - (6)].user_list);
            lex->users_list.push_front ((yyvsp[(4) - (6)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2477:
/* Line 1792 of yacc.c  */
#line 14106 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_GRANT_ROLE;
            PT_statement *tmp= NEW_PTN PT_grant_roles((yyvsp[(2) - (5)].role_or_privilege_list), (yyvsp[(4) - (5)].user_list), (yyvsp[(5) - (5)].is_not_empty));
            MAKE_CMD(tmp);
          }
    break;

  case 2478:
/* Line 1792 of yacc.c  */
#line 14113 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[(2) - (9)].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[(4) - (9)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(4) - (9)].acl_type));
          }
    break;

  case 2479:
/* Line 1792 of yacc.c  */
#line 14127 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2480:
/* Line 1792 of yacc.c  */
#line 14133 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[(6) - (11)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(6) - (11)].acl_type));
          }
    break;

  case 2481:
/* Line 1792 of yacc.c  */
#line 14144 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[(7) - (7)].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list.push_front ((yyvsp[(4) - (7)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2482:
/* Line 1792 of yacc.c  */
#line 14155 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::TABLE; }
    break;

  case 2483:
/* Line 1792 of yacc.c  */
#line 14156 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::TABLE; }
    break;

  case 2484:
/* Line 1792 of yacc.c  */
#line 14157 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::FUNCTION; }
    break;

  case 2485:
/* Line 1792 of yacc.c  */
#line 14158 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
    break;

  case 2488:
/* Line 1792 of yacc.c  */
#line 14168 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.role_or_privilege_list)= NEW_PTN Trivial_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[(1) - (1)].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2489:
/* Line 1792 of yacc.c  */
#line 14174 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.role_or_privilege_list)= (yyvsp[(1) - (3)].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[(3) - (3)].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2490:
/* Line 1792 of yacc.c  */
#line 14183 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].lex_str), (yyvsp[(2) - (2)].lex_cstring_list));
          }
    break;

  case 2491:
/* Line 1792 of yacc.c  */
#line 14190 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[(1) - (3)]), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str)); }
    break;

  case 2492:
/* Line 1792 of yacc.c  */
#line 14192 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), SELECT_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2493:
/* Line 1792 of yacc.c  */
#line 14194 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), INSERT_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2494:
/* Line 1792 of yacc.c  */
#line 14196 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), UPDATE_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2495:
/* Line 1792 of yacc.c  */
#line 14198 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), REFERENCES_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2496:
/* Line 1792 of yacc.c  */
#line 14200 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), DELETE_ACL); }
    break;

  case 2497:
/* Line 1792 of yacc.c  */
#line 14202 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), 0); }
    break;

  case 2498:
/* Line 1792 of yacc.c  */
#line 14204 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), INDEX_ACL); }
    break;

  case 2499:
/* Line 1792 of yacc.c  */
#line 14206 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), ALTER_ACL); }
    break;

  case 2500:
/* Line 1792 of yacc.c  */
#line 14208 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), CREATE_ACL); }
    break;

  case 2501:
/* Line 1792 of yacc.c  */
#line 14210 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), DROP_ACL); }
    break;

  case 2502:
/* Line 1792 of yacc.c  */
#line 14212 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), EXECUTE_ACL); }
    break;

  case 2503:
/* Line 1792 of yacc.c  */
#line 14214 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), RELOAD_ACL); }
    break;

  case 2504:
/* Line 1792 of yacc.c  */
#line 14216 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), SHUTDOWN_ACL); }
    break;

  case 2505:
/* Line 1792 of yacc.c  */
#line 14218 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), PROCESS_ACL); }
    break;

  case 2506:
/* Line 1792 of yacc.c  */
#line 14220 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), FILE_ACL); }
    break;

  case 2507:
/* Line 1792 of yacc.c  */
#line 14222 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), GRANT_ACL); }
    break;

  case 2508:
/* Line 1792 of yacc.c  */
#line 14224 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), SHOW_DB_ACL); }
    break;

  case 2509:
/* Line 1792 of yacc.c  */
#line 14226 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { 
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
    break;

  case 2510:
/* Line 1792 of yacc.c  */
#line 14240 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (3)]), CREATE_TMP_ACL); }
    break;

  case 2511:
/* Line 1792 of yacc.c  */
#line 14242 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), LOCK_TABLES_ACL); }
    break;

  case 2512:
/* Line 1792 of yacc.c  */
#line 14244 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), REPL_SLAVE_ACL); }
    break;

  case 2513:
/* Line 1792 of yacc.c  */
#line 14246 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), REPL_CLIENT_ACL); }
    break;

  case 2514:
/* Line 1792 of yacc.c  */
#line 14248 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_VIEW_ACL); }
    break;

  case 2515:
/* Line 1792 of yacc.c  */
#line 14250 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), SHOW_VIEW_ACL); }
    break;

  case 2516:
/* Line 1792 of yacc.c  */
#line 14252 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_PROC_ACL); }
    break;

  case 2517:
/* Line 1792 of yacc.c  */
#line 14254 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), ALTER_PROC_ACL); }
    break;

  case 2518:
/* Line 1792 of yacc.c  */
#line 14256 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_USER_ACL); }
    break;

  case 2519:
/* Line 1792 of yacc.c  */
#line 14258 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), EVENT_ACL); }
    break;

  case 2520:
/* Line 1792 of yacc.c  */
#line 14260 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), TRIGGER_ACL); }
    break;

  case 2521:
/* Line 1792 of yacc.c  */
#line 14262 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_TABLESPACE_ACL); }
    break;

  case 2522:
/* Line 1792 of yacc.c  */
#line 14264 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_ROLE_ACL); }
    break;

  case 2523:
/* Line 1792 of yacc.c  */
#line 14266 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), DROP_ROLE_ACL); }
    break;

  case 2524:
/* Line 1792 of yacc.c  */
#line 14270 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2525:
/* Line 1792 of yacc.c  */
#line 14271 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2526:
/* Line 1792 of yacc.c  */
#line 14275 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2527:
/* Line 1792 of yacc.c  */
#line 14276 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2530:
/* Line 1792 of yacc.c  */
#line 14286 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2531:
/* Line 1792 of yacc.c  */
#line 14296 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2532:
/* Line 1792 of yacc.c  */
#line 14306 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2533:
/* Line 1792 of yacc.c  */
#line 14319 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2534:
/* Line 1792 of yacc.c  */
#line 14333 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2535:
/* Line 1792 of yacc.c  */
#line 14345 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2536:
/* Line 1792 of yacc.c  */
#line 14357 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2537:
/* Line 1792 of yacc.c  */
#line 14369 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= new List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2538:
/* Line 1792 of yacc.c  */
#line 14375 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= (yyvsp[(1) - (3)].user_list);
            if ((yyval.user_list)->push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2539:
/* Line 1792 of yacc.c  */
#line 14384 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= new List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2540:
/* Line 1792 of yacc.c  */
#line 14390 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= (yyvsp[(1) - (3)].user_list);
            if ((yyval.user_list)->push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2541:
/* Line 1792 of yacc.c  */
#line 14399 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2542:
/* Line 1792 of yacc.c  */
#line 14404 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2543:
/* Line 1792 of yacc.c  */
#line 14412 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->auth.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->auth.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2544:
/* Line 1792 of yacc.c  */
#line 14420 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user);
            (yyvsp[(1) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(1) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(1) - (5)].lex_user)->uses_identified_by_password_clause= true;
            if (Lex->sql_command == SQLCOM_ALTER_USER)
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
              push_deprecated_warn(YYTHD, "IDENTIFIED BY PASSWORD",
                                   "IDENTIFIED WITH <plugin> AS <hash>");
          }
    break;

  case 2545:
/* Line 1792 of yacc.c  */
#line 14435 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->plugin.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_with_clause= true;
          }
    break;

  case 2546:
/* Line 1792 of yacc.c  */
#line 14443 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_authentication_string_clause= true;
          }
    break;

  case 2547:
/* Line 1792 of yacc.c  */
#line 14453 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2548:
/* Line 1792 of yacc.c  */
#line 14464 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user);
            (yyvsp[(1) - (1)].lex_user)->auth= NULL_CSTR;
          }
    break;

  case 2549:
/* Line 1792 of yacc.c  */
#line 14471 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_cstring_list)= NULL; }
    break;

  case 2550:
/* Line 1792 of yacc.c  */
#line 14472 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.lex_cstring_list)= (yyvsp[(2) - (3)].lex_cstring_list); }
    break;

  case 2551:
/* Line 1792 of yacc.c  */
#line 14477 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_cstring_list)= NEW_PTN Trivial_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[(1) - (1)].lex_str))))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2552:
/* Line 1792 of yacc.c  */
#line 14483 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_cstring_list)= (yyvsp[(1) - (3)].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[(3) - (3)].lex_str))))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2554:
/* Line 1792 of yacc.c  */
#line 14493 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2555:
/* Line 1792 of yacc.c  */
#line 14497 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2556:
/* Line 1792 of yacc.c  */
#line 14501 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2557:
/* Line 1792 of yacc.c  */
#line 14505 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2558:
/* Line 1792 of yacc.c  */
#line 14511 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2560:
/* Line 1792 of yacc.c  */
#line 14516 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2561:
/* Line 1792 of yacc.c  */
#line 14517 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2562:
/* Line 1792 of yacc.c  */
#line 14521 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2563:
/* Line 1792 of yacc.c  */
#line 14522 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2564:
/* Line 1792 of yacc.c  */
#line 14526 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2565:
/* Line 1792 of yacc.c  */
#line 14528 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2566:
/* Line 1792 of yacc.c  */
#line 14534 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2567:
/* Line 1792 of yacc.c  */
#line 14540 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2568:
/* Line 1792 of yacc.c  */
#line 14546 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2569:
/* Line 1792 of yacc.c  */
#line 14555 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2570:
/* Line 1792 of yacc.c  */
#line 14560 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2571:
/* Line 1792 of yacc.c  */
#line 14564 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2572:
/* Line 1792 of yacc.c  */
#line 14565 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2573:
/* Line 1792 of yacc.c  */
#line 14570 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2574:
/* Line 1792 of yacc.c  */
#line 14571 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2575:
/* Line 1792 of yacc.c  */
#line 14572 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2576:
/* Line 1792 of yacc.c  */
#line 14577 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2577:
/* Line 1792 of yacc.c  */
#line 14578 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2578:
/* Line 1792 of yacc.c  */
#line 14579 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2579:
/* Line 1792 of yacc.c  */
#line 14583 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2580:
/* Line 1792 of yacc.c  */
#line 14584 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2581:
/* Line 1792 of yacc.c  */
#line 14589 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2582:
/* Line 1792 of yacc.c  */
#line 14601 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2583:
/* Line 1792 of yacc.c  */
#line 14611 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2584:
/* Line 1792 of yacc.c  */
#line 14620 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2585:
/* Line 1792 of yacc.c  */
#line 14629 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2586:
/* Line 1792 of yacc.c  */
#line 14642 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2587:
/* Line 1792 of yacc.c  */
#line 14643 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2588:
/* Line 1792 of yacc.c  */
#line 14644 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2591:
/* Line 1792 of yacc.c  */
#line 14657 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (1)].query_expression)->has_into_clause())
              YYTHD->syntax_error_at((yylsp[(1) - (1)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));

            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[(1) - (1)].query_expression));
          }
    break;

  case 2592:
/* Line 1792 of yacc.c  */
#line 14669 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
    break;

  case 2593:
/* Line 1792 of yacc.c  */
#line 14670 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
    break;

  case 2594:
/* Line 1792 of yacc.c  */
#line 14671 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
    break;

  case 2595:
/* Line 1792 of yacc.c  */
#line 14672 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
    break;

  case 2596:
/* Line 1792 of yacc.c  */
#line 14673 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
    break;

  case 2597:
/* Line 1792 of yacc.c  */
#line 14674 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
    break;

  case 2598:
/* Line 1792 of yacc.c  */
#line 14675 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_FOUND_ROWS; }
    break;

  case 2599:
/* Line 1792 of yacc.c  */
#line 14676 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_ALL; }
    break;

  case 2600:
/* Line 1792 of yacc.c  */
#line 14687 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2601:
/* Line 1792 of yacc.c  */
#line 14689 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2602:
/* Line 1792 of yacc.c  */
#line 14691 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2616:
/* Line 1792 of yacc.c  */
#line 14724 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2617:
/* Line 1792 of yacc.c  */
#line 14738 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2618:
/* Line 1792 of yacc.c  */
#line 14751 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2619:
/* Line 1792 of yacc.c  */
#line 14753 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2620:
/* Line 1792 of yacc.c  */
#line 14755 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2621:
/* Line 1792 of yacc.c  */
#line 14760 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
    break;

  case 2622:
/* Line 1792 of yacc.c  */
#line 14765 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2623:
/* Line 1792 of yacc.c  */
#line 14767 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2624:
/* Line 1792 of yacc.c  */
#line 14769 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
    break;

  case 2625:
/* Line 1792 of yacc.c  */
#line 14774 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2626:
/* Line 1792 of yacc.c  */
#line 14776 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2627:
/* Line 1792 of yacc.c  */
#line 14778 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2628:
/* Line 1792 of yacc.c  */
#line 14783 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[(4) - (4)].simple_ident_list).size())
            {
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[(4) - (4)].simple_ident_list)), sizeof((yyvsp[(4) - (4)].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
    break;

  case 2630:
/* Line 1792 of yacc.c  */
#line 14814 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[(1) - (2)].query_expression));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[(2) - (2)].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[(2) - (2)]).cpp.end - (yylsp[(1) - (2)]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[(1) - (2)]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
          }
    break;

  case 2631:
/* Line 1792 of yacc.c  */
#line 14864 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_NONE; }
    break;

  case 2632:
/* Line 1792 of yacc.c  */
#line 14865 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_CASCADED; }
    break;

  case 2633:
/* Line 1792 of yacc.c  */
#line 14866 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_CASCADED; }
    break;

  case 2634:
/* Line 1792 of yacc.c  */
#line 14867 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_LOCAL; }
    break;

  case 2635:
/* Line 1792 of yacc.c  */
#line 14878 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
    break;

  case 2636:
/* Line 1792 of yacc.c  */
#line 14880 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
    break;

  case 2637:
/* Line 1792 of yacc.c  */
#line 14885 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
    break;

  case 2638:
/* Line 1792 of yacc.c  */
#line 14891 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[(1) - (2)].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length };
            }
    break;

  case 2639:
/* Line 1792 of yacc.c  */
#line 14908 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[(2) - (10)].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[(3) - (10)].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[(4) - (10)].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[(10) - (10)].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[(10) - (10)].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[(1) - (10)]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[(6) - (10)]).cpp.start);
            lex->ident.length= (yylsp[(8) - (10)]).cpp.start - (yylsp[(6) - (10)]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[(2) - (10)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[(10) - (10)]).cpp.end);
          }
    break;

  case 2640:
/* Line 1792 of yacc.c  */
#line 14940 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (12)].table),
                                                    (LEX_STRING*) 0,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
    break;

  case 2641:
/* Line 1792 of yacc.c  */
#line 14977 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[(2) - (7)]).cpp.start;
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2642:
/* Line 1792 of yacc.c  */
#line 14995 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[(2) - (6)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(2) - (6)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[(1) - (6)]).cpp.start;
            lex->udf.name = (yyvsp[(2) - (6)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(4) - (6)].num);
            lex->udf.dl=(yyvsp[(6) - (6)].lex_str).str;
          }
    break;

  case 2643:
/* Line 1792 of yacc.c  */
#line 15017 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->spname= (yyvsp[(2) - (3)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[(3) - (3)]).cpp.end);
          }
    break;

  case 2644:
/* Line 1792 of yacc.c  */
#line 15041 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(6) - (6)]).cpp.start);
          }
    break;

  case 2645:
/* Line 1792 of yacc.c  */
#line 15047 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[(9) - (10)].type));
            enum_field_types field_type= (yyvsp[(9) - (10)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(9) - (10)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(10) - (10)].charset)))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[(9) - (10)].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[(9) - (10)].type)->get_length(), (yyvsp[(9) - (10)].type)->get_dec(),
                                            (yyvsp[(9) - (10)].type)->get_type_flags(), NULL, NULL, &NULL_STR, 0,
                                            (yyvsp[(9) - (10)].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[(9) - (10)].type)->get_uint_geom_type(), NULL))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2646:
/* Line 1792 of yacc.c  */
#line 15086 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2647:
/* Line 1792 of yacc.c  */
#line 15094 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
    break;

  case 2648:
/* Line 1792 of yacc.c  */
#line 15153 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[(2) - (2)]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[(2) - (2)].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
    break;

  case 2649:
/* Line 1792 of yacc.c  */
#line 15173 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[(4) - (4)]).cpp.end);
          }
    break;

  case 2650:
/* Line 1792 of yacc.c  */
#line 15178 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(7) - (7)]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2651:
/* Line 1792 of yacc.c  */
#line 15186 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2652:
/* Line 1792 of yacc.c  */
#line 15194 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
    break;

  case 2653:
/* Line 1792 of yacc.c  */
#line 15208 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2654:
/* Line 1792 of yacc.c  */
#line 15213 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2655:
/* Line 1792 of yacc.c  */
#line 15218 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2656:
/* Line 1792 of yacc.c  */
#line 15223 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2657:
/* Line 1792 of yacc.c  */
#line 15228 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2658:
/* Line 1792 of yacc.c  */
#line 15233 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[(3) - (3)].is_not_empty));
          }
    break;

  case 2659:
/* Line 1792 of yacc.c  */
#line 15240 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2660:
/* Line 1792 of yacc.c  */
#line 15241 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2661:
/* Line 1792 of yacc.c  */
#line 15245 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
    break;

  case 2662:
/* Line 1792 of yacc.c  */
#line 15254 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2663:
/* Line 1792 of yacc.c  */
#line 15264 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            // check for overwflow of xid format id 
            bool format_id_overflow_detected= ((yyvsp[(5) - (5)].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2664:
/* Line 1792 of yacc.c  */
#line 15281 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2665:
/* Line 1792 of yacc.c  */
#line 15282 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2666:
/* Line 1792 of yacc.c  */
#line 15286 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2667:
/* Line 1792 of yacc.c  */
#line 15287 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_JOIN;        }
    break;

  case 2668:
/* Line 1792 of yacc.c  */
#line 15288 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_RESUME;      }
    break;

  case 2669:
/* Line 1792 of yacc.c  */
#line 15292 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2670:
/* Line 1792 of yacc.c  */
#line 15293 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
    break;

  case 2671:
/* Line 1792 of yacc.c  */
#line 15298 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2672:
/* Line 1792 of yacc.c  */
#line 15300 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_SUSPEND;     }
    break;

  case 2673:
/* Line 1792 of yacc.c  */
#line 15302 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
    break;

  case 2674:
/* Line 1792 of yacc.c  */
#line 15307 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_install_plugin((yyvsp[(3) - (5)].lex_str), (yyvsp[(5) - (5)].lex_str));
          }
    break;

  case 2675:
/* Line 1792 of yacc.c  */
#line 15313 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new Sql_cmd_install_component((yyvsp[(3) - (3)].lex_str_list));
          }
    break;

  case 2676:
/* Line 1792 of yacc.c  */
#line 15322 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_uninstall_plugin((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2677:
/* Line 1792 of yacc.c  */
#line 15328 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new Sql_cmd_uninstall_component((yyvsp[(3) - (3)].lex_str_list));
          }
    break;

  case 2678:
/* Line 1792 of yacc.c  */
#line 15337 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[(1) - (1)].lex_str)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2679:
/* Line 1792 of yacc.c  */
#line 15343 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_list)= (yyvsp[(1) - (3)].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[(3) - (3)].lex_str)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2680:
/* Line 1792 of yacc.c  */
#line 15352 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/mysql-8.0.1-dmr-release-export-10982089_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[(4) - (4)].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
    break;


/* Line 1792 of yacc.c  */
#line 41934 "/export/home2/pb2/build/sb_2-22823765-1490244772.57/dist_GPL/sql/sql_yacc.cc"
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, YYTHD);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD);
    }
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


