/* A Bison parser, made by GNU Bison 2.7.  */

/* Bison implementation for Yacc-like parsers in C
   
      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.7"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yylval          MYSQLlval
#define yychar          MYSQLchar
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs
#define yylloc          MYSQLlloc

/* Copy the first part of user declarations.  */
/* Line 371 of yacc.c  */
#line 24 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "partition_info.h"                   /* partition_info */
#include "sql_partition.h"                    /* mem_alloc_error */
#include "auth_common.h"                      /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype */
#include "rpl_slave.h"
#include "rpl_msr.h"       /* multisource replication */
#include "rpl_filter.h"
#include "mysqld.h"        // slave_net_timeout national_charset_info ...
#include "log_event.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "key_spec.h"
#include "sp_head.h"
#include "sp_instr.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_servers.h"
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "opt_explain_traditional.h"
#include "opt_explain_json.h"
#include "rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql_show_status.h"                 // build_show_session_status, ...
#include "parse_location.h"
#include "parse_tree_helpers.h"
#include "lex_token.h"
#include "dd/info_schema/show.h"             // build_show_...
#include "dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql_base.h"                        // find_temporary_table
#include "item_cmpfunc.h"
#include "item_geofunc.h"
#include "item_json_func.h"
#include "sql_plugin.h"                      // plugin_is_ready
#include "sql_component.h"
#include "parse_tree_hints.h"
#include "derror.h"
#include "sql_trigger.h"                     // Sql_cmd_create_trigger,
                                             // Sql_cmd_create_trigger

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, (char*) (A));      \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_syntax_error(YYTHD, ER_THD(YYTHD,ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize_() function call wrapper
*/
#define TMP_CONTEXTUALIZE(x)        \
  do                                \
  {                                 \
    Parse_context pc(YYTHD, Select);\
    if ((x)->contextualize_(&pc))   \
      MYSQL_YYABORT;                \
  } while(0)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    Parse_context pc(YYTHD, Select);                    \
    if (YYTHD->is_error() || (x)->contextualize(&pc))   \
      MYSQL_YYABORT;                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                  \
  do                                                   \
  {                                                    \
    Parse_context pc(YYTHD, Select);                   \
    if (YYTHD->is_error() || (x)->itemize(&pc, (y)))   \
      MYSQL_YYABORT;                                   \
  } while(0)

/**
  PT_statement::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                     \
  do                                                    \
  {                                                     \
    if (YYTHD->is_error())                              \
      MYSQL_YYABORT;                                    \
    Lex->m_sql_cmd= (x)->make_cmd(YYTHD);               \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif

/**
  The word DEFAULT is a reserved word, but it is treated as an identifier by
  both parser and the AST. In order to make the interfaces match up, there has
  to be a LEX_STRING for DEFAULT.
*/
static const LEX_STRING default_word =
{ STRING_WITH_LEN(const_cast<char*>("DEFAULT")) };


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use my_syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static void MYSQLerror(YYLTYPE *, THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  my_syntax_error(thd, s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "parse_tree_nodes.h"
#include "parse_tree_items.h"
#include "parse_tree_partitions.h"
#include "parse_tree_column_attrs.h"


/* Line 371 of yacc.c  */
#line 459 "/export/home/pb2/build/sb_0-20188954-1472128388.66/dist_GPL/sql/sql_yacc.cc"

# ifndef YY_NULL
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULL nullptr
#  else
#   define YY_NULL 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_0_20188954_1472128388_66_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_0_20188954_1472128388_66_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACCOUNT_SYM = 260,
     ACTION = 261,
     ADD = 262,
     ADDDATE_SYM = 263,
     AFTER_SYM = 264,
     AGAINST = 265,
     AGGREGATE_SYM = 266,
     ALGORITHM_SYM = 267,
     ALL = 268,
     ALTER = 269,
     ALWAYS_SYM = 270,
     ANALYSE_SYM = 271,
     ANALYZE_SYM = 272,
     AND_AND_SYM = 273,
     AND_SYM = 274,
     ANY_SYM = 275,
     AS = 276,
     ASC = 277,
     ASCII_SYM = 278,
     ASENSITIVE_SYM = 279,
     AT_SYM = 280,
     AUTOEXTEND_SIZE_SYM = 281,
     AUTO_INC = 282,
     AVG_ROW_LENGTH = 283,
     AVG_SYM = 284,
     BACKUP_SYM = 285,
     BEFORE_SYM = 286,
     BEGIN_SYM = 287,
     BETWEEN_SYM = 288,
     BIGINT_SYM = 289,
     BINARY_SYM = 290,
     BINLOG_SYM = 291,
     BIN_NUM = 292,
     BIT_AND = 293,
     BIT_OR = 294,
     BIT_SYM = 295,
     BIT_XOR = 296,
     BLOB_SYM = 297,
     BLOCK_SYM = 298,
     BOOLEAN_SYM = 299,
     BOOL_SYM = 300,
     BOTH = 301,
     BTREE_SYM = 302,
     BY = 303,
     BYTE_SYM = 304,
     CACHE_SYM = 305,
     CALL_SYM = 306,
     CASCADE = 307,
     CASCADED = 308,
     CASE_SYM = 309,
     CAST_SYM = 310,
     CATALOG_NAME_SYM = 311,
     CHAIN_SYM = 312,
     CHANGE = 313,
     CHANGED = 314,
     CHANNEL_SYM = 315,
     CHARSET = 316,
     CHAR_SYM = 317,
     CHECKSUM_SYM = 318,
     CHECK_SYM = 319,
     CIPHER_SYM = 320,
     CLASS_ORIGIN_SYM = 321,
     CLIENT_SYM = 322,
     CLOSE_SYM = 323,
     COALESCE = 324,
     CODE_SYM = 325,
     COLLATE_SYM = 326,
     COLLATION_SYM = 327,
     COLUMNS = 328,
     COLUMN_SYM = 329,
     COLUMN_FORMAT_SYM = 330,
     COLUMN_NAME_SYM = 331,
     COMMENT_SYM = 332,
     COMMITTED_SYM = 333,
     COMMIT_SYM = 334,
     COMPACT_SYM = 335,
     COMPLETION_SYM = 336,
     COMPRESSED_SYM = 337,
     COMPRESSION_SYM = 338,
     ENCRYPTION_SYM = 339,
     CONCURRENT = 340,
     CONDITION_SYM = 341,
     CONNECTION_SYM = 342,
     CONSISTENT_SYM = 343,
     CONSTRAINT = 344,
     CONSTRAINT_CATALOG_SYM = 345,
     CONSTRAINT_NAME_SYM = 346,
     CONSTRAINT_SCHEMA_SYM = 347,
     CONTAINS_SYM = 348,
     CONTEXT_SYM = 349,
     CONTINUE_SYM = 350,
     CONVERT_SYM = 351,
     COUNT_SYM = 352,
     CPU_SYM = 353,
     CREATE = 354,
     CROSS = 355,
     CUBE_SYM = 356,
     CURDATE = 357,
     CURRENT_SYM = 358,
     CURRENT_USER = 359,
     CURSOR_SYM = 360,
     CURSOR_NAME_SYM = 361,
     CURTIME = 362,
     DATABASE = 363,
     DATABASES = 364,
     DATAFILE_SYM = 365,
     DATA_SYM = 366,
     DATETIME_SYM = 367,
     DATE_ADD_INTERVAL = 368,
     DATE_SUB_INTERVAL = 369,
     DATE_SYM = 370,
     DAY_HOUR_SYM = 371,
     DAY_MICROSECOND_SYM = 372,
     DAY_MINUTE_SYM = 373,
     DAY_SECOND_SYM = 374,
     DAY_SYM = 375,
     DEALLOCATE_SYM = 376,
     DECIMAL_NUM = 377,
     DECIMAL_SYM = 378,
     DECLARE_SYM = 379,
     DEFAULT_SYM = 380,
     DEFAULT_AUTH_SYM = 381,
     DEFINER_SYM = 382,
     DELAYED_SYM = 383,
     DELAY_KEY_WRITE_SYM = 384,
     DELETE_SYM = 385,
     DESC = 386,
     DESCRIBE = 387,
     DES_KEY_FILE = 388,
     DETERMINISTIC_SYM = 389,
     DIAGNOSTICS_SYM = 390,
     DIRECTORY_SYM = 391,
     DISABLE_SYM = 392,
     DISCARD = 393,
     DISK_SYM = 394,
     DISTINCT = 395,
     DIV_SYM = 396,
     DOUBLE_SYM = 397,
     DO_SYM = 398,
     DROP = 399,
     DUAL_SYM = 400,
     DUMPFILE = 401,
     DUPLICATE_SYM = 402,
     DYNAMIC_SYM = 403,
     EACH_SYM = 404,
     ELSE = 405,
     ELSEIF_SYM = 406,
     ENABLE_SYM = 407,
     ENCLOSED = 408,
     END = 409,
     ENDS_SYM = 410,
     END_OF_INPUT = 411,
     ENGINES_SYM = 412,
     ENGINE_SYM = 413,
     ENUM_SYM = 414,
     EQ = 415,
     EQUAL_SYM = 416,
     ERROR_SYM = 417,
     ERRORS = 418,
     ESCAPED = 419,
     ESCAPE_SYM = 420,
     EVENTS_SYM = 421,
     EVENT_SYM = 422,
     EVERY_SYM = 423,
     EXCHANGE_SYM = 424,
     EXECUTE_SYM = 425,
     EXISTS = 426,
     EXIT_SYM = 427,
     EXPANSION_SYM = 428,
     EXPIRE_SYM = 429,
     EXPORT_SYM = 430,
     EXTENDED_SYM = 431,
     EXTENT_SIZE_SYM = 432,
     EXTRACT_SYM = 433,
     FALSE_SYM = 434,
     FAST_SYM = 435,
     FAULTS_SYM = 436,
     FETCH_SYM = 437,
     FILE_SYM = 438,
     FILE_BLOCK_SIZE_SYM = 439,
     FILTER_SYM = 440,
     FIRST_SYM = 441,
     FIXED_SYM = 442,
     FLOAT_NUM = 443,
     FLOAT_SYM = 444,
     FLUSH_SYM = 445,
     FOLLOWS_SYM = 446,
     FORCE_SYM = 447,
     FOREIGN = 448,
     FOR_SYM = 449,
     FORMAT_SYM = 450,
     FOUND_SYM = 451,
     FROM = 452,
     FULL = 453,
     FULLTEXT_SYM = 454,
     FUNCTION_SYM = 455,
     GE = 456,
     GENERAL = 457,
     GENERATED = 458,
     GROUP_REPLICATION = 459,
     GEOMETRYCOLLECTION_SYM = 460,
     GEOMETRY_SYM = 461,
     GET_FORMAT = 462,
     GET_SYM = 463,
     GLOBAL_SYM = 464,
     GRANT = 465,
     GRANTS = 466,
     GROUP_SYM = 467,
     GROUP_CONCAT_SYM = 468,
     GT_SYM = 469,
     HANDLER_SYM = 470,
     HASH_SYM = 471,
     HAVING = 472,
     HELP_SYM = 473,
     HEX_NUM = 474,
     HIGH_PRIORITY = 475,
     HOST_SYM = 476,
     HOSTS_SYM = 477,
     HOUR_MICROSECOND_SYM = 478,
     HOUR_MINUTE_SYM = 479,
     HOUR_SECOND_SYM = 480,
     HOUR_SYM = 481,
     IDENT = 482,
     IDENTIFIED_SYM = 483,
     IDENT_QUOTED = 484,
     IF = 485,
     IGNORE_SYM = 486,
     IGNORE_SERVER_IDS_SYM = 487,
     IMPORT = 488,
     INDEXES = 489,
     INDEX_SYM = 490,
     INFILE = 491,
     INITIAL_SIZE_SYM = 492,
     INNER_SYM = 493,
     INOUT_SYM = 494,
     INSENSITIVE_SYM = 495,
     INSERT_SYM = 496,
     INSERT_METHOD = 497,
     INSTANCE_SYM = 498,
     INSTALL_SYM = 499,
     INTERVAL_SYM = 500,
     INTO = 501,
     INT_SYM = 502,
     INVOKER_SYM = 503,
     IN_SYM = 504,
     IO_AFTER_GTIDS = 505,
     IO_BEFORE_GTIDS = 506,
     IO_SYM = 507,
     IPC_SYM = 508,
     IS = 509,
     ISOLATION = 510,
     ISSUER_SYM = 511,
     ITERATE_SYM = 512,
     JOIN_SYM = 513,
     JSON_SEPARATOR_SYM = 514,
     JSON_SYM = 515,
     KEYS = 516,
     KEY_BLOCK_SIZE = 517,
     KEY_SYM = 518,
     KILL_SYM = 519,
     LANGUAGE_SYM = 520,
     LAST_SYM = 521,
     LE = 522,
     LEADING = 523,
     LEAVES = 524,
     LEAVE_SYM = 525,
     LEFT = 526,
     LESS_SYM = 527,
     LEVEL_SYM = 528,
     LEX_HOSTNAME = 529,
     LIKE = 530,
     LIMIT = 531,
     LINEAR_SYM = 532,
     LINES = 533,
     LINESTRING_SYM = 534,
     LIST_SYM = 535,
     LOAD = 536,
     LOCAL_SYM = 537,
     LOCATOR_SYM = 538,
     LOCKS_SYM = 539,
     LOCK_SYM = 540,
     LOGFILE_SYM = 541,
     LOGS_SYM = 542,
     LONGBLOB_SYM = 543,
     LONGTEXT_SYM = 544,
     LONG_NUM = 545,
     LONG_SYM = 546,
     LOOP_SYM = 547,
     LOW_PRIORITY = 548,
     LT = 549,
     MASTER_AUTO_POSITION_SYM = 550,
     MASTER_BIND_SYM = 551,
     MASTER_CONNECT_RETRY_SYM = 552,
     MASTER_DELAY_SYM = 553,
     MASTER_HOST_SYM = 554,
     MASTER_LOG_FILE_SYM = 555,
     MASTER_LOG_POS_SYM = 556,
     MASTER_PASSWORD_SYM = 557,
     MASTER_PORT_SYM = 558,
     MASTER_RETRY_COUNT_SYM = 559,
     MASTER_SERVER_ID_SYM = 560,
     MASTER_SSL_CAPATH_SYM = 561,
     MASTER_TLS_VERSION_SYM = 562,
     MASTER_SSL_CA_SYM = 563,
     MASTER_SSL_CERT_SYM = 564,
     MASTER_SSL_CIPHER_SYM = 565,
     MASTER_SSL_CRL_SYM = 566,
     MASTER_SSL_CRLPATH_SYM = 567,
     MASTER_SSL_KEY_SYM = 568,
     MASTER_SSL_SYM = 569,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
     MASTER_SYM = 571,
     MASTER_USER_SYM = 572,
     MASTER_HEARTBEAT_PERIOD_SYM = 573,
     MATCH = 574,
     MAX_CONNECTIONS_PER_HOUR = 575,
     MAX_QUERIES_PER_HOUR = 576,
     MAX_ROWS = 577,
     MAX_SIZE_SYM = 578,
     MAX_SYM = 579,
     MAX_UPDATES_PER_HOUR = 580,
     MAX_USER_CONNECTIONS_SYM = 581,
     MAX_VALUE_SYM = 582,
     MEDIUMBLOB_SYM = 583,
     MEDIUMINT_SYM = 584,
     MEDIUMTEXT_SYM = 585,
     MEDIUM_SYM = 586,
     MEMORY_SYM = 587,
     MERGE_SYM = 588,
     MESSAGE_TEXT_SYM = 589,
     MICROSECOND_SYM = 590,
     MIGRATE_SYM = 591,
     MINUTE_MICROSECOND_SYM = 592,
     MINUTE_SECOND_SYM = 593,
     MINUTE_SYM = 594,
     MIN_ROWS = 595,
     MIN_SYM = 596,
     MODE_SYM = 597,
     MODIFIES_SYM = 598,
     MODIFY_SYM = 599,
     MOD_SYM = 600,
     MONTH_SYM = 601,
     MULTILINESTRING_SYM = 602,
     MULTIPOINT_SYM = 603,
     MULTIPOLYGON_SYM = 604,
     MUTEX_SYM = 605,
     MYSQL_ERRNO_SYM = 606,
     NAMES_SYM = 607,
     NAME_SYM = 608,
     NATIONAL_SYM = 609,
     NATURAL = 610,
     NCHAR_STRING = 611,
     NCHAR_SYM = 612,
     NDBCLUSTER_SYM = 613,
     NE = 614,
     NEG = 615,
     NEVER_SYM = 616,
     NEW_SYM = 617,
     NEXT_SYM = 618,
     NODEGROUP_SYM = 619,
     NONE_SYM = 620,
     NOT2_SYM = 621,
     NOT_SYM = 622,
     NOW_SYM = 623,
     NO_SYM = 624,
     NO_WAIT_SYM = 625,
     NO_WRITE_TO_BINLOG = 626,
     NULL_SYM = 627,
     NUM = 628,
     NUMBER_SYM = 629,
     NUMERIC_SYM = 630,
     NVARCHAR_SYM = 631,
     OFFSET_SYM = 632,
     ON_SYM = 633,
     ONE_SYM = 634,
     ONLY_SYM = 635,
     OPEN_SYM = 636,
     OPTIMIZE = 637,
     OPTIMIZER_COSTS_SYM = 638,
     OPTIONS_SYM = 639,
     OPTION = 640,
     OPTIONALLY = 641,
     OR2_SYM = 642,
     ORDER_SYM = 643,
     OR_OR_SYM = 644,
     OR_SYM = 645,
     OUTER = 646,
     OUTFILE = 647,
     OUT_SYM = 648,
     OWNER_SYM = 649,
     PACK_KEYS_SYM = 650,
     PAGE_SYM = 651,
     PARAM_MARKER = 652,
     PARSER_SYM = 653,
     OBSOLETE_TOKEN_654 = 654,
     PARTIAL = 655,
     PARTITION_SYM = 656,
     PARTITIONS_SYM = 657,
     PARTITIONING_SYM = 658,
     PASSWORD = 659,
     PHASE_SYM = 660,
     PLUGIN_DIR_SYM = 661,
     PLUGIN_SYM = 662,
     PLUGINS_SYM = 663,
     POINT_SYM = 664,
     POLYGON_SYM = 665,
     PORT_SYM = 666,
     POSITION_SYM = 667,
     PRECEDES_SYM = 668,
     PRECISION = 669,
     PREPARE_SYM = 670,
     PRESERVE_SYM = 671,
     PREV_SYM = 672,
     PRIMARY_SYM = 673,
     PRIVILEGES = 674,
     PROCEDURE_SYM = 675,
     PROCESS = 676,
     PROCESSLIST_SYM = 677,
     PROFILE_SYM = 678,
     PROFILES_SYM = 679,
     PROXY_SYM = 680,
     PURGE = 681,
     QUARTER_SYM = 682,
     QUERY_SYM = 683,
     QUICK = 684,
     RANGE_SYM = 685,
     READS_SYM = 686,
     READ_ONLY_SYM = 687,
     READ_SYM = 688,
     READ_WRITE_SYM = 689,
     REAL_SYM = 690,
     REBUILD_SYM = 691,
     RECOVER_SYM = 692,
     REDOFILE_SYM = 693,
     REDO_BUFFER_SIZE_SYM = 694,
     REDUNDANT_SYM = 695,
     REFERENCES = 696,
     REGEXP = 697,
     RELAY = 698,
     RELAYLOG_SYM = 699,
     RELAY_LOG_FILE_SYM = 700,
     RELAY_LOG_POS_SYM = 701,
     RELAY_THREAD = 702,
     RELEASE_SYM = 703,
     RELOAD = 704,
     REMOVE_SYM = 705,
     RENAME = 706,
     REORGANIZE_SYM = 707,
     REPAIR = 708,
     REPEATABLE_SYM = 709,
     REPEAT_SYM = 710,
     REPLACE_SYM = 711,
     REPLICATION = 712,
     REPLICATE_DO_DB = 713,
     REPLICATE_IGNORE_DB = 714,
     REPLICATE_DO_TABLE = 715,
     REPLICATE_IGNORE_TABLE = 716,
     REPLICATE_WILD_DO_TABLE = 717,
     REPLICATE_WILD_IGNORE_TABLE = 718,
     REPLICATE_REWRITE_DB = 719,
     REQUIRE_SYM = 720,
     RESET_SYM = 721,
     RESIGNAL_SYM = 722,
     RESOURCES = 723,
     RESTORE_SYM = 724,
     RESTRICT = 725,
     RESUME_SYM = 726,
     RETURNED_SQLSTATE_SYM = 727,
     RETURNS_SYM = 728,
     RETURN_SYM = 729,
     REVERSE_SYM = 730,
     REVOKE = 731,
     RIGHT = 732,
     ROLLBACK_SYM = 733,
     ROLLUP_SYM = 734,
     ROTATE_SYM = 735,
     ROUTINE_SYM = 736,
     ROWS_SYM = 737,
     ROW_FORMAT_SYM = 738,
     ROW_SYM = 739,
     ROW_COUNT_SYM = 740,
     RTREE_SYM = 741,
     SAVEPOINT_SYM = 742,
     SCHEDULE_SYM = 743,
     SCHEMA_NAME_SYM = 744,
     SECOND_MICROSECOND_SYM = 745,
     SECOND_SYM = 746,
     SECURITY_SYM = 747,
     SELECT_SYM = 748,
     SENSITIVE_SYM = 749,
     SEPARATOR_SYM = 750,
     SERIALIZABLE_SYM = 751,
     SERIAL_SYM = 752,
     SESSION_SYM = 753,
     SERVER_SYM = 754,
     SERVER_OPTIONS = 755,
     SET_SYM = 756,
     SET_VAR = 757,
     SHARE_SYM = 758,
     SHIFT_LEFT = 759,
     SHIFT_RIGHT = 760,
     SHOW = 761,
     SHUTDOWN = 762,
     SIGNAL_SYM = 763,
     SIGNED_SYM = 764,
     SIMPLE_SYM = 765,
     SLAVE = 766,
     SLOW = 767,
     SMALLINT_SYM = 768,
     SNAPSHOT_SYM = 769,
     SOCKET_SYM = 770,
     SONAME_SYM = 771,
     SOUNDS_SYM = 772,
     SOURCE_SYM = 773,
     SPATIAL_SYM = 774,
     SPECIFIC_SYM = 775,
     SQLEXCEPTION_SYM = 776,
     SQLSTATE_SYM = 777,
     SQLWARNING_SYM = 778,
     SQL_AFTER_GTIDS = 779,
     SQL_AFTER_MTS_GAPS = 780,
     SQL_BEFORE_GTIDS = 781,
     SQL_BIG_RESULT = 782,
     SQL_BUFFER_RESULT = 783,
     SQL_CACHE_SYM = 784,
     SQL_CALC_FOUND_ROWS = 785,
     SQL_NO_CACHE_SYM = 786,
     SQL_SMALL_RESULT = 787,
     SQL_SYM = 788,
     SQL_THREAD = 789,
     SSL_SYM = 790,
     STACKED_SYM = 791,
     STARTING = 792,
     STARTS_SYM = 793,
     START_SYM = 794,
     STATS_AUTO_RECALC_SYM = 795,
     STATS_PERSISTENT_SYM = 796,
     STATS_SAMPLE_PAGES_SYM = 797,
     STATUS_SYM = 798,
     STDDEV_SAMP_SYM = 799,
     STD_SYM = 800,
     STOP_SYM = 801,
     STORAGE_SYM = 802,
     STORED_SYM = 803,
     STRAIGHT_JOIN = 804,
     STRING_SYM = 805,
     SUBCLASS_ORIGIN_SYM = 806,
     SUBDATE_SYM = 807,
     SUBJECT_SYM = 808,
     SUBPARTITIONS_SYM = 809,
     SUBPARTITION_SYM = 810,
     SUBSTRING = 811,
     SUM_SYM = 812,
     SUPER_SYM = 813,
     SUSPEND_SYM = 814,
     SWAPS_SYM = 815,
     SWITCHES_SYM = 816,
     SYSDATE = 817,
     TABLES = 818,
     TABLESPACE_SYM = 819,
     OBSOLETE_TOKEN_820 = 820,
     TABLE_SYM = 821,
     TABLE_CHECKSUM_SYM = 822,
     TABLE_NAME_SYM = 823,
     TEMPORARY = 824,
     TEMPTABLE_SYM = 825,
     TERMINATED = 826,
     TEXT_STRING = 827,
     TEXT_SYM = 828,
     THAN_SYM = 829,
     THEN_SYM = 830,
     TIMESTAMP_SYM = 831,
     TIMESTAMP_ADD = 832,
     TIMESTAMP_DIFF = 833,
     TIME_SYM = 834,
     TINYBLOB_SYM = 835,
     TINYINT_SYM = 836,
     TINYTEXT_SYN = 837,
     TO_SYM = 838,
     TRAILING = 839,
     TRANSACTION_SYM = 840,
     TRIGGERS_SYM = 841,
     TRIGGER_SYM = 842,
     TRIM = 843,
     TRUE_SYM = 844,
     TRUNCATE_SYM = 845,
     TYPES_SYM = 846,
     TYPE_SYM = 847,
     UDF_RETURNS_SYM = 848,
     ULONGLONG_NUM = 849,
     UNCOMMITTED_SYM = 850,
     UNDEFINED_SYM = 851,
     UNDERSCORE_CHARSET = 852,
     UNDOFILE_SYM = 853,
     UNDO_BUFFER_SIZE_SYM = 854,
     UNDO_SYM = 855,
     UNICODE_SYM = 856,
     UNINSTALL_SYM = 857,
     UNION_SYM = 858,
     UNIQUE_SYM = 859,
     UNKNOWN_SYM = 860,
     UNLOCK_SYM = 861,
     UNSIGNED_SYM = 862,
     UNTIL_SYM = 863,
     UPDATE_SYM = 864,
     UPGRADE_SYM = 865,
     USAGE = 866,
     USER = 867,
     USE_FRM = 868,
     USE_SYM = 869,
     USING = 870,
     UTC_DATE_SYM = 871,
     UTC_TIMESTAMP_SYM = 872,
     UTC_TIME_SYM = 873,
     VALIDATION_SYM = 874,
     VALUES = 875,
     VALUE_SYM = 876,
     VARBINARY_SYM = 877,
     VARCHAR_SYM = 878,
     VARIABLES = 879,
     VARIANCE_SYM = 880,
     VARYING = 881,
     VAR_SAMP_SYM = 882,
     VIEW_SYM = 883,
     VIRTUAL_SYM = 884,
     WAIT_SYM = 885,
     WARNINGS = 886,
     WEEK_SYM = 887,
     WEIGHT_STRING_SYM = 888,
     WHEN_SYM = 889,
     WHERE = 890,
     WHILE_SYM = 891,
     WITH = 892,
     WITH_CUBE_SYM = 893,
     WITH_ROLLUP_SYM = 894,
     WITHOUT_SYM = 895,
     WORK_SYM = 896,
     WRAPPER_SYM = 897,
     WRITE_SYM = 898,
     X509_SYM = 899,
     XA_SYM = 900,
     XID_SYM = 901,
     XML_SYM = 902,
     XOR = 903,
     YEAR_MONTH_SYM = 904,
     YEAR_SYM = 905,
     ZEROFILL_SYM = 906,
     JSON_UNQUOTED_SEPARATOR_SYM = 907,
     PERSIST_SYM = 908,
     ROLE_SYM = 909,
     ADMIN_SYM = 910,
     INVISIBLE_SYM = 911,
     VISIBLE_SYM = 912,
     EXCEPT_SYM = 913,
     COMPONENT_SYM = 914,
     GRAMMAR_SELECTOR_EXPR = 915,
     GRAMMAR_SELECTOR_GCOL = 916,
     GRAMMAR_SELECTOR_PART = 917,
     CONDITIONLESS_JOIN = 918,
     SUBQUERY_AS_EXPR = 919,
     EMPTY_FROM_CLAUSE = 920
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define ANALYSE_SYM 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND 293
#define BIT_OR 294
#define BIT_SYM 295
#define BIT_XOR 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define DES_KEY_FILE 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define LOCATOR_SYM 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define REDOFILE_SYM 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define SERVER_OPTIONS 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define SQL_CACHE_SYM 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define UDF_RETURNS_SYM 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define WITH_CUBE_SYM 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define GRAMMAR_SELECTOR_EXPR 915
#define GRAMMAR_SELECTOR_GCOL 916
#define GRAMMAR_SELECTOR_PART 917
#define CONDITIONLESS_JOIN 918
#define SUBQUERY_AS_EXPR 919
#define EMPTY_FROM_CLAUSE 920



#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED

# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (void *YYPARSE_PARAM);
#else
int MYSQLparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (class THD *YYTHD);
#else
int MYSQLparse ();
#endif
#endif /* ! YYPARSE_PARAM */

#endif /* !YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_0_20188954_1472128388_66_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

/* Line 390 of yacc.c  */
#line 1866 "/export/home/pb2/build/sb_0-20188954-1472128388.66/dist_GPL/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(N) (N)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int yyi)
#else
static int
YYID (yyi)
    int yyi;
#endif
{
  return yyi;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
	Stack = &yyptr->Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (YYID (0))
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  824
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   68715

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  685
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  852
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2683
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4599

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   920

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   678,     2,     2,     2,   670,   665,     2,
     674,   675,   668,   667,   677,   666,   683,   669,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   684,   681,
       2,     2,     2,     2,   682,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   671,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   679,   664,   680,   672,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   673,
     676
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    13,    20,    22,    23,    28,
      31,    32,    34,    36,    38,    40,    42,    44,    46,    48,
      50,    52,    54,    56,    58,    60,    62,    64,    66,    68,
      70,    72,    74,    76,    78,    80,    82,    84,    86,    88,
      90,    92,    94,    96,    98,   100,   102,   104,   106,   108,
     110,   112,   114,   116,   118,   120,   122,   124,   126,   128,
     130,   132,   134,   136,   138,   140,   142,   144,   146,   150,
     152,   154,   159,   161,   164,   165,   170,   171,   174,   178,
     180,   183,   184,   188,   189,   196,   197,   203,   205,   209,
     213,   217,   221,   225,   229,   233,   237,   240,   244,   246,
     250,   252,   255,   259,   265,   273,   276,   280,   282,   286,
     290,   293,   297,   299,   303,   305,   307,   311,   315,   319,
     323,   327,   331,   335,   339,   343,   347,   351,   355,   359,
     363,   367,   371,   375,   379,   383,   387,   393,   397,   399,
     400,   402,   406,   408,   412,   416,   420,   424,   425,   429,
     439,   446,   454,   464,   466,   468,   469,   476,   477,   481,
     490,   496,   501,   505,   517,   529,   541,   553,   555,   559,
     562,   565,   568,   571,   574,   577,   580,   581,   594,   595,
     602,   605,   606,   608,   612,   614,   615,   618,   619,   622,
     623,   625,   629,   634,   635,   638,   639,   642,   644,   646,
     648,   650,   652,   654,   656,   658,   660,   662,   664,   666,
     668,   670,   671,   675,   677,   678,   681,   682,   685,   688,
     691,   694,   697,   701,   705,   707,   709,   711,   714,   718,
     722,   723,   728,   729,   733,   734,   736,   740,   742,   743,
     745,   749,   751,   755,   756,   758,   762,   764,   769,   770,
     772,   774,   776,   777,   781,   784,   788,   789,   793,   799,
     805,   806,   814,   815,   822,   824,   826,   828,   832,   834,
     836,   838,   842,   843,   845,   847,   849,   851,   854,   856,
     860,   862,   864,   865,   867,   868,   871,   875,   881,   883,
     885,   887,   889,   891,   893,   895,   897,   899,   901,   903,
     905,   907,   909,   911,   915,   920,   921,   923,   925,   927,
     931,   933,   937,   941,   943,   946,   948,   950,   952,   954,
     958,   962,   964,   966,   968,   970,   972,   974,   976,   978,
     980,   982,   984,   986,   988,   990,   994,   995,   998,  1000,
    1002,  1004,  1006,  1008,  1010,  1012,  1014,  1016,  1018,  1020,
    1022,  1024,  1025,  1031,  1032,  1035,  1036,  1040,  1041,  1044,
    1047,  1050,  1053,  1054,  1061,  1064,  1065,  1068,  1070,  1072,
    1076,  1077,  1078,  1079,  1087,  1088,  1091,  1094,  1096,  1098,
    1099,  1100,  1109,  1110,  1117,  1119,  1122,  1124,  1127,  1128,
    1129,  1136,  1137,  1138,  1145,  1146,  1149,  1150,  1156,  1157,
    1159,  1160,  1166,  1167,  1170,  1171,  1177,  1182,  1183,  1184,
    1193,  1194,  1195,  1204,  1206,  1208,  1210,  1212,  1214,  1217,
    1222,  1228,  1229,  1234,  1239,  1244,  1248,  1252,  1255,  1258,
    1259,  1262,  1264,  1267,  1271,  1273,  1275,  1277,  1278,  1280,
    1282,  1286,  1288,  1290,  1292,  1294,  1296,  1298,  1300,  1302,
    1304,  1305,  1307,  1309,  1313,  1315,  1317,  1319,  1321,  1323,
    1324,  1326,  1328,  1332,  1334,  1336,  1338,  1340,  1342,  1344,
    1346,  1347,  1349,  1351,  1355,  1357,  1359,  1361,  1364,  1367,
    1370,  1372,  1374,  1376,  1378,  1381,  1385,  1389,  1393,  1397,
    1401,  1405,  1409,  1413,  1418,  1422,  1424,  1426,  1428,  1430,
    1433,  1435,  1438,  1440,  1441,  1444,  1446,  1449,  1451,  1458,
    1465,  1471,  1476,  1482,  1487,  1493,  1494,  1496,  1497,  1501,
    1502,  1505,  1506,  1515,  1525,  1526,  1528,  1530,  1534,  1535,
    1538,  1539,  1543,  1545,  1549,  1555,  1556,  1561,  1565,  1567,
    1569,  1571,  1575,  1577,  1581,  1582,  1587,  1589,  1593,  1595,
    1597,  1598,  1602,  1604,  1608,  1612,  1613,  1615,  1618,  1620,
    1624,  1629,  1633,  1637,  1641,  1646,  1651,  1655,  1656,  1658,
    1660,  1663,  1665,  1667,  1668,  1672,  1674,  1677,  1679,  1683,
    1684,  1686,  1690,  1694,  1698,  1702,  1706,  1710,  1714,  1718,
    1722,  1726,  1730,  1734,  1738,  1742,  1746,  1750,  1754,  1758,
    1764,  1766,  1768,  1772,  1777,  1782,  1786,  1789,  1792,  1796,
    1800,  1802,  1804,  1809,  1814,  1816,  1818,  1820,  1822,  1824,
    1826,  1828,  1830,  1832,  1834,  1836,  1838,  1840,  1842,  1846,
    1848,  1850,  1854,  1855,  1857,  1859,  1866,  1874,  1882,  1890,
    1899,  1902,  1907,  1908,  1910,  1913,  1916,  1926,  1927,  1930,
    1931,  1933,  1935,  1939,  1943,  1947,  1949,  1952,  1954,  1956,
    1960,  1963,  1967,  1970,  1973,  1975,  1979,  1983,  1986,  1990,
    1992,  1995,  1998,  2001,  2003,  2006,  2008,  2010,  2012,  2015,
    2019,  2022,  2026,  2029,  2032,  2038,  2044,  2047,  2049,  2051,
    2053,  2055,  2057,  2059,  2061,  2063,  2065,  2067,  2069,  2072,
    2075,  2077,  2080,  2082,  2085,  2089,  2092,  2094,  2096,  2098,
    2100,  2102,  2104,  2107,  2108,  2110,  2112,  2114,  2116,  2118,
    2119,  2121,  2123,  2129,  2130,  2134,  2135,  2138,  2142,  2143,
    2145,  2148,  2150,  2152,  2154,  2156,  2160,  2164,  2168,  2172,
    2173,  2175,  2176,  2178,  2179,  2181,  2184,  2186,  2188,  2191,
    2194,  2198,  2200,  2204,  2207,  2209,  2212,  2215,  2218,  2221,
    2224,  2226,  2228,  2230,  2232,  2234,  2236,  2239,  2241,  2243,
    2246,  2248,  2250,  2252,  2254,  2256,  2257,  2260,  2262,  2264,
    2266,  2268,  2270,  2271,  2274,  2275,  2278,  2280,  2282,  2283,
    2285,  2287,  2290,  2293,  2295,  2298,  2301,  2302,  2304,  2306,
    2308,  2312,  2314,  2318,  2319,  2321,  2322,  2327,  2329,  2331,
    2333,  2334,  2336,  2339,  2341,  2343,  2346,  2348,  2352,  2356,
    2358,  2360,  2361,  2364,  2365,  2367,  2373,  2374,  2378,  2382,
    2384,  2385,  2388,  2391,  2394,  2395,  2399,  2403,  2410,  2417,
    2419,  2421,  2424,  2427,  2430,  2432,  2435,  2438,  2440,  2442,
    2443,  2445,  2447,  2449,  2451,  2452,  2454,  2456,  2457,  2459,
    2461,  2464,  2466,  2470,  2471,  2473,  2475,  2478,  2480,  2481,
    2483,  2485,  2488,  2490,  2492,  2496,  2499,  2501,  2503,  2507,
    2511,  2514,  2517,  2519,  2521,  2523,  2525,  2527,  2532,  2535,
    2537,  2542,  2543,  2545,  2546,  2549,  2551,  2555,  2556,  2562,
    2563,  2569,  2570,  2576,  2577,  2583,  2584,  2590,  2591,  2596,
    2597,  2608,  2612,  2617,  2621,  2625,  2633,  2639,  2645,  2647,
    2653,  2659,  2665,  2670,  2671,  2673,  2675,  2678,  2681,  2684,
    2686,  2691,  2694,  2697,  2701,  2702,  2705,  2708,  2710,  2713,
    2716,  2719,  2722,  2726,  2727,  2731,  2733,  2738,  2739,  2743,
    2744,  2747,  2748,  2750,  2752,  2755,  2758,  2760,  2764,  2765,
    2767,  2769,  2773,  2776,  2779,  2781,  2785,  2790,  2791,  2798,
    2803,  2808,  2814,  2819,  2823,  2825,  2833,  2838,  2843,  2844,
    2846,  2849,  2852,  2855,  2857,  2859,  2863,  2870,  2876,  2880,
    2889,  2891,  2895,  2899,  2901,  2905,  2908,  2914,  2917,  2922,
    2929,  2935,  2940,  2945,  2949,  2953,  2956,  2959,  2966,  2971,
    2977,  2981,  2987,  2993,  2995,  2997,  2999,  3001,  3003,  3005,
    3006,  3008,  3010,  3013,  3016,  3020,  3024,  3028,  3032,  3033,
    3035,  3036,  3038,  3039,  3041,  3043,  3044,  3047,  3049,  3050,
    3052,  3054,  3056,  3059,  3062,  3065,  3070,  3074,  3075,  3080,
    3084,  3085,  3087,  3089,  3093,  3097,  3100,  3103,  3108,  3109,
    3113,  3114,  3118,  3119,  3123,  3124,  3128,  3129,  3131,  3133,
    3137,  3139,  3141,  3142,  3145,  3147,  3151,  3155,  3159,  3161,
    3166,  3167,  3169,  3171,  3177,  3178,  3180,  3182,  3185,  3187,
    3189,  3191,  3196,  3199,  3204,  3205,  3207,  3209,  3212,  3214,
    3216,  3218,  3220,  3222,  3225,  3230,  3231,  3233,  3235,  3236,
    3241,  3246,  3250,  3256,  3258,  3262,  3266,  3267,  3274,  3276,
    3278,  3280,  3284,  3287,  3291,  3293,  3295,  3296,  3303,  3305,
    3307,  3309,  3313,  3317,  3322,  3323,  3329,  3331,  3332,  3337,
    3338,  3341,  3343,  3345,  3347,  3351,  3354,  3360,  3366,  3371,
    3373,  3378,  3383,  3388,  3393,  3397,  3401,  3403,  3412,  3420,
    3421,  3423,  3426,  3428,  3430,  3432,  3436,  3437,  3439,  3442,
    3444,  3446,  3448,  3450,  3451,  3454,  3459,  3463,  3465,  3467,
    3469,  3472,  3473,  3476,  3479,  3481,  3483,  3484,  3487,  3491,
    3495,  3499,  3502,  3506,  3511,  3515,  3520,  3524,  3529,  3531,
    3535,  3540,  3544,  3549,  3551,  3555,  3560,  3566,  3574,  3581,
    3590,  3596,  3603,  3608,  3613,  3619,  3623,  3628,  3630,  3634,
    3638,  3642,  3646,  3650,  3654,  3660,  3666,  3670,  3674,  3678,
    3682,  3686,  3690,  3692,  3694,  3696,  3698,  3700,  3702,  3704,
    3706,  3708,  3710,  3712,  3714,  3716,  3718,  3720,  3722,  3724,
    3726,  3728,  3730,  3732,  3734,  3736,  3740,  3742,  3744,  3746,
    3748,  3752,  3755,  3758,  3761,  3764,  3766,  3770,  3776,  3783,
    3786,  3791,  3799,  3802,  3809,  3815,  3822,  3829,  3834,  3839,
    3845,  3849,  3853,  3858,  3865,  3868,  3873,  3878,  3883,  3894,
    3901,  3910,  3917,  3922,  3927,  3934,  3939,  3944,  3949,  3956,
    3961,  3969,  3977,  3985,  3992,  3999,  4006,  4013,  4017,  4022,
    4029,  4038,  4041,  4044,  4053,  4062,  4069,  4076,  4078,  4085,
    4092,  4101,  4110,  4117,  4126,  4133,  4136,  4145,  4154,  4157,
    4160,  4163,  4168,  4173,  4178,  4183,  4187,  4196,  4203,  4212,
    4217,  4224,  4229,  4234,  4241,  4250,  4255,  4259,  4266,  4271,
    4278,  4284,  4293,  4301,  4312,  4314,  4319,  4324,  4329,  4334,
    4339,  4346,  4351,  4356,  4363,  4366,  4370,  4371,  4376,  4377,
    4381,  4382,  4384,  4386,  4390,  4393,  4398,  4404,  4409,  4414,
    4419,  4425,  4430,  4436,  4441,  4447,  4452,  4458,  4463,  4468,
    4473,  4478,  4483,  4489,  4497,  4500,  4504,  4506,  4511,  4512,
    4514,  4515,  4518,  4519,  4523,  4527,  4529,  4532,  4535,  4539,
    4542,  4544,  4547,  4549,  4552,  4554,  4557,  4560,  4563,  4565,
    4566,  4568,  4570,  4574,  4576,  4580,  4582,  4586,  4587,  4589,
    4590,  4593,  4598,  4604,  4606,  4608,  4613,  4615,  4617,  4623,
    4631,  4637,  4645,  4649,  4653,  4657,  4662,  4667,  4669,  4672,
    4675,  4677,  4681,  4685,  4686,  4688,  4689,  4691,  4692,  4694,
    4699,  4701,  4703,  4705,  4707,  4709,  4713,  4719,  4723,  4727,
    4732,  4736,  4740,  4743,  4744,  4747,  4751,  4755,  4757,  4759,
    4766,  4773,  4775,  4778,  4779,  4781,  4783,  4784,  4786,  4788,
    4790,  4792,  4796,  4798,  4800,  4804,  4806,  4808,  4810,  4812,
    4814,  4816,  4818,  4820,  4822,  4824,  4826,  4828,  4830,  4832,
    4834,  4836,  4838,  4840,  4842,  4844,  4846,  4848,  4850,  4852,
    4854,  4855,  4857,  4859,  4860,  4863,  4864,  4866,  4868,  4869,
    4872,  4873,  4876,  4879,  4880,  4881,  4886,  4890,  4892,  4893,
    4895,  4897,  4901,  4905,  4907,  4910,  4911,  4913,  4917,  4921,
    4923,  4924,  4926,  4928,  4929,  4931,  4934,  4936,  4940,  4944,
    4946,  4948,  4950,  4952,  4954,  4955,  4958,  4960,  4962,  4964,
    4966,  4968,  4970,  4972,  4974,  4976,  4978,  4980,  4982,  4984,
    4986,  4988,  4990,  4992,  4994,  4996,  4998,  5000,  5002,  5004,
    5005,  5011,  5012,  5014,  5018,  5020,  5024,  5026,  5029,  5031,
    5034,  5040,  5043,  5045,  5049,  5050,  5057,  5058,  5059,  5068,
    5073,  5080,  5085,  5090,  5096,  5102,  5107,  5112,  5117,  5123,
    5128,  5133,  5135,  5139,  5141,  5143,  5147,  5148,  5151,  5152,
    5154,  5155,  5157,  5159,  5163,  5165,  5167,  5176,  5186,  5195,
    5202,  5210,  5217,  5218,  5220,  5222,  5224,  5226,  5228,  5229,
    5231,  5233,  5237,  5242,  5244,  5248,  5253,  5257,  5259,  5262,
    5264,  5266,  5268,  5270,  5274,  5276,  5278,  5280,  5281,  5283,
    5287,  5288,  5290,  5294,  5296,  5298,  5300,  5301,  5307,  5317,
    5321,  5323,  5327,  5328,  5330,  5339,  5346,  5354,  5355,  5358,
    5359,  5362,  5364,  5366,  5368,  5369,  5374,  5375,  5377,  5378,
    5380,  5382,  5386,  5388,  5390,  5393,  5396,  5399,  5401,  5403,
    5405,  5407,  5408,  5412,  5413,  5417,  5420,  5425,  5430,  5434,
    5439,  5444,  5446,  5450,  5454,  5461,  5464,  5467,  5468,  5475,
    5476,  5484,  5490,  5493,  5499,  5505,  5508,  5511,  5513,  5518,
    5519,  5524,  5527,  5528,  5533,  5536,  5539,  5541,  5543,  5547,
    5553,  5558,  5562,  5566,  5569,  5573,  5577,  5581,  5585,  5589,
    5593,  5597,  5601,  5605,  5610,  5612,  5614,  5616,  5618,  5620,
    5621,  5623,  5624,  5627,  5628,  5630,  5632,  5634,  5635,  5638,
    5639,  5642,  5643,  5646,  5649,  5650,  5653,  5656,  5660,  5661,
    5666,  5668,  5670,  5672,  5674,  5676,  5680,  5682,  5684,  5685,
    5687,  5689,  5693,  5694,  5696,  5698,  5699,  5704,  5705,  5710,
    5712,  5713,  5717,  5718,  5722,  5726,  5728,  5731,  5734,  5737,
    5740,  5743,  5747,  5750,  5752,  5754,  5756,  5758,  5760,  5762,
    5764,  5765,  5767,  5768,  5772,  5776,  5778,  5779,  5784,  5786,
    5789,  5790,  5792,  5793,  5797,  5801,  5804,  5807,  5811,  5812,
    5814,  5816,  5819,  5820,  5821,  5822,  5844,  5846,  5848,  5849,
    5851,  5852,  5854,  5856,  5857,  5859,  5861,  5863,  5864,  5867,
    5870,  5872,  5876,  5881,  5885,  5889,  5890,  5893,  5896,  5898,
    5902,  5906,  5907,  5912,  5913,  5917,  5919,  5921,  5922,  5926,
    5929,  5933,  5935,  5937,  5940,  5941,  5944,  5948,  5950,  5954,
    5956,  5958,  5961,  5964,  5966,  5968,  5970,  5972,  5974,  5977,
    5980,  5982,  5984,  5986,  5988,  5990,  5992,  5994,  5996,  5999,
    6002,  6004,  6006,  6008,  6010,  6012,  6015,  6018,  6021,  6023,
    6025,  6029,  6035,  6038,  6040,  6042,  6044,  6046,  6050,  6055,
    6061,  6063,  6069,  6073,  6076,  6078,  6082,  6085,  6088,  6093,
    6095,  6097,  6099,  6101,  6103,  6105,  6107,  6109,  6111,  6113,
    6115,  6117,  6119,  6121,  6123,  6125,  6127,  6129,  6131,  6133,
    6135,  6139,  6142,  6144,  6148,  6150,  6152,  6154,  6156,  6158,
    6160,  6162,  6164,  6166,  6168,  6170,  6172,  6174,  6176,  6178,
    6180,  6182,  6184,  6186,  6188,  6190,  6192,  6194,  6196,  6198,
    6200,  6202,  6204,  6206,  6208,  6210,  6212,  6214,  6216,  6218,
    6220,  6222,  6224,  6226,  6228,  6230,  6232,  6234,  6236,  6238,
    6240,  6242,  6244,  6246,  6248,  6250,  6252,  6254,  6256,  6258,
    6260,  6262,  6264,  6266,  6268,  6270,  6272,  6274,  6276,  6278,
    6280,  6282,  6284,  6286,  6288,  6290,  6292,  6294,  6296,  6298,
    6300,  6302,  6304,  6306,  6308,  6310,  6312,  6314,  6316,  6318,
    6320,  6322,  6324,  6326,  6328,  6330,  6332,  6334,  6336,  6338,
    6340,  6342,  6344,  6346,  6348,  6350,  6352,  6354,  6356,  6358,
    6360,  6362,  6364,  6366,  6368,  6370,  6372,  6374,  6376,  6378,
    6380,  6382,  6384,  6386,  6388,  6390,  6392,  6394,  6396,  6398,
    6400,  6402,  6404,  6406,  6408,  6410,  6412,  6414,  6416,  6418,
    6420,  6422,  6424,  6426,  6428,  6430,  6432,  6434,  6436,  6438,
    6440,  6442,  6444,  6446,  6448,  6450,  6452,  6454,  6456,  6458,
    6460,  6462,  6464,  6466,  6468,  6470,  6472,  6474,  6476,  6478,
    6480,  6482,  6484,  6486,  6488,  6490,  6492,  6494,  6496,  6498,
    6500,  6502,  6504,  6506,  6508,  6510,  6512,  6514,  6516,  6518,
    6520,  6522,  6524,  6526,  6528,  6530,  6532,  6534,  6536,  6538,
    6540,  6542,  6544,  6546,  6548,  6550,  6552,  6554,  6556,  6558,
    6560,  6562,  6564,  6566,  6568,  6570,  6572,  6574,  6576,  6578,
    6580,  6582,  6584,  6586,  6588,  6590,  6592,  6594,  6596,  6598,
    6600,  6602,  6604,  6606,  6608,  6610,  6612,  6614,  6616,  6618,
    6620,  6622,  6624,  6626,  6628,  6630,  6632,  6634,  6636,  6638,
    6640,  6642,  6644,  6646,  6648,  6650,  6652,  6654,  6656,  6658,
    6660,  6662,  6664,  6666,  6668,  6670,  6672,  6674,  6676,  6678,
    6680,  6682,  6684,  6686,  6688,  6690,  6692,  6694,  6696,  6698,
    6700,  6702,  6704,  6706,  6708,  6710,  6712,  6714,  6716,  6718,
    6720,  6722,  6724,  6726,  6728,  6730,  6732,  6734,  6736,  6738,
    6740,  6742,  6744,  6746,  6748,  6750,  6752,  6754,  6756,  6758,
    6760,  6762,  6764,  6766,  6768,  6770,  6772,  6774,  6776,  6778,
    6780,  6782,  6784,  6786,  6788,  6790,  6792,  6794,  6796,  6798,
    6800,  6802,  6804,  6806,  6808,  6810,  6812,  6814,  6816,  6818,
    6820,  6822,  6824,  6826,  6828,  6830,  6832,  6834,  6836,  6838,
    6840,  6842,  6844,  6846,  6848,  6850,  6852,  6854,  6856,  6858,
    6860,  6862,  6864,  6866,  6868,  6870,  6872,  6874,  6876,  6878,
    6880,  6882,  6884,  6886,  6888,  6890,  6892,  6894,  6896,  6898,
    6900,  6902,  6904,  6906,  6908,  6910,  6912,  6914,  6917,  6920,
    6923,  6926,  6930,  6937,  6943,  6952,  6956,  6960,  6964,  6971,
    6978,  6985,  6990,  6991,  6994,  6997,  7000,  7001,  7004,  7006,
    7010,  7013,  7015,  7017,  7019,  7021,  7023,  7024,  7026,  7028,
    7030,  7031,  7034,  7037,  7040,  7041,  7044,  7047,  7050,  7053,
    7057,  7061,  7066,  7073,  7076,  7080,  7084,  7086,  7090,  7094,
    7097,  7100,  7102,  7103,  7106,  7110,  7111,  7114,  7117,  7120,
    7123,  7126,  7129,  7131,  7133,  7135,  7137,  7139,  7141,  7143,
    7144,  7149,  7151,  7153,  7155,  7159,  7163,  7165,  7167,  7170,
    7173,  7174,  7178,  7180,  7184,  7189,  7194,  7198,  7199,  7207,
    7209,  7212,  7214,  7216,  7218,  7220,  7222,  7224,  7225,  7231,
    7233,  7235,  7237,  7239,  7241,  7242,  7247,  7252,  7259,  7266,
    7273,  7281,  7287,  7288,  7293,  7299,  7308,  7317,  7326,  7333,
    7334,  7336,  7338,  7341,  7342,  7344,  7346,  7350,  7351,  7355,
    7356,  7360,  7361,  7365,  7366,  7370,  7372,  7374,  7376,  7378,
    7380,  7382,  7384,  7386,  7388,  7390,  7392,  7395,  7398,  7400,
    7404,  7407,  7410,  7413,  7416,  7419,  7422,  7425,  7428,  7430,
    7432,  7435,  7438,  7441,  7442,  7446,  7447,  7449,  7453,  7455,
    7458,  7461,  7464,  7466,  7470,  7474,  7476,  7478,  7482,  7484,
    7488,  7490,  7494,  7499,  7505,  7510,  7517,  7524,  7526,  7527,
    7531,  7535,  7537,  7539,  7540,  7543,  7546,  7549,  7552,  7553,
    7556,  7557,  7561,  7564,  7566,  7569,  7572,  7575,  7578,  7581,
    7582,  7586,  7587,  7589,  7590,  7594,  7597,  7598,  7600,  7603,
    7604,  7606,  7611,  7616,  7622,  7625,  7629,  7630,  7632,  7634,
    7636,  7638,  7640,  7642,  7644,  7646,  7648,  7650,  7652,  7654,
    7656,  7659,  7662,  7666,  7668,  7670,  7672,  7674,  7676,  7678,
    7680,  7682,  7684,  7686,  7688,  7690,  7692,  7693,  7697,  7699,
    7702,  7704,  7707,  7711,  7715,  7719,  7720,  7724,  7728,  7729,
    7737,  7738,  7742,  7744,  7748,  7751,  7752,  7756,  7761,  7766,
    7768,  7770,  7771,  7774,  7775,  7788,  7796,  7803,  7804,  7805,
    7806,  7807,  7822,  7823,  7824,  7825,  7826,  7838,  7843,  7848,
    7852,  7857,  7861,  7865,  7866,  7869,  7871,  7875,  7881,  7883,
    7885,  7886,  7888,  7890,  7891,  7894,  7895,  7897,  7901,  7907,
    7911,  7915,  7919,  7921
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     686,     0,    -1,   687,    -1,   660,  1156,   156,    -1,   662,
     898,   156,    -1,   661,  1389,   674,  1153,   675,   156,    -1,
     156,    -1,    -1,   690,   688,   681,   689,    -1,   690,   156,
      -1,    -1,   156,    -1,   691,    -1,  1481,    -1,  1034,    -1,
    1103,    -1,  1104,    -1,   753,    -1,   703,    -1,  1105,    -1,
    1097,    -1,  1487,    -1,   726,    -1,   692,    -1,  1292,    -1,
    1320,    -1,  1256,    -1,  1258,    -1,   696,    -1,  1326,    -1,
     786,    -1,  1078,    -1,  1452,    -1,  1442,    -1,   701,    -1,
    1269,    -1,  1534,    -1,  1345,    -1,  1348,    -1,  1431,    -1,
    1109,    -1,  1116,    -1,  1123,    -1,   694,    -1,  1341,    -1,
    1490,    -1,  1111,    -1,  1099,    -1,  1270,    -1,  1335,    -1,
     785,    -1,  1449,    -1,  1488,    -1,  1489,    -1,  1134,    -1,
    1407,    -1,  1409,    -1,   778,    -1,  1303,    -1,  1439,    -1,
    1079,    -1,  1083,    -1,  1296,    -1,  1535,    -1,  1437,    -1,
    1288,    -1,  1347,    -1,  1527,    -1,   693,   415,  1395,    -1,
     121,    -1,   144,    -1,   415,  1395,   197,   695,    -1,  1392,
      -1,   682,  1398,    -1,    -1,   170,  1395,   697,   698,    -1,
      -1,   615,   699,    -1,   699,   677,   700,    -1,   700,    -1,
     682,  1398,    -1,    -1,   218,   702,  1398,    -1,    -1,    58,
     316,   583,   704,   719,   724,    -1,    -1,    58,   457,   185,
     705,   706,    -1,   707,    -1,   706,   677,   707,    -1,   458,
     160,   708,    -1,   459,   160,   708,    -1,   460,   160,   713,
      -1,   461,   160,   713,    -1,   462,   160,   716,    -1,   463,
     160,   716,    -1,   464,   160,   711,    -1,   674,   675,    -1,
     674,   709,   675,    -1,   710,    -1,   709,   677,   710,    -1,
    1395,    -1,   674,   675,    -1,   674,   712,   675,    -1,   674,
     710,   677,   710,   675,    -1,   712,   677,   674,   710,   677,
     710,   675,    -1,   674,   675,    -1,   674,   714,   675,    -1,
     715,    -1,   714,   677,   715,    -1,  1395,   683,  1395,    -1,
     674,   675,    -1,   674,   717,   675,    -1,   718,    -1,   717,
     677,   718,    -1,  1391,    -1,   720,    -1,   719,   677,   720,
      -1,   299,   160,  1390,    -1,   296,   160,  1390,    -1,   317,
     160,  1390,    -1,   302,   160,  1390,    -1,   303,   160,  1243,
      -1,   297,   160,  1243,    -1,   304,   160,  1243,    -1,   298,
     160,  1243,    -1,   314,   160,  1243,    -1,   308,   160,  1390,
      -1,   306,   160,  1390,    -1,   307,   160,  1390,    -1,   309,
     160,  1390,    -1,   310,   160,  1390,    -1,   313,   160,  1390,
      -1,   315,   160,  1243,    -1,   311,   160,  1390,    -1,   312,
     160,  1390,    -1,   318,   160,  1377,    -1,   232,   160,   674,
     721,   675,    -1,   295,   160,  1243,    -1,   723,    -1,    -1,
     722,    -1,   721,   677,   722,    -1,  1243,    -1,   300,   160,
    1390,    -1,   301,   160,  1245,    -1,   445,   160,  1390,    -1,
     446,   160,  1243,    -1,    -1,   194,    60,  1390,    -1,    99,
    1265,   566,   927,  1386,   674,   938,   675,   894,    -1,    99,
    1265,   566,   927,  1386,   894,    -1,    99,  1265,   566,   927,
    1386,   275,  1386,    -1,    99,  1265,   566,   927,  1386,   674,
     275,  1386,   675,    -1,   725,    -1,   729,    -1,    -1,    99,
     108,   927,  1395,   727,   924,    -1,    -1,    99,   728,  1496,
      -1,    99,   612,   927,   745,  1471,  1476,  1047,  1043,    -1,
      99,   654,   927,   745,  1470,    -1,    99,   286,   212,   857,
      -1,    99,   564,   854,    -1,    99,   499,  1398,   193,   111,
     642,  1398,   384,   674,   730,   675,    -1,    99,  1013,   235,
    1025,   378,  1386,   674,  1029,   675,  1021,  1070,    -1,    99,
     199,   235,  1395,   378,  1386,   674,  1029,   675,  1015,  1070,
      -1,    99,   519,   235,  1395,   378,  1386,   674,  1029,   675,
    1018,  1070,    -1,   731,    -1,   730,   677,   731,    -1,   612,
    1392,    -1,   221,  1392,    -1,   108,  1392,    -1,   394,  1392,
      -1,   404,  1392,    -1,   515,  1392,    -1,   411,  1243,    -1,
      -1,   167,   927,   747,   733,   378,   488,   734,   739,   736,
     741,   143,   742,    -1,    -1,   168,  1153,  1218,   735,   737,
     738,    -1,    25,  1153,    -1,    -1,   152,    -1,   137,   378,
     511,    -1,   137,    -1,    -1,   538,  1153,    -1,    -1,   155,
    1153,    -1,    -1,   740,    -1,   378,    81,   416,    -1,   378,
      81,   367,   416,    -1,    -1,    77,  1392,    -1,    -1,   743,
     744,    -1,   802,    -1,   804,    -1,   800,    -1,   821,    -1,
     839,    -1,   841,    -1,   836,    -1,   806,    -1,   808,    -1,
     809,    -1,   810,    -1,   811,    -1,   813,    -1,   746,    -1,
      -1,  1395,   683,  1395,    -1,  1395,    -1,    -1,   748,   750,
      -1,    -1,   749,   751,    -1,    77,  1392,    -1,   265,   533,
      -1,   369,   533,    -1,    93,   533,    -1,   431,   533,   111,
      -1,   343,   533,   111,    -1,   752,    -1,   750,    -1,   134,
      -1,  1159,   134,    -1,   533,   492,   127,    -1,   533,   492,
     248,    -1,    -1,    51,   747,   754,   755,    -1,    -1,   674,
     756,   675,    -1,    -1,   757,    -1,   757,   677,  1153,    -1,
    1153,    -1,    -1,   759,    -1,   759,   677,   760,    -1,   760,
      -1,  1395,   949,   982,    -1,    -1,   762,    -1,   762,   677,
     763,    -1,   763,    -1,   764,  1395,   949,   982,    -1,    -1,
     249,    -1,   393,    -1,   239,    -1,    -1,   765,   799,   681,
      -1,   799,   681,    -1,   766,   799,   681,    -1,    -1,   767,
     768,   681,    -1,   124,   797,   949,   982,   798,    -1,   124,
    1395,    86,   194,   774,    -1,    -1,   124,   771,   215,   194,
     769,   772,   799,    -1,    -1,   124,  1395,   105,   194,   770,
    1134,    -1,   172,    -1,    95,    -1,   773,    -1,   772,   677,
     773,    -1,   777,    -1,  1243,    -1,   775,    -1,   522,   776,
    1393,    -1,    -1,   621,    -1,   774,    -1,  1395,    -1,   523,
      -1,  1159,   196,    -1,   521,    -1,   508,   779,   781,    -1,
    1395,    -1,   775,    -1,    -1,   779,    -1,    -1,   501,   782,
      -1,   784,   160,   783,    -1,   782,   677,   784,   160,   783,
      -1,  1376,    -1,  1176,    -1,  1382,    -1,    66,    -1,   551,
      -1,    90,    -1,    92,    -1,    91,    -1,    56,    -1,   489,
      -1,   568,    -1,    76,    -1,   106,    -1,   334,    -1,   351,
      -1,   467,   780,   781,    -1,   208,   787,   135,   788,    -1,
      -1,   103,    -1,   536,    -1,   789,    -1,    86,   793,   794,
      -1,   790,    -1,   789,   677,   790,    -1,   791,   160,   792,
      -1,  1395,    -1,   682,  1398,    -1,   374,    -1,   485,    -1,
     783,    -1,   795,    -1,   794,   677,   795,    -1,   791,   160,
     796,    -1,    66,    -1,   551,    -1,    90,    -1,    92,    -1,
      91,    -1,    56,    -1,   489,    -1,   568,    -1,    76,    -1,
     106,    -1,   334,    -1,   351,    -1,   472,    -1,  1395,    -1,
     797,   677,  1395,    -1,    -1,   125,  1153,    -1,   802,    -1,
     804,    -1,   800,    -1,   821,    -1,   839,    -1,   841,    -1,
     836,    -1,   806,    -1,   808,    -1,   809,    -1,   810,    -1,
     811,    -1,   813,    -1,    -1,   230,   801,   816,   154,   230,
      -1,    -1,   803,   691,    -1,    -1,   474,   805,  1153,    -1,
      -1,   807,   845,    -1,   270,  1397,    -1,   257,  1397,    -1,
     381,  1395,    -1,    -1,   182,   814,  1395,   246,   812,   815,
      -1,    68,  1395,    -1,    -1,   363,   197,    -1,   197,    -1,
    1395,    -1,   815,   677,  1395,    -1,    -1,    -1,    -1,   817,
    1153,   818,   575,   766,   819,   820,    -1,    -1,   151,   816,
      -1,   150,   766,    -1,   822,    -1,   825,    -1,    -1,    -1,
      54,   823,  1153,   824,   827,   835,   154,    54,    -1,    -1,
      54,   826,   828,   835,   154,    54,    -1,   829,    -1,   827,
     829,    -1,   832,    -1,   828,   832,    -1,    -1,    -1,   634,
     830,  1153,   831,   575,   766,    -1,    -1,    -1,   634,   833,
    1153,   834,   575,   766,    -1,    -1,   150,   766,    -1,    -1,
    1397,   684,   837,   845,   838,    -1,    -1,  1397,    -1,    -1,
    1397,   684,   840,   843,   838,    -1,    -1,   842,   843,    -1,
      -1,    32,   844,   767,   765,   154,    -1,   292,   766,   154,
     292,    -1,    -1,    -1,   636,   846,  1153,   847,   143,   766,
     154,   636,    -1,    -1,    -1,   455,   766,   608,   848,  1153,
     849,   154,   455,    -1,    31,    -1,     9,    -1,   241,    -1,
     609,    -1,   130,    -1,   879,   881,    -1,   879,    58,   876,
     860,    -1,   879,     7,   876,   855,   864,    -1,    -1,   614,
     286,   212,  1395,    -1,   879,     7,   876,   867,    -1,   879,
     144,   876,   867,    -1,   880,   859,   870,    -1,   880,   859,
     873,    -1,     7,   877,    -1,     7,   878,    -1,    -1,   861,
     862,    -1,   863,    -1,   862,   863,    -1,   862,   677,   863,
      -1,   882,    -1,   883,    -1,   884,    -1,    -1,   865,    -1,
     866,    -1,   865,   930,   866,    -1,   882,    -1,   883,    -1,
     884,    -1,   885,    -1,   888,    -1,   890,    -1,   892,    -1,
     889,    -1,   891,    -1,    -1,   868,    -1,   869,    -1,   868,
     930,   869,    -1,   882,    -1,   883,    -1,   884,    -1,   890,
      -1,   892,    -1,    -1,   871,    -1,   872,    -1,   871,   930,
     872,    -1,   882,    -1,   886,    -1,   887,    -1,   888,    -1,
     890,    -1,   892,    -1,   889,    -1,    -1,   874,    -1,   875,
      -1,   874,   930,   875,    -1,   882,    -1,   890,    -1,   892,
      -1,   110,  1392,    -1,   598,  1392,    -1,   438,  1392,    -1,
    1395,    -1,  1395,    -1,   432,    -1,   434,    -1,   367,     4,
      -1,   237,  1282,   893,    -1,    26,  1282,   893,    -1,   323,
    1282,   893,    -1,   177,  1282,   893,    -1,   599,  1282,   893,
      -1,   439,  1282,   893,    -1,   364,  1282,  1244,    -1,    77,
    1282,  1392,    -1,  1312,   158,  1282,  1398,    -1,   184,  1282,
     893,    -1,   630,    -1,   370,    -1,  1246,    -1,  1389,    -1,
     929,   895,    -1,   895,    -1,   898,   896,    -1,   896,    -1,
      -1,  1356,   897,    -1,   897,    -1,    21,  1278,    -1,  1278,
      -1,   401,    48,   899,   902,   903,   907,    -1,   900,   263,
     901,   674,   904,   675,    -1,   900,   216,   674,  1156,   675,
      -1,   430,   674,  1156,   675,    -1,   430,    73,   674,   905,
     675,    -1,   280,   674,  1156,   675,    -1,   280,    73,   674,
     905,   675,    -1,    -1,   277,    -1,    -1,    12,   160,  1244,
      -1,    -1,   402,  1244,    -1,    -1,   555,    48,   900,   216,
     674,  1156,   675,   906,    -1,   555,    48,   900,   263,   901,
     674,   905,   675,   906,    -1,    -1,   905,    -1,  1395,    -1,
     905,   677,  1395,    -1,    -1,   554,  1244,    -1,    -1,   674,
     908,   675,    -1,   909,    -1,   908,   677,   909,    -1,   401,
    1395,   910,   921,   918,    -1,    -1,   620,   272,   574,   911,
      -1,   620,   249,   912,    -1,   327,    -1,   914,    -1,   914,
      -1,   674,   913,   675,    -1,   914,    -1,   913,   677,   914,
      -1,    -1,   674,   915,   916,   675,    -1,   917,    -1,   916,
     677,   917,    -1,   327,    -1,  1156,    -1,    -1,   674,   919,
     675,    -1,   920,    -1,   919,   677,   920,    -1,   555,  1398,
     921,    -1,    -1,   922,    -1,   922,   923,    -1,   923,    -1,
     564,  1282,  1395,    -1,  1312,   158,  1282,  1398,    -1,   364,
    1282,  1244,    -1,   322,  1282,  1246,    -1,   340,  1282,  1246,
      -1,   111,   136,  1282,  1392,    -1,   235,   136,  1282,  1392,
      -1,    77,  1282,  1392,    -1,    -1,   925,    -1,   926,    -1,
     925,   926,    -1,   934,    -1,   933,    -1,    -1,   230,  1159,
     171,    -1,   931,    -1,   928,   931,    -1,   931,    -1,   929,
     930,   931,    -1,    -1,   677,    -1,   158,  1282,  1398,    -1,
     322,  1282,  1245,    -1,   340,  1282,  1245,    -1,    28,  1282,
    1243,    -1,   404,  1282,  1392,    -1,    77,  1282,  1392,    -1,
      83,  1282,  1392,    -1,    84,  1282,  1392,    -1,    27,  1282,
    1245,    -1,   395,  1282,   932,    -1,   540,  1282,   932,    -1,
     541,  1282,   932,    -1,   542,  1282,  1243,    -1,   542,  1282,
     125,    -1,    63,  1282,  1243,    -1,   567,  1282,  1243,    -1,
     129,  1282,  1243,    -1,   483,  1282,   935,    -1,   603,  1282,
     674,  1334,   675,    -1,   933,    -1,   934,    -1,   242,  1282,
     936,    -1,   111,   136,  1282,  1392,    -1,   235,   136,  1282,
    1392,    -1,   564,  1282,  1395,    -1,   547,   139,    -1,   547,
     332,    -1,    87,  1282,  1392,    -1,   262,  1282,  1243,    -1,
    1243,    -1,   125,    -1,   985,   975,  1282,   977,    -1,   985,
      71,  1282,   984,    -1,   125,    -1,   187,    -1,   148,    -1,
      82,    -1,   440,    -1,    80,    -1,   369,    -1,   186,    -1,
     266,    -1,   550,    -1,   435,    -1,   123,    -1,   247,    -1,
     939,    -1,   938,   677,   939,    -1,   940,    -1,   942,    -1,
    1385,   946,   941,    -1,    -1,   943,    -1,  1002,    -1,  1008,
    1025,   674,  1029,   675,  1021,    -1,   199,  1011,  1031,   674,
    1029,   675,  1015,    -1,  1014,  1011,  1031,   674,  1029,   675,
    1018,    -1,   944,  1009,  1025,   674,  1029,   675,  1021,    -1,
     944,   193,   263,  1031,   674,  1029,   675,  1002,    -1,   944,
     943,    -1,    64,   674,  1153,   675,    -1,    -1,   945,    -1,
      89,  1031,    -1,   949,   968,    -1,   949,   983,   947,    21,
     674,  1153,   675,   948,   968,    -1,    -1,   203,    15,    -1,
      -1,   629,    -1,   548,    -1,   954,   966,   962,    -1,   955,
     967,   962,    -1,   957,   958,   962,    -1,    40,    -1,    40,
     965,    -1,    45,    -1,    44,    -1,    62,   965,   988,    -1,
      62,   988,    -1,   951,   965,   989,    -1,   951,   989,    -1,
      35,   965,    -1,    35,    -1,   952,   965,   988,    -1,   953,
     965,   989,    -1,   622,   965,    -1,   650,   966,   962,    -1,
     115,    -1,   579,   960,    -1,   576,   960,    -1,   112,   960,
      -1,   580,    -1,    42,   966,    -1,   950,    -1,   328,    -1,
     288,    -1,   291,   622,    -1,   291,   952,   988,    -1,   582,
     988,    -1,   573,   966,   988,    -1,   330,   988,    -1,   289,
     988,    -1,   159,   674,  1033,   675,   988,    -1,   501,   674,
    1033,   675,   988,    -1,   291,   988,    -1,   497,    -1,   260,
      -1,   206,    -1,   205,    -1,   409,    -1,   348,    -1,   279,
      -1,   347,    -1,   410,    -1,   349,    -1,   357,    -1,   354,
      62,    -1,    62,   626,    -1,   623,    -1,   354,   623,    -1,
     376,    -1,   357,   623,    -1,   354,    62,   626,    -1,   357,
     626,    -1,   247,    -1,   581,    -1,   513,    -1,   329,    -1,
      34,    -1,   435,    -1,   142,   956,    -1,    -1,   414,    -1,
     189,    -1,   123,    -1,   375,    -1,   187,    -1,    -1,   965,
      -1,   959,    -1,   674,   373,   677,   373,   675,    -1,    -1,
     674,   373,   675,    -1,    -1,   674,   675,    -1,   674,   373,
     675,    -1,    -1,   963,    -1,   963,   964,    -1,   964,    -1,
     509,    -1,   607,    -1,   651,    -1,   674,   290,   675,    -1,
     674,   594,   675,    -1,   674,   122,   675,    -1,   674,   373,
     675,    -1,    -1,   965,    -1,    -1,   959,    -1,    -1,   969,
      -1,   969,   970,    -1,   970,    -1,   372,    -1,  1159,   372,
      -1,   125,   974,    -1,   378,   609,   973,    -1,    27,    -1,
     497,   125,   621,    -1,  1001,   263,    -1,   604,    -1,   604,
     263,    -1,    77,  1392,    -1,    71,   981,    -1,    75,   971,
      -1,   547,   972,    -1,   125,    -1,   187,    -1,   148,    -1,
     125,    -1,   139,    -1,   332,    -1,   368,   961,    -1,   973,
      -1,  1375,    -1,    62,   501,    -1,    61,    -1,  1398,    -1,
      35,    -1,   976,    -1,   125,    -1,    -1,   975,   977,    -1,
    1398,    -1,    35,    -1,   979,    -1,   125,    -1,  1398,    -1,
      -1,    71,   984,    -1,    -1,    71,   981,    -1,   981,    -1,
     125,    -1,    -1,   125,    -1,    23,    -1,    35,    23,    -1,
      23,    35,    -1,   601,    -1,   601,    35,    -1,    35,   601,
      -1,    -1,   986,    -1,   987,    -1,    49,    -1,   975,   976,
     989,    -1,    35,    -1,    35,   975,   976,    -1,    -1,    35,
      -1,    -1,   674,  1244,   991,   675,    -1,    22,    -1,   131,
      -1,   475,    -1,    -1,   992,    -1,   992,   993,    -1,   993,
      -1,  1244,    -1,   995,   994,    -1,   996,    -1,   997,   677,
     996,    -1,   995,   666,   995,    -1,   997,    -1,   998,    -1,
      -1,   273,   999,    -1,    -1,   418,    -1,   441,  1386,  1003,
    1005,  1006,    -1,    -1,   674,  1004,   675,    -1,  1004,   677,
    1395,    -1,  1395,    -1,    -1,   319,   198,    -1,   319,   400,
      -1,   319,   510,    -1,    -1,   378,   609,  1007,    -1,   378,
     130,  1007,    -1,   378,   609,  1007,   378,   130,  1007,    -1,
     378,   130,  1007,   378,   609,  1007,    -1,   470,    -1,    52,
      -1,   501,   372,    -1,   369,     6,    -1,   501,   125,    -1,
    1010,    -1,   418,   263,    -1,   604,  1011,    -1,   263,    -1,
     235,    -1,    -1,  1010,    -1,   261,    -1,   235,    -1,   234,
      -1,    -1,   604,    -1,   519,    -1,    -1,  1016,    -1,  1017,
      -1,  1016,  1017,    -1,  1024,    -1,   637,   398,  1389,    -1,
      -1,  1019,    -1,  1020,    -1,  1019,  1020,    -1,  1024,    -1,
      -1,  1022,    -1,  1023,    -1,  1022,  1023,    -1,  1024,    -1,
    1026,    -1,   262,  1282,  1243,    -1,    77,  1392,    -1,  1027,
      -1,  1031,    -1,  1031,   615,  1028,    -1,  1395,   592,  1028,
      -1,   615,  1028,    -1,   592,  1028,    -1,   657,    -1,   656,
      -1,    47,    -1,   486,    -1,   216,    -1,  1029,   677,  1030,
    1237,    -1,  1030,  1237,    -1,  1395,    -1,  1395,   674,   373,
     675,    -1,    -1,  1385,    -1,    -1,   683,  1395,    -1,  1373,
      -1,  1033,   677,  1373,    -1,    -1,    14,   566,  1386,  1035,
    1055,    -1,    -1,    14,   108,  1054,  1036,   925,    -1,    -1,
      14,   420,   747,  1037,   748,    -1,    -1,    14,   200,   747,
    1038,   748,    -1,    -1,    14,  1504,  1499,  1039,  1506,    -1,
      -1,    14,  1499,  1040,  1506,    -1,    -1,    14,  1499,   167,
     747,  1041,  1051,  1052,   736,   741,  1053,    -1,    14,   564,
     856,    -1,    14,   286,   212,   858,    -1,    14,   564,   853,
      -1,    14,   564,   852,    -1,    14,   499,  1398,   384,   674,
     730,   675,    -1,  1042,  1471,  1476,  1047,  1043,    -1,  1042,
    1050,   228,    48,   572,    -1,  1440,    -1,  1042,  1400,   125,
     654,    13,    -1,  1042,  1400,   125,   654,   365,    -1,  1042,
    1400,   125,   654,  1470,    -1,    14,   612,  1264,   745,    -1,
      -1,  1044,    -1,  1045,    -1,  1044,  1045,    -1,     5,   606,
      -1,     5,   285,    -1,  1046,    -1,  1046,   245,  1244,   120,
      -1,  1046,   361,    -1,  1046,   125,    -1,   404,   174,   746,
      -1,    -1,   637,  1048,    -1,  1048,  1049,    -1,  1049,    -1,
     321,  1243,    -1,   325,  1243,    -1,   320,  1243,    -1,   326,
    1243,    -1,   612,   674,   675,    -1,    -1,   378,   488,   734,
      -1,   740,    -1,   378,   488,   734,   740,    -1,    -1,   451,
     583,   747,    -1,    -1,   143,   742,    -1,    -1,  1395,    -1,
    1056,    -1,  1056,   898,    -1,  1056,  1061,    -1,  1057,    -1,
    1066,   677,  1057,    -1,    -1,  1066,    -1,  1065,    -1,  1066,
     677,  1065,    -1,   138,   564,    -1,   233,   564,    -1,  1063,
      -1,   144,   401,  1217,    -1,   436,   401,  1110,  1062,    -1,
      -1,   382,   401,  1110,  1062,  1058,  1110,    -1,    17,   401,
    1110,  1062,    -1,    64,   401,  1062,  1106,    -1,   453,   401,
    1110,  1062,  1100,    -1,    69,   401,  1110,  1244,    -1,   590,
     401,  1062,    -1,  1064,    -1,   169,   401,  1395,   637,   566,
    1386,  1059,    -1,   138,   401,  1062,   564,    -1,   233,   401,
    1062,   564,    -1,    -1,  1060,    -1,   637,   619,    -1,   640,
     619,    -1,   450,   403,    -1,    13,    -1,  1217,    -1,     7,
     401,  1110,    -1,     7,   401,  1110,   674,   908,   675,    -1,
       7,   401,  1110,   402,  1244,    -1,   452,   401,  1110,    -1,
     452,   401,  1110,  1217,   246,   674,   908,   675,    -1,  1068,
      -1,  1065,   677,  1068,    -1,  1065,   677,  1069,    -1,  1069,
      -1,  1066,   677,  1069,    -1,     7,  1073,    -1,  1067,  1385,
     946,   941,  1076,    -1,     7,   942,    -1,  1067,   674,   938,
     675,    -1,    58,  1073,  1385,  1385,   946,  1076,    -1,   344,
    1073,  1385,   946,  1076,    -1,   144,  1073,  1385,  1075,    -1,
     144,   193,   263,  1385,    -1,   144,   418,   263,    -1,   144,
    1010,  1385,    -1,   137,   261,    -1,   152,   261,    -1,    14,
    1073,  1385,   501,   125,  1375,    -1,    14,   235,  1395,  1027,
      -1,    14,  1073,  1385,   144,   125,    -1,   451,  1077,  1386,
      -1,   451,  1010,  1385,   583,  1385,    -1,    96,   583,   975,
     977,   982,    -1,   928,    -1,   192,    -1,  1231,    -1,  1071,
      -1,  1072,    -1,  1060,    -1,    -1,  1072,    -1,  1071,    -1,
    1072,  1071,    -1,  1071,  1072,    -1,    12,  1282,   125,    -1,
      12,  1282,  1395,    -1,   285,  1282,   125,    -1,   285,  1282,
    1395,    -1,    -1,    74,    -1,    -1,   231,    -1,    -1,   470,
      -1,    52,    -1,    -1,     9,  1395,    -1,   186,    -1,    -1,
     583,    -1,   160,    -1,    21,    -1,   539,   204,    -1,   546,
     204,    -1,  1080,  1081,    -1,   546,   511,  1092,   724,    -1,
     539,   511,  1092,    -1,    -1,  1095,  1087,  1082,   724,    -1,
     539,   585,  1084,    -1,    -1,  1085,    -1,  1086,    -1,  1085,
     677,  1086,    -1,   637,    88,   514,    -1,   433,   380,    -1,
     433,   643,    -1,  1088,  1089,  1090,  1091,    -1,    -1,   612,
     160,  1392,    -1,    -1,   404,   160,  1392,    -1,    -1,   126,
     160,  1392,    -1,    -1,   406,   160,  1392,    -1,    -1,  1093,
      -1,  1094,    -1,  1093,   677,  1094,    -1,   534,    -1,   447,
      -1,    -1,   608,  1096,    -1,   723,    -1,  1096,   677,   723,
      -1,   526,   160,  1392,    -1,   524,   160,  1392,    -1,   525,
      -1,    63,  1433,  1261,  1098,    -1,    -1,   429,    -1,   176,
      -1,   453,  1110,  1433,  1261,  1100,    -1,    -1,  1101,    -1,
    1102,    -1,  1101,  1102,    -1,   429,    -1,   176,    -1,   613,
      -1,    17,  1110,  1433,  1261,    -1,    36,  1392,    -1,    64,
    1433,  1261,  1106,    -1,    -1,  1107,    -1,  1108,    -1,  1108,
    1107,    -1,   429,    -1,   180,    -1,   331,    -1,   176,    -1,
      59,    -1,   194,   610,    -1,   382,  1110,  1433,  1261,    -1,
      -1,   371,    -1,   282,    -1,    -1,   451,  1433,  1112,  1114,
      -1,   451,   612,   745,  1113,    -1,  1400,   583,  1400,    -1,
    1113,   677,  1400,   583,  1400,    -1,  1115,    -1,  1114,   677,
    1115,    -1,  1386,   583,  1386,    -1,    -1,    50,   235,  1117,
    1118,   249,  1122,    -1,  1119,    -1,  1121,    -1,  1120,    -1,
    1119,   677,  1120,    -1,  1386,  1131,    -1,  1386,  1129,  1131,
      -1,  1395,    -1,   125,    -1,    -1,   281,   235,   246,    50,
    1124,  1125,    -1,  1128,    -1,  1126,    -1,  1127,    -1,  1126,
     677,  1127,    -1,  1386,  1131,  1133,    -1,  1386,  1129,  1131,
    1133,    -1,    -1,   401,  1130,   674,  1062,   675,    -1,  1132,
      -1,    -1,  1010,   674,  1213,   675,    -1,    -1,   231,   269,
      -1,  1136,    -1,  1138,    -1,  1135,    -1,   674,  1135,   675,
      -1,  1136,  1254,    -1,  1137,  1234,  1238,  1249,  1148,    -1,
    1138,  1235,  1238,  1249,  1148,    -1,  1138,  1239,  1249,  1148,
      -1,  1139,    -1,  1137,   603,  1491,  1139,    -1,  1138,   603,
    1491,  1139,    -1,  1137,   603,  1491,  1138,    -1,  1138,   603,
    1491,  1138,    -1,   674,  1138,   675,    -1,   674,  1136,   675,
      -1,  1140,    -1,   493,  1145,  1149,  1254,  1141,  1224,  1228,
    1226,    -1,   493,  1145,  1149,  1141,  1224,  1228,  1226,    -1,
      -1,  1142,    -1,   197,  1143,    -1,   145,    -1,  1144,    -1,
    1191,    -1,  1144,   677,  1191,    -1,    -1,  1146,    -1,  1146,
    1147,    -1,  1147,    -1,  1495,    -1,   531,    -1,   529,    -1,
      -1,   194,   609,    -1,   285,   249,   503,   342,    -1,  1149,
     677,  1150,    -1,  1150,    -1,   668,    -1,  1380,    -1,  1153,
    1151,    -1,    -1,    21,  1395,    -1,    21,  1392,    -1,  1395,
      -1,  1392,    -1,    -1,   674,   675,    -1,  1153,  1157,  1153,
      -1,  1153,   648,  1153,    -1,  1153,  1158,  1153,    -1,   367,
    1153,    -1,  1154,   254,   589,    -1,  1154,   254,  1159,   589,
      -1,  1154,   254,   179,    -1,  1154,   254,  1159,   179,    -1,
    1154,   254,   605,    -1,  1154,   254,  1159,   605,    -1,  1154,
      -1,  1154,   254,   372,    -1,  1154,   254,  1159,   372,    -1,
    1154,  1161,  1155,    -1,  1154,  1161,  1162,  1493,    -1,  1155,
      -1,  1156,   249,  1493,    -1,  1156,  1159,   249,  1493,    -1,
    1156,   249,   674,  1153,   675,    -1,  1156,   249,   674,  1153,
     677,  1185,   675,    -1,  1156,  1159,   249,   674,  1153,   675,
      -1,  1156,  1159,   249,   674,  1153,   677,  1185,   675,    -1,
    1156,    33,  1156,    19,  1155,    -1,  1156,  1159,    33,  1156,
      19,  1155,    -1,  1156,   517,   275,  1156,    -1,  1156,   275,
    1163,  1227,    -1,  1156,  1159,   275,  1163,  1227,    -1,  1156,
     442,  1156,    -1,  1156,  1159,   442,  1156,    -1,  1156,    -1,
    1156,   664,  1156,    -1,  1156,   665,  1156,    -1,  1156,   504,
    1156,    -1,  1156,   505,  1156,    -1,  1156,   667,  1156,    -1,
    1156,   666,  1156,    -1,  1156,   667,   245,  1153,  1218,    -1,
    1156,   666,   245,  1153,  1218,    -1,  1156,   668,  1156,    -1,
    1156,   669,  1156,    -1,  1156,   670,  1156,    -1,  1156,   141,
    1156,    -1,  1156,   345,  1156,    -1,  1156,   671,  1156,    -1,
    1163,    -1,   390,    -1,   387,    -1,    19,    -1,    18,    -1,
     367,    -1,   366,    -1,   678,    -1,   366,    -1,   160,    -1,
     161,    -1,   201,    -1,   214,    -1,   267,    -1,   294,    -1,
     359,    -1,    13,    -1,    20,    -1,  1382,    -1,  1164,    -1,
    1165,    -1,  1168,    -1,  1166,    -1,  1163,    71,  1398,    -1,
    1376,    -1,  1374,    -1,  1176,    -1,  1175,    -1,  1163,   389,
    1163,    -1,   667,  1163,    -1,   666,  1163,    -1,   672,  1163,
      -1,  1160,  1163,    -1,  1492,    -1,   674,  1153,   675,    -1,
     674,  1153,   677,  1185,   675,    -1,   484,   674,  1153,   677,
    1185,   675,    -1,   171,  1493,    -1,   679,  1395,  1153,   680,
      -1,   319,  1186,    10,   674,  1156,  1169,   675,    -1,    35,
    1163,    -1,    55,   674,  1153,    21,  1183,   675,    -1,    54,
    1188,  1190,  1189,   154,    -1,    96,   674,  1153,   677,  1183,
     675,    -1,    96,   674,  1153,   615,   976,   675,    -1,   125,
     674,  1382,   675,    -1,   620,   674,  1383,   675,    -1,   245,
    1153,  1218,   667,  1153,    -1,  1382,   259,  1393,    -1,  1382,
     652,  1393,    -1,    62,   674,  1185,   675,    -1,    62,   674,
    1185,   615,   976,   675,    -1,   104,  1152,    -1,   115,   674,
    1153,   675,    -1,   120,   674,  1153,   675,    -1,   226,   674,
    1153,   675,    -1,   241,   674,  1153,   677,  1153,   677,  1153,
     677,  1153,   675,    -1,   245,   674,  1153,   677,  1153,   675,
      -1,   245,   674,  1153,   677,  1153,   677,  1185,   675,    -1,
     271,   674,  1153,   677,  1153,   675,    -1,   339,   674,  1153,
     675,    -1,   346,   674,  1153,   675,    -1,   477,   674,  1153,
     677,  1153,   675,    -1,   491,   674,  1153,   675,    -1,   579,
     674,  1153,   675,    -1,   576,   674,  1153,   675,    -1,   576,
     674,  1153,   677,  1153,   675,    -1,   588,   674,  1153,   675,
      -1,   588,   674,   268,  1153,   197,  1153,   675,    -1,   588,
     674,   584,  1153,   197,  1153,   675,    -1,   588,   674,    46,
    1153,   197,  1153,   675,    -1,   588,   674,   268,   197,  1153,
     675,    -1,   588,   674,   584,   197,  1153,   675,    -1,   588,
     674,    46,   197,  1153,   675,    -1,   588,   674,  1153,   197,
    1153,   675,    -1,   612,   674,   675,    -1,   650,   674,  1153,
     675,    -1,     8,   674,  1153,   677,  1153,   675,    -1,     8,
     674,  1153,   677,   245,  1153,  1218,   675,    -1,   102,  1152,
      -1,   107,   961,    -1,   113,   674,  1153,   677,   245,  1153,
    1218,   675,    -1,   114,   674,  1153,   677,   245,  1153,  1218,
     675,    -1,   178,   674,  1218,   197,  1153,   675,    -1,   207,
     674,  1220,   677,  1153,   675,    -1,   973,    -1,   412,   674,
    1156,   249,  1153,   675,    -1,   552,   674,  1153,   677,  1153,
     675,    -1,   552,   674,  1153,   677,   245,  1153,  1218,   675,
      -1,   556,   674,  1153,   677,  1153,   677,  1153,   675,    -1,
     556,   674,  1153,   677,  1153,   675,    -1,   556,   674,  1153,
     197,  1153,   194,  1153,   675,    -1,   556,   674,  1153,   197,
    1153,   675,    -1,   562,   961,    -1,   577,   674,  1219,   677,
    1153,   677,  1153,   675,    -1,   578,   674,  1219,   677,  1153,
     677,  1153,   675,    -1,   616,  1152,    -1,   618,   961,    -1,
     617,   961,    -1,    23,   674,  1153,   675,    -1,    61,   674,
    1153,   675,    -1,    69,   674,  1185,   675,    -1,    72,   674,
    1153,   675,    -1,   108,   674,   675,    -1,   230,   674,  1153,
     677,  1153,   677,  1153,   675,    -1,   195,   674,  1153,   677,
    1153,   675,    -1,   195,   674,  1153,   677,  1153,   677,  1153,
     675,    -1,   335,   674,  1153,   675,    -1,   345,   674,  1153,
     677,  1153,   675,    -1,   404,   674,  1153,   675,    -1,   427,
     674,  1153,   675,    -1,   455,   674,  1153,   677,  1153,   675,
      -1,   456,   674,  1153,   677,  1153,   677,  1153,   675,    -1,
     475,   674,  1153,   675,    -1,   485,   674,   675,    -1,   590,
     674,  1153,   677,  1153,   675,    -1,   632,   674,  1153,   675,
      -1,   632,   674,  1153,   677,  1153,   675,    -1,   633,   674,
    1153,  1000,   675,    -1,   633,   674,  1153,    21,    62,   990,
    1000,   675,    -1,   633,   674,  1153,    21,    35,   990,   675,
      -1,   633,   674,  1153,   677,  1243,   677,  1243,   677,  1243,
     675,    -1,  1167,    -1,   205,   674,  1184,   675,    -1,   279,
     674,  1185,   675,    -1,   347,   674,  1185,   675,    -1,   348,
     674,  1185,   675,    -1,   349,   674,  1185,   675,    -1,   409,
     674,  1153,   677,  1153,   675,    -1,   410,   674,  1185,   675,
      -1,  1389,   674,  1172,   675,    -1,  1395,   683,  1395,   674,
    1184,   675,    -1,  1170,  1171,    -1,   249,    44,   342,    -1,
      -1,   249,   355,   265,   342,    -1,    -1,   637,   428,   173,
      -1,    -1,  1173,    -1,  1174,    -1,  1173,   677,  1174,    -1,
    1153,  1151,    -1,    29,   674,  1182,   675,    -1,    29,   674,
     140,  1182,   675,    -1,    38,   674,  1182,   675,    -1,    39,
     674,  1182,   675,    -1,    41,   674,  1182,   675,    -1,    97,
     674,  1223,   668,   675,    -1,    97,   674,  1182,   675,    -1,
      97,   674,   140,  1185,   675,    -1,   341,   674,  1182,   675,
      -1,   341,   674,   140,  1182,   675,    -1,   324,   674,  1182,
     675,    -1,   324,   674,   140,  1182,   675,    -1,   545,   674,
    1182,   675,    -1,   625,   674,  1182,   675,    -1,   544,   674,
    1182,   675,    -1,   627,   674,  1182,   675,    -1,   557,   674,
    1182,   675,    -1,   557,   674,   140,  1182,   675,    -1,   213,
     674,  1178,  1185,  1180,  1179,   675,    -1,   682,  1177,    -1,
    1398,   502,  1153,    -1,  1398,    -1,   682,  1417,  1398,  1032,
      -1,    -1,   140,    -1,    -1,   495,  1373,    -1,    -1,   388,
      48,  1181,    -1,  1181,   677,  1381,    -1,  1381,    -1,  1223,
    1153,    -1,    35,   966,    -1,    62,   966,   988,    -1,   357,
     966,    -1,   509,    -1,   509,   247,    -1,   607,    -1,   607,
     247,    -1,   115,    -1,   579,   960,    -1,   112,   960,    -1,
     123,   958,    -1,   260,    -1,    -1,  1185,    -1,  1153,    -1,
    1185,   677,  1153,    -1,  1187,    -1,   674,  1187,   675,    -1,
    1382,    -1,  1187,   677,  1382,    -1,    -1,  1153,    -1,    -1,
     150,  1153,    -1,   634,  1153,   575,  1153,    -1,  1190,   634,
    1153,   575,  1153,    -1,  1201,    -1,  1193,    -1,   679,  1395,
    1192,   680,    -1,  1201,    -1,  1193,    -1,  1191,  1195,  1191,
     378,  1153,    -1,  1191,  1195,  1191,   615,   674,  1216,   675,
      -1,  1191,  1196,  1191,   378,  1153,    -1,  1191,  1196,  1191,
     615,   674,  1216,   675,    -1,  1191,  1195,  1191,    -1,  1191,
    1194,  1201,    -1,   355,  1197,   258,    -1,   355,   477,  1198,
     258,    -1,   355,   271,  1198,   258,    -1,   258,    -1,   238,
     258,    -1,   100,   258,    -1,   549,    -1,   271,  1198,   258,
      -1,   477,  1198,   258,    -1,    -1,   238,    -1,    -1,   391,
      -1,    -1,  1200,    -1,   401,   674,  1216,   675,    -1,  1204,
      -1,  1203,    -1,  1206,    -1,  1205,    -1,  1202,    -1,   674,
    1202,   675,    -1,   674,  1144,   677,  1191,   675,    -1,   674,
    1203,   675,    -1,   674,  1204,   675,    -1,  1386,  1199,  1222,
    1212,    -1,   674,  1205,   675,    -1,   674,  1193,   675,    -1,
    1493,  1222,    -1,    -1,   194,   258,    -1,   194,   388,    48,
      -1,   194,   212,    48,    -1,   192,    -1,   231,    -1,  1208,
    1010,  1207,   674,  1215,   675,    -1,   614,  1010,  1207,   674,
    1213,   675,    -1,  1209,    -1,  1210,  1209,    -1,    -1,  1210,
      -1,  1211,    -1,    -1,  1215,    -1,  1395,    -1,   418,    -1,
    1214,    -1,  1215,   677,  1214,    -1,  1217,    -1,  1395,    -1,
    1217,   677,  1395,    -1,  1219,    -1,   116,    -1,   117,    -1,
     118,    -1,   119,    -1,   223,    -1,   224,    -1,   225,    -1,
     337,    -1,   338,    -1,   490,    -1,   649,    -1,   120,    -1,
     632,    -1,   226,    -1,   339,    -1,   346,    -1,   427,    -1,
     491,    -1,   335,    -1,   650,    -1,   115,    -1,   579,    -1,
     576,    -1,   112,    -1,    -1,    21,    -1,   160,    -1,    -1,
    1221,  1395,    -1,    -1,    13,    -1,  1225,    -1,    -1,   635,
    1153,    -1,    -1,   217,  1153,    -1,   165,  1163,    -1,    -1,
      -1,   212,    48,  1229,  1230,    -1,  1229,   677,  1381,    -1,
    1381,    -1,    -1,   638,    -1,   639,    -1,   388,    48,  1232,
      -1,  1232,   677,  1233,    -1,  1233,    -1,  1383,  1237,    -1,
      -1,  1235,    -1,   388,    48,  1236,    -1,  1236,   677,  1381,
      -1,  1381,    -1,    -1,    22,    -1,   131,    -1,    -1,  1239,
      -1,   276,  1240,    -1,  1241,    -1,  1241,   677,  1241,    -1,
    1241,   377,  1241,    -1,  1395,    -1,  1374,    -1,   594,    -1,
     290,    -1,   373,    -1,    -1,   276,  1241,    -1,   373,    -1,
     219,    -1,   290,    -1,   594,    -1,   122,    -1,   188,    -1,
     373,    -1,   219,    -1,   290,    -1,   594,    -1,  1247,    -1,
     373,    -1,   594,    -1,   290,    -1,   122,    -1,   188,    -1,
     373,    -1,   594,    -1,   290,    -1,  1247,    -1,  1248,    -1,
     122,    -1,   188,    -1,    -1,   420,    16,   674,  1250,   675,
      -1,    -1,  1251,    -1,  1251,   677,  1251,    -1,   373,    -1,
    1252,   677,  1253,    -1,  1253,    -1,   682,  1398,    -1,  1398,
      -1,   246,  1255,    -1,   392,  1394,   978,  1357,  1360,    -1,
     146,  1394,    -1,  1252,    -1,   143,  1257,  1149,    -1,    -1,
     144,  1265,  1433,  1264,  1261,  1075,    -1,    -1,    -1,   144,
     235,  1395,   378,  1386,  1259,  1260,  1070,    -1,   144,   108,
    1264,  1395,    -1,   144,   200,  1264,  1395,   683,  1395,    -1,
     144,   200,  1264,  1395,    -1,   144,   420,  1264,   747,    -1,
     144,   612,  1264,   745,  1469,    -1,   144,   628,  1264,  1261,
    1075,    -1,   144,   167,  1264,   747,    -1,   144,   587,  1264,
     747,    -1,   144,   564,   879,  1266,    -1,   144,   286,   212,
     880,  1266,    -1,   144,   499,  1264,  1398,    -1,   144,   654,
    1264,  1470,    -1,  1386,    -1,  1261,   677,  1386,    -1,  1386,
      -1,  1387,    -1,  1263,   677,  1387,    -1,    -1,   230,   171,
      -1,    -1,   569,    -1,    -1,  1267,    -1,  1268,    -1,  1267,
     930,  1268,    -1,   890,    -1,   892,    -1,   241,  1271,  1074,
    1273,  1386,  1199,  1274,  1287,    -1,   241,  1271,  1074,  1273,
    1386,  1199,   501,  1289,  1287,    -1,   241,  1271,  1074,  1273,
    1386,  1199,  1275,  1287,    -1,   456,  1272,  1273,  1386,  1199,
    1274,    -1,   456,  1272,  1273,  1386,  1199,   501,  1289,    -1,
     456,  1272,  1273,  1386,  1199,  1275,    -1,    -1,   293,    -1,
     128,    -1,   220,    -1,  1291,    -1,   128,    -1,    -1,   246,
      -1,  1277,    -1,   674,   675,  1277,    -1,   674,  1276,   675,
    1277,    -1,  1278,    -1,   674,   675,  1278,    -1,   674,  1276,
     675,  1278,    -1,  1276,   677,  1379,    -1,  1379,    -1,  1279,
    1280,    -1,  1136,    -1,  1138,    -1,   621,    -1,   620,    -1,
    1280,   677,  1283,    -1,  1283,    -1,   160,    -1,   502,    -1,
      -1,  1281,    -1,   674,  1284,   675,    -1,    -1,  1285,    -1,
    1285,   677,  1286,    -1,  1286,    -1,  1153,    -1,   125,    -1,
      -1,   378,   147,   263,   609,  1289,    -1,   609,  1291,  1074,
    1144,   501,  1289,  1224,  1234,  1242,    -1,  1289,   677,  1290,
      -1,  1290,    -1,  1383,  1281,  1286,    -1,    -1,   293,    -1,
     130,  1294,   197,  1386,  1199,  1224,  1234,  1242,    -1,   130,
    1294,  1263,   197,  1144,  1224,    -1,   130,  1294,   197,  1263,
     615,  1144,  1224,    -1,    -1,   683,   668,    -1,    -1,  1295,
    1294,    -1,   429,    -1,   293,    -1,   231,    -1,    -1,   590,
    1298,  1297,  1262,    -1,    -1,   566,    -1,    -1,  1300,    -1,
    1301,    -1,  1300,   677,  1301,    -1,    98,    -1,   332,    -1,
      43,   252,    -1,    94,   561,    -1,   396,   181,    -1,   253,
      -1,   560,    -1,   518,    -1,    13,    -1,    -1,   194,   428,
     373,    -1,    -1,   506,  1304,  1305,    -1,   109,  1319,    -1,
    1314,   563,  1313,  1319,    -1,  1314,   586,  1313,  1318,    -1,
     166,  1313,  1318,    -1,   566,   543,  1313,  1319,    -1,   381,
     563,  1313,  1318,    -1,   408,    -1,   158,  1398,  1310,    -1,
     158,    13,  1310,    -1,  1314,    73,  1315,  1386,  1313,  1319,
      -1,  1311,   287,    -1,   511,   222,    -1,    -1,    36,   166,
    1316,  1317,  1306,  1238,    -1,    -1,   444,   166,  1316,  1317,
    1307,  1238,   724,    -1,  1012,  1315,  1386,  1313,  1225,    -1,
    1312,   157,    -1,    97,   674,   668,   675,   631,    -1,    97,
     674,   668,   675,   163,    -1,   631,  1238,    -1,   163,  1238,
      -1,   424,    -1,   423,  1299,  1302,  1238,    -1,    -1,  1416,
     543,  1308,  1319,    -1,  1314,   422,    -1,    -1,  1416,   624,
    1309,  1319,    -1,   975,  1319,    -1,    72,  1319,    -1,   419,
      -1,   211,    -1,   211,   194,  1400,    -1,   211,   194,  1400,
     615,  1469,    -1,    99,   108,   927,  1395,    -1,    99,   566,
    1386,    -1,    99,   628,  1386,    -1,   316,   543,    -1,   511,
     543,   724,    -1,    99,   420,   747,    -1,    99,   200,   747,
      -1,    99,   587,   747,    -1,   420,   543,  1318,    -1,   200,
     543,  1318,    -1,   420,    70,   747,    -1,   200,    70,   747,
      -1,    99,   167,   747,    -1,    99,   612,   745,  1400,    -1,
     543,    -1,   350,    -1,   287,    -1,   316,    -1,    35,    -1,
      -1,   547,    -1,    -1,  1315,  1395,    -1,    -1,   198,    -1,
     197,    -1,   249,    -1,    -1,   249,  1392,    -1,    -1,   197,
    1245,    -1,    -1,   275,  1392,    -1,   635,  1153,    -1,    -1,
     275,  1393,    -1,   635,  1153,    -1,  1323,  1386,  1325,    -1,
      -1,  1323,  1324,  1321,  1322,    -1,  1134,    -1,  1269,    -1,
    1270,    -1,  1288,    -1,  1292,    -1,   194,    87,  1244,    -1,
     131,    -1,   132,    -1,    -1,   176,    -1,   402,    -1,   195,
     160,  1398,    -1,    -1,  1373,    -1,  1395,    -1,    -1,   190,
    1110,  1327,  1328,    -1,    -1,  1433,  1334,  1329,  1330,    -1,
    1332,    -1,    -1,   637,   433,   285,    -1,    -1,   194,  1331,
     175,    -1,  1332,   677,  1333,    -1,  1333,    -1,   162,   287,
      -1,   158,   287,    -1,   202,   287,    -1,   512,   287,    -1,
      35,   287,    -1,   443,   287,   724,    -1,   428,    50,    -1,
     222,    -1,   419,    -1,   287,    -1,   543,    -1,   133,    -1,
     468,    -1,   383,    -1,    -1,  1261,    -1,    -1,   466,  1336,
    1337,    -1,  1337,   677,  1338,    -1,  1338,    -1,    -1,   511,
    1339,  1340,   724,    -1,   316,    -1,   428,    50,    -1,    -1,
      13,    -1,    -1,   426,  1342,  1343,    -1,  1311,   287,  1344,
      -1,   583,  1392,    -1,    31,  1153,    -1,   264,  1346,  1153,
      -1,    -1,    87,    -1,   428,    -1,   614,  1395,    -1,    -1,
      -1,    -1,   281,  1352,  1349,  1354,  1353,   236,  1394,  1355,
     246,   566,  1386,  1199,  1350,   978,  1351,  1363,  1357,  1360,
    1364,  1366,  1369,    -1,   111,    -1,   647,    -1,    -1,   282,
      -1,    -1,    85,    -1,   293,    -1,    -1,  1356,    -1,   456,
      -1,   231,    -1,    -1,    73,  1358,    -1,  1358,  1359,    -1,
    1359,    -1,   571,    48,  1373,    -1,   386,   153,    48,  1373,
      -1,   153,    48,  1373,    -1,   164,    48,  1373,    -1,    -1,
     278,  1361,    -1,  1361,  1362,    -1,  1362,    -1,   571,    48,
    1373,    -1,   537,    48,  1373,    -1,    -1,   482,   228,    48,
    1373,    -1,    -1,   231,   373,  1365,    -1,   278,    -1,   482,
      -1,    -1,   674,  1367,   675,    -1,   674,   675,    -1,  1367,
     677,  1368,    -1,  1368,    -1,  1383,    -1,   682,  1398,    -1,
      -1,   501,  1370,    -1,  1370,   677,  1371,    -1,  1371,    -1,
    1383,  1281,  1286,    -1,   572,    -1,   356,    -1,   597,   572,
      -1,  1372,  1393,    -1,  1393,    -1,   219,    -1,    37,    -1,
     397,    -1,  1376,    -1,   667,  1377,    -1,   666,  1377,    -1,
    1372,    -1,  1377,    -1,  1378,    -1,   372,    -1,   179,    -1,
     589,    -1,   219,    -1,    37,    -1,   597,   219,    -1,   597,
      37,    -1,   373,    -1,   290,    -1,   594,    -1,   122,    -1,
     188,    -1,   115,   572,    -1,   579,   572,    -1,   576,   572,
      -1,  1383,    -1,  1380,    -1,  1395,   683,   668,    -1,  1395,
     683,  1395,   683,   668,    -1,  1153,  1237,    -1,  1395,    -1,
    1384,    -1,  1395,    -1,  1384,    -1,  1395,   683,  1395,    -1,
     683,  1395,   683,  1395,    -1,  1395,   683,  1395,   683,  1395,
      -1,  1395,    -1,  1395,   683,  1395,   683,  1395,    -1,  1395,
     683,  1395,    -1,   683,  1395,    -1,  1395,    -1,  1395,   683,
    1395,    -1,   683,  1395,    -1,  1395,  1293,    -1,  1395,   683,
    1395,  1293,    -1,  1395,    -1,   227,    -1,   229,    -1,  1392,
      -1,  1390,    -1,   572,    -1,   572,    -1,   572,    -1,  1389,
      -1,  1402,    -1,  1389,    -1,  1406,    -1,  1389,    -1,  1404,
      -1,  1395,    -1,  1392,    -1,   274,    -1,  1396,    -1,  1392,
      -1,   274,    -1,  1398,    -1,  1398,   682,  1398,    -1,   104,
    1152,    -1,  1399,    -1,  1399,   682,  1398,    -1,  1404,    -1,
    1403,    -1,   170,    -1,   507,    -1,     5,    -1,    23,    -1,
      15,    -1,    30,    -1,    32,    -1,    49,    -1,    50,    -1,
      61,    -1,    63,    -1,    68,    -1,    77,    -1,    79,    -1,
      93,    -1,   121,    -1,   143,    -1,   154,    -1,   190,    -1,
     191,    -1,   195,    -1,   204,    -1,   215,    -1,   218,    -1,
     221,    -1,   244,    -1,   656,    -1,   265,    -1,   369,    -1,
     381,    -1,   384,    -1,   394,    -1,   398,    -1,   411,    -1,
     413,    -1,   415,    -1,   450,    -1,   453,    -1,   466,    -1,
     469,    -1,   478,    -1,   487,    -1,   492,    -1,   499,    -1,
     509,    -1,   515,    -1,   511,    -1,   516,    -1,   539,    -1,
     546,    -1,   590,    -1,   657,    -1,   601,    -1,   602,    -1,
     642,    -1,   645,    -1,   610,    -1,  1405,    -1,   167,    -1,
     183,    -1,   365,    -1,   421,    -1,   425,    -1,   449,    -1,
     457,    -1,   558,    -1,     6,    -1,     8,    -1,     9,    -1,
      10,    -1,    11,    -1,    12,    -1,    16,    -1,    20,    -1,
      25,    -1,    27,    -1,    26,    -1,    28,    -1,    29,    -1,
      36,    -1,    40,    -1,    43,    -1,    45,    -1,    44,    -1,
      47,    -1,    53,    -1,    56,    -1,    57,    -1,    59,    -1,
      60,    -1,    65,    -1,    67,    -1,    66,    -1,    69,    -1,
      70,    -1,    72,    -1,    76,    -1,    75,    -1,    73,    -1,
      78,    -1,    80,    -1,    81,    -1,   659,    -1,    82,    -1,
      83,    -1,    84,    -1,    85,    -1,    87,    -1,    88,    -1,
      90,    -1,    92,    -1,    91,    -1,    94,    -1,    98,    -1,
     101,    -1,   103,    -1,   106,    -1,   111,    -1,   110,    -1,
     112,    -1,   115,    -1,   120,    -1,   126,    -1,   127,    -1,
     129,    -1,   133,    -1,   135,    -1,   136,    -1,   137,    -1,
     138,    -1,   139,    -1,   146,    -1,   147,    -1,   148,    -1,
     155,    -1,   159,    -1,   158,    -1,   157,    -1,   162,    -1,
     163,    -1,   165,    -1,   166,    -1,   168,    -1,   169,    -1,
     173,    -1,   174,    -1,   175,    -1,   176,    -1,   177,    -1,
     181,    -1,   180,    -1,   196,    -1,   152,    -1,   198,    -1,
     184,    -1,   185,    -1,   186,    -1,   187,    -1,   202,    -1,
     206,    -1,   205,    -1,   207,    -1,   211,    -1,   209,    -1,
     216,    -1,   222,    -1,   226,    -1,   228,    -1,   232,    -1,
     248,    -1,   233,    -1,   234,    -1,   237,    -1,   252,    -1,
     253,    -1,   255,    -1,   256,    -1,   242,    -1,   243,    -1,
     260,    -1,   262,    -1,   266,    -1,   269,    -1,   272,    -1,
     273,    -1,   279,    -1,   280,    -1,   282,    -1,   284,    -1,
     286,    -1,   287,    -1,   322,    -1,   316,    -1,   318,    -1,
     299,    -1,   303,    -1,   300,    -1,   301,    -1,   317,    -1,
     302,    -1,   305,    -1,   297,    -1,   304,    -1,   298,    -1,
     314,    -1,   308,    -1,   306,    -1,   307,    -1,   309,    -1,
     310,    -1,   311,    -1,   312,    -1,   313,    -1,   295,    -1,
     320,    -1,   321,    -1,   323,    -1,   325,    -1,   326,    -1,
     331,    -1,   332,    -1,   333,    -1,   334,    -1,   335,    -1,
     336,    -1,   339,    -1,   340,    -1,   344,    -1,   342,    -1,
     346,    -1,   347,    -1,   348,    -1,   349,    -1,   350,    -1,
     351,    -1,   353,    -1,   352,    -1,   354,    -1,   357,    -1,
     358,    -1,   361,    -1,   363,    -1,   362,    -1,   370,    -1,
     364,    -1,   374,    -1,   376,    -1,   377,    -1,   379,    -1,
     380,    -1,   395,    -1,   396,    -1,   400,    -1,   403,    -1,
     402,    -1,   404,    -1,   405,    -1,   406,    -1,   407,    -1,
     408,    -1,   409,    -1,   410,    -1,   416,    -1,   417,    -1,
     419,    -1,   422,    -1,   423,    -1,   424,    -1,   427,    -1,
     428,    -1,   429,    -1,   432,    -1,   436,    -1,   437,    -1,
     439,    -1,   438,    -1,   440,    -1,   443,    -1,   444,    -1,
     445,    -1,   446,    -1,   447,    -1,   452,    -1,   454,    -1,
     458,    -1,   459,    -1,   460,    -1,   461,    -1,   462,    -1,
     463,    -1,   464,    -1,   468,    -1,   471,    -1,   472,    -1,
     473,    -1,   475,    -1,   479,    -1,   480,    -1,   481,    -1,
     482,    -1,   485,    -1,   483,    -1,   484,    -1,   486,    -1,
     488,    -1,   489,    -1,   491,    -1,   497,    -1,   496,    -1,
     498,    -1,   510,    -1,   503,    -1,   512,    -1,   514,    -1,
     517,    -1,   518,    -1,   524,    -1,   525,    -1,   526,    -1,
     529,    -1,   528,    -1,   531,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,    -1,   541,    -1,   542,    -1,   543,    -1,
     547,    -1,   550,    -1,   551,    -1,   552,    -1,   553,    -1,
     555,    -1,   554,    -1,   559,    -1,   560,    -1,   561,    -1,
     568,    -1,   563,    -1,   567,    -1,   564,    -1,   569,    -1,
     570,    -1,   573,    -1,   574,    -1,   585,    -1,   586,    -1,
     576,    -1,   577,    -1,   578,    -1,   579,    -1,   591,    -1,
     592,    -1,   593,    -1,   200,    -1,   595,    -1,   596,    -1,
     599,    -1,   598,    -1,   605,    -1,   608,    -1,   612,    -1,
     613,    -1,   619,    -1,   624,    -1,   628,    -1,   621,    -1,
     631,    -1,   630,    -1,   632,    -1,   640,    -1,   641,    -1,
     633,    -1,   644,    -1,   646,    -1,   647,    -1,   650,    -1,
    1405,    -1,  1403,    -1,   501,  1408,    -1,  1420,  1412,    -1,
     585,  1422,    -1,  1415,  1411,    -1,   404,  1281,  1429,    -1,
     404,  1281,   404,   674,  1429,   675,    -1,   404,   194,  1400,
    1281,  1429,    -1,   404,   194,  1400,  1281,   404,   674,  1429,
     675,    -1,   501,   654,  1470,    -1,   501,   654,   365,    -1,
     501,   654,   125,    -1,   501,   125,   654,  1470,   583,  1470,
      -1,   501,   125,   654,   365,   583,  1470,    -1,   501,   125,
     654,    13,   583,  1470,    -1,   501,   654,    13,  1410,    -1,
      -1,   658,  1470,    -1,  1419,  1412,    -1,   585,  1422,    -1,
      -1,   677,  1413,    -1,  1414,    -1,  1413,   677,  1414,    -1,
    1415,  1419,    -1,  1420,    -1,   209,    -1,   653,    -1,   282,
      -1,   498,    -1,    -1,   209,    -1,   282,    -1,   498,    -1,
      -1,   209,   683,    -1,   282,   683,    -1,   498,   683,    -1,
      -1,   653,   683,    -1,   209,   683,    -1,   282,   683,    -1,
     498,   683,    -1,  1421,  1281,  1430,    -1,  1421,  1281,  1430,
      -1,   682,  1398,  1281,  1153,    -1,   682,   682,  1418,  1421,
    1281,  1430,    -1,   975,   980,    -1,   352,  1281,  1153,    -1,
     352,   977,   982,    -1,  1395,    -1,  1395,   683,  1395,    -1,
     125,   683,  1395,    -1,  1423,  1426,    -1,  1425,  1424,    -1,
    1427,    -1,    -1,   677,  1423,    -1,   255,   273,  1428,    -1,
      -1,   677,  1425,    -1,   433,   380,    -1,   433,   643,    -1,
     433,   595,    -1,   433,    78,    -1,   454,   433,    -1,   496,
      -1,   572,    -1,  1153,    -1,   125,    -1,   378,    -1,    13,
      -1,    35,    -1,    -1,   285,  1433,  1432,  1434,    -1,   566,
      -1,   563,    -1,  1435,    -1,  1434,   677,  1435,    -1,  1386,
    1222,  1436,    -1,   433,    -1,   643,    -1,   293,   643,    -1,
     433,   282,    -1,    -1,   606,  1438,  1433,    -1,   507,    -1,
      14,   243,  1441,    -1,   480,  1398,   316,   263,    -1,   215,
    1386,   381,  1222,    -1,   215,  1388,    68,    -1,    -1,   215,
    1388,   433,  1443,  1444,  1224,  1238,    -1,  1445,    -1,  1395,
    1446,    -1,   186,    -1,   363,    -1,   186,    -1,   363,    -1,
     417,    -1,   266,    -1,    -1,  1448,  1447,   674,  1285,   675,
      -1,   160,    -1,   201,    -1,   267,    -1,   214,    -1,   294,
      -1,    -1,   476,   745,  1450,  1451,    -1,   476,  1470,   197,
    1469,    -1,  1456,   378,  1455,  1468,   197,  1469,    -1,  1456,
     378,   200,  1468,   197,  1469,    -1,  1456,   378,   420,  1468,
     197,  1469,    -1,    13,  1457,   677,   210,   385,   197,  1469,
      -1,   425,   378,  1400,   197,  1469,    -1,    -1,   210,   745,
    1453,  1454,    -1,   210,  1470,   583,  1469,  1464,    -1,  1456,
     378,  1455,  1468,   583,  1471,  1476,  1477,    -1,  1456,   378,
     200,  1468,   583,  1471,  1476,  1477,    -1,  1456,   378,   420,
    1468,   583,  1471,  1476,  1477,    -1,   425,   378,  1400,   583,
    1471,  1478,    -1,    -1,   566,    -1,  1458,    -1,    13,  1457,
      -1,    -1,   419,    -1,  1459,    -1,  1458,   677,  1459,    -1,
      -1,   493,  1460,  1473,    -1,    -1,   241,  1461,  1473,    -1,
      -1,   609,  1462,  1473,    -1,    -1,   441,  1463,  1473,    -1,
     130,    -1,   611,    -1,   235,    -1,    14,    -1,    99,    -1,
     144,    -1,   170,    -1,   449,    -1,   507,    -1,   421,    -1,
     183,    -1,   210,   385,    -1,   506,   109,    -1,   558,    -1,
      99,   569,   563,    -1,   285,   563,    -1,   457,   511,    -1,
     457,    67,    -1,    99,   628,    -1,   506,   628,    -1,    99,
     481,    -1,    14,   481,    -1,    99,   612,    -1,   167,    -1,
     587,    -1,    99,   564,    -1,    99,   654,    -1,   144,   654,
      -1,    -1,   637,   655,   385,    -1,    -1,    19,    -1,  1467,
    1465,  1466,    -1,  1467,    -1,   553,   572,    -1,   256,   572,
      -1,    65,   572,    -1,   668,    -1,  1395,   683,   668,    -1,
     668,   683,   668,    -1,  1386,    -1,  1400,    -1,  1469,   677,
    1400,    -1,  1401,    -1,  1470,   677,  1401,    -1,  1472,    -1,
    1471,   677,  1472,    -1,  1400,   228,    48,   572,    -1,  1400,
     228,    48,   404,   572,    -1,  1400,   228,   637,  1398,    -1,
    1400,   228,   637,  1398,    21,  1392,    -1,  1400,   228,   637,
    1398,    48,  1392,    -1,  1400,    -1,    -1,   674,  1474,   675,
      -1,  1474,   677,  1475,    -1,  1475,    -1,  1395,    -1,    -1,
     465,  1466,    -1,   465,   535,    -1,   465,   644,    -1,   465,
     365,    -1,    -1,   637,  1479,    -1,    -1,   637,   210,   385,
      -1,  1479,  1480,    -1,  1480,    -1,   210,   385,    -1,   321,
    1243,    -1,   325,  1243,    -1,   320,  1243,    -1,   326,  1243,
      -1,    -1,    32,  1482,  1483,    -1,    -1,   641,    -1,    -1,
      19,   369,    57,    -1,    19,    57,    -1,    -1,   448,    -1,
     369,   448,    -1,    -1,   487,    -1,    79,  1483,  1484,  1485,
      -1,   478,  1483,  1484,  1485,    -1,   478,  1483,   583,  1486,
    1395,    -1,   487,  1395,    -1,   448,   487,  1395,    -1,    -1,
     140,    -1,    13,    -1,  1494,    -1,  1494,    -1,  1138,    -1,
     549,    -1,   220,    -1,   140,    -1,   532,    -1,   527,    -1,
     528,    -1,   530,    -1,    13,    -1,  1501,  1497,    -1,  1500,
    1498,    -1,  1502,  1499,  1506,    -1,  1506,    -1,  1514,    -1,
    1522,    -1,  1517,    -1,   732,    -1,  1506,    -1,  1514,    -1,
    1522,    -1,  1517,    -1,  1516,    -1,   732,    -1,  1500,    -1,
    1501,    -1,    -1,   127,   160,  1400,    -1,  1503,    -1,  1503,
    1504,    -1,  1504,    -1,   390,   456,    -1,    12,   160,   596,
      -1,    12,   160,   333,    -1,    12,   160,   570,    -1,    -1,
     533,   492,   127,    -1,   533,   492,   248,    -1,    -1,  1505,
     628,  1386,  1507,  1508,    21,  1510,    -1,    -1,   674,  1509,
     675,    -1,  1395,    -1,  1509,   677,  1395,    -1,  1278,  1511,
      -1,    -1,   637,    64,   385,    -1,   637,    53,    64,   385,
      -1,   637,   282,    64,   385,    -1,   191,    -1,   413,    -1,
      -1,  1512,  1398,    -1,    -1,   587,   747,   850,   851,   378,
    1386,   194,   149,   484,  1513,  1515,   799,    -1,    11,   200,
    1395,   473,   937,   516,  1392,    -1,   200,  1395,   473,   937,
     516,  1392,    -1,    -1,    -1,    -1,    -1,   200,   747,   674,
    1518,   758,   675,  1519,   473,   949,   982,  1520,   749,  1521,
     799,    -1,    -1,    -1,    -1,    -1,   420,   747,  1523,   674,
    1524,   761,   675,  1525,   749,  1526,   799,    -1,   645,  1530,
    1529,  1531,    -1,   645,   154,  1529,  1533,    -1,   645,   415,
    1529,    -1,   645,    79,  1529,  1532,    -1,   645,   478,  1529,
      -1,   645,   437,  1528,    -1,    -1,    96,   646,    -1,  1373,
      -1,  1373,   677,  1373,    -1,  1373,   677,  1373,   677,  1243,
      -1,    32,    -1,   539,    -1,    -1,   258,    -1,   471,    -1,
      -1,   379,   405,    -1,    -1,   559,    -1,   559,   194,   336,
      -1,   244,   407,  1395,   516,  1392,    -1,   244,   659,  1536,
      -1,   602,   407,  1395,    -1,   602,   659,  1536,    -1,  1392,
      -1,  1536,   677,  1392,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1706,  1706,  1707,  1712,  1722,  1743,  1756,  1755,  1780,
    1787,  1789,  1793,  1794,  1799,  1800,  1801,  1802,  1803,  1804,
    1805,  1806,  1807,  1808,  1809,  1810,  1811,  1812,  1813,  1814,
    1815,  1816,  1817,  1818,  1819,  1820,  1821,  1822,  1823,  1824,
    1825,  1826,  1827,  1828,  1829,  1830,  1831,  1832,  1833,  1834,
    1835,  1836,  1837,  1838,  1839,  1840,  1841,  1842,  1843,  1844,
    1845,  1846,  1847,  1848,  1849,  1850,  1851,  1852,  1856,  1866,
    1867,  1871,  1891,  1898,  1909,  1908,  1919,  1921,  1925,  1926,
    1930,  1943,  1942,  1962,  1961,  1975,  1974,  1989,  1990,  1993,
    2000,  2007,  2014,  2021,  2028,  2036,  2045,  2051,  2058,  2065,
    2073,  2082,  2088,  2094,  2102,  2110,  2116,  2123,  2130,  2138,
    2150,  2156,  2163,  2170,  2178,  2188,  2189,  2193,  2197,  2201,
    2205,  2215,  2219,  2223,  2228,  2239,  2244,  2248,  2252,  2256,
    2260,  2264,  2268,  2273,  2277,  2282,  2316,  2321,  2328,  2331,
    2333,  2334,  2338,  2344,  2348,  2364,  2368,  2379,  2383,  2398,
    2408,  2418,  2423,  2431,  2432,  2434,  2433,  2449,  2448,  2459,
    2469,  2475,  2479,  2483,  2500,  2507,  2513,  2522,  2523,  2527,
    2531,  2535,  2539,  2543,  2548,  2552,  2560,  2559,  2591,  2590,
    2599,  2608,  2609,  2615,  2621,  2631,  2637,  2645,  2647,  2656,
    2657,  2661,  2667,  2676,  2677,  2685,  2685,  2743,  2744,  2745,
    2746,  2747,  2748,  2749,  2750,  2751,  2752,  2753,  2754,  2755,
    2759,  2777,  2787,  2801,  2820,  2821,  2825,  2826,  2831,  2833,
    2835,  2837,  2839,  2841,  2843,  2849,  2850,  2851,  2855,  2859,
    2867,  2866,  2879,  2881,  2884,  2886,  2890,  2896,  2905,  2907,
    2911,  2912,  2916,  2966,  2968,  2972,  2973,  2977,  3026,  3027,
    3028,  3029,  3033,  3034,  3038,  3039,  3044,  3047,  3071,  3168,
    3186,  3185,  3264,  3260,  3336,  3337,  3342,  3344,  3349,  3372,
    3383,  3387,  3409,  3410,  3414,  3418,  3431,  3437,  3443,  3452,
    3465,  3491,  3497,  3498,  3504,  3505,  3510,  3516,  3529,  3531,
    3551,  3557,  3559,  3561,  3563,  3565,  3567,  3569,  3571,  3573,
    3575,  3577,  3579,  3584,  3598,  3615,  3616,  3618,  3623,  3629,
    3638,  3644,  3653,  3661,  3689,  3697,  3699,  3708,  3713,  3719,
    3728,  3736,  3738,  3740,  3742,  3744,  3746,  3748,  3750,  3752,
    3754,  3756,  3758,  3760,  3765,  3785,  3809,  3813,  3821,  3822,
    3823,  3824,  3825,  3826,  3827,  3828,  3829,  3830,  3831,  3832,
    3833,  3838,  3837,  3848,  3848,  3905,  3904,  3961,  3961,  3983,
    4040,  4087,  4111,  4110,  4135,  4157,  4159,  4160,  4164,  4182,
    4203,  4211,  4249,  4203,  4277,  4279,  4280,  4284,  4285,  4290,
    4300,  4289,  4352,  4351,  4365,  4366,  4370,  4371,  4376,  4384,
    4375,  4434,  4442,  4433,  4488,  4501,  4506,  4505,  4543,  4544,
    4549,  4548,  4582,  4582,  4601,  4600,  4648,  4663,  4671,  4662,
    4729,  4737,  4726,  4779,  4781,  4786,  4788,  4790,  4807,  4812,
    4818,  4825,  4826,  4834,  4840,  4849,  4855,  4861,  4862,  4866,
    4866,  4871,  4872,  4873,  4877,  4878,  4879,  4882,  4884,  4888,
    4889,  4893,  4894,  4895,  4896,  4897,  4898,  4899,  4900,  4901,
    4904,  4906,  4910,  4911,  4915,  4916,  4917,  4918,  4919,  4922,
    4924,  4928,  4929,  4933,  4934,  4935,  4936,  4937,  4938,  4939,
    4942,  4944,  4948,  4949,  4953,  4954,  4955,  4960,  4968,  4976,
    4984,  4996,  5008,  5013,  5018,  5026,  5034,  5042,  5050,  5058,
    5066,  5074,  5087,  5100,  5116,  5130,  5135,  5148,  5149,  5222,
    5228,  5232,  5237,  5242,  5248,  5256,  5266,  5267,  5281,  5289,
    5293,  5297,  5301,  5305,  5309,  5316,  5317,  5322,  5323,  5341,
    5342,  5354,  5355,  5360,  5369,  5370,  5375,  5381,  5391,  5392,
    5404,  5405,  5409,  5415,  5424,  5433,  5436,  5441,  5449,  5450,
    5454,  5458,  5465,  5472,  5482,  5481,  5499,  5505,  5514,  5515,
    5520,  5521,  5525,  5531,  5540,  5547,  5548,  5552,  5558,  5567,
    5569,  5571,  5573,  5575,  5577,  5579,  5581,  5590,  5591,  5595,
    5596,  5600,  5601,  5605,  5606,  5610,  5616,  5625,  5631,  5639,
    5641,  5645,  5649,  5653,  5657,  5661,  5665,  5669,  5673,  5677,
    5681,  5685,  5689,  5693,  5710,  5714,  5718,  5722,  5726,  5730,
    5734,  5735,  5736,  5740,  5744,  5748,  5752,  5756,  5760,  5764,
    5771,  5785,  5789,  5796,  5803,  5804,  5805,  5806,  5807,  5808,
    5812,  5813,  5814,  5818,  5819,  5820,  5821,  5825,  5831,  5840,
    5841,  5845,  5852,  5853,  5862,  5870,  5876,  5882,  5887,  5897,
    5905,  5912,  5924,  5925,  5929,  5933,  5937,  5958,  5960,  5964,
    5965,  5966,  5970,  5974,  5978,  5982,  5986,  5990,  5994,  5998,
    6003,  6008,  6016,  6024,  6028,  6032,  6037,  6045,  6049,  6065,
    6069,  6073,  6080,  6084,  6088,  6092,  6093,  6097,  6101,  6105,
    6110,  6115,  6120,  6125,  6130,  6134,  6138,  6143,  6147,  6154,
    6156,  6158,  6160,  6162,  6164,  6166,  6168,  6173,  6174,  6178,
    6179,  6183,  6184,  6185,  6186,  6187,  6191,  6192,  6193,  6194,
    6195,  6199,  6204,  6208,  6210,  6214,  6215,  6216,  6217,  6222,
    6226,  6231,  6235,  6244,  6245,  6249,  6250,  6251,  6259,  6260,
    6264,  6269,  6273,  6274,  6275,  6279,  6280,  6281,  6282,  6285,
    6286,  6291,  6295,  6299,  6300,  6304,  6310,  6320,  6324,  6328,
    6332,  6336,  6340,  6344,  6348,  6352,  6356,  6360,  6364,  6368,
    6376,  6377,  6378,  6382,  6383,  6384,  6388,  6394,  6398,  6402,
    6403,  6407,  6415,  6419,  6420,  6424,  6425,  6429,  6438,  6442,
    6443,  6447,  6455,  6456,  6460,  6461,  6466,  6467,  6471,  6472,
    6477,  6478,  6479,  6483,  6491,  6496,  6505,  6509,  6514,  6519,
    6524,  6531,  6536,  6546,  6547,  6552,  6551,  6564,  6565,  6569,
    6572,  6573,  6574,  6575,  6579,  6587,  6594,  6595,  6599,  6609,
    6610,  6614,  6615,  6618,  6620,  6624,  6639,  6640,  6644,  6651,
    6661,  6662,  6663,  6664,  6669,  6673,  6678,  6683,  6689,  6698,
    6699,  6700,  6701,  6702,  6706,  6710,  6711,  6715,  6716,  6720,
    6721,  6725,  6726,  6727,  6731,  6732,  6736,  6743,  6744,  6748,
    6754,  6763,  6764,  6778,  6779,  6783,  6789,  6798,  6802,  6803,
    6807,  6813,  6822,  6823,  6828,  6829,  6833,  6857,  6858,  6859,
    6866,  6867,  6871,  6872,  6876,  6877,  6878,  6882,  6889,  6899,
    6905,  6919,  6920,  6924,  6925,  6929,  6935,  6948,  6947,  6988,
    6987,  7005,  7004,  7023,  7022,  7041,  7040,  7059,  7053,  7073,
    7072,  7105,  7110,  7115,  7120,  7125,  7133,  7135,  7142,  7143,
    7155,  7167,  7181,  7190,  7191,  7195,  7196,  7200,  7206,  7212,
    7218,  7232,  7238,  7245,  7249,  7250,  7254,  7255,  7259,  7265,
    7271,  7277,  7286,  7300,  7301,  7302,  7303,  7307,  7308,  7320,
    7321,  7325,  7326,  7330,  7331,  7337,  7338,  7339,  7342,  7344,
    7345,  7346,  7350,  7357,  7371,  7373,  7379,  7388,  7386,  7399,
    7411,  7423,  7438,  7445,  7455,  7456,  7488,  7496,  7506,  7508,
    7512,  7516,  7524,  7531,  7535,  7543,  7547,  7551,  7558,  7567,
    7602,  7603,  7604,  7608,  7609,  7613,  7621,  7648,  7654,  7660,
    7684,  7708,  7719,  7729,  7738,  7748,  7754,  7760,  7771,  7780,
    7790,  7821,  7833,  7865,  7878,  7882,  7890,  7891,  7892,  7896,
    7897,  7903,  7909,  7915,  7924,  7928,  7935,  7939,  7946,  7947,
    7951,  7952,  7956,  7957,  7958,  7962,  7963,  7964,  7968,  7969,
    7970,  7971,  7975,  7980,  7988,  7989,  7999,  8015,  8013,  8035,
    8052,  8055,  8062,  8066,  8073,  8077,  8081,  8088,  8093,  8096,
    8103,  8106,  8113,  8116,  8123,  8126,  8134,  8137,  8144,  8148,
    8155,  8159,  8167,  8171,  8196,  8197,  8198,  8203,  8208,  8215,
    8229,  8230,  8231,  8235,  8259,  8260,  8264,  8265,  8273,  8274,
    8275,  8279,  8300,  8308,  8336,  8337,  8341,  8342,  8350,  8352,
    8354,  8356,  8358,  8360,  8365,  8386,  8387,  8388,  8393,  8392,
    8398,  8405,  8410,  8418,  8419,  8423,  8437,  8436,  8449,  8450,
    8454,  8455,  8459,  8469,  8479,  8480,  8485,  8484,  8495,  8496,
    8500,  8501,  8505,  8515,  8526,  8525,  8533,  8537,  8538,  8549,
    8550,  8554,  8558,  8564,  8600,  8604,  8648,  8668,  8684,  8698,
    8702,  8706,  8715,  8729,  8747,  8748,  8768,  8776,  8795,  8816,
    8817,  8821,  8825,  8826,  8830,  8836,  8846,  8850,  8854,  8859,
    8863,  8868,  8877,  8889,  8890,  8896,  8905,  8911,  8917,  8927,
    8928,  8936,  8937,  8938,  8939,  8940,  8944,  8945,  8950,  8956,
    8961,  8967,  8971,  8975,  8979,  8983,  8987,  8991,  8995,  8999,
    9003,  9007,  9011,  9024,  9028,  9032,  9037,  9041,  9048,  9052,
    9059,  9063,  9067,  9075,  9079,  9086,  9090,  9095,  9099,  9103,
    9107,  9111,  9115,  9119,  9123,  9127,  9131,  9135,  9139,  9143,
    9147,  9151,  9155,  9159,  9160,  9164,  9165,  9169,  9170,  9174,
    9175,  9179,  9180,  9181,  9182,  9183,  9184,  9185,  9189,  9190,
    9194,  9195,  9196,  9197,  9198,  9199,  9203,  9204,  9205,  9206,
    9207,  9211,  9215,  9219,  9223,  9227,  9231,  9232,  9236,  9240,
    9244,  9248,  9252,  9256,  9260,  9264,  9268,  9272,  9276,  9280,
    9285,  9292,  9309,  9313,  9317,  9321,  9325,  9329,  9333,  9337,
    9341,  9345,  9349,  9353,  9357,  9361,  9365,  9369,  9373,  9377,
    9382,  9387,  9392,  9396,  9400,  9404,  9408,  9413,  9417,  9436,
    9440,  9444,  9448,  9452,  9457,  9462,  9466,  9470,  9475,  9479,
    9483,  9487,  9491,  9495,  9499,  9503,  9508,  9512,  9516,  9520,
    9524,  9536,  9540,  9544,  9548,  9552,  9556,  9560,  9564,  9568,
    9572,  9576,  9580,  9584,  9588,  9592,  9596,  9600,  9604,  9608,
    9612,  9616,  9621,  9626,  9630,  9634,  9640,  9646,  9652,  9658,
    9664,  9668,  9686,  9690,  9697,  9699,  9712,  9713,  9717,  9718,
    9722,  9723,  9727,  9733,  9742,  9749,  9753,  9757,  9761,  9765,
    9769,  9773,  9777,  9781,  9790,  9794,  9798,  9802,  9806,  9810,
    9814,  9818,  9822,  9826,  9836,  9840,  9844,  9848,  9855,  9856,
    9861,  9866,  9870,  9871,  9875,  9880,  9890,  9897,  9904,  9923,
    9930,  9937,  9944,  9951,  9958,  9965,  9972,  9979,  9986,  9996,
    9997, 10001, 10007, 10016, 10017, 10021, 10027, 10036, 10037, 10041,
   10042, 10046, 10054, 10063, 10064, 10065, 10076, 10077, 10158, 10162,
   10167, 10171, 10175, 10185, 10192, 10193, 10194, 10198, 10199, 10200,
   10201, 10204, 10205, 10208, 10210, 10213, 10215, 10223, 10224, 10228,
   10257, 10258, 10259, 10260, 10262, 10267, 10268, 10277, 10278, 10282,
   10289, 10290, 10294, 10311, 10314, 10315, 10316, 10320, 10321, 10325,
   10331, 10340, 10341, 10349, 10350, 10354, 10359, 10365, 10369, 10375,
   10384, 10390, 10398, 10402, 10411, 10423, 10424, 10425, 10426, 10427,
   10428, 10429, 10430, 10431, 10432, 10433, 10434, 10438, 10439, 10440,
   10441, 10442, 10443, 10444, 10445, 10446, 10450, 10451, 10452, 10453,
   10456, 10458, 10459, 10463, 10464, 10472, 10474, 10478, 10487, 10488,
   10495, 10496, 10503, 10504, 10512, 10513, 10520, 10525, 10535, 10536,
   10544, 10559, 10563, 10564, 10568, 10588, 10589, 10593, 10600, 10605,
   10615, 10616, 10617, 10621, 10622, 10626, 10633, 10639, 10645, 10654,
   10658, 10662, 10666, 10670, 10677, 10678, 10682, 10683, 10684, 10685,
   10686, 10687, 10691, 10692, 10693, 10694, 10695, 10699, 10700, 10701,
   10702, 10703, 10707, 10708, 10709, 10710, 10714, 10719, 10720, 10724,
   10725, 10734, 10738, 10743, 10751, 10764, 10770, 10779, 10783, 10790,
   10797, 10803, 10807, 10815, 10826, 10837, 10850, 10851, 10850, 10872,
   10879, 10902, 10934, 10946, 10953, 10965, 10971, 10979, 10984, 10989,
   10994, 11003, 11009, 11018, 11029, 11035, 11044, 11045, 11049, 11050,
   11053, 11055, 11058, 11059, 11063, 11064, 11071, 11085, 11103, 11120,
   11132, 11148, 11163, 11164, 11165, 11174, 11178, 11179, 11190, 11192,
   11196, 11201, 11206, 11214, 11219, 11224, 11232, 11238, 11247, 11254,
   11255, 11259, 11260, 11264, 11269, 11279, 11280, 11283, 11285, 11289,
   11294, 11299, 11303, 11309, 11318, 11319, 11327, 11331, 11340, 11356,
   11363, 11375, 11383, 11384, 11390, 11401, 11410, 11422, 11424, 11428,
   11429, 11433, 11434, 11435, 11440, 11439, 11458, 11460, 11463, 11465,
   11468, 11469, 11472, 11476, 11480, 11484, 11488, 11492, 11496, 11500,
   11504, 11512, 11515, 11528, 11527, 11538, 11547, 11558, 11566, 11574,
   11585, 11593, 11600, 11608, 11610, 11645, 11649, 11654, 11653, 11664,
   11663, 11673, 11709, 11716, 11722, 11728, 11736, 11744, 11752, 11763,
   11762, 11797, 11800, 11799, 11833, 11842, 11851, 11857, 11863, 11870,
   11876, 11882, 11891, 11899, 11903, 11907, 11914, 11921, 11927, 11934,
   11941, 11946, 11951, 11956, 11965, 11967, 11969, 11974, 11975, 11978,
   11980, 11984, 11985, 11989, 11990, 11994, 11995, 11999, 12000, 12004,
   12005, 12008, 12010, 12016, 12026, 12028, 12034, 12063, 12094, 12093,
   12101, 12102, 12103, 12104, 12105, 12106, 12120, 12121, 12126, 12130,
   12136, 12142, 12163, 12164, 12165, 12180, 12179, 12192, 12191, 12205,
   12209, 12210, 12223, 12222, 12245, 12246, 12251, 12253, 12255, 12257,
   12259, 12261, 12263, 12265, 12267, 12269, 12271, 12273, 12275, 12277,
   12282, 12283, 12288, 12287, 12297, 12298, 12302, 12302, 12304, 12305,
   12309, 12310, 12315, 12314, 12325, 12329, 12333, 12347, 12359, 12360,
   12361, 12367, 12379, 12392, 12429, 12378, 12440, 12441, 12445, 12446,
   12450, 12451, 12452, 12456, 12457, 12461, 12462, 12466, 12467, 12471,
   12476, 12480, 12485, 12491, 12496, 12504, 12505, 12509, 12514, 12518,
   12523, 12531, 12532, 12535, 12537, 12545, 12547, 12551, 12552, 12553,
   12557, 12559, 12564, 12565, 12574, 12575, 12579, 12580, 12584, 12607,
   12612, 12617, 12622, 12630, 12637, 12644, 12654, 12662, 12663, 12664,
   12675, 12676, 12677, 12678, 12691, 12695, 12699, 12703, 12707, 12711,
   12718, 12722, 12726, 12730, 12734, 12742, 12746, 12750, 12764, 12765,
   12769, 12773, 12780, 12787, 12791, 12795, 12799, 12803, 12807, 12811,
   12818, 12822, 12826, 12830, 12837, 12843, 12853, 12863, 12869, 12880,
   12891, 12892, 12922, 12935, 12948, 12964, 12980, 12997, 12998, 13009,
   13010, 13020, 13021, 13032, 13033, 13034, 13038, 13039, 13040, 13044,
   13049, 13054, 13068, 13073, 13094, 13095, 13096, 13097, 13102, 13103,
   13104, 13105, 13106, 13107, 13108, 13109, 13110, 13111, 13112, 13113,
   13114, 13115, 13116, 13117, 13118, 13119, 13120, 13121, 13122, 13123,
   13124, 13125, 13126, 13127, 13128, 13129, 13130, 13131, 13132, 13133,
   13134, 13135, 13136, 13137, 13138, 13139, 13140, 13141, 13142, 13143,
   13144, 13145, 13146, 13147, 13148, 13149, 13150, 13151, 13152, 13153,
   13154, 13155, 13156, 13166, 13167, 13168, 13169, 13170, 13171, 13172,
   13173, 13174, 13179, 13180, 13181, 13182, 13183, 13184, 13185, 13186,
   13187, 13188, 13189, 13190, 13191, 13192, 13193, 13194, 13195, 13196,
   13197, 13198, 13199, 13200, 13201, 13202, 13203, 13204, 13205, 13206,
   13207, 13208, 13209, 13210, 13211, 13212, 13213, 13214, 13215, 13216,
   13217, 13218, 13219, 13220, 13221, 13222, 13223, 13224, 13225, 13226,
   13227, 13232, 13233, 13234, 13235, 13236, 13237, 13238, 13239, 13240,
   13241, 13242, 13243, 13244, 13245, 13246, 13247, 13248, 13249, 13250,
   13251, 13252, 13253, 13254, 13255, 13256, 13257, 13258, 13259, 13260,
   13261, 13262, 13263, 13264, 13265, 13266, 13267, 13268, 13269, 13270,
   13271, 13272, 13273, 13274, 13275, 13276, 13277, 13278, 13279, 13280,
   13281, 13282, 13283, 13284, 13285, 13286, 13287, 13288, 13289, 13290,
   13291, 13292, 13293, 13294, 13295, 13296, 13297, 13298, 13299, 13300,
   13301, 13302, 13303, 13304, 13305, 13306, 13307, 13308, 13309, 13310,
   13311, 13312, 13313, 13314, 13315, 13316, 13317, 13318, 13319, 13320,
   13321, 13322, 13323, 13324, 13325, 13326, 13327, 13328, 13329, 13330,
   13331, 13332, 13333, 13334, 13335, 13336, 13337, 13338, 13339, 13340,
   13341, 13342, 13343, 13344, 13345, 13346, 13347, 13348, 13349, 13350,
   13351, 13352, 13353, 13354, 13355, 13356, 13357, 13358, 13359, 13360,
   13361, 13362, 13363, 13364, 13365, 13366, 13367, 13368, 13369, 13370,
   13371, 13372, 13373, 13374, 13375, 13376, 13377, 13378, 13379, 13380,
   13381, 13382, 13383, 13384, 13385, 13386, 13387, 13388, 13389, 13390,
   13391, 13392, 13393, 13394, 13395, 13396, 13397, 13398, 13399, 13400,
   13401, 13402, 13403, 13404, 13405, 13406, 13407, 13408, 13409, 13410,
   13411, 13412, 13413, 13414, 13415, 13416, 13417, 13418, 13419, 13420,
   13421, 13422, 13423, 13424, 13425, 13426, 13427, 13428, 13429, 13430,
   13431, 13432, 13433, 13434, 13435, 13436, 13437, 13438, 13439, 13440,
   13441, 13442, 13443, 13444, 13445, 13446, 13447, 13448, 13449, 13450,
   13451, 13452, 13453, 13454, 13455, 13456, 13457, 13458, 13459, 13460,
   13461, 13462, 13463, 13464, 13465, 13466, 13467, 13468, 13469, 13470,
   13471, 13472, 13473, 13474, 13475, 13476, 13477, 13478, 13479, 13480,
   13481, 13482, 13483, 13484, 13485, 13486, 13487, 13488, 13489, 13490,
   13491, 13492, 13493, 13494, 13495, 13515, 13516, 13527, 13536, 13540,
   13544, 13548, 13552, 13559, 13563, 13574, 13579, 13584, 13589, 13594,
   13599, 13604, 13612, 13613, 13618, 13625, 13635, 13636, 13641, 13645,
   13653, 13657, 13661, 13662, 13663, 13664, 13668, 13669, 13670, 13671,
   13675, 13676, 13677, 13678, 13682, 13683, 13684, 13685, 13686, 13691,
   13699, 13705, 13709, 13714, 13718, 13725, 13732, 13736, 13740, 13747,
   13751, 13758, 13765, 13766, 13770, 13777, 13778, 13782, 13783, 13787,
   13788, 13789, 13790, 13794, 13803, 13804, 13805, 13809, 13813, 13823,
   13822, 13838, 13839, 13843, 13844, 13848, 13876, 13877, 13878, 13883,
   13888, 13887, 13904, 13912, 13919, 13938, 13954, 13973, 13970, 14020,
   14021, 14025, 14026, 14030, 14031, 14032, 14033, 14035, 14034, 14047,
   14048, 14049, 14050, 14051, 14057, 14057, 14059, 14068, 14074, 14085,
   14096, 14101, 14111, 14111, 14113, 14122, 14128, 14139, 14150, 14160,
   14162, 14166, 14173, 14180, 14182, 14186, 14187, 14192, 14191, 14195,
   14194, 14198, 14197, 14201, 14200, 14203, 14204, 14205, 14206, 14207,
   14208, 14209, 14210, 14211, 14212, 14213, 14214, 14215, 14216, 14217,
   14218, 14219, 14220, 14221, 14222, 14223, 14224, 14225, 14226, 14227,
   14228, 14229, 14230, 14234, 14235, 14239, 14240, 14244, 14245, 14249,
   14259, 14269, 14282, 14296, 14308, 14320, 14332, 14338, 14347, 14353,
   14362, 14367, 14375, 14383, 14398, 14406, 14416, 14427, 14436, 14440,
   14444, 14445, 14449, 14477, 14479, 14483, 14487, 14491, 14498, 14499,
   14503, 14504, 14508, 14509, 14513, 14514, 14520, 14526, 14532, 14542,
   14541, 14551, 14552, 14557, 14558, 14559, 14564, 14565, 14566, 14570,
   14571, 14575, 14587, 14596, 14606, 14615, 14629, 14630, 14631, 14635,
   14639, 14643, 14656, 14657, 14658, 14659, 14660, 14661, 14662, 14663,
   14673, 14675, 14677, 14682, 14683, 14684, 14685, 14686, 14690, 14691,
   14692, 14693, 14694, 14695, 14705, 14706, 14711, 14724, 14737, 14739,
   14741, 14746, 14751, 14753, 14755, 14761, 14762, 14764, 14770, 14769,
   14787, 14788, 14792, 14797, 14805, 14858, 14859, 14860, 14861, 14871,
   14873, 14879, 14884, 14902, 14892, 14969, 14987, 15011, 15035, 15041,
   15081, 15008, 15148, 15168, 15173, 15181, 15146, 15202, 15207, 15212,
   15217, 15222, 15227, 15235, 15236, 15239, 15248, 15258, 15276, 15277,
   15281, 15282, 15283, 15287, 15288, 15293, 15294, 15296, 15301, 15307,
   15316, 15322, 15331, 15337
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "ANALYSE_SYM", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM", "AS",
  "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM", "AUTOEXTEND_SIZE_SYM",
  "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM",
  "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM", "BINARY_SYM", "BINLOG_SYM",
  "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_SYM", "BIT_XOR", "BLOB_SYM",
  "BLOCK_SYM", "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM", "BY",
  "BYTE_SYM", "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM",
  "CAST_SYM", "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED",
  "CHANNEL_SYM", "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM",
  "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE",
  "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM",
  "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM", "LONG_SYM",
  "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "REDOFILE_SYM", "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM",
  "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD",
  "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPEAT_SYM", "REPLACE_SYM", "REPLICATION", "REPLICATE_DO_DB",
  "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE", "REPLICATE_IGNORE_TABLE",
  "REPLICATE_WILD_DO_TABLE", "REPLICATE_WILD_IGNORE_TABLE",
  "REPLICATE_REWRITE_DB", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM",
  "RESOURCES", "RESTORE_SYM", "RESTRICT", "RESUME_SYM",
  "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM",
  "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM", "ROTATE_SYM",
  "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET_SYM", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW",
  "SMALLINT_SYM", "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM",
  "SOURCE_SYM", "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM",
  "SQLSTATE_SYM", "SQLWARNING_SYM", "SQL_AFTER_GTIDS",
  "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS", "SQL_BIG_RESULT",
  "SQL_BUFFER_RESULT", "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS",
  "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD",
  "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM", "START_SYM",
  "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "GRAMMAR_SELECTOR_EXPR", "GRAMMAR_SELECTOR_GCOL",
  "GRAMMAR_SELECTOR_PART", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "','", "'!'", "'{'", "'}'", "';'", "'@'",
  "'.'", "':'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "master_file_def", "opt_channel", "create_table_stmt", "create", "$@6",
  "$@7", "index_definition_stmt", "server_options_list", "server_option",
  "event_tail", "$@8", "ev_schedule_time", "$@9", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@10", "ev_sql_stmt_inner",
  "clear_privileges", "clear_password_expire_options", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call", "$@11", "opt_sp_cparam_list", "opt_sp_cparams",
  "sp_cparams", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@12", "$@13",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@14", "sp_proc_stmt_statement", "$@15", "sp_proc_stmt_return", "$@16",
  "sp_proc_stmt_unlabeled", "$@17", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@18", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@19", "$@20", "$@21", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@22", "$@23", "searched_case_stmt", "$@24",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@25", "$@26", "searched_when_clause", "$@27",
  "$@28", "else_clause_opt", "sp_labeled_control", "$@29", "sp_opt_label",
  "sp_labeled_block", "$@30", "sp_unlabeled_block", "$@31",
  "sp_block_content", "$@32", "sp_unlabeled_control", "$@33", "$@34",
  "$@35", "$@36", "trg_action_time", "trg_event",
  "change_tablespace_access", "change_tablespace_info", "tablespace_info",
  "opt_logfile_group_name", "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@37", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_file_block_size", "ts_wait", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@38", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "row_types", "merge_insert_types", "udf_type",
  "table_element_list", "table_element", "column_def",
  "opt_check_or_references", "table_constraint_def", "check_constraint",
  "opt_constraint", "constraint", "field_def", "opt_generated_always",
  "opt_stored_attribute", "type", "spatial_type", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "opt_PRECISION", "numeric_type",
  "float_options", "precision", "type_datetime_precision",
  "func_datetime_precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_column_attribute_list", "column_attribute_list", "column_attribute",
  "column_format", "storage_media", "now", "now_or_signed_literal",
  "charset", "charset_name", "charset_name_or_default",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_collate_explicit", "collation_name_or_default", "opt_default",
  "ascii", "unicode", "opt_charset_with_opt_binary", "opt_bin_mod",
  "ws_nweights", "$@39", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list",
  "reference_list", "opt_match_clause", "opt_on_update_delete",
  "delete_option", "normal_key_type", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "spatial", "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "index_type_clause", "visibility",
  "index_type", "key_list", "key_part", "opt_ident", "opt_component",
  "string_list", "alter", "$@40", "$@41", "$@42", "$@43", "$@44", "$@45",
  "$@46", "alter_user_command", "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "password_expire",
  "connect_options", "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "alter_command_list",
  "standalone_alter_commands", "$@47", "opt_validation",
  "alter_opt_validation", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule",
  "reorg_partition_rule", "alter_list", "alter_commands_modifier_list",
  "add_column", "alter_list_item", "alter_commands_modifier",
  "opt_index_lock_and_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "group_replication", "slave", "slave_start",
  "start_slave_opts", "$@48", "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_connection_opts", "slave_user_name_opt", "slave_user_pass_opt",
  "slave_plugin_auth_opt", "slave_plugin_dir_opt",
  "opt_slave_thread_option_list", "slave_thread_option_list",
  "slave_thread_option", "slave_until", "slave_until_opts", "checksum",
  "opt_checksum_type", "repair", "opt_mi_repair_types", "mi_repair_types",
  "mi_repair_type", "analyze", "binlog_base64_event", "check",
  "opt_mi_check_types", "mi_check_types", "mi_check_type", "optimize",
  "opt_no_write_to_binlog", "rename", "$@49", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@50",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@51",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@52", "cache_keys_spec",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select_stmt",
  "select_stmt_with_into", "query_expression", "query_expression_body",
  "query_expression_parens", "query_primary", "query_specification",
  "opt_from_clause", "from_clause", "from_tables", "table_reference_list",
  "select_options", "select_option_list", "select_option",
  "opt_select_lock_type", "select_item_list", "select_item",
  "select_alias", "optional_braces", "expr", "bool_pri", "predicate",
  "bit_expr", "or", "and", "not", "not2", "comp_op", "all_or_any",
  "simple_expr", "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr", "sum_expr", "variable",
  "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as_or_eq",
  "opt_table_alias", "opt_all", "opt_where_clause",
  "opt_where_clause_expr", "opt_having_clause", "opt_escape",
  "opt_group_clause", "group_list", "olap_opt", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "opt_procedure_analyse_clause",
  "opt_procedure_analyse_params", "procedure_analyse_param",
  "select_var_list", "select_var_ident", "into_clause", "into_destination",
  "do_stmt", "empty_select_options", "drop", "$@53", "$@54", "table_list",
  "table_name", "table_alias_ref_list", "if_exists", "opt_temporary",
  "drop_ts_options_list", "drop_ts_options", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list", "equal",
  "opt_equal", "row_value", "opt_values", "values", "expr_or_default",
  "opt_insert_update_list", "update_stmt", "update_list", "update_elem",
  "opt_low_priority", "delete_stmt", "opt_wild", "opt_delete_options",
  "opt_delete_option", "truncate", "$@55", "opt_table_sym",
  "opt_profile_defs", "profile_defs", "profile_def", "opt_profile_args",
  "show", "$@56", "show_param", "$@57", "$@58", "$@59", "$@60",
  "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from",
  "opt_wild_or_where", "opt_wild_or_where_for_show", "describe", "$@61",
  "explainable_command", "describe_command", "opt_extended_describe",
  "opt_describe_column", "flush", "$@62", "flush_options", "$@63",
  "opt_flush_lock", "$@64", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@65", "reset_options", "reset_option",
  "$@66", "slave_reset_options", "purge", "$@67", "purge_options",
  "purge_option", "kill", "kill_option", "use", "load", "$@68", "$@69",
  "$@70", "data_or_xml", "opt_local", "load_data_lock", "opt_duplicate",
  "duplicate", "opt_field_term", "field_term_list", "field_term",
  "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident", "role_ident", "label_ident",
  "ident_or_text", "role_ident_or_text", "user", "role", "ident_keyword",
  "role_or_ident_keyword", "label_keyword", "role_or_label_keyword",
  "role_keyword", "set", "start_option_value_list", "set_role_stmt",
  "opt_except_role_list", "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types", "password",
  "set_expr_or_default", "lock", "$@71", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@72",
  "shutdown_stmt", "alter_instance_stmt", "alter_instance_action",
  "handler", "$@73", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@74", "handler_rkey_mode", "revoke", "$@75",
  "revoke_command", "grant", "$@76", "grant_command", "opt_table",
  "grant_privileges", "opt_privileges", "object_privilege_list",
  "object_privilege", "$@77", "$@78", "$@79", "$@80",
  "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "grant_list", "grant_user", "opt_column_list", "column_list",
  "column_list_id", "require_clause", "grant_options", "opt_grant_option",
  "grant_option_list", "grant_option", "begin_stmt", "$@81", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_option", "row_subquery", "table_subquery",
  "subquery", "query_spec_option", "view_or_trigger_or_sp_or_event",
  "definer_tail", "no_definer_tail", "definer_opt", "no_definer",
  "definer", "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@82", "view_list_opt", "view_list",
  "view_select", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@83", "udf_tail",
  "sf_tail", "$@84", "$@85", "$@86", "$@87", "sp_tail", "$@88", "$@89",
  "$@90", "$@91", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", YY_NULL
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   124,    38,    45,    43,    42,    47,
      37,    94,   126,   919,    40,    41,   920,    44,    33,   123,
     125,    59,    64,    46,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   685,   686,   686,   686,   686,   687,   688,   687,   687,
     689,   689,   690,   690,   691,   691,   691,   691,   691,   691,
     691,   691,   691,   691,   691,   691,   691,   691,   691,   691,
     691,   691,   691,   691,   691,   691,   691,   691,   691,   691,
     691,   691,   691,   691,   691,   691,   691,   691,   691,   691,
     691,   691,   691,   691,   691,   691,   691,   691,   691,   691,
     691,   691,   691,   691,   691,   691,   691,   691,   692,   693,
     693,   694,   695,   695,   697,   696,   698,   698,   699,   699,
     700,   702,   701,   704,   703,   705,   703,   706,   706,   707,
     707,   707,   707,   707,   707,   707,   708,   708,   709,   709,
     710,   711,   711,   712,   712,   713,   713,   714,   714,   715,
     716,   716,   717,   717,   718,   719,   719,   720,   720,   720,
     720,   720,   720,   720,   720,   720,   720,   720,   720,   720,
     720,   720,   720,   720,   720,   720,   720,   720,   720,   721,
     721,   721,   722,   723,   723,   723,   723,   724,   724,   725,
     725,   725,   725,   726,   726,   727,   726,   728,   726,   726,
     726,   726,   726,   726,   729,   729,   729,   730,   730,   731,
     731,   731,   731,   731,   731,   731,   733,   732,   735,   734,
     734,   736,   736,   736,   736,   737,   737,   738,   738,   739,
     739,   740,   740,   741,   741,   743,   742,   744,   744,   744,
     744,   744,   744,   744,   744,   744,   744,   744,   744,   744,
     745,   746,   747,   747,   748,   748,   749,   749,   750,   750,
     750,   750,   750,   750,   750,   751,   751,   751,   752,   752,
     754,   753,   755,   755,   756,   756,   757,   757,   758,   758,
     759,   759,   760,   761,   761,   762,   762,   763,   764,   764,
     764,   764,   765,   765,   766,   766,   767,   767,   768,   768,
     769,   768,   770,   768,   771,   771,   772,   772,   773,   774,
     774,   775,   776,   776,   777,   777,   777,   777,   777,   778,
     779,   779,   780,   780,   781,   781,   782,   782,   783,   783,
     783,   784,   784,   784,   784,   784,   784,   784,   784,   784,
     784,   784,   784,   785,   786,   787,   787,   787,   788,   788,
     789,   789,   790,   791,   791,   792,   792,   793,   794,   794,
     795,   796,   796,   796,   796,   796,   796,   796,   796,   796,
     796,   796,   796,   796,   797,   797,   798,   798,   799,   799,
     799,   799,   799,   799,   799,   799,   799,   799,   799,   799,
     799,   801,   800,   803,   802,   805,   804,   807,   806,   808,
     809,   810,   812,   811,   813,   814,   814,   814,   815,   815,
     817,   818,   819,   816,   820,   820,   820,   821,   821,   823,
     824,   822,   826,   825,   827,   827,   828,   828,   830,   831,
     829,   833,   834,   832,   835,   835,   837,   836,   838,   838,
     840,   839,   842,   841,   844,   843,   845,   846,   847,   845,
     848,   849,   845,   850,   850,   851,   851,   851,   852,   853,
     854,   855,   855,   856,   856,   857,   858,   859,   859,   861,
     860,   862,   862,   862,   863,   863,   863,   864,   864,   865,
     865,   866,   866,   866,   866,   866,   866,   866,   866,   866,
     867,   867,   868,   868,   869,   869,   869,   869,   869,   870,
     870,   871,   871,   872,   872,   872,   872,   872,   872,   872,
     873,   873,   874,   874,   875,   875,   875,   876,   877,   878,
     879,   880,   881,   881,   881,   882,   883,   884,   885,   886,
     887,   888,   889,   890,   891,   892,   892,   893,   893,   894,
     894,   895,   895,   896,   896,   896,   897,   897,   898,   899,
     899,   899,   899,   899,   899,   900,   900,   901,   901,   902,
     902,   903,   903,   903,   904,   904,   905,   905,   906,   906,
     907,   907,   908,   908,   909,   910,   910,   910,   911,   911,
     912,   912,   913,   913,   915,   914,   916,   916,   917,   917,
     918,   918,   919,   919,   920,   921,   921,   922,   922,   923,
     923,   923,   923,   923,   923,   923,   923,   924,   924,   925,
     925,   926,   926,   927,   927,   928,   928,   929,   929,   930,
     930,   931,   931,   931,   931,   931,   931,   931,   931,   931,
     931,   931,   931,   931,   931,   931,   931,   931,   931,   931,
     931,   931,   931,   931,   931,   931,   931,   931,   931,   931,
     932,   932,   933,   934,   935,   935,   935,   935,   935,   935,
     936,   936,   936,   937,   937,   937,   937,   938,   938,   939,
     939,   940,   941,   941,   941,   942,   942,   942,   942,   942,
     942,   943,   944,   944,   945,   946,   946,   947,   947,   948,
     948,   948,   949,   949,   949,   949,   949,   949,   949,   949,
     949,   949,   949,   949,   949,   949,   949,   949,   949,   949,
     949,   949,   949,   949,   949,   949,   949,   949,   949,   949,
     949,   949,   949,   949,   949,   949,   949,   949,   949,   950,
     950,   950,   950,   950,   950,   950,   950,   951,   951,   952,
     952,   953,   953,   953,   953,   953,   954,   954,   954,   954,
     954,   955,   955,   956,   956,   957,   957,   957,   957,   958,
     958,   958,   959,   960,   960,   961,   961,   961,   962,   962,
     963,   963,   964,   964,   964,   965,   965,   965,   965,   966,
     966,   967,   967,   968,   968,   969,   969,   970,   970,   970,
     970,   970,   970,   970,   970,   970,   970,   970,   970,   970,
     971,   971,   971,   972,   972,   972,   973,   974,   974,   975,
     975,   976,   976,   977,   977,   978,   978,   979,   979,   980,
     980,   981,   982,   982,   983,   983,   984,   984,   985,   985,
     986,   986,   986,   987,   987,   987,   988,   988,   988,   988,
     988,   988,   988,   989,   989,   991,   990,   992,   992,   993,
     994,   994,   994,   994,   995,   996,   997,   997,   998,   999,
     999,  1000,  1000,  1001,  1001,  1002,  1003,  1003,  1004,  1004,
    1005,  1005,  1005,  1005,  1006,  1006,  1006,  1006,  1006,  1007,
    1007,  1007,  1007,  1007,  1008,  1009,  1009,  1010,  1010,  1011,
    1011,  1012,  1012,  1012,  1013,  1013,  1014,  1015,  1015,  1016,
    1016,  1017,  1017,  1018,  1018,  1019,  1019,  1020,  1021,  1021,
    1022,  1022,  1023,  1023,  1024,  1024,  1024,  1025,  1025,  1025,
    1026,  1026,  1027,  1027,  1028,  1028,  1028,  1029,  1029,  1030,
    1030,  1031,  1031,  1032,  1032,  1033,  1033,  1035,  1034,  1036,
    1034,  1037,  1034,  1038,  1034,  1039,  1034,  1040,  1034,  1041,
    1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,
    1034,  1034,  1042,  1043,  1043,  1044,  1044,  1045,  1045,  1045,
    1045,  1045,  1045,  1046,  1047,  1047,  1048,  1048,  1049,  1049,
    1049,  1049,  1050,  1051,  1051,  1051,  1051,  1052,  1052,  1053,
    1053,  1054,  1054,  1055,  1055,  1055,  1055,  1055,  1056,  1056,
    1056,  1056,  1057,  1057,  1057,  1057,  1057,  1058,  1057,  1057,
    1057,  1057,  1057,  1057,  1057,  1057,  1057,  1057,  1059,  1059,
    1060,  1060,  1061,  1062,  1062,  1063,  1063,  1063,  1064,  1064,
    1065,  1065,  1065,  1066,  1066,  1067,  1068,  1068,  1068,  1068,
    1068,  1068,  1068,  1068,  1068,  1068,  1068,  1068,  1068,  1068,
    1068,  1068,  1068,  1068,  1068,  1068,  1069,  1069,  1069,  1070,
    1070,  1070,  1070,  1070,  1071,  1071,  1072,  1072,  1073,  1073,
    1074,  1074,  1075,  1075,  1075,  1076,  1076,  1076,  1077,  1077,
    1077,  1077,  1078,  1078,  1079,  1079,  1080,  1082,  1081,  1083,
    1084,  1084,  1085,  1085,  1086,  1086,  1086,  1087,  1088,  1088,
    1089,  1089,  1090,  1090,  1091,  1091,  1092,  1092,  1093,  1093,
    1094,  1094,  1095,  1095,  1096,  1096,  1096,  1096,  1096,  1097,
    1098,  1098,  1098,  1099,  1100,  1100,  1101,  1101,  1102,  1102,
    1102,  1103,  1104,  1105,  1106,  1106,  1107,  1107,  1108,  1108,
    1108,  1108,  1108,  1108,  1109,  1110,  1110,  1110,  1112,  1111,
    1111,  1113,  1113,  1114,  1114,  1115,  1117,  1116,  1118,  1118,
    1119,  1119,  1120,  1121,  1122,  1122,  1124,  1123,  1125,  1125,
    1126,  1126,  1127,  1128,  1130,  1129,  1131,  1132,  1132,  1133,
    1133,  1134,  1134,  1134,  1135,  1135,  1136,  1136,  1136,  1137,
    1137,  1137,  1137,  1137,  1138,  1138,  1139,  1140,  1140,  1141,
    1141,  1142,  1143,  1143,  1144,  1144,  1145,  1145,  1146,  1146,
    1147,  1147,  1147,  1148,  1148,  1148,  1149,  1149,  1149,  1150,
    1150,  1151,  1151,  1151,  1151,  1151,  1152,  1152,  1153,  1153,
    1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1154,
    1154,  1154,  1154,  1154,  1155,  1155,  1155,  1155,  1155,  1155,
    1155,  1155,  1155,  1155,  1155,  1155,  1155,  1155,  1156,  1156,
    1156,  1156,  1156,  1156,  1156,  1156,  1156,  1156,  1156,  1156,
    1156,  1156,  1156,  1157,  1157,  1158,  1158,  1159,  1159,  1160,
    1160,  1161,  1161,  1161,  1161,  1161,  1161,  1161,  1162,  1162,
    1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,
    1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,
    1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,
    1163,  1163,  1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,
    1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,
    1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,  1164,  1165,
    1165,  1165,  1165,  1165,  1165,  1165,  1165,  1165,  1165,  1165,
    1165,  1165,  1165,  1165,  1165,  1165,  1165,  1165,  1165,  1165,
    1165,  1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,
    1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,  1166,
    1166,  1166,  1166,  1166,  1166,  1167,  1167,  1167,  1167,  1167,
    1167,  1167,  1168,  1168,  1169,  1169,  1170,  1170,  1171,  1171,
    1172,  1172,  1173,  1173,  1174,  1175,  1175,  1175,  1175,  1175,
    1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,
    1175,  1175,  1175,  1175,  1176,  1177,  1177,  1177,  1178,  1178,
    1179,  1179,  1180,  1180,  1181,  1181,  1182,  1183,  1183,  1183,
    1183,  1183,  1183,  1183,  1183,  1183,  1183,  1183,  1183,  1184,
    1184,  1185,  1185,  1186,  1186,  1187,  1187,  1188,  1188,  1189,
    1189,  1190,  1190,  1191,  1191,  1191,  1192,  1192,  1193,  1193,
    1193,  1193,  1193,  1193,  1194,  1194,  1194,  1195,  1195,  1195,
    1195,  1196,  1196,  1197,  1197,  1198,  1198,  1199,  1199,  1200,
    1201,  1201,  1201,  1201,  1201,  1202,  1202,  1203,  1203,  1204,
    1205,  1205,  1206,  1207,  1207,  1207,  1207,  1208,  1208,  1209,
    1209,  1210,  1210,  1211,  1211,  1212,  1213,  1213,  1214,  1214,
    1215,  1215,  1216,  1217,  1217,  1218,  1218,  1218,  1218,  1218,
    1218,  1218,  1218,  1218,  1218,  1218,  1218,  1219,  1219,  1219,
    1219,  1219,  1219,  1219,  1219,  1219,  1220,  1220,  1220,  1220,
    1221,  1221,  1221,  1222,  1222,  1223,  1223,  1224,  1225,  1225,
    1226,  1226,  1227,  1227,  1228,  1228,  1229,  1229,  1230,  1230,
    1230,  1231,  1232,  1232,  1233,  1234,  1234,  1235,  1236,  1236,
    1237,  1237,  1237,  1238,  1238,  1239,  1240,  1240,  1240,  1241,
    1241,  1241,  1241,  1241,  1242,  1242,  1243,  1243,  1243,  1243,
    1243,  1243,  1244,  1244,  1244,  1244,  1244,  1245,  1245,  1245,
    1245,  1245,  1246,  1246,  1246,  1246,  1247,  1248,  1248,  1249,
    1249,  1250,  1250,  1250,  1251,  1252,  1252,  1253,  1253,  1254,
    1255,  1255,  1255,  1256,  1257,  1258,  1259,  1260,  1258,  1258,
    1258,  1258,  1258,  1258,  1258,  1258,  1258,  1258,  1258,  1258,
    1258,  1261,  1261,  1262,  1263,  1263,  1264,  1264,  1265,  1265,
    1266,  1266,  1267,  1267,  1268,  1268,  1269,  1269,  1269,  1270,
    1270,  1270,  1271,  1271,  1271,  1271,  1272,  1272,  1273,  1273,
    1274,  1274,  1274,  1275,  1275,  1275,  1276,  1276,  1277,  1278,
    1278,  1279,  1279,  1280,  1280,  1281,  1281,  1282,  1282,  1283,
    1284,  1284,  1285,  1285,  1286,  1286,  1287,  1287,  1288,  1289,
    1289,  1290,  1291,  1291,  1292,  1292,  1292,  1293,  1293,  1294,
    1294,  1295,  1295,  1295,  1297,  1296,  1298,  1298,  1299,  1299,
    1300,  1300,  1301,  1301,  1301,  1301,  1301,  1301,  1301,  1301,
    1301,  1302,  1302,  1304,  1303,  1305,  1305,  1305,  1305,  1305,
    1305,  1305,  1305,  1305,  1305,  1305,  1305,  1306,  1305,  1307,
    1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1308,
    1305,  1305,  1309,  1305,  1305,  1305,  1305,  1305,  1305,  1305,
    1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,
    1305,  1305,  1305,  1305,  1310,  1310,  1310,  1311,  1311,  1312,
    1312,  1313,  1313,  1314,  1314,  1315,  1315,  1316,  1316,  1317,
    1317,  1318,  1318,  1318,  1319,  1319,  1319,  1320,  1321,  1320,
    1322,  1322,  1322,  1322,  1322,  1322,  1323,  1323,  1324,  1324,
    1324,  1324,  1325,  1325,  1325,  1327,  1326,  1329,  1328,  1328,
    1330,  1330,  1331,  1330,  1332,  1332,  1333,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1334,  1334,  1336,  1335,  1337,  1337,  1339,  1338,  1338,  1338,
    1340,  1340,  1342,  1341,  1343,  1344,  1344,  1345,  1346,  1346,
    1346,  1347,  1349,  1350,  1351,  1348,  1352,  1352,  1353,  1353,
    1354,  1354,  1354,  1355,  1355,  1356,  1356,  1357,  1357,  1358,
    1358,  1359,  1359,  1359,  1359,  1360,  1360,  1361,  1361,  1362,
    1362,  1363,  1363,  1364,  1364,  1365,  1365,  1366,  1366,  1366,
    1367,  1367,  1368,  1368,  1369,  1369,  1370,  1370,  1371,  1372,
    1372,  1372,  1372,  1373,  1373,  1373,  1374,  1375,  1375,  1375,
    1376,  1376,  1376,  1376,  1376,  1376,  1376,  1376,  1376,  1376,
    1377,  1377,  1377,  1377,  1377,  1378,  1378,  1378,  1379,  1379,
    1380,  1380,  1381,  1382,  1382,  1383,  1383,  1384,  1384,  1384,
    1385,  1385,  1385,  1385,  1386,  1386,  1386,  1387,  1387,  1388,
    1389,  1389,  1390,  1391,  1392,  1393,  1394,  1395,  1395,  1396,
    1396,  1397,  1397,  1398,  1398,  1398,  1399,  1399,  1399,  1400,
    1400,  1400,  1401,  1401,  1402,  1402,  1402,  1402,  1403,  1403,
    1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,
    1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,
    1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,
    1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,
    1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,  1403,
    1403,  1403,  1403,  1404,  1404,  1404,  1404,  1404,  1404,  1404,
    1404,  1404,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1406,  1406,  1407,  1408,  1408,
    1408,  1408,  1408,  1408,  1408,  1409,  1409,  1409,  1409,  1409,
    1409,  1409,  1410,  1410,  1411,  1411,  1412,  1412,  1413,  1413,
    1414,  1414,  1415,  1415,  1415,  1415,  1416,  1416,  1416,  1416,
    1417,  1417,  1417,  1417,  1418,  1418,  1418,  1418,  1418,  1419,
    1420,  1420,  1420,  1420,  1420,  1420,  1421,  1421,  1421,  1422,
    1422,  1423,  1424,  1424,  1425,  1426,  1426,  1427,  1427,  1428,
    1428,  1428,  1428,  1429,  1430,  1430,  1430,  1430,  1430,  1432,
    1431,  1433,  1433,  1434,  1434,  1435,  1436,  1436,  1436,  1436,
    1438,  1437,  1439,  1440,  1441,  1442,  1442,  1443,  1442,  1444,
    1444,  1445,  1445,  1446,  1446,  1446,  1446,  1447,  1446,  1448,
    1448,  1448,  1448,  1448,  1450,  1449,  1449,  1451,  1451,  1451,
    1451,  1451,  1453,  1452,  1452,  1454,  1454,  1454,  1454,  1455,
    1455,  1456,  1456,  1457,  1457,  1458,  1458,  1460,  1459,  1461,
    1459,  1462,  1459,  1463,  1459,  1459,  1459,  1459,  1459,  1459,
    1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,
    1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,
    1459,  1459,  1459,  1464,  1464,  1465,  1465,  1466,  1466,  1467,
    1467,  1467,  1468,  1468,  1468,  1468,  1469,  1469,  1470,  1470,
    1471,  1471,  1472,  1472,  1472,  1472,  1472,  1472,  1473,  1473,
    1474,  1474,  1475,  1476,  1476,  1476,  1476,  1476,  1477,  1477,
    1478,  1478,  1479,  1479,  1480,  1480,  1480,  1480,  1480,  1482,
    1481,  1483,  1483,  1484,  1484,  1484,  1485,  1485,  1485,  1486,
    1486,  1487,  1488,  1488,  1489,  1490,  1491,  1491,  1491,  1492,
    1493,  1494,  1495,  1495,  1495,  1495,  1495,  1495,  1495,  1495,
    1496,  1496,  1496,  1497,  1497,  1497,  1497,  1497,  1498,  1498,
    1498,  1498,  1498,  1498,  1499,  1499,  1500,  1501,  1502,  1502,
    1502,  1503,  1504,  1504,  1504,  1505,  1505,  1505,  1507,  1506,
    1508,  1508,  1509,  1509,  1510,  1511,  1511,  1511,  1511,  1512,
    1512,  1513,  1513,  1515,  1514,  1516,  1516,  1518,  1519,  1520,
    1521,  1517,  1523,  1524,  1525,  1526,  1522,  1527,  1527,  1527,
    1527,  1527,  1527,  1528,  1528,  1529,  1529,  1529,  1530,  1530,
    1531,  1531,  1531,  1532,  1532,  1533,  1533,  1533,  1534,  1534,
    1535,  1535,  1536,  1536
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     1,     0,     4,     2,
       0,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     4,     1,     2,     0,     4,     0,     2,     3,     1,
       2,     0,     3,     0,     6,     0,     5,     1,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     3,     1,     3,
       1,     2,     3,     5,     7,     2,     3,     1,     3,     3,
       2,     3,     1,     3,     1,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     3,     1,     0,
       1,     3,     1,     3,     3,     3,     3,     0,     3,     9,
       6,     7,     9,     1,     1,     0,     6,     0,     3,     8,
       5,     4,     3,    11,    11,    11,    11,     1,     3,     2,
       2,     2,     2,     2,     2,     2,     0,    12,     0,     6,
       2,     0,     1,     3,     1,     0,     2,     0,     2,     0,
       1,     3,     4,     0,     2,     0,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     3,     1,     0,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     1,     1,     1,     2,     3,     3,
       0,     4,     0,     3,     0,     1,     3,     1,     0,     1,
       3,     1,     3,     0,     1,     3,     1,     4,     0,     1,
       1,     1,     0,     3,     2,     3,     0,     3,     5,     5,
       0,     7,     0,     6,     1,     1,     1,     3,     1,     1,
       1,     3,     0,     1,     1,     1,     1,     2,     1,     3,
       1,     1,     0,     1,     0,     2,     3,     5,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     4,     0,     1,     1,     1,     3,
       1,     3,     3,     1,     2,     1,     1,     1,     1,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     0,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     5,     0,     2,     0,     3,     0,     2,     2,
       2,     2,     0,     6,     2,     0,     2,     1,     1,     3,
       0,     0,     0,     7,     0,     2,     2,     1,     1,     0,
       0,     8,     0,     6,     1,     2,     1,     2,     0,     0,
       6,     0,     0,     6,     0,     2,     0,     5,     0,     1,
       0,     5,     0,     2,     0,     5,     4,     0,     0,     8,
       0,     0,     8,     1,     1,     1,     1,     1,     2,     4,
       5,     0,     4,     4,     4,     3,     3,     2,     2,     0,
       2,     1,     2,     3,     1,     1,     1,     0,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     1,     1,     1,     1,     1,     0,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     1,     1,     1,     2,     2,     2,
       1,     1,     1,     1,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     4,     3,     1,     1,     1,     1,     2,
       1,     2,     1,     0,     2,     1,     2,     1,     6,     6,
       5,     4,     5,     4,     5,     0,     1,     0,     3,     0,
       2,     0,     8,     9,     0,     1,     1,     3,     0,     2,
       0,     3,     1,     3,     5,     0,     4,     3,     1,     1,
       1,     3,     1,     3,     0,     4,     1,     3,     1,     1,
       0,     3,     1,     3,     3,     0,     1,     2,     1,     3,
       4,     3,     3,     3,     4,     4,     3,     0,     1,     1,
       2,     1,     1,     0,     3,     1,     2,     1,     3,     0,
       1,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       1,     1,     3,     4,     4,     3,     2,     2,     3,     3,
       1,     1,     4,     4,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     3,     0,     1,     1,     6,     7,     7,     7,     8,
       2,     4,     0,     1,     2,     2,     9,     0,     2,     0,
       1,     1,     3,     3,     3,     1,     2,     1,     1,     3,
       2,     3,     2,     2,     1,     3,     3,     2,     3,     1,
       2,     2,     2,     1,     2,     1,     1,     1,     2,     3,
       2,     3,     2,     2,     5,     5,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     2,     1,     2,     3,     2,     1,     1,     1,     1,
       1,     1,     2,     0,     1,     1,     1,     1,     1,     0,
       1,     1,     5,     0,     3,     0,     2,     3,     0,     1,
       2,     1,     1,     1,     1,     3,     3,     3,     3,     0,
       1,     0,     1,     0,     1,     2,     1,     1,     2,     2,
       3,     1,     3,     2,     1,     2,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     2,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     0,     2,     0,     2,     1,     1,     0,     1,
       1,     2,     2,     1,     2,     2,     0,     1,     1,     1,
       3,     1,     3,     0,     1,     0,     4,     1,     1,     1,
       0,     1,     2,     1,     1,     2,     1,     3,     3,     1,
       1,     0,     2,     0,     1,     5,     0,     3,     3,     1,
       0,     2,     2,     2,     0,     3,     3,     6,     6,     1,
       1,     2,     2,     2,     1,     2,     2,     1,     1,     0,
       1,     1,     1,     1,     0,     1,     1,     0,     1,     1,
       2,     1,     3,     0,     1,     1,     2,     1,     0,     1,
       1,     2,     1,     1,     3,     2,     1,     1,     3,     3,
       2,     2,     1,     1,     1,     1,     1,     4,     2,     1,
       4,     0,     1,     0,     2,     1,     3,     0,     5,     0,
       5,     0,     5,     0,     5,     0,     5,     0,     4,     0,
      10,     3,     4,     3,     3,     7,     5,     5,     1,     5,
       5,     5,     4,     0,     1,     1,     2,     2,     2,     1,
       4,     2,     2,     3,     0,     2,     2,     1,     2,     2,
       2,     2,     3,     0,     3,     1,     4,     0,     3,     0,
       2,     0,     1,     1,     2,     2,     1,     3,     0,     1,
       1,     3,     2,     2,     1,     3,     4,     0,     6,     4,
       4,     5,     4,     3,     1,     7,     4,     4,     0,     1,
       2,     2,     2,     1,     1,     3,     6,     5,     3,     8,
       1,     3,     3,     1,     3,     2,     5,     2,     4,     6,
       5,     4,     4,     3,     3,     2,     2,     6,     4,     5,
       3,     5,     5,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     2,     2,     3,     3,     3,     3,     0,     1,
       0,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     2,     2,     2,     4,     3,     0,     4,     3,
       0,     1,     1,     3,     3,     2,     2,     4,     0,     3,
       0,     3,     0,     3,     0,     3,     0,     1,     1,     3,
       1,     1,     0,     2,     1,     3,     3,     3,     1,     4,
       0,     1,     1,     5,     0,     1,     1,     2,     1,     1,
       1,     4,     2,     4,     0,     1,     1,     2,     1,     1,
       1,     1,     1,     2,     4,     0,     1,     1,     0,     4,
       4,     3,     5,     1,     3,     3,     0,     6,     1,     1,
       1,     3,     2,     3,     1,     1,     0,     6,     1,     1,
       1,     3,     3,     4,     0,     5,     1,     0,     4,     0,
       2,     1,     1,     1,     3,     2,     5,     5,     4,     1,
       4,     4,     4,     4,     3,     3,     1,     8,     7,     0,
       1,     2,     1,     1,     1,     3,     0,     1,     2,     1,
       1,     1,     1,     0,     2,     4,     3,     1,     1,     1,
       2,     0,     2,     2,     1,     1,     0,     2,     3,     3,
       3,     2,     3,     4,     3,     4,     3,     4,     1,     3,
       4,     3,     4,     1,     3,     4,     5,     7,     6,     8,
       5,     6,     4,     4,     5,     3,     4,     1,     3,     3,
       3,     3,     3,     3,     5,     5,     3,     3,     3,     3,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
       3,     2,     2,     2,     2,     1,     3,     5,     6,     2,
       4,     7,     2,     6,     5,     6,     6,     4,     4,     5,
       3,     3,     4,     6,     2,     4,     4,     4,    10,     6,
       8,     6,     4,     4,     6,     4,     4,     4,     6,     4,
       7,     7,     7,     6,     6,     6,     6,     3,     4,     6,
       8,     2,     2,     8,     8,     6,     6,     1,     6,     6,
       8,     8,     6,     8,     6,     2,     8,     8,     2,     2,
       2,     4,     4,     4,     4,     3,     8,     6,     8,     4,
       6,     4,     4,     6,     8,     4,     3,     6,     4,     6,
       5,     8,     7,    10,     1,     4,     4,     4,     4,     4,
       6,     4,     4,     6,     2,     3,     0,     4,     0,     3,
       0,     1,     1,     3,     2,     4,     5,     4,     4,     4,
       5,     4,     5,     4,     5,     4,     5,     4,     4,     4,
       4,     4,     5,     7,     2,     3,     1,     4,     0,     1,
       0,     2,     0,     3,     3,     1,     2,     2,     3,     2,
       1,     2,     1,     2,     1,     2,     2,     2,     1,     0,
       1,     1,     3,     1,     3,     1,     3,     0,     1,     0,
       2,     4,     5,     1,     1,     4,     1,     1,     5,     7,
       5,     7,     3,     3,     3,     4,     4,     1,     2,     2,
       1,     3,     3,     0,     1,     0,     1,     0,     1,     4,
       1,     1,     1,     1,     1,     3,     5,     3,     3,     4,
       3,     3,     2,     0,     2,     3,     3,     1,     1,     6,
       6,     1,     2,     0,     1,     1,     0,     1,     1,     1,
       1,     3,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     0,     2,     0,     1,     1,     0,     2,
       0,     2,     2,     0,     0,     4,     3,     1,     0,     1,
       1,     3,     3,     1,     2,     0,     1,     3,     3,     1,
       0,     1,     1,     0,     1,     2,     1,     3,     3,     1,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       5,     0,     1,     3,     1,     3,     1,     2,     1,     2,
       5,     2,     1,     3,     0,     6,     0,     0,     8,     4,
       6,     4,     4,     5,     5,     4,     4,     4,     5,     4,
       4,     1,     3,     1,     1,     3,     0,     2,     0,     1,
       0,     1,     1,     3,     1,     1,     8,     9,     8,     6,
       7,     6,     0,     1,     1,     1,     1,     1,     0,     1,
       1,     3,     4,     1,     3,     4,     3,     1,     2,     1,
       1,     1,     1,     3,     1,     1,     1,     0,     1,     3,
       0,     1,     3,     1,     1,     1,     0,     5,     9,     3,
       1,     3,     0,     1,     8,     6,     7,     0,     2,     0,
       2,     1,     1,     1,     0,     4,     0,     1,     0,     1,
       1,     3,     1,     1,     2,     2,     2,     1,     1,     1,
       1,     0,     3,     0,     3,     2,     4,     4,     3,     4,
       4,     1,     3,     3,     6,     2,     2,     0,     6,     0,
       7,     5,     2,     5,     5,     2,     2,     1,     4,     0,
       4,     2,     0,     4,     2,     2,     1,     1,     3,     5,
       4,     3,     3,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     4,     1,     1,     1,     1,     1,     0,
       1,     0,     2,     0,     1,     1,     1,     0,     2,     0,
       2,     0,     2,     2,     0,     2,     2,     3,     0,     4,
       1,     1,     1,     1,     1,     3,     1,     1,     0,     1,
       1,     3,     0,     1,     1,     0,     4,     0,     4,     1,
       0,     3,     0,     3,     3,     1,     2,     2,     2,     2,
       2,     3,     2,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     0,     3,     3,     1,     0,     4,     1,     2,
       0,     1,     0,     3,     3,     2,     2,     3,     0,     1,
       1,     2,     0,     0,     0,    21,     1,     1,     0,     1,
       0,     1,     1,     0,     1,     1,     1,     0,     2,     2,
       1,     3,     4,     3,     3,     0,     2,     2,     1,     3,
       3,     0,     4,     0,     3,     1,     1,     0,     3,     2,
       3,     1,     1,     2,     0,     2,     3,     1,     3,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     2,     2,     2,     1,     1,
       3,     5,     2,     1,     1,     1,     1,     3,     4,     5,
       1,     5,     3,     2,     1,     3,     2,     2,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     3,     6,     5,     8,     3,     3,     3,     6,     6,
       6,     4,     0,     2,     2,     2,     0,     2,     1,     3,
       2,     1,     1,     1,     1,     1,     0,     1,     1,     1,
       0,     2,     2,     2,     0,     2,     2,     2,     2,     3,
       3,     4,     6,     2,     3,     3,     1,     3,     3,     2,
       2,     1,     0,     2,     3,     0,     2,     2,     2,     2,
       2,     2,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     1,     1,     1,     3,     3,     1,     1,     2,     2,
       0,     3,     1,     3,     4,     4,     3,     0,     7,     1,
       2,     1,     1,     1,     1,     1,     1,     0,     5,     1,
       1,     1,     1,     1,     0,     4,     4,     6,     6,     6,
       7,     5,     0,     4,     5,     8,     8,     8,     6,     0,
       1,     1,     2,     0,     1,     1,     3,     0,     3,     0,
       3,     0,     3,     0,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     1,     3,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     1,
       2,     2,     2,     0,     3,     0,     1,     3,     1,     2,
       2,     2,     1,     3,     3,     1,     1,     3,     1,     3,
       1,     3,     4,     5,     4,     6,     6,     1,     0,     3,
       3,     1,     1,     0,     2,     2,     2,     2,     0,     2,
       0,     3,     2,     1,     2,     2,     2,     2,     2,     0,
       3,     0,     1,     0,     3,     2,     0,     1,     2,     0,
       1,     4,     4,     5,     2,     3,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     1,     2,
       1,     2,     3,     3,     3,     0,     3,     3,     0,     7,
       0,     3,     1,     3,     2,     0,     3,     4,     4,     1,
       1,     0,     2,     0,    12,     7,     6,     0,     0,     0,
       0,    14,     0,     0,     0,     0,    11,     4,     4,     3,
       4,     3,     3,     0,     2,     1,     3,     5,     1,     1,
       0,     1,     1,     0,     2,     0,     1,     3,     5,     3,
       3,     3,     1,     3
};

/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2616,  1105,  2569,     0,     0,     0,     0,     0,     0,
    2571,   157,    69,  1689,  1796,  1797,  1604,  1628,     6,     0,
    1105,   305,   211,     0,    81,  1642,     0,  1848,     0,     0,
    1105,     0,  1842,     0,     0,  1105,  1682,  1832,   282,   211,
    2571,     0,  1166,     0,  1713,  2442,     0,     0,     0,  1696,
       0,  2440,  1682,     0,     0,     0,     0,     0,     0,     0,
       2,     7,    12,    23,     0,    43,    28,    34,    18,   153,
      22,   154,    17,    57,    50,    30,    14,     0,    31,    60,
    1072,    61,    20,    47,    15,    16,    19,    40,    46,    41,
      42,    54,  1143,  1141,  1545,  1142,  1149,  1156,    26,    27,
      35,    48,    65,    24,    62,    58,    25,  1798,    29,    49,
      44,    37,    66,    38,    55,    56,    39,    64,    59,   918,
      33,    51,    32,    13,    21,    52,    53,    45,    67,    36,
      63,     0,   951,     0,     0,     0,     0,     0,     0,     0,
       0,  1626,   907,  2614,  2615,  2616,  1107,  1106,     0,  2571,
    1954,  1092,  1116,  1978,  2042,  2043,  2044,  2045,  2046,  2047,
    1980,  2048,  2049,  1979,  2050,  2052,  2051,  2053,  2054,  1981,
    1982,  2055,  2056,  2057,  2059,  2058,  2060,  1983,  1984,  2061,
    2062,  2063,  2064,  2065,  1985,  1986,  2066,  2068,  2067,  1987,
    2069,  2070,  2071,  2074,  2073,  2072,  1988,  2075,  1989,  2076,
    2077,  2079,  2080,  2081,  2082,  2083,  2084,  2085,  2087,  2086,
    1990,  2088,  2089,  2090,  2091,  2092,  2094,  2093,  2095,  2096,
    2097,  1991,  2098,  2099,  2100,  2101,  2102,  2103,  2104,  2105,
    2106,  1992,  2107,  2108,  2109,  2128,  1993,  2110,  2113,  2112,
    2111,  2114,  2115,  2116,  2117,  2034,  2118,  2119,  1976,  2120,
    2121,  2122,  2123,  2124,  2126,  2125,  2035,  2130,  2131,  2132,
    2133,  1994,  1995,  1996,  2127,  2129,  2332,  2134,  1997,  2136,
    2135,  2137,  2139,  2138,  1998,  2140,  1999,  2000,  2141,  2142,
    1950,  2143,  1951,  2144,  2146,  2147,  2148,  2153,  2154,  2001,
    2145,  2149,  2150,  2151,  2152,  2155,  2156,  2003,  2157,  2158,
    2159,  2160,  2161,  2162,  2163,  2164,  2165,  2166,  2189,  2177,
    2179,  2170,  2172,  2173,  2175,  2171,  2178,  2176,  2182,  2183,
    2181,  2184,  2185,  2186,  2187,  2188,  2180,  2168,  2174,  2169,
    2190,  2191,  2167,  2192,  2193,  2194,  2195,  2196,  2197,  2198,
    2199,  2200,  2201,  2202,  2204,  2203,  2205,  2206,  2207,  2208,
    2209,  2210,  2212,  2211,  2213,  2214,  2215,  2216,  2218,  2217,
    2220,  2036,  2004,  2219,  2221,  2222,  2223,  2224,  2225,  2005,
    2006,  2007,  2226,  2227,  2008,  2228,  2230,  2229,  2231,  2232,
    2233,  2234,  2235,  2236,  2237,  2009,  2010,  2011,  2238,  2239,
    2240,  2037,  2241,  2242,  2243,  2038,  2244,  2245,  2246,  2247,
    2248,  2249,  2251,  2250,  2252,  2253,  2254,  2255,  2256,  2257,
    2039,  2012,  2258,  2013,  2259,  2040,  2260,  2261,  2262,  2263,
    2264,  2265,  2266,  2014,  2267,  2015,  2268,  2269,  2270,  2271,
    2016,  2272,  2273,  2274,  2275,  2277,  2278,  2276,  2279,  2017,
    2280,  2281,  2282,  2018,  2284,  2283,  2285,  2019,  2287,  1977,
    2020,  2286,  2022,  2288,  2289,  2021,  2023,  2290,  2291,  2292,
    2293,  2294,  2296,  2295,  2297,  2298,  2299,  2300,  2024,  2301,
    2302,  2303,  2304,  2025,  2305,  2306,  2307,  2308,  2309,  2311,
    2310,  2041,  2312,  2313,  2314,  2316,  2318,  2317,  2315,  2319,
    2320,  2321,  2322,  2325,  2326,  2327,  2328,  2323,  2324,  2026,
    2329,  2330,  2331,  2333,  2334,  2336,  2335,  2028,  2029,  2337,
    2338,  2032,  2339,  2340,  2341,  2344,  2342,  2343,  2346,  2345,
    2347,  2350,  2348,  2349,  2030,  2351,  2031,  2352,  2353,  2354,
    2002,  2027,  2078,   230,  1957,   213,  1958,  1975,  1974,  2033,
       0,     0,  2432,  2431,     0,     0,  2572,  2573,   573,     0,
       0,     0,     0,     0,  1629,   855,   573,   573,  2616,     0,
       0,  1693,  1692,  1691,     0,  1689,     0,  1626,  1626,  1626,
       0,     0,  1626,  1626,     0,  1626,  1626,  1626,  1626,     0,
      74,  1805,   306,   307,     0,  1968,  2472,   210,  1959,  1967,
    1966,  1972,  2538,  2356,  2355,  1960,     0,     0,     0,     0,
    1949,     0,  1644,  1645,  1643,  1030,     0,     0,  1849,  1850,
       0,  1856,     0,  1857,  1852,  2429,     0,     0,     0,     0,
     211,  1108,     0,  1647,  1683,  1648,  1646,     0,   272,   281,
     283,   284,   280,  2464,     0,  2573,  2584,  2599,  2594,  2593,
    2596,  2597,  1172,  2598,  1171,  2595,  2592,     0,  1167,  1169,
    1170,   770,     0,     0,  2382,  2384,  2212,  2231,  2385,  2323,
    2383,     0,     0,     0,  2406,  2357,     0,  2376,     0,  1773,
     284,  1042,  1066,  1050,  1043,  1066,  1697,  1694,     0,     0,
       0,  1030,  1851,  2668,     0,     0,     0,  2663,     0,  2669,
       0,  2043,  1979,  2054,     0,  1917,     0,     0,     0,  1427,
       0,  1985,     0,  2069,  2071,     0,     0,  1186,  1186,   725,
       0,     0,     0,  2096,  2097,  1923,     0,     0,     0,  1914,
    1924,  1996,  2136,  2137,     0,  1916,  2142,     0,     0,     0,
       0,  2161,  1921,     0,     0,  2199,  2201,     0,     0,  2205,
    2206,  2207,  2208,  1900,  1240,   725,  1913,  1920,  1906,  2231,
    2236,  2237,     0,  2244,     0,     0,  2271,     0,  2278,  2276,
    2282,     0,     0,  2308,     0,     0,   725,  1899,  2325,  2326,
    2327,  2328,     0,  1915,  2026,  1922,     0,  2339,  1186,   725,
     725,     0,     0,     0,  2347,  2350,  2354,     0,     0,     0,
       0,  1239,     0,     0,     0,  1317,  2591,     0,     0,  1232,
    1251,  1252,  1254,  1354,  1253,  1259,  1258,  1910,  1257,  1256,
    1911,  1912,  1250,  1934,  1957,  1933,  1265,  2589,     0,     0,
       0,     0,     0,     0,     1,     9,     0,     0,  1186,  1965,
    2339,     0,  1964,  1963,  1969,  2547,  2553,  2540,     0,  1044,
    1058,     0,  1145,     0,  2586,  1553,  1546,     0,  2586,  1553,
    1589,  2123,  1996,  2230,  1788,  1802,  1944,     0,   899,   952,
       0,   903,     0,  2443,     0,   901,     0,   914,   913,   911,
       0,   480,   897,     0,   211,     0,  2625,   905,     0,  2570,
       0,   232,     0,    83,    85,  1080,  1621,  1094,     0,  2576,
       0,     0,     0,     0,     0,     0,   162,     0,   211,   211,
       0,   158,  2625,  2625,  2616,  2618,  2620,   891,   573,     0,
       0,  1624,  1687,  1690,     0,  1178,  1603,  1177,  1181,  1198,
    1203,  1217,  1179,  1933,     0,     0,     0,     0,     0,     0,
       0,  1630,     0,   211,     0,     0,  1626,    76,     0,     0,
       0,     0,     0,     0,  1946,  1520,  2446,  2447,     0,    82,
    1031,  1648,     0,  2682,  2679,  1847,     0,  1860,     0,     0,
       0,  1768,  1767,     0,  1843,  2585,     0,     0,     0,  1649,
       0,  1838,     0,  1836,  1833,  1835,   273,     0,     0,   303,
       0,     0,  2579,  2576,  1159,  1168,   769,     0,     0,   772,
     774,  1665,  1666,   773,   782,     0,   771,     0,     0,     0,
       0,  2359,  2415,  2412,  2411,  2372,  2367,  2366,  2365,  2394,
       0,   778,   780,   779,  2403,   777,     0,     0,  2323,  2360,
    2376,     0,     0,  2358,     0,     0,   770,  1784,     0,     0,
    1784,     0,  1553,  1771,  1774,     0,  2387,  1747,   853,   852,
     851,  2388,  1767,     0,  1721,  1746,     0,  1698,  1737,     0,
    2389,     0,  1770,     0,  1553,  1784,     0,  1714,     0,     0,
       0,     0,   279,  1071,  1070,  1046,  1067,  1068,     0,     0,
    1049,  1051,  1052,   147,     0,  2680,  2681,  2441,     0,  1905,
    1904,  1955,  2665,  1903,  2673,  2675,  2659,     0,  2662,  2661,
    2670,     0,     0,  1525,  1272,  1525,  1525,  1525,  1428,     0,
       0,     0,     0,     0,     0,     0,  1525,     0,  1311,  1284,
       0,  1312,     0,     0,     0,  1925,     0,     0,     0,     0,
    1269,  2590,     0,     0,  1419,     0,  1398,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1423,  1425,  1933,  1525,
       0,     0,  1525,     0,     0,     0,     0,     0,   766,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1525,  1525,     0,     0,  1525,  1325,  1927,     0,     0,
       0,  1926,     0,     0,     0,  1919,  1918,  1901,     0,  1328,
    1330,  1329,     0,  1525,  1525,     0,     0,     0,  1262,  1261,
    1263,     0,  2591,     0,     0,  2390,  1394,  1396,     0,     0,
       3,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1264,     0,     0,  1902,     0,     0,  1370,     0,
       0,   515,     4,  1144,  1155,  1154,    10,    68,  1971,     0,
       0,     0,     0,     0,     0,     0,   934,     0,     0,     0,
       0,     0,  1078,     0,  1074,  1073,     0,  1047,  1060,  2107,
       0,     0,  1602,  1596,  1599,  1598,     0,  2588,  2587,     0,
    1589,  1554,  1562,  1563,  1561,  1555,  1556,  1560,  1559,     0,
    1589,     0,  1173,     0,     0,  1787,  1803,  1804,  2623,  2624,
    2622,   788,  2617,   214,     0,   912,     0,   481,   214,     0,
       0,     0,     0,     0,   482,   483,   418,   958,  1627,   922,
     909,     0,     0,   908,  2625,  1091,     0,  1118,  1120,  1119,
    1137,   234,   231,   212,     0,     0,  1082,  1081,     0,  1079,
    1102,  1101,  1099,     0,  1100,  1098,  1093,  1095,  1096,  2575,
       0,     0,  2577,  2581,  1238,  1237,     0,   155,     0,   161,
       0,     0,     0,     0,     0,     0,  2621,     0,   573,     0,
       0,     0,  2613,  2601,  2608,  2609,  2612,  2611,  2610,     0,
    2607,  2600,  2603,  2604,  2606,  2605,  2625,  2619,     0,     0,
     877,   892,  1940,     0,     0,  1457,  1944,     0,     0,     0,
    1947,  1191,     0,  1236,  1235,     0,  1234,  1233,     0,  1180,
       0,     0,  1185,  1184,  1241,  1242,  1243,  1244,     0,  1245,
    1246,  1247,     0,     0,     0,     0,     0,     0,     0,     0,
    1609,  1615,  1611,     0,  1630,  1612,  1619,   496,   495,  1634,
    1635,  1617,   579,  1632,     0,  1616,     0,  1032,  1620,     0,
       0,    75,     0,  1827,     0,     0,     0,  1823,  1825,  1829,
    1824,     0,     0,  1828,     0,  1826,  1806,  1809,  1815,  1830,
       0,     0,   304,   308,   310,     0,   313,  2483,  2498,  2499,
    2495,  2500,  2518,  2501,  2505,     0,  2497,  2489,     0,  2504,
       0,  2493,  2502,     0,  2487,     0,  2503,  2508,  2519,  2491,
    2496,  2473,     0,  2481,  2485,  1973,  2536,  2523,  2539,  1521,
    1522,     0,  2445,     0,  1945,     0,     0,     0,  1126,  1861,
    1862,  1858,  1520,  2430,  2433,  1104,     0,    71,    72,     0,
    1110,     0,  1109,  1113,     0,  1084,  1457,  1839,  1840,     0,
     271,   296,   291,   299,   293,   295,   294,   300,   301,   302,
     297,   292,   298,   285,     0,  2483,     0,  2465,     0,  2466,
    2580,     0,  2582,     0,  1528,  1160,  1159,     0,     0,     0,
    2408,     0,  2405,  2404,     0,     0,  2423,  2361,     0,  2417,
    2418,     0,  2409,     0,  2410,     0,  2371,     0,     0,     0,
       0,     0,     0,  2407,  2375,  2374,     0,  2377,  2378,     0,
    2381,  2427,  2428,  2425,  2426,  2424,  2400,  1777,     0,     0,
    1745,     0,   573,     0,     0,     0,     0,     0,   211,     0,
    1715,     0,     0,  1736,  1775,  1776,  1781,     0,     0,  1781,
       0,  1753,  1771,     0,  1781,  1710,     0,     0,  1702,  1707,
    1703,     0,  1709,  1708,  1711,  1699,  1700,  1777,  1726,   147,
    1771,  1735,  1744,     0,  1725,  1732,     0,  1741,  1771,  1771,
    1739,  1742,     0,  1055,  1056,     0,     0,     0,  1045,  1695,
    1623,     0,     0,     0,  1164,  1434,  1433,  1464,  1461,  1460,
    1463,  1462,  1457,  1520,     0,     0,  2660,  2676,  2658,  2664,
    2671,  2672,  2657,     0,     0,  1526,  1525,     0,     0,     0,
       0,     0,     0,  1429,     0,     0,  1421,     0,     0,     0,
       0,     0,     0,     0,  1187,     0,   726,  1335,     0,     0,
       0,     0,     0,  1496,  1497,  1498,  1499,  1507,  1500,  1501,
    1502,  1509,  1514,  1503,  1504,  1510,  1511,  1512,  1505,  1513,
    1508,  1506,  1515,     0,  1495,     0,     0,  1420,  1519,  1516,
    1518,  1517,     0,  1399,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1525,     0,     0,     0,
    1525,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1346,     0,     0,
       0,     0,     0,  1525,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1307,     0,  1936,  1935,     0,     0,
       0,   821,     0,  1266,     0,     0,     0,     0,     0,     0,
       0,     0,  1229,  1230,  1220,  1221,  1218,  1219,     0,  1223,
       0,  1222,  1226,  1227,  1228,  1231,  1255,  1260,  1280,  1281,
    1181,     0,  1371,  1372,  1937,     0,   516,     0,     0,   519,
       0,    11,     8,   942,     0,  1970,     0,     0,     0,     0,
       0,  2557,  2555,     0,  2556,  2554,  2528,  2547,  2541,     0,
     923,     0,     0,     0,     0,     0,     0,     0,     0,   147,
       0,  1062,  1956,  1601,   775,  1597,     0,  1550,  1547,  1549,
    1152,  1150,  1173,     0,     0,  1153,  1151,  1173,     0,     0,
       0,  1148,  1801,     0,  1790,  1791,  1792,  1793,  1794,  1789,
     789,   788,   569,   572,   571,     0,   904,     0,     0,   470,
     902,     0,     0,   450,   429,   450,   484,  1028,  1667,  1028,
       0,  1667,  1667,  1028,  1667,     0,     0,  1667,  1667,  1667,
    1667,     0,     0,  1667,     0,     0,  1028,     0,  1667,     0,
    1014,     0,     0,  1667,  1667,  1667,  1667,  1667,  1028,     0,
       0,  1667,  1667,     0,  1038,     0,     0,  1667,  1667,  1667,
    1667,     0,  1667,  1667,     0,  1667,     0,     0,  1013,   575,
     600,   601,   898,   953,   956,  1018,   964,   974,   960,   959,
       0,   990,   993,  1016,  1017,  1015,   943,     0,     0,   906,
       0,     0,   848,   847,  1134,     0,  1137,  1122,  1136,     0,
     235,   237,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   147,   115,   138,     0,     0,     0,     0,
       0,     0,     0,    86,    87,  1622,  1103,  1097,  2574,  2578,
     574,   788,     0,   459,     0,     0,   421,  2553,   160,     0,
       0,     0,   213,  2652,     0,  2602,  1943,     0,     0,     0,
       0,   788,     0,     0,  1528,  1458,     0,  1528,  1625,  1688,
    1687,  1176,  1183,  1182,  1189,  1188,  1190,  1194,  1199,  1192,
    1196,     0,  1248,  2049,  1201,     0,     0,     0,  1204,  1533,
    1215,     0,     0,     0,     0,     0,  1930,  1937,     0,  1606,
    1618,   580,  1769,  1667,  1613,  1034,  1033,  1614,  1032,     0,
      77,    79,  1820,  1817,  1816,  1818,  1822,   147,  1819,     0,
    1831,  1807,  2096,  2325,  2328,   317,     0,   289,   288,   290,
     314,     0,     0,  2484,  2482,  2516,  2515,  2520,     0,  2517,
    2513,  2521,  2522,  2506,  2548,  2510,     0,  2548,  2512,  2511,
    2548,  2507,  2514,  2548,  2479,     0,     0,     0,  2474,  1524,
    2132,  2217,     0,  1528,  2449,  1457,  2678,  2683,     0,  1859,
       0,     0,     0,    73,     0,     0,  1844,     0,     0,     0,
       0,  1089,  1088,  1090,  1083,  1085,  1086,     0,  1841,   147,
    1834,     0,     0,  2482,     0,  2479,  2583,  1162,  1161,  1163,
       0,  1534,  1527,  1528,     0,     0,     0,   787,   786,   783,
     781,     0,     0,     0,     0,  2422,  2414,  2416,  2413,  2373,
    2396,  2397,  2398,  2395,     0,  2401,  2399,     0,  2380,     0,
    1779,  1785,  1786,     0,     0,  1762,  1756,  1755,  1751,  1757,
       0,  1752,  1766,  1765,  1764,  1723,  1722,     0,     0,  1718,
    1772,  1761,  1759,  1748,  1781,  1760,  1758,  1704,  1705,  1706,
       0,  1553,     0,  1779,  1754,  1784,  1771,     0,  1784,  1781,
    1784,  1784,  1069,  1054,  1053,     0,     0,  1434,  1464,  1461,
    1460,  1463,     0,     0,     0,     0,     0,  1447,  1455,  1453,
    1455,  1450,     0,     0,     0,  1520,  1472,  2666,  2674,     0,
       0,  1331,     0,  1375,  1406,  1377,  1378,  1379,     0,     0,
       0,     0,     0,  1332,     0,  1282,     0,  1333,  1334,     0,
       0,     0,  1381,     0,   727,     0,     0,  1285,  1286,  1277,
       0,     0,  1355,     0,  1402,  1287,     0,     0,     0,     0,
       0,  1356,  1424,     0,  1426,  1937,     0,  1385,  1339,  1292,
       0,  1383,     0,  1293,  1357,  1358,  1359,  1341,     0,  1361,
       0,  1342,     0,     0,  1345,     0,     0,  1295,  1389,  1387,
       0,     0,     0,     0,  1391,  1297,     0,     0,     0,  1296,
       0,     0,     0,     0,     0,     0,     0,  1299,     0,  1278,
    1388,  1390,  1348,     0,     0,     0,     0,     0,  1308,     0,
    1270,  2391,  2392,  2393,   893,  1395,  1938,     0,     0,  1374,
    1362,     0,  1419,     0,     0,     0,     0,     0,     0,     0,
     521,     0,   517,   917,   919,   920,   921,     0,  2542,  2544,
    2531,  2530,  2529,  2526,     0,     0,     0,     0,     0,   935,
     937,     0,     0,   916,   924,   925,   929,   143,  1952,  1580,
    1581,  1579,  1577,  1578,   144,   145,  1570,  1571,  1567,  1568,
    1566,  1569,   146,  1077,  1076,  1075,  1059,  1048,     0,     0,
    1064,     0,  1867,  1595,  1551,  1552,  1932,     0,  1146,  1558,
    1557,  1147,  1591,  1174,     0,     0,   570,  1667,  1667,     0,
       0,     0,     0,     0,     0,     0,   215,   224,  2444,     0,
       0,   427,   428,  1667,   426,   579,   472,   474,   475,   476,
       0,     0,     0,     0,     0,     0,     0,     0,   167,   477,
    1667,  1667,   423,   579,   452,   454,   455,   456,   457,   458,
     419,     0,   424,  1029,   891,   849,  1105,   856,   997,     0,
     643,   891,   844,   849,   995,  1668,     0,     0,     0,  1105,
       0,     0,     0,     0,     0,  1105,     0,     0,     0,     0,
       0,  1667,     0,  1005,     0,   962,     0,     0,     0,     0,
       0,  1006,     0,     0,     0,   963,  1667,     0,     0,     0,
       0,     0,     0,  1105,     0,     0,     0,  1105,  1041,  1040,
    1039,     0,     0,  1105,  1105,     0,     0,     0,     0,   606,
     607,     0,     0,     0,     0,   980,   981,   576,     0,   954,
     955,   788,   788,   642,     0,  1940,     0,   945,   947,  2626,
    2627,  2628,  1125,  1117,  1124,  1121,  1137,     0,  1486,  1123,
     233,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    84,     0,     0,     0,     0,     0,
       0,     0,     0,   156,   788,     0,  1667,  1667,  1667,  1667,
     425,   579,   461,   463,   464,   465,   466,   469,   467,   468,
       0,     0,     0,   437,   934,     0,   176,  2647,     0,     0,
     414,   413,     0,     0,   884,   886,   885,   878,   879,  1942,
       0,  1866,     0,  1865,   642,   150,   500,   502,   505,   503,
     579,   577,  1659,  1660,   507,     0,  1528,     0,  1545,  1945,
    1685,     0,  1948,  1195,  1200,  1193,  1197,  1202,     0,     0,
       0,  1213,  1212,     0,     0,  1205,  1533,  1216,     0,  1610,
    1607,  1633,     0,  1605,    80,     0,  1821,  1814,  1810,     0,
     309,   318,   311,   315,   316,   312,  2509,     0,  2490,     0,
    2494,  2488,  2492,     0,     0,  2480,     0,  2486,     0,  2537,
    2459,  2453,  2460,  2462,  2456,  2461,  2463,  2454,  2455,  2450,
    2457,  1553,     0,  1127,  1129,  1130,  1128,  1137,     0,     0,
    2436,  2437,  2435,  2434,  1846,  1845,     0,  1111,  1114,  1115,
    1087,     0,  1662,  1661,     0,  1639,  1641,  1650,  1653,     0,
    1837,     0,   286,     0,     0,     0,     0,     0,  1529,     0,
    1530,  1534,  2370,  2369,  2368,     0,  2363,     0,  2420,  2419,
    2421,     0,  2379,  1778,     0,  1727,     0,  1750,  1763,  1782,
    1783,     0,  1720,     0,  1738,  1701,  1729,  1719,  1528,  1771,
    1716,  1717,  1740,  1743,   148,     0,  1471,  1465,  1467,  1468,
    1470,     0,     0,  1434,  1433,  1528,  1680,     0,  1165,  1449,
    1448,  1456,     0,  1454,  1455,  1455,     0,     0,  1443,  1442,
       0,  1483,     0,  2677,     0,     0,  1376,     0,  1430,     0,
    1274,   739,   739,   723,  1414,   719,  1418,   739,  1410,   723,
    1412,     0,     0,  1422,     0,     0,  1382,  1380,     0,     0,
       0,     0,     0,     0,  1400,     0,     0,     0,  1279,     0,
    1366,  1386,  1384,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1392,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1587,
    1588,  1573,  1574,  1572,  1575,   810,   816,   819,   820,   822,
     814,  1576,  1586,     0,  1350,  1267,     0,  1397,  1225,  1224,
    1373,     0,  1939,     5,     0,     0,     0,     0,   520,     0,
     530,     0,     0,     0,  2543,     0,     0,  2527,   940,   938,
     939,   941,   936,   928,   927,   211,   926,   932,     0,   931,
    1061,     0,     0,  1057,   776,     0,  1875,  1548,  1594,     0,
    1592,     0,  1795,     0,     0,   218,   221,   219,     0,   220,
       0,     0,   479,   478,     0,  1769,   171,   170,   172,   173,
     175,   174,   169,   915,     0,     0,     0,  1769,   430,   431,
     434,   435,   436,   644,   850,   891,   985,     0,     0,     0,
     849,   640,   891,     0,   891,  1024,  1025,     0,     0,     0,
     589,   584,     0,   595,   983,  1094,   984,  1493,     0,   586,
     587,   588,   608,     0,     0,   597,     0,     0,   965,  1003,
    1004,  1032,   581,     0,     0,     0,   621,   622,   620,   602,
     609,  1026,  1027,   582,   583,     0,     0,  1541,  1543,  1550,
     611,   590,   610,   585,     0,     0,  1010,   988,     0,   619,
     617,   614,   616,   615,   618,   598,   591,   592,   594,   593,
     605,   596,   973,  1830,   982,  1028,  1028,   991,   992,   957,
     961,   994,     0,   627,   629,   630,     0,   710,   664,   655,
     739,   658,   657,   796,   723,   669,   716,   713,     0,   718,
     715,   690,   689,   706,   688,   693,   677,   796,   796,   676,
     709,   796,   694,   692,   696,     0,   697,   717,   702,   691,
     695,   711,   687,     0,   708,   739,   723,   723,   673,   707,
     796,     0,   700,   739,   632,   743,   675,   803,     0,     0,
     739,   741,   719,     0,     0,     0,   181,  2630,     0,  1489,
       0,  1490,  1487,  1488,   236,   139,   137,   118,   122,   124,
     117,   120,   121,   123,   127,   128,   126,   129,   130,   133,
     134,   131,   125,   132,   119,   135,   116,     0,    89,    90,
       0,    91,    92,     0,    93,    94,     0,    95,    88,     0,
       0,     0,     0,     0,  1769,     0,     0,     0,  1667,  1667,
     420,   579,   439,   441,   442,   443,   444,   445,   448,   446,
     449,   447,   923,     0,     0,   238,   625,   626,   624,   623,
       0,  2653,   417,   415,   416,     0,     0,     0,   506,   151,
       0,     0,   501,   499,   788,   504,  1686,     0,  1492,  1564,
    1210,  1206,     0,  1532,     0,     0,  1214,  1931,  1019,   493,
      78,  1812,     0,  1808,     0,     0,  2552,     0,  2551,     0,
    2532,  2535,  1944,     0,     0,     0,  2524,     0,  2448,     0,
    1676,  1676,     0,  1137,  1139,  1863,  2438,  2439,     0,  1640,
       0,     0,  1657,  1929,  1928,  1935,  1670,  1658,  1664,     0,
       0,     0,     0,     0,     0,     0,     0,  1158,  1530,     0,
    2362,  2402,  1780,  1553,  1734,  1733,  1749,  1712,  1553,  1731,
    1784,  1165,  1435,     0,  1545,     0,  1451,     0,     0,  1444,
    1452,     0,     0,     0,     0,  1477,  1478,     0,     0,  1481,
    1484,  1485,  1469,  2667,     0,  1309,  1431,     0,     0,   740,
    1407,   796,     0,  1416,     0,  1417,   721,   720,  1409,  1411,
    1415,  1413,  1273,  1283,  1276,  1275,     0,     0,  1315,  1337,
       0,  1316,     0,     0,     0,     0,     0,  1289,     0,  1291,
       0,     0,  1368,  1340,  1360,  1318,  1343,     0,  1294,  1268,
       0,  1319,     0,  1324,  1322,     0,  1298,     0,     0,  1305,
       0,  1303,     0,  1304,     0,  1306,  1347,  1349,     0,     0,
     821,   807,   808,   809,     0,   811,   813,   815,     0,     0,
     894,  1363,     0,   526,   513,     0,   511,   515,     0,   508,
       0,     0,   524,  2545,  2546,   933,     0,  1063,     0,     0,
       0,     0,     0,  1868,  1870,     0,  1600,  1590,     0,  1175,
     613,   612,   223,   222,   228,   229,  1584,  1582,  1583,   485,
     497,  1585,   498,   473,   168,   486,   487,   453,     0,   432,
       0,     0,     0,     0,   891,   845,   846,     0,     0,     0,
     883,   882,  1008,     0,     0,   969,     0,   970,     0,   972,
     782,   603,   976,  1002,  1001,     0,   977,   604,  1035,   967,
       0,  1544,   966,     0,     0,  1084,     0,   998,   642,   632,
     663,   656,   674,   790,   801,   799,   793,   699,   796,     0,
     797,   798,   660,   672,   714,   712,     0,   683,     0,   678,
     796,   686,   682,   698,   701,   703,   705,     0,   796,   671,
     670,   680,   667,   728,     0,  1035,   633,   634,   751,     0,
       0,     0,     0,   747,     0,   824,     0,     0,   754,   645,
     744,   746,   647,     0,     0,   804,   803,   662,   796,   803,
     728,     0,   742,   728,   728,     0,   191,     0,     0,   944,
       0,   184,   182,   193,     0,     0,     0,  1138,     0,     0,
     140,   142,    96,     0,    98,   100,   105,     0,   107,     0,
     110,     0,   112,  1953,   114,     0,   101,     0,     0,  1550,
     889,   492,   491,   490,   489,   462,     0,     0,     0,     0,
       0,  1769,   159,     0,     0,     0,   239,   241,     0,     0,
     248,     0,     0,  1941,     0,   788,   578,  1459,     0,  1684,
       0,  1211,  1208,     0,  1608,  1021,  1020,     0,     0,   326,
     321,   329,   323,   325,   324,   330,   331,   332,   333,   327,
     322,   328,   320,   319,  2549,     0,  2560,     0,     0,     0,
       0,     0,     0,  1676,     0,  1636,  1638,  1131,  1137,  1139,
       0,  1132,     0,  1864,  1112,  1651,  1654,     0,     0,     0,
    1675,  1674,     0,  1671,  1673,     0,   287,     0,  2471,     0,
       0,     0,  1538,  1537,  1531,  1157,     0,  1728,   147,  1724,
    1466,  1679,  1564,  1681,  1446,  1445,  1438,     0,  1440,     0,
    1473,  1473,  1482,     0,  1432,     0,     0,     0,     0,  1408,
       0,     0,     0,     0,     0,  1403,  1405,  1401,  1393,     0,
       0,     0,     0,     0,  1271,     0,  1364,     0,     0,     0,
       0,     0,     0,  1302,  1300,  1301,   805,  1352,     0,   818,
     812,   810,   817,     0,   514,     0,   512,     0,     0,     0,
     532,   510,   518,     0,   525,   930,  1065,     0,     0,     0,
       0,  1869,     0,     0,  1876,  1878,  1593,   433,     0,   987,
       0,     0,     0,     0,     0,     0,  1009,     0,  1035,  1494,
    1012,     0,     0,  1037,  1000,  1105,  1542,  1011,     0,   971,
     599,   628,   631,   792,   791,   795,     0,   794,   659,   803,
       0,   895,   679,   704,     0,   681,   732,   733,   734,   668,
     729,   731,   826,   996,   757,   760,   762,   761,   758,   756,
       0,     0,     0,     0,     0,   767,   749,   768,  1907,     0,
       0,   763,   764,   765,   759,   755,     0,   745,     0,     0,
     753,   748,   661,   665,   666,   652,     0,   653,   654,   192,
     180,     0,     0,   946,   948,     0,     0,   949,  2632,     0,
       0,  1135,  1491,   136,     0,    97,     0,   106,     0,     0,
     111,     0,     0,   102,     0,   857,     0,   888,     0,     0,
     863,   422,   488,   494,   440,     0,     0,  2648,     0,   782,
    2646,   251,   249,   250,     0,   244,   246,     0,     0,   868,
     152,   149,  1565,  1207,     0,  1023,  1022,  1813,  1811,  2550,
       0,  2478,  2534,  2533,  2553,  2553,  2553,     0,  1637,     0,
    1133,  1140,     0,  1652,  1655,  1656,  1937,  1669,     0,  1663,
       0,  2468,  2469,  2467,  1539,  1540,     0,  1535,  2364,  1730,
    1678,     0,     0,     0,     0,     0,  1310,   737,   735,   738,
     736,   724,     0,  1313,  1314,  1338,     0,  1336,     0,  1290,
    1365,     0,     0,  1344,  1320,  1323,  1321,  1326,  1327,     0,
    1351,     0,   527,     0,   517,   535,   531,     0,   509,  1873,
    1874,     0,  1871,     0,     0,  1877,     0,   986,   641,     0,
       0,   868,     0,  1007,   999,   978,  1036,   968,     0,   802,
     800,   796,     0,   796,   730,     0,   830,  1909,  1908,   750,
     752,   757,   648,     0,   178,   183,   194,   195,   910,  2631,
       0,  2635,  2629,   141,    99,   108,   109,   113,     0,     0,
       0,  1667,     0,  1019,   858,   859,   861,   876,  1550,     0,
       0,  1019,   864,   865,   867,  2645,   189,     0,   240,   242,
    2654,   248,     0,     0,     0,     0,  1019,   869,   870,   872,
     873,  1209,     0,  2558,  2558,  2558,  2458,     0,     0,  1672,
    2470,  1536,  1439,  1441,     0,  1474,     0,  1486,     0,     0,
    1404,     0,  1367,  1369,   806,     0,     0,     0,     0,   555,
     533,  1872,  1880,  1879,   857,     0,   868,   635,   863,   975,
     979,     0,   684,   896,   685,     0,   829,     0,   834,     0,
     185,   950,   353,  2633,     0,  2634,     0,     0,   875,     0,
       0,   165,   860,   887,   890,   163,   166,   866,   181,   190,
       0,   216,   245,   782,     0,   881,   880,   164,   871,  2561,
       0,  2476,  2477,  2475,     0,  1457,  1476,  1475,     0,     0,
     722,  1288,  1353,     0,     0,     0,     0,  1667,     0,     0,
    1667,  1667,  1667,  1667,   550,   556,   558,     0,   636,     0,
     638,   637,   989,   827,     0,   831,   832,   833,     0,   825,
       0,     0,   187,   379,     0,   365,   351,     0,     0,     0,
     355,   196,   199,   197,     0,   198,   204,     0,   205,   206,
     207,   208,   209,   200,   377,   378,   203,   201,   202,     0,
    1961,     0,  1962,     0,     0,     0,   103,     0,   874,   862,
     193,   782,  2655,   247,  2641,     0,     0,     0,     0,     0,
    2559,  2563,  1677,  1853,  1480,  1479,   528,     0,   544,   537,
     540,     0,     0,  1667,  1667,     0,     0,     0,     0,     0,
     534,   557,  1667,   639,   828,     0,     0,   649,   186,     0,
     179,     0,     0,   364,   367,     0,     0,   370,   360,   359,
     361,     0,   354,   353,   353,   407,   358,   404,   403,   396,
       0,  2636,     0,     0,     0,  2649,   226,   225,   217,     0,
     353,  2639,  2640,     0,  2643,  2564,  2567,  2565,  2566,  2568,
    2562,   775,     0,   522,   528,   544,     0,   542,     0,   538,
     536,   539,   566,     0,     0,   562,   563,   561,   559,     0,
       0,   552,     0,   840,     0,   839,     0,   836,   835,   651,
     650,   743,   188,   380,   391,   394,   386,   366,     0,     0,
       0,   356,   353,     0,   340,   338,   339,   345,   346,   347,
     348,   349,   350,   341,   344,   342,   343,   353,     0,   256,
       0,     0,  2637,  2638,   104,   195,   216,   227,  2656,  2642,
     353,  1854,   529,   523,   541,     0,   548,     0,   546,   549,
     564,   565,   555,   551,     0,   560,   842,   843,   841,     0,
       0,   646,     0,     0,   353,   387,     0,   362,     0,   371,
       0,     0,   254,   410,   408,   252,   398,   398,   177,  2650,
    2644,  1881,   543,   545,     0,   554,   553,     0,     0,   388,
     394,   384,   392,   353,     0,     0,   352,     0,   406,   255,
       0,     0,     0,   353,     0,   397,   399,   401,   353,     0,
    1867,   547,   838,   837,     0,   385,     0,     0,   383,   363,
     368,   353,   411,   353,   265,   264,     0,     0,   334,   405,
       0,   257,  2651,     0,  1875,   389,     0,   353,     0,   353,
       0,   353,     0,     0,   782,     0,     0,   253,     0,  1883,
       0,   381,   353,   369,   374,     0,     0,   260,   335,   336,
       0,   262,  1882,     0,  1887,   353,   353,   370,   373,   412,
     409,     0,     0,   258,   259,   270,   269,     0,     0,     0,
    1894,   353,   353,   375,   278,   276,   353,   266,   274,   268,
       0,   275,   337,   263,  1885,  1886,  1884,  1889,     0,     0,
    1891,  1892,     0,  1855,     0,   261,   277,  1893,  1888,     0,
    1895,  1897,     0,   267,  1890,     0,     0,  1896,  1898
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    59,    60,   826,  1832,    61,    62,    63,    64,    65,
    1507,    66,   937,  1431,  2100,  2101,    67,   601,    68,  1314,
    1315,  2023,  2024,  3218,  3623,  3624,  3227,  3637,  3221,  3627,
    3628,  3224,  3631,  3632,  2013,  2014,  3619,  3620,  2015,  1648,
      69,    70,  2031,   558,    71,  2507,  2508,  1352,  3254,  3609,
    4160,  3613,  4232,  4310,  4178,  2607,  3907,  4161,  4162,  4241,
     586,   587,  2041,  1896,  4272,  2486,  4338,  2487,    72,   881,
    1312,  1989,  1990,  3655,  3656,  3657,  3944,  3945,  3946,  3947,
    4483,  4392,  4455,  4484,  4551,  4557,  4506,  4566,  4567,  4568,
    4555,   977,  4569,    73,   630,   631,   979,  1533,  2115,  1534,
      74,    75,   584,  1452,  1453,  1454,  1455,  2745,  2116,  2740,
    2741,  3692,  4507,  4553,  4393,  4394,  4317,  4395,  4244,  4396,
    4321,  4397,  4247,  4398,  4399,  4400,  4401,  4475,  4402,  4316,
    4499,  4389,  4390,  4477,  4534,  4548,  4403,  4254,  4311,  4442,
    4255,  4312,  4470,  4385,  4471,  4494,  4530,  4386,  4443,  4497,
    4446,  4404,  4410,  4485,  4405,  4411,  4406,  4259,  4328,  4409,
    4326,  4408,  4481,  4480,  4520,  2682,  3265,   867,   868,   896,
    2673,   869,  1339,  1285,  1899,  2520,  2521,  3028,  3029,  3240,
    3241,  3242,  2512,  2513,  2514,  2660,  2661,  2662,  2494,  2495,
    2496,  1903,  2491,  2492,   870,  1286,  1296,  2515,  2516,  2517,
    3246,  2664,  2665,  2666,  2667,  1419,  3250,  1420,  3489,  2695,
    2696,  2697,  2698,  2699,  1829,  1830,  2973,  2410,  2970,  3803,
    3452,  4353,  3459,  3799,  3800,  4139,  4360,  4289,  4356,  4290,
    4358,  4427,  4428,  4300,  4370,  4371,  4214,  4215,  4216,  2653,
    1891,  1892,   891,  1958,  2700,  2092,  1959,  3091,  1960,  1961,
    3105,  3079,  3260,  3122,  3123,  3124,  3575,  3125,  3576,  2529,
    2530,  3174,  3889,  4381,  3175,  3176,  3177,  3178,  3179,  3180,
    3181,  3555,  3182,  3385,  3386,  3383,  1111,  3859,  3860,  3861,
    3379,  3380,  3603,  3589,  3590,  3591,  3868,  3884,   795,  3876,
    3549,   993,   994,  2462,  1013,  1014,  2198,  1552,  3592,  2199,
    1895,  3550,  3551,  3552,  3597,  3439,  4019,  3445,  3446,  3447,
    2945,  2946,  2947,  2948,  2949,  2387,  3593,  3577,  4056,  4155,
    4158,  4229,  4377,  2531,  3042,  1985,  3035,  1056,   559,  2533,
    4083,  4084,  4085,  4091,  4092,  4093,  4106,  4107,  4108,  4109,
    1369,  4110,  4087,  2687,  3638,  3639,  1370,  2957,  3850,    76,
    1297,  1281,  1288,  1283,  1304,   876,  1976,    77,  2433,  2434,
    2435,  2436,  1850,  2429,  2430,   831,  2608,  3186,  4068,   858,
    1962,  1963,  1964,  3835,  4149,  1965,  2600,  3055,  1966,  1967,
    1968,  1969,  1970,  1971,  1972,  3674,  3675,  3676,  2534,   951,
    2097,  3834,  2582,    78,    79,    80,   839,  1859,    81,  1070,
    1071,  1072,  1247,  1248,  1861,  2460,  2993,  1065,  1066,  1067,
     840,  1245,    82,  1319,    83,  2174,  2175,  2176,    84,    85,
      86,  1326,  1327,  1328,    87,   148,    88,   967,  1510,  1512,
    1513,    89,   880,  1306,  1307,  1308,  1309,  2613,    90,  2158,
    2773,  2774,  2775,  2776,  1986,  2617,  1987,  1988,  3711,    91,
      92,  2702,    94,   796,    96,    97,  1544,  1545,  2188,  1653,
     647,   648,   649,  1881,   916,   917,  1389,  1108,  1686,   919,
     920,   921,  1390,  1391,  3594,   798,  1402,  2075,   799,   800,
     801,   802,   803,   804,  3411,  3412,  3776,  1821,  1822,  1823,
     805,   806,  1196,  1734,  3404,  2904,  3765,  1677,  2891,  1726,
    1727,  1135,  1136,  1099,  2301,  1683,  1654,  2852,  1655,  2282,
    2283,  2284,  2866,  2862,  2054,  2055,  1656,  1657,  1658,  1659,
    1660,  1661,  3994,  3368,  3369,  3370,  3371,  3372,  3190,  3191,
    3192,  3277,  3056,  1723,  1724,  1732,  1491,  1492,  1678,  2191,
    2192,  3337,  2721,  2810,  3732,  3987,  1975,  3087,  3088,   845,
     849,  1868,  2466,  1260,  1261,  1265,  1266,  3669,  3092,  2950,
    2444,  3490,  2951,  2952,  1272,  2999,  3000,  1252,  1253,   842,
    1254,    98,   566,    99,  2730,  3288,  2110,  1649,   910,   874,
     560,  1421,  1422,  1423,   100,   101,   605,   625,   970,  2795,
    2796,  3321,  2797,  2704,  2799,  3327,  2535,  2536,  3328,  3722,
    3723,  3724,  3705,   102,  2855,  2856,   626,   103,  1380,   564,
     565,   104,  1074,   677,  1624,  1625,  1626,  2251,   105,   669,
    1057,  3343,  3348,  2260,  2261,  2235,   963,  1424,  1606,  1060,
    1607,  2220,  2825,  2239,  1590,   106,  1274,  1889,   107,   854,
    1275,   108,   938,  1446,  2738,  3293,  3677,  1447,  1448,  2111,
     109,   627,   974,   975,  1518,  2179,   110,   618,   964,  2166,
     111,   610,   112,   113,   957,  4351,  4461,   614,  2160,  1501,
    3712,  2705,  2996,  3473,  3474,  3476,  3814,  3815,  4490,  4544,
    4576,  4560,  4579,  4580,  4583,  4590,  4591,   807,  1082,   808,
    3877,   809,   810,   811,  3322,   922,  1869,   812,  2857,   813,
    1371,  1662,   911,   599,   534,  3633,  3634,   832,  1083,  1863,
     815,   590,  4261,   834,   591,  1486,   592,   536,   537,   538,
     539,   595,   114,   665,   115,  1566,  1019,  1023,  1577,  1578,
    1579,  1061,  1799,  1571,  1020,  1580,   668,  1001,  1002,  1564,
    1003,  1562,  1004,  2206,  1557,  1586,   116,   958,   544,  1503,
    1504,  2782,   117,   680,   118,   119,   863,   120,  1493,  2153,
    2154,  2769,  3307,  2770,   121,   980,  1537,   122,   940,  1481,
    2756,  1482,  2124,  1483,  1484,  2140,  2134,  2143,  2137,  2148,
    2424,  1845,  1846,  3303,  1487,   596,   836,   837,  2748,  3297,
    3298,  1236,  4191,  3961,  4280,  4281,   123,   149,   547,   889,
    1333,  1541,   124,   125,   126,   127,  1259,   816,  1663,   817,
     650,   901,  1361,  1353,   142,   143,   144,   904,   905,   145,
    1302,  1303,  3187,  3615,  3909,  4072,  4165,  4343,  4344,  1355,
    4420,  1356,  1357,  3255,  4097,  4416,  4488,  1358,  2679,  3660,
    4181,  4340,   128,  1088,  1084,   690,  1672,  1666,  1668,   129,
     130,   954
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3890
static const int yypact[] =
{
    5171,  2382,   104, -3890,   651,   914, 57070,    57,  -125,  -125,
     646,  2788, -3890,  1369, -3890, -3890, -3890,  2727, -3890, 57070,
     104,   423, 60345, 28878, -3890,  1577,   -83,   209,   179,  -125,
     104, 57070, -3890,   812,  1708,   104,   228, -3890, 50520, 60345,
     646, 57070,  2566, 31514, -3890, -3890, 50520,   966,    94,   747,
     809, -3890,  1165, 57070,  1929, 18250,  1675,  1087,  -152,  1563,
   -3890,  1526, -3890, -3890,  1291, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, 45280, -3890, -3890,
    1115, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890,  1503,   -53,  1193, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, 29537, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890,  1621, 57070,  1655, 57070,  1392,  1703, 57070, 49210, 57070,
   28878,  1699,  1775, -3890, -3890,  1841, -3890, -3890,  -125,   646,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890,  1303, -3890, -3890, -3890, -3890,
    1409,  1847, -3890, -3890, 28878, 28878, -3890,  2033,  1829,  1835,
    1852, 49210,  1842, 57070, -3890, -3890,  1829,  1829,  1208,  1860,
    1576, -3890, -3890, -3890, 51175,  1369,  9423,  1699,  1699,  1699,
   57070,  1919,  1699,  1699, 57070,  1699,  1699,  1699,  1699,  -125,
   -3890, -3890, -3890, -3890,  2011, -3890, -3890, -3890, -3890, -3890,
   -3890,  1471, -3890, -3890, -3890, -3890,  -179, 57070,  1792,   272,
     -97, 49210, -3890, -3890, -3890,  1961, 57070,   651, -3890, -3890,
   13497, -3890,  1957, -3890, -3890, -3890,  -125,  2035,  1043, 57070,
   -3890, -3890,  -125, -3890, -3890,  1962, -3890,  1425,  1643, -3890,
   -3890,  1760, -3890, -3890,    17,   189, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890,  9423,  2566, -3890,
   -3890,    27,  1768,  1151,    87,   146, 42660,  1120,   411,    98,
   -3890, 58380, 33488, 43315,  1601, -3890, 51830,  1618,   109,  3643,
    1760, -3890,  1214,   -85, -3890,  1214, -3890, -3890, 57070,   651,
    -125,  1961, -3890, -3890,   309,   309,   309,  2230,   309, -3890,
     309,  1669,  1683,  1702, 18250, -3890,  1705,  1719,  1722, 13497,
    1749,  1757,  1763,  1770,  1772,  1798,  1811,  1820,  1820,  1824,
    1855,  1872,  1878,  1052,  1916, -3890,  1931,  1937,  1940, -3890,
   -3890,  1941,  1950,  1959,  1963, -3890,  1988,  2016,  2022, 14176,
    2023,  2026, -3890, 25573,  2037,  2046,  2062,  2069,  2072,  2075,
    2092,  2110,  2119, -3890, -3890,  1824, -3890, -3890, -3890,  2123,
    2131,  2138,  2147,  2148,  2173,  2178,  2185,  2186,  2192,  2216,
    2217,  2224,  2228,  2229,  2234,  2236,  1824, -3890,  1239,  2240,
    2250,  1282,  2258, -3890,  2269, -3890,   342,  2282,  1820,  1824,
    1824,  2283,  2285,  2289,  2291,  2296,  2303, 18250, 18250, 18250,
   10102, -3890, 57070, 34146, 57070, -3890, -3890,  3318, 18250,   236,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890,  1781, -3890, -3890,
   -3890, -3890,    30, -3890,  2314,  1727, -3890, -3890,  2315,  2338,
    2357,  1753,   380,    -1, -3890, -3890,  1838, 57070,  1820, -3890,
    2317,  2213, -3890, -3890,  1819,   263,  -122, -3890,  2205, -3890,
    1925, 32172, -3890,  2525,  1119,  2304, -3890, 43970,  1119,  2304,
    2221,  1354,  2495,  2093, -3890, 45935,  1995,   -11, -3890, -3890,
   46590, -3890, 49210, -3890, 57070, -3890,  2355, -3890, -3890, -3890,
    2198, -3890, -3890,  2588, -3890, 57070,  2246, -3890, 28878, -3890,
   28878,  2319, 57070, -3890, -3890,   254, -3890,   313,   238,    31,
    1854, 57070, 57070, 57070,  2640, 57070, -3890,  2865, -3890, -3890,
    2451, -3890,  1140,  1780,  1841,  2907, -3890, 30196,  1829, 28878,
      26, -3890,  2254, -3890, 13497, -3890,  2309, -3890, 42005,  3910,
   -3890,  2463, -3890,  2323, 57070, 57070, 57070,  2617, 57070, 57070,
   49210,   892, 57070, -3890, 28878, 60345,  1699,  2392,  4508, 35462,
    3586, 49210, 46590, 60345, -3890,   116, -3890, -3890, 57070, -3890,
   -3890,  1962,  2492, -3890,  2333,  1617,  2961,   954, 28878, 28878,
    -188, -3890, -3890,  2725, -3890, -3890, 46590, 28878, 28878, -3890,
   28878, -3890,  2965, -3890,  2339, -3890, -3890,  1781,  2601, -3890,
    4672, 46590,  2531,    31,   300, -3890, -3890, 59035, 57070, -3890,
   -3890, -3890, -3890, -3890,  2948, 13497, -3890, 46590,   -57,  2749,
     691, -3890,  2347,  2349, -3890,  2372, -3890, -3890,  2360,  1021,
     109, -3890, -3890, -3890, -3890, -3890, 57070,  2356,    98, -3890,
    1618,   109, 32830, -3890,  8744,  2874, -3890,    16,  2367,  1196,
      16, 47245,  2304,   237, -3890,   188, -3890,  2848, -3890, -3890,
   -3890, -3890,  2502,  2484, -3890, -3890,   198,  1901, -3890,  2884,
   -3890,    45, -3890,  2508,  2304,    16,   237, -3890,  2766,  2898,
     484,  -141, -3890, -3890, -3890, -3890,  2385, -3890,   759,  2971,
   -3890,  2386, -3890,  2870, 28878, -3890,  2333, -3890, 24251, -3890,
   -3890, -3890,  2388, -3890,  2687,  2509, -3890,  2424, -3890, -3890,
      65, 13497, 13497,  1154,  3000,  3062,  3062,  3062,  1617,  2442,
   13497, 13497, 13497, 13497, 13497, 13497,  1211,  2411, -3890, -3890,
     -36, -3890,  2412, 13497, 13497, -3890, 13497, 13497, 30855,  -144,
   -3890, -3890,  3658, 13497, 13497,   519,  2937, 13497, 13497, 13497,
   10102,  3259, 13497, 13497, 30855,  3093,  2428, -3890,  2423,  1659,
   13497, 13497,  1673, 13497, 13497, 13497, 13497, 13497, -3890, 13497,
   13497, 13497, 18250, 13497, 13497, 13497, 13497, 13497, 13497,  2434,
   13497,  3062,  3062, 13497, 13497,  1754, -3890, -3890, 13497,  2518,
    2518, -3890, 13497,  8065, 13497, -3890, -3890, -3890,  2436, -3890,
   -3890, -3890, 30855,  3062,  3062, 13497, 13497, 13497,  3000,  3000,
    3000,  2437,    -1,   203, 13497,  1329, -3890,  2612,  2433, 18250,
   -3890, 18250, 18250, 18250, 18250, 18250, 18929, 19608, 18250, 18250,
   18250, 18250,  3000, 49210, 18250, -3890,  1781,  1781, 13497, 57070,
   13497,  1401, -3890, -3890, -3890, -3890,  2962, -3890, -3890,  2444,
    3069, 49210,  2466,   136,  1356, 46590,  2498,  2977,  2978,  2981,
    2984,  2986, -3890,  2988, -3890,  2472,  2994, -3890,  2753,  2586,
    2586, 49210,  2482, -3890, -3890, -3890, 13497, -3890, -3890,  -144,
    2221, -3890, -3890, -3890, -3890, -3890,   -39, -3890, -3890,  -144,
    2221,  3144,   943, 49210,  2106, -3890, -3890, -3890, -3890, -3890,
   -3890,  3036, -3890, -3890,  2846, -3890,  3156, -3890, -3890,  2491,
    3056,  3056,  3056,  3166, -3890, -3890, -3890,  6991, -3890, -3890,
   -3890,  2680,  2545, -3890,  2246,  2497,  2928,  2506, -3890, -3890,
    1011, 13497, -3890, -3890,  5187,  2541, -3890, -3890, 28878, -3890,
   -3890, -3890, -3890,  2579, -3890, -3890, -3890, -3890,  1588, -3890,
    3135,  2746, -3890, -3890, -3890, -3890,  3024, -3890,  2819, -3890,
    3156,  3089,  2826,  3056, 46590, 60345, -3890,  3005,  1829, 57070,
   57070, 57070, -3890, -3890, -3890, -3890, -3890, -3890, -3890, 57070,
   -3890, -3890, -3890, -3890, -3890, -3890,  2246, -3890, 57070,  2828,
    2597, -3890,  -214, 28878,  -206,  2817,  1450, 24251, 57070, 38730,
   -3890, -3890, 13497, -3890, -3890, 52485, -3890, -3890, 13497, -3890,
   13497, 13497, -3890, -3890, -3890, -3890, -3890, -3890,  1380, -3890,
   -3890, -3890, 14855, 18250,  2547, 18250, 18250,  2947,  1135, 39385,
   -3890, -3890,  2542, 28878,   892, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890,   299, -3890,  3066, -3890, 46590,   140,  2360, 28878,
    2546, -3890,  2942, -3890,  2944,  2945,  2946, -3890, -3890, -3890,
   -3890,  3184,  2951, -3890,  2952, -3890, -3890,  2558, -3890, 28878,
   20287, 49210, -3890,  2564, -3890,  3085, -3890,  2827,  2767,  2059,
   -3890,  2602, -3890, -3890, -3890,  2866, -3890, -3890,  2705, -3890,
    2879, -3890, -3890,   173, -3890,   174, -3890, -3890, -3890, -3890,
   -3890, -3890,  2893,  2593, -3890, -3890, -3890,  -224, -3890, -3890,
   -3890, 57070, -3890, 57725, -3890, 28878,   651,   651, -3890, -3890,
   -3890,  2992,   197,  2596, -3890,  2497, 49210, -3890, -3890,   225,
    2598,  2693,  2603, -3890,  2699,   848,  2817, -3890,  3272,  1425,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890,  2609,  3130,  2827,  2914, -3890,  2917,  2620,
   -3890, 57070, -3890, 22268,  2663, -3890,  3104,  2719,  2722,  1258,
   -3890, 47900, -3890,  1617,   109,  2635, -3890, -3890,  1525, -3890,
   -3890,  3060, -3890,  2886, -3890, 60345, -3890,  2634,  2638,  2639,
    2646, 53140, 13497, -3890, -3890, -3890,  8744,  2654, -3890, 53140,
   -3890, -3890, 18250,  1931, -3890,  1617, -3890,  3083,  1781, 13497,
   -3890,  2666,  1829, 57070, 57070, 57070, 28878, 57070, -3890, 28878,
   -3890,  1067,  1067, -3890, -3890, -3890,    36, 57070, 57070,    36,
   46590, -3890,   237, 57070,    36, -3890,  3084,  2774, -3890, -3890,
   -3890,  3159, -3890, -3890,  3143,  2664, -3890,  3083, -3890,  2870,
     237, -3890, -3890, 28878, -3890, -3890,   237, -3890,   237,   237,
   -3890, -3890,  1214, -3890, -3890,  2829,   -85,  3282, -3890, -3890,
   -3890, 22929, 57070,  -136,  2233, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890,  2817,  4368,   309,  2939, -3890,  3151, -3890, -3890,
   -3890, -3890, -3890,   310,   333, -3890,  3062,  2671, 13497,  2673,
    2674,  2681, 13497,   120,   227,   356,  1617,  1494,   928,   438,
     302, 13497,  2683, 10781, -3890,  2684, -3890, -3890,   358,   432,
    1278,  1301,  2685, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890,  3164, -3890,   440,  2690,  2689, -3890, -3890,
   -3890, -3890,  2692, -3890, 13497,  1314,   760,   818,   234,  2715,
     965,  1337,  1491,  2698, 30855, 57070,  3062,  2708,  1323,  1330,
    3062,  2711,  1000,  1363,  1508,  1550,  1572,  1367,  1002,  1598,
    3613,  1379,  1048,  1086,  1387,  1107,  1111, -3890,  1438,  2716,
    2720,  1123,   308,  3062,  2723,   379,  2696,  2713,  1446, 11460,
   12139, 12818,   298,  1127, -3890,  2724, -3890,  2423,  2729,  2730,
     426,   214,  1472, -3890, 13497,   191,  2728,  2731,  2736, 49210,
   13497, 57070,  2735,  2735,  1747,  1747,  3163,  2795, 14176,  1074,
   14176,  1074,  2735,  2735,  2735, -3890, -3890,  3000, -3890, -3890,
   42005,  2748,  2717, -3890,  -241,  1474, -3890,   126,   132,  3022,
    1574, -3890, -3890, -3890,  2830, -3890, 59690,   672, 49210,  2853,
    2854, -3890, -3890,  2855, -3890, -3890,   184,  3200, -3890,  1909,
     250,   651,   363,   651,  2991,   651,   651,  1460,   651,  2870,
    3269,  3304, -3890, -3890,  2182, -3890, 34804,  1681,  2754, -3890,
   -3890, -3890,   943, 43970, 43970, -3890, -3890,   943,  2758,  2824,
    3187, -3890, -3890,  3350, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890,    95, -3890, -3890, -3890,   375,  2552,  3175,  1040,  1297,
    2552,  1905,   651,   398, -3890,   398, -3890,  2797,   109,  1212,
    3038,   109,   109,  3366,   109,  3040,  3042,   109,   109,   109,
     109,  2861,  3310,   109,  3186,   663,  2055,  3188,   109,  3050,
   -3890,   968,  3316,   109,   109,   109,   109,   109,  3366,  3052,
    3406,   109,   109,  3054,   261,  3057,  3067,   109,   109,   109,
     109,  1062,   109,   109,  3070,   109,  2838,  2851,  4904, -3890,
   -3890, -3890, -3890,    -7, -3890, -3890, -3890, -3890,  2796,  2798,
   26234, -3890, -3890, -3890, -3890, -3890,  3098,   258, 28878, -3890,
   53795, 28878, -3890, -3890, -3890,  2803,  1431, -3890, -3890,  2806,
    2801,  1617,  3326,  3327,  3328,  3329,  3337,  3339,  3341,  3343,
    3344,  3346,  3347,  3349,  3351,  3354,  3356,  3357,  3358,  3359,
    3360,  3361,  3362,    37, -3890, -3890,  3363,  3365,  3368,  3370,
    3371,  3373,  3374,  2833, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890,   101, 28878,  2426,  2899, 28878,  2912,  -122,  2360, 57070,
   57070,  2868,  -104, -3890,  1889, -3890, -3890, 28878,  1108,  1108,
   57070,  6009, 24251,  2871,  2663, -3890, 38730,  -207, -3890, -3890,
    2852, -3890, -3890, -3890,  2261,   183, -3890, -3890, -3890, -3890,
   -3890,   865, -3890,  2872, -3890,  1937,  2087, 10102, -3890,  1039,
    3821, 18250, 18250,  2873, 18250, 18250, -3890,  1374, 57070, -3890,
   -3890, -3890,   -38,   109,  2620, -3890, -3890, -3890,   140, 49210,
    2863, -3890, -3890, -3890, -3890, -3890, -3890,  2870, -3890,  4607,
    2497, -3890,  2972,  2980,  2982, -3890, 36120, -3890, -3890, -3890,
   -3890, 36120,    15, -3890, -3890, -3890, -3890, -3890,  2987, -3890,
   -3890, -3890, -3890, -3890,  2875, -3890, 46590,  2875, -3890, -3890,
    2875, -3890, -3890,  2875,   973,  4603,  2900, 46590, -3890, -3890,
     235,   332,  2950,  2663, -3890,  2817, -3890, -3890, 28878, -3890,
    3317,  1166, 28878, -3890, 13497,   651, -3890, 46590, 46590, 28878,
   28878, -3890, -3890, -3890, -3890,    74, -3890,  1769, -3890,  2870,
   -3890,  2601, 20287,  2887, 46590,   996, -3890, -3890, -3890,  2894,
   13497,  3353, -3890,  2663, 60345, 60345, 60345, -3890, -3890, -3890,
   -3890,  1215,  2997,   163,  3139, -3890, -3890, -3890, -3890,  2360,
   -3890, -3890, -3890, -3890,   109,  1617, -3890, 32830, -3890,   651,
    3389, -3890,  1617,  2915, 57070, -3890, -3890, -3890, -3890, -3890,
   46590, -3890, -3890, -3890, -3890, -3890, -3890,   651, 13497, -3890,
   -3890, -3890, -3890,  2974,    36, -3890, -3890, -3890, -3890, -3890,
    3165,  2304,  1901,  3389, -3890,    16,   237, 28878,    16,    36,
      16,    16, -3890, -3890, -3890,   651,  2910,  2916,  2920,  2926,
    2927,  2931, 24251, 30855, 24251,  3334,  3345, -3890,  3216,  1054,
    3216, -3890, 26895, 24251, 24251,  3838, -3890,  2932, -3890,  3274,
   15534, -3890,  2936, -3890,  1617, -3890, -3890, -3890,   259, 13497,
   13497,  3459,  2560, -3890, 48555, -3890, 13497, -3890, -3890, 48555,
    2560,  1619, -3890,  2940, -3890,  3375,  3385, -3890, -3890, -3890,
   13497, 13497, -3890, 13497,   701, -3890, 13497, 13497, 13497, 13497,
   13497, -3890, -3890, 18250, -3890,  2933,  2958, -3890, -3890, -3890,
    2959, -3890, 13497, -3890, -3890, -3890, -3890, -3890, 13497, -3890,
   13497, -3890, 13497, 13497, -3890, 13497, 13497, -3890, -3890, -3890,
   16213, 13497, 13497,  2960, -3890, -3890, 13497, 13497, 13497, -3890,
   13497,  1486, 13497,  1863, 13497,  2012, 13497, -3890, 13497, -3890,
   -3890, -3890, -3890, 13497,   390,  3132,  2991,  2963, -3890,  1640,
   -3890, -3890, -3890, -3890,  2949,  1617, -3890,  3259,  3259, -3890,
   -3890, 13497, 13497, 57070,  3463,  2966, 18250,  2973, 18250,  3132,
    3081,  2976,  3625, -3890, -3890, -3890,  2360,  3076, -3890,   399,
   -3890, -3890, -3890, -3890,   445,  2991,  2991,  2991,  2991,  1909,
   -3890,     0,  3465, -3890,   250, -3890,  1430, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,   651,  3492,
    3247, 44625,  3581, -3890, -3890, -3890, -3890, 13497, -3890, -3890,
   -3890, -3890,  3283, -3890,  3154,  3132, -3890,   109,   109,   651,
    3125,  3126,  3127,  3131,  3137,  3173, -3890, -3890, -3890,   651,
     651, -3890, -3890,   109, -3890,   328, -3890, -3890, -3890, -3890,
     651,   651,   651,   651,  2991,   651,   651,  1648, -3890, -3890,
     109,   109, -3890,   364, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890,   271, -3890, -3890, 30196,  1431,   104, -3890, -3890,   255,
   -3890, 30196, -3890,  1431, -3890, -3890, 54450, 57070, 30196,   104,
     363,  2991, 30196,  2991, 55105,   104,   651,   651,   651,   651,
    2182,   109,  2991, -3890, 55105, -3890,  3408, 57070,  3409, 30196,
   30196, -3890, 49210, 57070, 55105, -3890,   109,  1528,  2991, 55760,
     363,   363, 30196,   104, 30855,  2694,   651,   104, -3890, -3890,
   -3890, 30196, 28878,   104,   104,  2402,  2694,  2694,  2957, -3890,
   -3890, 57070,  2991, 55105,  3006, -3890, -3890, -3890,  3271, -3890,
   -3890,  7256,  6612, 21609, 68065,  2998,   190, -3890,  3231, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890,  1431,  3009, 56415, -3890,
   -3890, 13497,  3010,  2991,   651,  2991,  2991,   651,   651,  2991,
    2991,   651,   651,   651,   651,   651,   651,   651,   651,  2991,
    2991,   651,  1951,  5187, -3890,  3013,  3013,  3014,  3014,  3016,
    3016,  3026,  2541, -3890,   162,  3028,   109,   109,   109,   109,
   -3890,   381, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   49210,  3029,  3412,   385,  2498,  3233, -3890, -3890,  1046,  3033,
   -3890, -3890,   388,  3034, -3890, -3890, -3890, -3890, -3890,  3027,
    -144, -3890, 28878, -3890, 20948, -3890, -3890, -3890, -3890,   159,
     186, -3890, -3890,  1193, -3890,   150,  -207, 57070,  3321,  1529,
   -3890,  3043, -3890, -3890, -3890, -3890, -3890, -3890, 18250,   458,
   18250, -3890,  3821,  2104, 10102, -3890,  1039,  3821, 40040, -3890,
   -3890, -3890, 49210, -3890, -3890,  2546, -3890, -3890,    72,  3554,
    3041, -3890, -3890, -3890, -3890, -3890, -3890, 57070, -3890,  3136,
   -3890, -3890, -3890, 27556, 27556, -3890, 27556, -3890,  3335, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890,  2304,  2361, -3890,  3045, -3890, -3890,  1011,  2586,  3086,
    3445, -3890, -3890, -3890,  1617, -3890,  3145, -3890, -3890, -3890,
   -3890, 30855, -3890, -3890, 23590, -3890, -3890, -3890, -3890,  3058,
   -3890,  3571, -3890,  3523,  3539, 27556, 27556, 27556,  1617,  3689,
    3521,  3353,  2360,  2360,  2360,  3065, -3890,  3071, -3890, -3890,
   -3890,  8744, -3890, -3890,   363, -3890,    99, -3890, -3890, -3890,
    1617, 46590, -3890,  3372, -3890, -3890, -3890, -3890,  2663,   237,
   -3890, -3890, -3890, -3890, -3890, 24251, -3890, -3890, -3890, -3890,
   -3890,  2233,  3064,  3068,  3075,   540, -3890,   109,  2233, -3890,
   -3890, -3890,  3489, -3890,  3216,  3216,  3493,  3500, -3890,  2703,
    2885,   861,  2991, -3890, 14176,  1484, -3890, 13497,  1617,  1488,
   -3890,  3087,  3087,  3088, -3890,  3090, -3890,  3087,  3512,  3088,
    3513,  3091,  3092,  1617,  3095,  3097, -3890, -3890, 13497, 13497,
    1490,   463,  1497,  3715,  3273,  1153,  1171,   564, -3890,  1502,
    3630, -3890, -3890,  1509,  1551,  1556,  1565,  1181,  1567,  1765,
   14176,  1635,   348,   578, -3890,  1666,  1192,  1247,  1671, 13497,
    1679, 13497,  1689, 13497,  1697,  1710,  1712,  3099,  3099, -3890,
   -3890, -3890, -3890, -3890, -3890,   157, -3890,  3105, -3890, -3890,
   -3890, -3890, -3890,  3106, -3890, -3890, 57070, -3890, -3890, -3890,
   -3890,  3110, -3890, -3890, 57070,  2892, 57070,  2913, -3890,  3733,
    3112, 18250,  3627,  3114, -3890,   651,   651, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,  3132, -3890,
   -3890,   651,  3631, -3890, -3890,  1147,  3515, -3890, -3890,  3115,
    3118,  3455, -3890, 47900, 44625, -3890, -3890, -3890,  3687, -3890,
    3688,   268, -3890, -3890,  1031,  1081, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890,  1905,  1031,  1031,   155,   169, -3890,
   -3890, -3890, -3890, -3890, -3890, 30196,   -94,  3133,  3541,  3545,
    1431, -3890, 30196,  3140, 30196, -3890, -3890,  1674,   867, 55105,
   -3890, -3890, 30196, -3890, -3890,  1588,  3134, -3890,  3132, -3890,
   -3890, -3890, -3890, 44625,   651, -3890,  3246, 30196,  3134, -3890,
   -3890,   496, -3890,  3176,  3251,   651, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, 68065, 55105,  3141, -3890,   386,
   -3890, -3890, -3890, -3890, 55105,  3237, -3890, 57070, 55105, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, 28878, -3890,  2890,  1932, -3890, -3890, -3890,
    2796, -3890,  1785, -3890, -3890, -3890, 68065, -3890,  3087,  3087,
    3087, -3890, -3890,   251,  3088, -3890, -3890,  3402,  3150, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890,   370,  1495, -3890,
   -3890,   370, -3890, -3890, -3890,   167,   923, -3890, -3890, -3890,
   -3890, -3890, -3890,  3161, -3890,  3087,  3088,  3088, -3890, -3890,
     370,  3087, -3890,  3087,   605,  2706, -3890,   135,  3087,  3087,
    3087,  3162,  3090,   836,   336,  3254,  1851,  3168, 55105, -3890,
    3169, -3890,  3170, -3890,  1617,  2991, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, 37418, -3890, -3890,
   38074, -3890, -3890,  -173, -3890, -3890,  1664, -3890, -3890, 57070,
     651,  3132,  1031,  1031,  1882,  3461, 57070,  3634,   109,   109,
   -3890,   384, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890,   250,  1046,  3470, 57070, -3890, -3890, -3890, -3890,
    3323, -3890, -3890, -3890, -3890,  3471, 57070, 57070, -3890, -3890,
   28878,  1788, -3890, -3890,  5646, -3890, -3890,  3178,  3134,  3574,
   -3890, -3890, 13497,   236, 18250,   662, -3890, -3890,  1226, -3890,
   -3890, -3890,  3418, -3890,  3585, 36120, -3890,  1789, -3890, 46590,
    3189, -3890,  3190,  3275,  3286,  3287, -3890,  3202, -3890, 30855,
    3496,  3496, 28878,  1431,  3654,   786, -3890, -3890, 46590,  3209,
    1581,  1801, -3890, -3890, -3890,  3204, 16892,  3211, -3890, 20287,
    3505, 46590,  3695,  3696,  3705, 13497, 13497, -3890,  3521,  2997,
   -3890, -3890, -3890,  2304, -3890, -3890,  2620, -3890,  2304, -3890,
      16,  2212, -3890, 30855,  3321, 16892, -3890,  3645,  3648, -3890,
   -3890, 13497,  3241, 13497,  3242, -3890, -3890,  1431,  1431, -3890,
     861, -3890, -3890, -3890,  3259, -3890,  1617, 13497,   953, -3890,
   -3890,   370,  3538, -3890,  1139, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890,  3259,  3259, -3890, -3890,
   13497, -3890, 13497,   309,  3243, 13497, 13497, -3890, 13497, -3890,
     265,  3248,  3280, -3890, -3890, -3890, -3890, 13497, -3890, -3890,
    3259, -3890, 13497, -3890, -3890, 13497, -3890, 13497, 13497, -3890,
    1761, -3890,  1799, -3890,  1827, -3890, -3890, -3890,  3132,  3249,
    3653, -3890, -3890, -3890,  3132,  3446, -3890, -3890,  3132,  2991,
   -3890, -3890,  1802, -3890, -3890,  1818, -3890,  3651,  3528, -3890,
    3230,  3132, 57070, -3890, -3890, -3890,  3810, -3890,   651,  3883,
    3885,  3781,  3887,  1147, -3890,   577, -3890, -3890,  3283, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,   271, -3890,
    3263,  3132,  3528, 13497, 30196, -3890, -3890,  3270, 57070,  3276,
   -3890, -3890, -3890,  3818,  3820, -3890, 68065, -3890, 57070, -3890,
    2948, -3890, -3890, -3890, -3890,  3380, -3890, -3890,   346, -3890,
   30855, -3890, -3890, 30196,    19,    74,  3277, -3890, 21609,   605,
   -3890, -3890, -3890,  3912,   219, -3890,  3913, -3890,   370, 48555,
   -3890, -3890, -3890, -3890, -3890, -3890,   309, -3890,   697, -3890,
     370, -3890, -3890,  3325, -3890, -3890, -3890,   309,   370, -3890,
   -3890, -3890, -3890,  1283, 28878,   346, -3890, -3890, -3890, 49210,
     287,   651,  2455, -3890,  3340, -3890,  3828,  1441,  3692, -3890,
    2841, -3890,  3753,  3697,  3589, -3890,  3928, -3890,   370,  3928,
    1283,  3591, -3890,  1283,  1283,  3551, -3890, 13497, 13497,  3590,
   57070,  3592, -3890,  3894, 57070,  3951,  3298, -3890, 56415,  1822,
   -3890, -3890, -3890,  1833, -3890, -3890, -3890,  1839, -3890,  3293,
   -3890,  1845, -3890, -3890, -3890, 57070, -3890,  1849,  1906,   386,
    3303, -3890, -3890, -3890, -3890, -3890,  3305,  1923, 57070,  1031,
    1031,  1744, -3890,  3462,  3502,  3324,  3314, -3890, 68065,   651,
    1131, 28878,  1944, -3890,  3330,  2786, -3890, -3890, 43970, -3890,
    1967, -3890, -3890, 13497, -3890,  3707,  3968,  3825,  3716, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, 57070,   557,  3338, 40695, 46590,
   46590, 46590, 16892,   -74,  3855, -3890, -3890, -3890,  1431,  3654,
    3734, -3890,  3762, -3890, -3890, -3890, -3890,  1581, 30855, 39385,
    1931,  1617,  3348,  3332, -3890,  3058, -3890,  3813,  2620, 46590,
   46590, 46590,  -223, -3890,  1617, -3890,  3364, -3890,  2870, -3890,
   -3890, -3890,  3574, -3890, -3890, -3890,  1617, 57070,  1617, 57070,
    3819,  3819, -3890,  1376,  1617,  3367,  3369,  3377,  3378, -3890,
    3381,  1971,  3383,  3384,  1832,  3342, -3890, -3890, -3890,  1867,
    1253,  1979,  3670,  3749, -3890,  3593, -3890,  1899,  1423,  1921,
    1965,  1972,  1983, -3890, -3890, -3890, -3890, -3890,  3386, -3890,
   -3890,   527, -3890,  3352, -3890, 57070, -3890,  1647, 57070,  1984,
   -3890, -3890, -3890,  3393,  3398, -3890, -3890,   309,   309,  3972,
     309, -3890,  3974,  3977,   577, -3890, -3890, -3890, 57070, -3890,
    2004,  1991,  3403, 57070,  2007, 57070, -3890,  2599,   346, -3890,
   -3890, 28878, 57070, -3890, -3890,   104, -3890, -3890,  3404, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, 48555, -3890, -3890,  3928,
    2042, -3890, -3890, -3890,  2057, -3890, -3890, -3890, -3890, -3890,
    1283, -3890,  3407, -3890,  1461, -3890, -3890, -3890, -3890, -3890,
    2972,  2980,  2982,  1951,  1951, -3890, -3890, -3890, -3890,  3660,
    3410, -3890, -3890, -3890, -3890, -3890, 49210, -3890,  4019,  4015,
   -3890, -3890, -3890, -3890, -3890, -3890,  3405, -3890, -3890, -3890,
    1617,  3259,  3956, -3890, -3890,  3527,   651,  3897, -3890,  2065,
    -144, -3890, -3890, -3890,  2991, -3890, 57070, -3890, 57070, 57070,
   -3890,   651,  3411, -3890,  3415,   403, 57070, -3890,  3668,  1905,
     108, -3890, -3890, -3890, -3890,   651,   336, -3890, 57070,  2948,
   -3890, -3890, -3890, -3890,  3419,  3413, -3890, 57070,  3851,   273,
   -3890, -3890, -3890, -3890,  2085, -3890, -3890, -3890, -3890, -3890,
    3836, -3890, -3890, -3890,  -122,  -122,  -122,  2114, -3890,  3784,
   -3890, -3890,  3482, -3890, -3890, -3890,  3397, -3890, 16892, -3890,
   46590,  2620,  2620,  2620, -3890, -3890, 13497, -3890, -3890, -3890,
   -3890,  3420,  3422,  1271,  3424,  3433, -3890, -3890, -3890, -3890,
   -3890, -3890,  3710, -3890, -3890, -3890, 13497, -3890, 13497, -3890,
   -3890,  3718,  3935, -3890, -3890, -3890, -3890, -3890, -3890,  3438,
   -3890,  2991, -3890,  3441,  3625,  3466, -3890,  3528, -3890, -3890,
   -3890,   309, -3890,   309,   309, -3890,  2117, -3890, -3890, 57070,
    2129,   273,  2159, -3890, -3890,  1500, -3890, -3890,  3528, -3890,
   -3890,   370,   309,   370, -3890, 57070,  3797, -3890, -3890, -3890,
   -3890, -3890, -3890,  3451, -3890, -3890, -3890, -3890, -3890, -3890,
   57070,  3483, -3890, -3890, -3890, -3890, -3890, -3890, 57070, 57070,
     651,   109,  3721,  1226,   403, -3890, -3890, -3890,   386,  3452,
    2163,  1226,   108, -3890, -3890, -3890,  3590,  3655, -3890, -3890,
   -3890,  1654, 68065,  3980,  1108,  1108,  1226,   273, -3890, -3890,
   -3890, -3890,  3741,  3494,  3494,  3494, -3890,  3524, 28878, -3890,
    2620, -3890, -3890, -3890,  4084, -3890,  4089, 56415, 56415,  3464,
   -3890,  2001, -3890, -3890, -3890,  3468, 18250,  3472,  1724,  2105,
   -3890, -3890, -3890, -3890,   403,  2181,   273, -3890,   108, -3890,
   -3890,  2203, -3890, -3890, -3890,  2208, -3890,   840,  3760, 13497,
    3602, -3890, 66157, -3890,  1204, -3890,  3475,  3474, -3890,  2991,
    1675, -3890, -3890, -3890, -3890, -3890, -3890, -3890,  1851, -3890,
   68065, -3890, -3890,  2948,  3661, -3890, -3890, -3890, -3890, -3890,
    1981, -3890, -3890, -3890, 30855,  2817, -3890, -3890,  3477,  2245,
   -3890, -3890, -3890,  3435, 57070,  3473,  3582,   109,  4021,  4022,
     109,   109,   109,   109,  3481,  2105, -3890,  4001, -3890,  3719,
   -3890, -3890, -3890, -3890, 57070, -3890, -3890, -3890,   252, -3890,
    2005, 13497,  4006,  3531, 57070,   946, -3890, 67447, 67447, 57070,
   -3890, -3890, -3890, -3890,  5927, -3890, -3890,  1044, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,  4130,
   -3890,  3484, -3890,  4103,  3785,  4105, -3890, 57070, -3890, -3890,
    3894,  2948,  3436, -3890,   857,  3787,  2991,  2991,  2991,  2991,
    1981, -3890,  3209, -3890, -3890, -3890,  3621,  2248,  3504, -3890,
   -3890,   756,   651,   109,   109,  2312,  2312,  3132, 57070,  3624,
   -3890, -3890,   109, -3890, -3890,  1382,  1382,   924,  1617, 13497,
   -3890, 13497,  3542, -3890, -3890,  3983, 57070, -3890, -3890, -3890,
   -3890, 13497, -3890, 66157, 66157, -3890, -3890, -3890, -3890,  4149,
    3798, -3890,  3799,  3507,  4042, -3890, -3890, -3890, -3890,  4053,
   66157, -3890, -3890, 49210, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890,  2182,  3132, -3890,  3621, -3890,  2256, -3890, 17571, -3890,
   -3890, -3890, -3890,   651,   651, -3890, -3890, -3890, -3890, 49210,
    2263, -3890, 49210, -3890,  4183, -3890,   205,  3814,  3816, -3890,
   -3890,  2841,  1617,  1617, -3890,   314, -3890, -3890,  3945,  4045,
   13497,  1617, 62932,  3519, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, 66802, 13497, -3890,
    1044,  4130, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   66157, -3890, -3890, -3890, -3890,  3504, -3890,  2272, -3890,  3821,
   -3890, -3890,  2105, -3890,  3624, -3890, -3890, -3890, -3890,  3587,
    4071, -3890,  3568, 13497, 66157, -3890,  4049, -3890,  3975,  1617,
    3914,  3526, -3890,  3533,  1617,  4086, 67447, 67447, -3890,  3436,
   -3890,  3726, -3890, -3890, 17571, -3890, -3890,  1382,  1382, -3890,
     315, -3890,  1617, 63577,  4158, 57070, -3890,  3644, -3890, -3890,
   13497,  4078, 49865, 64222,  3544, -3890, -3890, -3890, 66157,  3994,
    3581, -3890, -3890, -3890, 13497, -3890,  4073,  3656, -3890,  3552,
   -3890, 66157,  1617, 66157, -3890, -3890,  4017,  6454,  1911, -3890,
    3549, -3890, -3890,  4186,  3515,  1617,  4181, 66157, 57070, 60997,
    4082, 64867,  4043, 57070,  2948,  4044,  4048, -3890,   309,  4008,
    3669, -3890, 61642, -3890,  2218,  3791,  3611, -3890, -3890,  4124,
    2345, -3890, -3890,  3877,  3577, 66157, 66157, -3890, -3890, -3890,
   -3890, 41350, 13497, -3890, -3890, -3890, -3890,  -152,  1068, 24912,
    3752, 62287, 65512, -3890, -3890, -3890, 36772, -3890, -3890, -3890,
    4058, -3890,  1617, -3890, -3890, -3890, -3890, -3890, 49210,  2276,
   -3890, -3890, 30855, -3890, 41350, -3890, -3890, -3890, -3890, 28217,
    3578, -3890,   109, -3890, -3890, 30855, 16892, -3890, -3890
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3890, -3890, -3890, -3890, -3890, -3890,    12, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890,  1522, -3890, -3890, -3890, -3890,
   -3890, -3890,  1607,  1614, -3890, -3362, -3890, -3890,  1616, -3890,
     344,  1615, -3890,   345, -3890,  1625, -3890,   357,  -739, -1595,
   -3890, -3890, -3890, -3890, -3890,   341,  1248,  3382, -3890,   337,
   -3890,    97, -3890, -3890, -3890, -3381,     6,  -128, -3890, -3890,
      41,  1304,    63,  3003,  -130, -3889, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890,   350, -3890, -3890,   201, -3890,
   -3890, -1133, -3890, -3890, -3890, -3890, -3890, -3890,  -281,  -236,
    2078, -3890, -3890, -3890,  4259, -3890,  3636, -3890, -2093,  2128,
   -3890, -3890, -3890, -3890, -3890,  2190, -2031, -3890, -3890, -3890,
    1017, -3890, -3890, -3890,   376,   152, -3890,   154, -3890,   156,
   -3890,   161, -3890,   165,   172,   176,   178, -3890,   181, -3890,
   -3890,  -230, -3890, -3890, -3890, -3890,   185, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890,  -149, -3890, -3890,   -61, -3890, -3890,
    -135,   187, -3890,  -121,   200, -3890,   202, -3890,   -65, -3890,
     -62, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890,  3019, -3890, -3890, -3890, -2529, -3890,
   -3890,   699,  2448, -3890,  1338, -3890, -3890,  1133, -3890, -3890,
    1355,   702, -3890, -3890,  1056,  -467, -3890, -1835, -2429, -2419,
   -3890, -3890, -3890, -2554, -2551, -1809, -3890, -1794, -2766,   711,
    1690,  1694,  1692,   -15, -3890,   937,   371, -3890, -3890, -3890,
   -2888,    44, -3890, -3289,   372, -3890, -3890, -3890, -3890, -2502,
   -3890, -3890,   -60, -3890, -3890,   -31,   -27, -3890,   192, -3890,
    2375, -1764,  -440, -3890, -3890, -2346, -1900,  -238, -1236, -1221,
   -3890, -3890,  1155,  1715,   872, -3890,   873, -1824,  1887, -3890,
   -3890, -2049, -3890, -3890, -3535, -3890, -3890,  1263, -3890, -3890,
   -3890, -3890, -3890,  1235,  1237, -1311,  1632, -1165, -3890,   560,
    -278,  -457, -3890,    40, -3890,   833, -3890, -3890, -2519, -3890,
     -29, -2232, -2313,    73, -3890, -3890, -3274, -3416, -3890,  1422,
   -3890, -3890, -3890, -2932, -2073,  1505, -3890, -3890,   981, -3890,
   -1605,   980, -3890, -3890, -3890,  1004, -3890,   221, -3890, -3890,
   -3890, -3890, -2665, -3890, -3890, -1826, -2316, -3890, -3890, -3890,
     301, -3890,   366,   303, -3890,   355, -3673, -3890,   347, -1260,
   -2200, -3890,  1408, -2016, -3112,   530, -2417, -3890,   890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,  1207, -3890,
    2027, -3890,  1786, -3890,  2034, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890,  1862, -3890, -3890,   417, -3890, -1362, -3890, -3890,
    1864, -3890, -3890,  1866,  -201, -2146, -1273, -1271, -1818,  3789,
   -1986, -3265, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890,  2825, -3890, -3890, -3890, -3890, -3890,  3790, -3890,  2832,
   -3890, -3890, -3890, -3890, -3890,   942, -3890,  2297, -3890, -3890,
   -3890,  1424,  3152, -3890, -3890,    33, -3890, -3890, -3890, -3890,
    2313, -3890, -3890, -3890, -3890,  2500, -3890, -3890, -3890, -3890,
   -3890, -3890,  1182, -3890,  1706, -3890, -1930, -3890,   784, -1263,
    4437,     1, -3890,     4,  -830, -3890,  2953, -3890, -3890, -1241,
   -3890, -3890,  3848,  -228,  3850,  3116,  2682,   994,  3564, -3890,
   -1353,   -45, -3890, -3890,  -885, -3890, -3890, -3890,  -648, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,  2099,
   -3890, -1407, -3890, -3890, -3890, -3890, -3890,  -803,  2191,  2101,
   -1072, -3890,  3376, -3890, -3890, -3890, -2047, -3890, -1509, -3890,
   -3890, -3890, -3890, -2136, -1496, -3890,  -233,  2856,  2857,  2858,
    2860, -3890,   753, -3890,  1136, -3890, -3890, -3890,   378,   896,
     392, -1642, -2464, -1092,  1319, -3890, -3890, -1364,  3416, -1892,
    1678,  1183,  1797,  1714, -3890, -3890, -3890, -3890,   997, -2565,
     -82, -3890, -2964,  -820,   -76, -3890, -1819,   787, -1177, -2365,
   -2226, -1735, -2869, -3890,   815, -3890,  1053, -3890,  2660,  3546,
   -3890, -3890, -3890, -3890, -3890, -3890,  -415, -3890,  3623,  3288,
    4516,  3120, -3890,  2443,  3262,  3264, -3890, -3890,  3595,  1776,
    1777, -3890, -3041, -2125, -3890, -3890,  -650, -1759,   816, -3890,
     835, -3288, -2810,  3266, -2734,  1189,  4492,  3278, -1913,  3982,
   -3890, -3890, -3890, -3890, -3890, -3890,  2298, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890,  2954,  3882,  -667, -1524, -3890,
    -852,  2930,  2301, -1441,  -979, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,  2446,  1447,
   -3890, -3890, -3890,  3044, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890,  1249,    75, -3890,  1093,    53, -3890,   754, -3890, -3890,
   -3890, -3890, -3890,   -20, -3890, -3890,   -25, -3890,  -832,  -831,
     748, -1422, -2572, -3890,   856, -2681, -2380,  -711, -1179, -1174,
   -1798,   123,  3199, -3890,  3228, -1450, -3890,   990,  -644, -1202,
      -6, -3890, -2545,  -129, -3890,   -56,  3638, -3890,    43,  2888,
      64, -3890, -3890, -3890, -3890, -3890, -3890,  3559, -3890,  2365,
    4541, -3890, -3890, -3890,  3007,  4544,  -545,  3572,  3030, -3890,
    3031, -3890, -3890, -3890, -2104, -1526, -3890, -3890,   177, -3890,
    2429, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
   -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890, -3890,
    2409,  3615,  3061, -3890,  2452, -3890, -3890, -3890, -3890, -3890,
   -3890,  2174, -3890,  -348,  -966,     2, -1317,  3387,    50, -3890,
     904, -1999, -1521, -3890, -3890,   320, -3890, -3890,  1767,  3966,
    3619, -3890, -3890, -3890, -3890, -3890,  3755, -3890,  -633,  -651,
   -3890, -3890, -3890, -3890,   -10,  4046,  4047, -3890, -3890,   569,
   -3890,   454, -3890, -3890, -3890, -3890, -3890, -3890, -3890,  3704,
   -3890, -3890,  3706, -3890, -3890, -3890, -3890,  3708, -3890, -3890,
   -3890, -3890, -3890, -3890,  1736, -3890, -3890, -3890, -3890, -3890,
   -3890,  3929
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2526
static const yytype_int16 yytable[] =
{
     535,    93,  1059,  1785,    95,  1336,   995,   998,  1786,   866,
     797,  1884,   846,   580,   663,  1539,  1267,   600,  1024,   850,
    2177,   835,  1137,  1276,  1973,   617,  1974,  2037,  2118,  1270,
    1687,  1688,   632,  2688,  2254,   636,  1408,   664,  2674,  1739,
     632,   634,   820,  2117,  2968,  1893,  1094,   682,  1864,  2074,
    2216,  1600,  2798,   581,  2469,  2470,  2619,  3319,  2597,   822,
    1894,  1741,   823,   616,  2497,   593,  1121,  3743,   622,   533,
    3215,   833,  2892,  1754,  1755,  1756,  1632,  2894,  3455,  1759,
     633,  2532,   593,  2528,  1120,  2739,   594,  2997,  2244,  2802,
    2498,  2538,  3031,  3068,  2518,  2542,  2518,  2816,  2817,  1244,
    2559,   856,  3032,   594,  3830,  2499,  2255,  3033,  2560,  2519,
    3002,  2519,  2733,  3323,  2258,  2259,   898,   899,  2581,  3247,
    2572,  1021,  3248,  3939,  3647,  3531,   859,  2476,   535,   885,
     887,   535,   833,   871,   856,   877,  2057,  1489,  2161,  1188,
    1189,  1190,  2267,  3279,  2867,  3491,   598,  2712,  2994,  3015,
    1212,  2701,  2540,  2541,  3662,  2543,  3491,  3491,  2546,  2547,
    2548,  2549,  2708,  1215,  2552,  2710,  2285,  3027,  2242,  2562,
    3595,  2690,  2604,  2246,  2567,  2568,  2569,  2570,  2571,  3441,
    2690,  2510,  2575,  2576,  1837,  4080,   545, -1985,  2585,  2586,
    2587,  2588,  2095,  2591,  2592,  2510,  2594,   861,  2663,  2405,
     865,  1383,  1384,  2423,  1633,  2407,   615,  2690,   888,  1383,
    1384,   621,  1603,  3820,   981,  3557,  3561,  3044,  1489,  3562,
    1890,  1383,  1384,  1377,  2668,  2851,  1890,  2858,  3903,  3563,
     855,  1647,  1383,  1384,  1631,  2384,  2869,  2870,  3571,  2669,
    2138,  2818,  3844,  3278,  3244,  1383,  1384, -2139,  2302, -2525,
    2171,  -900,  1383,  1384,  3245,  2431,  2164,  -567,  1608,  3495,
    3496,  2771,  3344,   872,  2457,  3838,  3291,  1628,  1613,   991,
    2299,  3183, -1523,  3922,  3543,   847,  1490,  1383,  1384,  3715,
    1026,   652,  2578,  2141, -1944,  2983,  3544,  1890,  3442,  1216,
     611,  1588,  1679,  1680,  1681,  1329,   608,  2510,   674,  2286,
    3545,  2811,  2189,  1692,  3704,  3864, -2163,  1213,  3501,  3772,
    3863,  2237,  1026,   652,  3050,  3234,  1383,  1384,  -568,  3037,
    1383,  1384,  1278,  1670,   606,   878,  1383,  1384,  1383,  1384,
    4437,  3043,  1417,  1520,  2732,   843,  1747,  1695,  1873,  1751,
     946,    42,  -503,  1234,  3083,  3084,  1079,  1555,  1068,    42,
    4080,  1383,  1384,   999,  3274,  3832,   623,  1490,  1769,  1770,
    1572,  3607,  1774,  3491,  3491,  2273,  1383,  1384,  4147,  2678,
    4081,  1576,  1320,   540,  1383,  1384,  1383,  1384,  2049,  1175,
    1788,  1789,  4305,  4337,   150,  2609,   146,   843,  1232,  2743,
    2691, -2451,  2493,  3543,   819,  3484,  3824,  1383,  1384,   150,
    1331,  2437,  1640,  2445,   942,  3544,  2493,  1702,  2464,  2052,
    2266,  2510,  3865,  2146,   612,  3984,  3985,  2691,  2644,  3545,
    2975,  2579,   894,  1137,  2510,  2937,  1340,  1121,  2190,  1871,
    1316,  1026,   652,  2402,  1604,  3866,  1026,   652,   542,  1876,
   -2525,   543,  2403,  2598,  1383,  1384,  2477,  2976,  3038,  3759,
    1383,  1384,  2938,  2147,  3986, -1631,  1383,  1384,  1383,  1384,
    2094,  1414,  2656,  1305,  4444,  4444,  3643,  3644,  1373,  2050,
    2274,  1378,   949,  4220,  3867,   147,  1383,  1384,  2511,  1332,
    4080,  1383,  1384,  1641,  -471,  2439,  1605,  2385, -2452,  1321,
   -1523,  1233,  2511,  1322,  1506,  2376,  1982,  1543,   943,  3499,
    2744,  3706,  3630,  2172,  3608,  2361,  2610,  1323,  2493,  1052,
    1839, -2451,  2736,  2071,   541,  1556,  3485,  2465,  3262,  1427,
    -451,   624,    58,  4099,  1983,  1417,   582,   996,  1080, -1985,
    1119,  1000,  3833,  1010,  1015,  4081,  1671,  -460,   856,   856,
    -438,  2274,  3422, -1769,  1505,   833,   841,   871,  2095,  3441,
     844,  2440,  1069,  1515,  4074,  1235, -1769,  1636,   912,  1279,
     923,  1176,  3238,  4044,   927,  3268,  1817,  4183,   871,  3239,
    4337, -2285,  1818,  1819,  3804,  3703,   607,  4438,  1386,   882,
    3502,  1387,  1383,  1384,  2800,  1280,   948,   819,  1629, -2139,
    1386,   944,  1418,  1387,  2511,   833,  1383,  1384,  3342,  3031,
     952,  1386,   848,  3353,  1387,   675,  2984,  1330, -2452,  3032,
    2096,   992,  4061,   965,  1386,  2693,  3848,  1387,  3500,  2311,
    3773,  1386,  2493,  3466,  1387,  1214,   841,  3509,  3852,  3263,
   -1523,  1728,  3443,  3534,  1729,  2493,  3855,   609,  1874,  1696,
    1055,   923,  2693,    42,  1324,  4271,  1386,  2798, -2163,  1387,
     833,  1589,    42,  2441,  2432,  1893,   833,   833,  3442,  2772,
     664,   966,  2324,  1008,  1197,  4081,  3893,   886,   886,  3037,
    1894,  2238,  1075,  3039,  1225,  3927,  3973,  2452,  3184,    42,
    1383,  1384,  1217,  1317,  2139,  1386,  3030,  2173,  1387,  1386,
    4119,  3481,  1387,  3519,   943,  1386,  3518,  1386,  1387,  3034,
    1387,  1840,  1052,  1378,   593,   947,  4036,  3034,  2511,  3292,
   -1985,  4040,  1255,  4042,  2643,  4179,  4166,  4167,  3003,  3004,
    1386,  2511,  2389,  1387,  3506,   594,  1121,  1138,  3357,  3358,
    3345,  1609,  2838,  1284,  3014,  1386,  2442, -2525,  1387,  2119,
    3048,  1614,  1325,  1386,  3052,  1386,  1387,   850,  1387,  2657,
    3520,  3025,  3026,  1121,  2300,  1417,   936,  2079,  2819,  4151,
    2118,  3070,  3071,  2853,  3510,  3511,  1386,  4273,  1417,  1387,
   -2139,  2078,   982,  1838,  3085,  2117,  -900,  2532,  1383,  1384,
    3491,  3491,  -567,  3095,  2257,  1418,  1194,   833,  1198,  3742,
    3564,  1191,  3064,   959,  1192,  1893,  2712, -1523,  3351,   968,
    2406,  1416,  2142,  2832,  1282,  3126,  2408,  3075,  2165,  3378,
    1894,  2706,  1485,  1386,  3276,  2844,  1387,  1318,  2841,  1386,
    3845,  1227,  1387,  3444,  1119,  1386,   613,  1386,  1387, -2163,
    1387,  1388,  2287,  1119,  2877,   833,  1383,  1384,  3243,  1388,
   -1523,  1268,  3507,  -568,  2580,  1386,  3498,  3314,  1387,  1277,
    1386,  1388,  3546,  1387,   833,  4335,   833,  1077,  1287,  3040,
    1119,  4306,  1388,  2091,  3249,  4104,  3642,  -503,  2532,   535,
   -2451,  2390,   856,  2292,   856,  1388,  1313,  3547,  1793,  3251,
    1794,  1081,  1388,  3932,  3933,  1337,  1338,  1287,  4105,  1342,
    2476,  2386,  1121,  3968,  1366,  3651,  3126,  3230,  3231,  3232,
    3233,  1372,  1602,  1376,  2201,  4333,  1637,  1388,  2040,  1793,
    1511,  2328,  1393, -2285,  1177,  1299, -2451,  2309,  1410,   535,
    1412,  2871,  1287,   535,   833,  3378,   535,  4145,   856,  3510,
    3511,  1318,  1052,  1456,  1094,   833,   833,  1428,  1300,  1344,
    1345,  1554,  1494,  2336,  2221,  1052,  1388,  2340,  4384,  4469,
    1388,  1386,   856,   856,  1387,  3733,  1388,  2443,  1388,   583,
     833,   856,   856,  3354,   856,  1386,  2096, -2452,  1387,  3817,
    2363,  3546,  4524,  2377,  1426,   833,  2091,  1382,   593,  2310,
   -1631,  1388,  1550,  1383,  1384,  2362,   593,  2290,  1411,  1549,
    1318,   833,  1415,   663,   151,  1425,  1388,  3264,  1843,   594,
    1121,   886,  3443,  1310,  1388,  2091,  1388,   594,  2291,  -471,
    1573,  3513,   589, -2452,  2098,  1418,   664,  2691,  1383,  1384,
    1383,  1384,  3766,  3423,  2171,   833,  2214,  1388,  1418,   589,
     593,  2303,  1375,  2334,  1021,  2315,  3528,  3323,  4225,  1499,
    4082,  2091,  1267,  1267,  2713,  -451,  3574,  1638,  4341,  1386,
   -1769,   594,  1387,  3365,  2365,  1224,  2366,   886,  2091,  3510,
    3511,  2091,  -460,  3875,  2554,  -438,  1383,  1384,   856,  3031,
    1639,  1559,   856,  3786,  1388,  3755,  2417,  3539,   961,  3032,
    1388,  1502,   886,  4359,  1816,  3524,  1388,  3822,  1388,  2903,
    1514,   886,  3366,  1516, -2285,  1730,  3802,  3247,  1731,  1786,
    3248,  2382,  1835,  2383,  1383,  1384,  1388,  1760,  4539,  2316,
    1213,  1388,  1138,  2308,  3812,  1449,   850,  2321,  2455,  4152,
    1191,  4154,  1865,   823,  4173,  1383,  1384,   906,  1138,  1383,
    1384,  1191,  1257,  3281,  1192,  3282,  3819,  1879,  3399,  1643,
    3400,  1383,  1384,  4314,  1882,  1383,  1384,  1386,  3813,   152,
    1387,  1347,  2224,  2939,  1802,  2684,  1803,  1804,  1805,  1806,
    1807,  1809,  1811,  1812,  1813,  1814,  1815,  1675,  2082,  3256,
     671,  1383,  1384,  2753,  3197,  2190,  1787,  3200,  3201,  1847,
    2497,  3204,  3205,  3206,  3207,  3208,  3209,  3210,  3211,  1383,
    1384,  3214,  3066,  3030,  3960,  3716,  2805,  1650,   986,  1383,
    1384,  2589,  3074,  3605,  2720,  1386,  2498,   833,  1387,  2953,
    1383,  1384,  1388,  1824,  3034,  1199,   678,  3353,  2518,  2940,
     131,  2499,  3244,   150,  1675,   833,  1388,  2555,  1880,   833,
    1567,  3112,  3245,  2519,  1235,  3736,  3726,  2714,  1908,  3407,
    4226,  3408,  2693,  3756,  2418,   833,  1982,  1500,  2978,  2979,
    2980,  2981,  3606,  3424,  3516,  3425,  2389,  4263,   280,  1258,
     282,  3755,  1417,  1870,  2739,  1383,  1384,   833,  4264,  3523,
    4342,  1383,  1384,  1875,  1983,    93,  2837,  2172,    95,  2840,
     991,  2842,  2843,  3278,  2919,  3278,  2523,   546,  1847,  2532,
    2559,  2528,  2863,  3257,  1676,  3341,  1383,  1384,  2560,   619,
    3469,  4057,  4058,  1568,  1592,  2958,  2959,  1348,  4598,  4315,
    1388,  3470,   856,   676,   997,  3350,  4287,  3849,  2493,  1383,
    1384,  3486,  2120,  3547,  2685,  2864,  3757,  3020,  1973,  1973,
    1974,  1974,  1383,  1384,  1560,   133,  4323,  3672,   833,  3673,
    1349,  1383,  1384,  2042,   535,   535,  4574,  2038,  1383,  1384,
    4227,  1691,  1386,   535,  2232,  1387,  1354,  1362,  2076,   962,
    4059,  2080,  2046,  1593,  3051,  3280,  3053,   856,  3514,  2564,
    3941,   856,   912,  2060,  3666,  3065,   923,  2163,  2306,  2063,
    3942,  1383,  1384,  3709,  2083,  1383,  1384,  1386,   593,  1386,
    1387,  3080,  1387,  2754,  2590,  3089,  1594,  1383,  1384,  2663,
    1786,  1121,  1644,  2087,  3487,  1383,  1384,   856,  1388,   594,
    2084,  3109,  1984,  2043,  2044,  3111,  2806,  2233,  1893,  1201,
     833,  1839,  2200,   856,  1121,  2668,  3491,  3491,  1214,  3756,
    4355,  2834,  1121,  1894,  4373,  1386,  2726,  2326,  1387,  1052,
    2669,  2025,  2717,   856,  1138,   833,  3196,  2537,  3198,  3199,
    2725,  1417,  3202,  3203,  2715, -1769,  1383,  1384,   624,  2779,
    4282,  2173,  3212,  3213,  1383,  1384,  1388,  3828,   679,   847,
    2716,  2119,  4379,  1386,  1367,  3367,  1387,   672,  2489,  3649,
    3650,  3258,  -785,  4124, -1799,  2149,  4265,  2152,   819,   856,
    1383,  1384,  1383,  1384,  1386,  2327,  2051,  1387,  1386,  4324,
     833,  1387,  1383,  1384,  1383,  1384,  1383,  1384,  1383,  1384,
    1386,  1935,  3761,  1387,  1386,  1383,  1384,  1387,  3543,  1569,
    1383,  1384,  1418,  3892,  3943,  1318,  3894,  1383,  1384,  4125,
    3544,  2865,  2565,  3471,  2493,  2186,  2089,   856,  1796,  2755,
    1386,  3750,  3751,  1387,  3545,   833,  3565,  3758, -1799,  3566,
    4575,   673,   886,  4380,  2243,  2987,  1026,  3558,  1386,  2067,
    1350,  1387,  2755,   824,  2821,   664,  3881,  2209,  1386,  1383,
    1384,  1387,   886,   664,  1383,  1384,  3315,  2085,  3390,  1386,
    3882,   843,  1387,  1383,  1384,  1383,  1384,   535,   535,   535,
     856,   535,  3974,   856,  2686, -1799,  3259,   953,   900,  2780,
     561,  2240,   535,  2307,   833,  2306,  4121,   535,   593,   897,
    2234,  1797,  1840,  1388,  4049,  3324,  1595,  1786,  2155,  2815,
    1786,  1121,   992,  1121,  1115,  3488,  4130,   856,  1052,   594,
     931,  1121,  1121,  1121,  1386,  1383,  1384,  1387,  2490,  2230,
    1386,  4378,  2330,  1387,  2468,   856,  2272,  1320,  1388,  2471,
    1388,   589,  1191,  1383,  1384,  1192,  2225,  2226,  2227,  4126,
    2229,  1063,   562,  3030,  -785,  1386,  1982,  1417,  1387,   953,
    2394,  2241,  1675,  1301,  1570,  2988,  2245,  2342,  1826,  2348,
    4325,  1827,   825,  2929,  1383,  1384,  1675,  3515,  1386,  1383,
    1384,  1387,  4318,  4319,  1983,  3373,  1388,  1383,  1384,  1383,
    1384,  1386,  1109,  2464,  1387,   602,   827,  1383,  1384,  2419,
    1386,  1418,  2532,  1387,  3076,  1383,  1384,  1386,  3472,  2228,
    1387,  1841,  2231,   838,  3529,  2352,  1116,  1351,  1383,  1384,
    1383,  1384,  3532,  3758,  1388,  3837,  3535,  1255,  1138,  2335,
    3126,   971,  1208,  1209,  1210,  1211,  1334,  1335,  1064,   841,
    1386,  4374,  2068,  1387,  1386,  1388,  2256,  1387,  1979,  1388,
    1237,  1238,  1596,  2353,  1321,  2701,  1386,  1675,  1322,  1387,
    2510,  1388,  1179,  3883,  1386,  1388,  4050,  1387,  3314,  1383,
    1384,   857,  1323,  1597,  2355,  4071,  4357,  1556,  2356,  4361,
    2411,  2989,  3856,   833,  3077,  2396,   848,   603,   563,  1746,
    2360,  1388,  4492,  4493,  2378,   987,  -243,   635,  1598,  2781,
   -1799,  1167,  2465,  1750,  1393,   860,  3243,  1383,  1384,  1388,
    2045,  2656,  1228,  3553,  1599,  1386,  3616,  1798,  1387,  1388,
    3405,  1828,   833,  1386,   988,  2461,  1387,  2412,  2416,  3789,
    1388,  2196,  3249,  3791,  1052,  1383,  1384, -1799,  3406,  3952,
    1383,  1384,  4375,   972,  1171,  3569,  3570,  3251,  3417,  1386,
     833,  1386,  1387,  4023,  1387,  3346,  2478,  1268,  1268,  3427,
     604,  1386,   862,  1386,  1387,  1386,  1387,  1386,  1387,   593,
    1387,  1383,  1384,  4376,  1386,  1383,  1384,  1387,  1199,  1386,
    3857,  1842,  1387,  3941,  1773,  1388,  1386,  3078,  2680,  1387,
     594,  1388,   280,  3942,   282,  1239,  1240,  2118,  1392,  1843,
    4024,  4486,  4486,  1168,  1615,   864,   879,  1383,  1384,  1324,
    2681,  3238,  2117,  4462,  3428,   589,  1388,  1418,  3239,   873,
    4008,  3671,  4367,   589,  3858,   943,   973,  4171,  1386,  1383,
    1384,  1387,   875,  1386,  1616,  4176,  1387,  1348,  2599,  1388,
    1508,  3308,  1386,  2317,  1386,  1387,  1172,  1387,  2203,  2656,
    4187,   683,  1388, -1799,  2605,  4113,  4114,  4115,   133,  2069,
    2734,  1388,   856,  4205,  2614,   856,  2318,   589,  1388,  2204,
    1359,  2493,  3696,  1383,  1384,  2070,   882,  4422,  3611,  2325,
    1383,  1384,   883,  1904,  1905,  1617,  4206,  4525,  2338,  1618,
    1844,  1383,  1384,  3612,  1386,  2339,  2523,  1387,   684,  1383,
    1384,  1388,  2331,  2500,  2306,  1388,  4526,  1325,  3621,  1383,
    1384,  2205,  1386,  1383,  1384,  1387,   856,  1388, -1799,   856,
    1383,  1384,   884,  2675,   535,  1388,  2722,  2723,  2343,  2854,
    2727,   856,  2347,  2329,  2689,  2036,   856,  3943,  2402,  2868,
    2709,  3996,   888,  1386,  2351,  2703,  1387,  2728,  1386,   890,
    2931,  1387,  2354,  3377,   893, -1687,  1386,  2511,  1386,  1387,
     892,  1387,  3283,   715,    42,  1872,  1386,   895,  1191,  1387,
    2749,  1192,  2729,   685,  1386,  1877,  1388,  1387,  4185,  4186,
    2329,  2759,  1201,   833,  1388,   907,  3546,  1386,  4014,  1386,
    1387,  2611,  1387,  2676,  2616,  3991,  2718,  3992,  2657,  2304,
    1456,  2786,  2787,  2357,  1417,  1456,   629,  3559,  3172,  2493,
    1388,  2369,  1388,  3284,   629,  2556,  2501, -1687,  2804,  2523,
     833,   928,  1388,  2056,  1388,  1786,  1388,  1956,  1388,   720,
    1957,   833,   908,  3989, -1687,  1388,   939,  2388,  1386,  2404,
    1388,  1387,   856,   941,  1619,  2655,   856,  1388,  2671,  3375,
    3878,   833,   833,   856,   856,  3398,  2332,  1982,  1744,  2305,
    2683,  2306,  3401,   945,  2828,   996,  1138,  3409,   833,  1786,
     996,  2703,  4207,  2344,  3413,  2306,  1386,  2750,   663,  1387,
    2751,  4275,   950,  2752,  1121,  1983,  2812,  2813,  2814,  1388,
    1350,  2792,  2793,   956,  1388,  1290, -1687,  3355,   969,  2933,
    3670,   664,  2711,  1388,  1386,  1388,  4208,  1387,  2827,  1386,
    1334,  1335,  1387, -1800,   833,  2345,  3414,  2306,  1199,  2425,
    2426,  3415,   960,  1620,  2427,  2428,    13,   593,   593,   593,
    3416,   732,  3418,  1026,   652,  1199,  2657,  2346,  2556,  2306,
    1386,   856,  1417,  1387,  1386,  1119,  1291,  1387,   594,   594,
     594,   978,    42, -1769,   976,  1388,   856,  1787,   856,   986,
    2791,   542,  3793,  2349,   543,  2306,   856,   856,   856,  1383,
    1384,  2777,  3753,  1388,  1016,  1502,  1386, -1800,  2910,  1387,
    1982,  1052,  1514,  2789,  2896,  1022,  2306,  1621,   833,  2502,
    1883,  4276,  4277,   833,  3762,  3763,  4278,  4279,  1386,  2503,
    3421,  1387,  2275,  1301,  1388,  2955,  2504,  2306,  1983,  1388,
     620,  2658,  4169,  3023,   747,  3024,  1087,  1388,  3778,  1388,
    3510,  3511,   996,  2275, -1800,   589,  3771,  1388,  3635,  3636,
    4209,  3426,  1292,  1091,   686,  1388,  3429,    25,  3106,  3107,
    2558,  3089,  1386,  1081,  3431,  1387,  1786,  1092,  1388,  1386,
    1388,  2965,  1387,  2967,  3433,  3728,   687,  1351,  4546,  4547,
    1386,  3739,  3435,  1387,  1418,  2062,  1093,  1148,  1386,  1095,
    2839,  1387,  3964,  3965,  3966,  3436,  1221,  3437,  1386,  2792,
    2793,  1387,  1386,  1096,   131,  1387,  1097,  2962,  1166,  1386,
    3118,  3121,  1387,  3956,  3955,  3878,  3304,   688,  3305,  1388,
    1219,  1180,  1181,  1206,  1207,  1208,  1209,  1210,  1211,  1622,
    2505,  1085,  1086,  1100,  1089,  3381,  1090,  4210,  1223,  1052,
    3388,  1101,  1201,  3072,  2939,  3895,  3783,  1102,  3897,  3898,
    3419,  1230,  2306,  2794,  1103,  4211,  1104,  1388,  4292,  1201,
    2276,  4295,  4296,  4297,  4298,   833,  2557,  3332,  3333,  3334,
    3537,  1623,  3538,  3665,  3694,  3538,  3695,  2446,   689,  4212,
    2277,  2276,  1105,  2558,  3784,  1388,  3717,  3794,  3718,  3795,
    1388,  2659,  3099,  2278,  3100,  1106,  2156,  2157,  1776,  1777,
     132,  2277,   695,  3796,  1107,  3795,  1403,  3913,  1110,  3914,
    2940,  1231,  3785,  2656,  2278,  1237,  1238,  4005,  3915,   133,
    3916,  1388,  1418,  1222,  3917,  1388,  3918,  2506,  2605,  1226,
    3920,  3063,  3921,  3737,  3923,  1372,  3924,  3101,  3738,  1112,
    3046,  3047,  2605,  2447,  4363,  4364,  2605,  1246,  3057,  3324,
    2126,  3235,  4007,  4372,  1786,   775,  1113,  1388,  3057, -1800,
    3102,  3057,  1114,  2605,  2605,   589,   833,  3073,  3057,  3036,
    4365,  4366,    36,  3082,  2448,  1293,  2605,  2279,  1787,  1388,
    3870,  3767,  3049,  1256,  4013,  2605,   856,   715,  3058,   637,
     847,  3925,   134,  3926, -1769,  3110, -1800,  3057,  2279,  3103,
    1117,  1202,  1203,  4192,  4193,  2881,  4015,  2605,  3930,    42,
    3926,  3954,  3486,  3289,  1199,  1118,  3086,  3387,  1202,  1203,
    3094,  1119,  3193,  1388,  1122,  1123,  3097,  3098,  2119,  3949,
    1388,  3926,  2882,  2127,  1124,   135,   846,   850,  2128,  2479,
    1294,  1388,  1295,  1125,   719,  2449,   695,  1126,  1707,  1388,
    4016,  1271,  3953,   720,  2306,  2480,  3999,  4017,  4002,  1388,
    1239,  1240,  1052,  1388,  4009,  1273,  2306,  1521,  4018,  4026,
    1388,  4027,  1127,  2493,   833,  4086,  4038,  1522,   136,  4213,
    4094,  2129,  2883,  3542,   725,  2884,  4201,  1523,   948,  4037,
    4307,  4027,  4041,  2885,  3926,  3487,   856,  2130,  2605,  2280,
    1128,  1524,  1525,  1526,  2703,  1191,  1129,  1132,   823,  4283,
    1133,  3057, -1800,  2703,  2703,  3096,   638,  1527,  3568,  2703,
    2280,  1139,  1404,  2131,  3870,    52,  3573,  4051,  2450,  4052,
    1140,   715,  2962,  3600,  3851,  1191,   833,  -784,  1192,  1241,
    1242,  1243,  4053,  3578,  4052,  3851,  1141,  3621,  1405,  1289,
    4069,  3296,  4070,  1142,  1711,   732,  1143,  3302,  3302,  1144,
    3302,  1204,  1205,  1206,  1207,  1208,  1209,  1210,  1211,  1298,
    4111,  2281,  2306,  3981,  3982,  3983,  1145, -1800,  1204,  1205,
    1206,  1207,  1208,  1209,  1210,  1211,  2703,  3579,   719,  1301,
      58,  3580,  2281,  3581,  1146,  1787,   639,   720,  3325,  4116,
    2657,  3978,  4144,  1147,  3926,  1191,  1417,  1149,   823,  3302,
    3302,  3302,   137,  2275,  4146,  1150,  3926,  2690,  1201,  4064,
    1392,   743,  1151,  1911,  1912,  3269,  2446,  2481,   725,  3090,
    2886,  1152,  1153,   745,  4086,   833,   589,   746,   747,  1334,
    1335,  3582,  4094,  1341,  4148,   567,  3926,  1267,  4175,   856,
    3024,  2438,  3104,  2438,  4135,  2453,  2454,  1154,  2456,  1914,
    3540,  3541,  1155,  1712,    42,  3548,  4219,  1715,  3926,  1156,
    1157,  -642,  3309,  1917,  1716,  2658,  1158,   628,  3578,  1918,
    1919,  2523,  1343,  1920,  2200,   996,  3301,  3301,  4222,  3301,
    4027,   138,  2447,  4223,  4086,  4224,  2524,  3740,  4094,   732,
    1159,  1160,  2509,  3572,   568,  2482,   548,  1922,  1161,  3596,
    3598,  3599,  1162,  1163,  3387,  1406,  3488,  1346,  1164,  -784,
    1165,  1890,  3886,  2448,  1169,  1923,  3580,  2887,  3581,   131,
    4285,  2483,  3618,  4354,  1170,  3795,  3460,   569,  3301,  3301,
    3301,  4424,  1173,  4425,   996,  1528,  1199,  1379,  4433,  2451,
    4434,  2276,  -503,  1174,  1928,  1717,   139,  4463,   140,  4464,
    3450,  4588,  1529,  4589,  -642,   743,  1178,  1182,  3453,  1183,
    3453,  2277,   570,  1184,  2523,  1185,  3582,  1202,  1203,  -823,
    1186,   746,   747,  1052,  2278,  4029,  4030,  1187,  4032,  2524,
    1407,  2792,  2793,  2484,  2449,  2275,  1382,   549,  1218,  1220,
    -642,  1229,  4268,  1311,   141,  1413,  2525,   833,   833,  2016,
    2017,  2018,  2019,  2020,  2021,  2022,  1409,  1430,  1496,  1719,
    1497,  1498,  1509,   571,  4120,  1517,  1519,  2691,  1540,  1551,
    1786,  1932,  1558,  -854,  1561,  2659,  1563,   767,  1933,  2605,
    1565,  3871,  1982,  1199,  3872,  2794,  1372,   943,  2605,   988,
    1587,  1591,  1610,  3057,   773,  1611,  2605,  1612,  1934,   775,
    1627,  1630,   776,  1634,  1199,  1635,  1418,   833,  2279,  1645,
    1983,  2605,  1642,  1646,  1647,  1664,  1665,  2450,  1667,  2888,
    1669,  1213,  1334,  1335,   550,  1675,  1682,  1733,  3583,  2446,
    3057,  3361,  3108,  -642,  3584,  2485,  1694,  1697,  3057,  2525,
    1530,  3057,  3057,   640,   641,   642,   643,   644,   645,  4346,
    4347,  4348,  4349,  1743,  -823,  1744,  1745,   856,  1936,  1767,
    2760,  1784,  1224,  2446,  1800,   646,  1801,  1834,  1831,  1833,
    1836,  3873,  3874,  2276,  3585,  1982,  1937,  1204,  1205,  1206,
    1207,  1208,  1209,  1210,  1211,  1849,  2761,  1851,  1852,  2889,
    1201,  1853,   -70,  2277,  1854,  2447,  1855,   572,  1856,  1857,
    1720,  2762,  1531,  1983,  1858,  2785,  2278,  1860,  1862,  1866,
    1878,  1890,  1897,  1898,  2763,  1901,  1902,  2890,  1722,  1532,
    1906,   767,  1977,  1978,  1318,  3871,  2448,  1980,  3872,  2447,
    2280,  1941,  3057,  1981,   589,   589,   589,   819,   773,  2026,
    1942,  4407,  2028,   775,  2029,  2030,   776,  2032,  2526,  4141,
    2034,  4142,  4143,  3586,  2035,  2039,  2047,  1334,  1335,  2823,
    2448,  3625,  2048,  3583,  3629,  -642,  2764,  2765,  2053,  3584,
    4153,  2077,  2081,  3640,  2093,  2088,   573,  2829,  2099,  2102,
    3640,  2103,  2104,  2105,  2106,  2109,   886,  1201,  2107,  2108,
    2279,  2121,  2693,  1847,  2766,  2122,  2123,  2449,  2125,  3658,
     588,  2133,  2281,  3587,  2939,  2438,  2132,  2136,  1201,  3585,
    3640,  3663,  3714,  3363,   856,  3873,  3874,   588,  2135,  1947,
    2145,  2144,   846,  2162,  2159,  2167,  2168,  1383,  1384,    42,
    2169,  2449,  2170,   814,   818,  2178,  2181,   551,  2451,  1456,
    2182,   574,  2184,   833,  4573,  2185,   554,  2147,  2190,  1202,
    1203,  1543,  2194,  1787,  1199,  2195,   856,   552,  -642,  2202,
    3588,  4473,   833,  2767,   575,   999,  2527,  2210,  3362,  1000,
    2940,  2211,  2212,  1138,  2703,   833,  1948,  1949,  1950,  2213,
    2450,  2217,  2219,  1951,  2223,  2248,  2247,  2250,  3586,   576,
    2249,  2252,  2265,  2263,  2288,  2289,  2293,  1787,  2295,  2296,
    1952,  2941,   553,  1953, -1628,   577,  2297,   554,  2312,  2314,
    2319,  2320,  2280,  4556,  2450,  2322,  2306,  2768,  4519,  2323,
    4521,  1199,  2333,  2367,  4556,  1703,  1704,  1705,  1706,  1707,
    4581,   578,  2329,  2337,  4532,  1786,  2341,  4339,  3587,  1955,
    2368,  2358,   555,  3664,  2401,  2359,  1202,  1203,  2364,  2379,
     556,  -642,  2413,  4592,  2380,  2381,  1211,  4556,  1786,  2527,
    4581,  2391,  4561,  4562,  2392,  1786,  4592,  1202,  1203,  2393,
     996,  1786,  2942,  2400,  2409,  2420,  2421,  2422,  1233,  2458,
    2459,  2467,  2472,  2473,  2281,  3708,  2474,  2475,  2488,  2539,
    2523,  2544,   557,  2545,  2550,  3588,  2551,  2553,  2990,  2561,
    2200,  2563,  2566,  2573,  2574,  2577,  3453,  2595,  2583,  1199,
    1119,  1206,  1207,  1208,  1209,  1210,  1211,  -503,  2584,  3005,
    2596,  2593,  4217,  2601,  1200,  2602,  2606,  2618,  2621,  3012,
    3013,  2620,  1708,  1709,  1710,  1711,  2622,  2623,  2624,  2625,
    3016,  3017,  3018,  3019,  -642,  3021,  3022,  2626,  2605,  2627,
    3364,  2628,  3640,  2629,  2630,  2943,  2631,  2632,  1201,  2633,
    2652,  2634,  3829,  2479,  2635,  3846,  2636,  2637,  2638,  2639,
    2640,  2641,  2642,  2645,  1787,  2646,  2672,  2605,  2647,  2480,
    2648,  2649,  2605,  2650,  2651,  2711,  3059,  3060,  3061,  3062,
    2735,  2670,  2677,   833,  1115,  2707, -1249,  2724,  4217,  2747,
    2746,  2451,  1167,  2778,  1171,  2758,  1204,  1205,  1206,  1207,
    1208,  1209,  1210,  1211,  2803,  2809,  3093,  3454,   856,  1556,
    4336,  2274,  2820,   833,  4339,  1201,  1199,  1204,  1205,  1206,
    1207,  1208,  1209,  1210,  1211,  2451,  2824,  2845,  3456,  2831,
    2826,  2846,  2859,  2833,  1712,  2847,  1713,  1714,  1715,  1457,
    1458,  2848,  2849,  2860,   535,  1716,  2850,  2861,  3908,  2872,
    2873,  2876,  3193,  2880,  2438,  2897,  2403,  2438,  2438,  2963,
    2898,  2438,  2438,  2438,  2438,  2438,  2438,  2438,  2438,  3625,
    2899,  2438,  2956,  2911,  2912,  2924,  2969,  2972,  2954,  2985,
    2964,  3679,  3931,  1847,  1847,  1847,  1386,  2966,  2974,  1387,
    2971,  3680,  2991,  2992,  2995,   856,  2998,  3001,  3006,  3007,
    3008,  3681,  1268,  1201,  3009,  3011,  4570,  1202,  1203,  2703,
    3010,  3067,  3069,  3904,  3114,  3682,  3683,  3684,   961,  1025,
    3113,  2050,  3185,  3188,  3195,  1459,  1717,  3217,  3220,  3296,
    3223,  3685,  1494,   833,   833,   833,  4542,  3862,  3237,  4570,
    3226,  2481,  3229,  3236,  1026,   652,  3253,  3261,  3266,   843,
    3267,  2059,  3325,  3976,  3294,  1027,  1460,   996,  3295,  3299,
    3306,  2703,  3312,   833,   833,   833,  2944,  3317,  3318,  3316,
    1461,  3329,  3326,  3330,  1202,  1203,  3331,  3335,  3336,  3339,
    1028,  3057,  1029,  3057,  3352,  3347,  3340,  3356, -1437,  1718,
    1719,  3359,  1030,  1462,  1199, -1436,  1463,  2200,  3360,  3389,
    3391,  3378,  3382,  3402,  3384,  4217,  3392,  3393,  3403,  1464,
    3394,  1199,  3395,  3438,  1703,  1704,  1705,  1706,  1707,  2482,
    1201,  3457,  3448,  3449,  3948,  3451,  3458,  3461,  3462,  4022,
    3477,  3468,  4025,  3475,   814,  3478,  1465,  3479,  3482,  3483,
   -1769,  1031,  1334,  1335,  3504,  2483,  1032,  3503,  3505,  1033,
    3522,  3518,  3640,  3525,  3508,  3526,  3554,  3640,  3530,  3640,
    3533,  1466,  1202,  1203,  3556,   856,  4046,  1467,  1205,  1206,
    1207,  1208,  1209,  1210,  1211,  3567,  3601,  3610,   814,  3659,
     833,  1034,  3614,  1035,  3617,  3646,  3648,  3618,  3654,  3661,
    3668,  3678,  1036,  3667,  1037,   924,   925,   926,  3699,  1489,
     929,   930,  2350,   932,   933,   934,   935,  2484,  4047,  3700,
    3701,  1468,  3697,  3698,  3704,   814,  3702,  1038,  1039,  3410,
     833,  1708,  1709,  1710,  1711,  3710,  3353,  3719,  3725,   588,
    3727,  1720,  3729,  3730,  1204,  1205,  1206,  1207,  1208,  1209,
    1210,  1211,  3731,  3744,  1040,  3801,  3745,  1388,  1721,  1722,
    3625,  3760,  3629,  4076,  2703,  3747,  3749,  3775,  3768,  3686,
    3640,  3443,   814,  3774,  3787,  1041,  2385,   814,  1826,  3798,
    3805,  3807,  3658,  3808,  3809,  3810,  3687,  3818, -1523,  1202,
    1203,  4102,  4596,  3826,  3823,  3827,  3831,  3843,  3847,  3879,
    3825,  3853,  3840,  3880,  4045,  3885,  3888,   814,  1201,  1042,
    3890,  3891,  1199,  3595,  3896,  3463,  3464,  3899,  3902,  2485,
    3905,  3906,  3910,  3911,   833,  1201,  3919,  3928,  3935,  3929,
    1908,  3467,  1204,  1205,  1206,  1207,  1208,  1209,  1210,  1211,
    3936,  3938,  1935,  1712, -1523,  1713,  1714,  1715,  1490,  3937,
    3957,  3958,  3969,  3971,  1716,  3950,  3962,  1469,  3972,  3978,
    3980,  1470,  4010,  3993,  4011,   814,   814,   814,   814,  4006,
    4031,  4012,  4033,  3977,  1043,  4034,   814,  1471,   745,  4021,
   -1523,  4060, -1523,  3640,  4062,  1472,  4063,  3183,  4065,  3988,
    4067,  4089,  3997,  1473,  3998,  4103,  4112,  4117,  4118,  4156,
   -1523,  1044,  3999,  4000,  3521, -1523,  4001,  3688,  4003,  4004,
    4132,  4020,  1045,  1046,  4163,  3527,  1047,  1048,  4028, -1523,
    1394,  1395,  3625,  3625,  3689,  3795, -1523,  4039,  4048,  1474,
    2728,  4055,  4002,  4129, -1523,  1717,  4138,  1049,  4078,  4079,
    4101,  4203,  1475,  1476,  4100,  4122, -1523,  4123,  4127,  1204,
    1205,  1206,  1207,  1208,  1209,  1210,  1211,  4128,  4133, -1523,
    4286,  1396,   856,  4134, -1523,  4136,  4157,  1202,  1203,  4170,
    4164,  3193,  3193, -1523,  1397,  4159,  4189,  4174,  4180,  4184,
     918,  4190,  4196,  4194,  1202,  1203,  3690,  4197,  4228,  4200,
    4231,  1050,   814,  4202,  1477,  4274,  4204,  4288,  1718,  1719,
    4266,  4267,  4284,  3691,  1051,  4299,  4291,  4293,  4294,  4302,
    3574,  4309,  4327,   588,  1398,  -382,  1201,  4330,  4329,  4332,
    4331,   588,  4345,  1478,   955,  4352,  4384,  1399,  4355,  4369,
    4387,  -400,  4414,  4412,  4413,  4415, -2386,  4417,  1787,  4436,
    1052,  4447,  4439, -1523,  4440,  1479,  4467,  1480,  3453,  4448,
    4452,  4468,  4469,  4474,  1400,  4476,  4478,  4479,  4489,  1053,
    4482,   918,  4498,  2438,  4419,   588, -1523, -2338,  4304,  4501,
    3641,  4503,  4513,   814,  1429,  4511, -1523,  4516,  4313,  4518,
    4527,  4517,  4522,  4320,  4528,  4531,  4535,  4537,  4540,  4543,
    4432,  4195,  4541,  4435,  4545,    93,  4549,  4550,    95,  4552,
    4558,  4559,   814,  4582,  4586,  4595,  4322,  3290, -1523,  3228,
    3219,  3625,  4075,  1098,  3222,  3225,  4077, -2386,  3216,  1401,
    4090,  4073,  3494,  4096,  1054,  4270,  4334,  1204,  1205,  1206,
    1207,  1208,  1209,  1210,  1211,  1360,  4459,  4458,  4098,  3465,
    1720,  1900,  4368,  1131,  1204,  1205,  1206,  1207,  1208,  1209,
    1210,  1211,  4182,  4593,  4554,   670,  1062,  1721,  1722,  2801,
    4388,  2742,  3693,  4429,  4242, -1523,  4243,  4563,  4245,   814,
     814,  4495,  2461,  4246,  4445,  1202,  1203,  4248,   814,   814,
     814,   814,   814,   814,  4249,  4496,  4487,   833,  4250, -1523,
    4251,   814,   814,  4252,   814,   814,  4457,  4253,  4456,  4256,
    3934,   814,   814,  2522,  1193,   814,   814,   814,   814,  2033,
     814,   814,  4257,   833,  4258,  3497,   833,  3645,   814,   814,
    3493,   814,   814,   814,   814,   814,  3951,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814, -1523,   814,  1489,
    3273,   814,   814,  3272,  3797,  4137,   814,  3275,  4423,  4140,
     814,   814,   814,  4466,  4491,  4465,  2654,  4301,  3653,  3271,
    3841,  3560,  3842,   814,   814,   814,  3041,  3604,  3602,  4429,
    4054,  4441,   814,  3887,  4421,  3480,  3790,   814,  3792,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
    4303, -1523,   814,  3440,  3788,  4218,   814,  4177,   814,  4587,
    4172,  4221, -1523, -1523,  4188,  3512,  4088,  3854,  3806,  3652,
    3252,  2986,  4150,  2982,  3119,  1073,  3120,  3117, -1523,  4500,
    1078,  2264,  2790, -1523,  2262, -1523,  4508,  3839,  1381,  3517,
    2027,  2615,  2788,  3313,   814,  1204,  1205,  1206,  1207,  1208,
    1209,  1210,  1211,  3970,  3707,   821,   985,   984,  2061,  2193,
    2960,  2895,  2399,  2961,  3995,  4198,  3752,  2268,  2269,  2270,
    1742,  2271,  4533, -1523,  3912, -1523,  3349,  4538, -1523, -1523,
    4199,  3735,  1693,  3286, -1523,  3338,  2463,  3836,  1490,  3990,
    1546,  3816,  1374,   579,  2090,  2731,  1885,  3967,  1886,   814,
    1887,  3979,  3741,  1432,   681,  4571,  1495,   913,  3310,  3311,
    2835,  1058,  1888,  1787,  2836,  2737,  2236,  2253,    93,  1553,
    3536,    95, -1523,  2180,  3713,  4514,  3811,  4529,  4035,  4594,
    4597,  3869,   833,   588,  3975,  4043,  1787,  2058,  4571,  1575,
   -1523,  1488,  2822,  1787,   666, -1523,  2218,   667,  1585,  1787,
    1574,  2783,  2207,  2208,  2807,  1538,  2183,  2757,  2977,  3959,
    4350,   983,  1542,  1269,   902,   903, -1523,  1363,  1076,  1364,
     814,  1365,     0,     0, -1523,     0,   814,  1458,   814,   814,
       0,     0,  1848,     0,     0,     0, -1523,     0,     0,     0,
     814,   814,     0,   814,   814,     0,     0,     0,     0, -1523,
       0,  1433,  1432,     0, -1523,     0,     0,     0,     0,  3940,
       0,     0,     0, -1523,     0,  1673,  1674,     0,     0,     0,
       0,     0,     0,     0,  1684,  1685,  1434,     0,  1689,  1690,
    1435,     0,     0,     0,     0,     0,     0,  1698,  1699,     0,
    1700,  1701,     0,     0,     0,  1535,  1458,  1725,     0,     0,
       0,  1735,  1736,  1737,  1738,     0,  1740,     0,     0,     0,
       0,     0,  1459,     0,  1748,  1749,     0,  1752,  1753,     0,
    1436,     0,     0,  1757,  1758,     0,  4418,  1761,  1762,  1763,
    1764,  1765,  1766, -1523,  1768,     0,     0,  1771,  1772,     0,
    1437,     0,  1775,  1460,     0,     0,  1778,  1782,  1783,     0,
    1433,     0,     0,     0,     0,     0, -1523,  1461,     0,  1790,
    1791,  1792,     0,     0,     0,     0, -1523,     0,  1795,     0,
       0,     0,     0,     0,     0,  1434,     0,     0,  4451,  1435,
    1462,  1459,     0,  1463,     0,     0,     0,     0,     0,     0,
       0,     0,  1820,  4451,  1825,     0,  1464,     0, -1523,     0,
       0,     0,     0,   588,     0,  1438,  4460,     0,     0,     0,
     814,     0,  1460,     0,   814,     0,     0,     0,     0,  1436,
     814,     0,     0,  1465,     0,     0,  1461,   814,     0,     0,
    1867,     0,     0,     0,     0,     0,     0,     0,     0,  1437,
       0,     0,     0,     0,     0,     0,     0,     0,  1466,  1462,
       0,     0,  1463,     0,  1467, -1523,     0,     0,     0,  4451,
       0,     0,     0,     0,     0,  1464,     0,     0,     0,  4510,
       0,     0,     0,     0,  4512,     0,     0,     0,     0, -1523,
       0,     0,     0,     0,     0,  1991,     0,     0,     0,     0,
       0,     0,  1465,     0,     0,     0,     0,     0,  1468,     0,
       0,  1439,     0,     0,  1438,  4451,  4066,  4451,     0,     0,
       0,     0,     0,     0,     0,     0,   814,  1466,  4451,     0,
     814,  2438,     0,  1467,     0,     0,     0, -1523,     0,   814,
       0,   814,     0,     0,     0,  4095,     0,  1440,     0,     0,
       0,  1911,  1912,     0,     0,     0,  1441,  4451,  4451,     0,
       0,     0,  4585,     0,     0,     0,   918,     0,     0,     0,
       0,  1442,  2064,     0,  2065,  2066,     0,  1468,     0,     0,
       0,     0,   814,     0,     0,  -788,  -788,  1914,     0,     0,
       0, -1523,     0,     0,     0,  -788,  1443,     0,     0,     0,
       0,  1917,     0, -1523,     0,     0,     0,  1918,  1919,     0,
    1439,  1920,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1523,     0, -1523,     0,   814,   814,   814,
       0,     0,     0,     0,     0,  1922,     0,     0,     0,     0,
    1444,     0,   814,     0,  1469,     0,  1440,     0,   814,  1890,
       0,     0,     0,  1923,     0,  1441,   814,     0,   814,     0,
       0,     0,     0, -1523,  1471, -1523,     0,     0, -1523, -1523,
    1442,  1445,  1472,     0,     0,     0,     0,     0,     0,     0,
    1473,     0,  1928,     0,   588,     0,     0,     0,     0,     0,
    4168,   542,     0,     0,   543,  1443,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1469,     0,     0,  1474,  1536,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1475,
    1476,     0,     0,  1471,     0,     0,     0,     0,     0,  1444,
       0,  1472,     0,     0,     0,     0,     0,     0,     0,  1473,
       0,     0,     0,     0,     0,     0,  2215,     0,     0,  1932,
    1585,     0,     0,     0,     0,     0,  1933,     0,     0,     0,
    1445,     0,     0,  2222,     0,     0,     0,     0,     0,     0,
       0,  1477,     0,     0,     0,  1474,  1934,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1475,  1476,
       0,     0,     0,     0,     0,     1,     0,     0,     2,     0,
    1478,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     3,     0,     0,     0,     4,     0,     0,
       0,     0,  1479,     0,  1480,     0,     0,     0,     0,     0,
       0,     5,     6,     0,     0,     0,  1936,     0,     0,     7,
    1477,     0,     0,     0,     8,     9,     0,     0,     0,     0,
       0,     0,  2294,     0,  1937,     0,  2298,     0,     0,     0,
      10,     0,     0,     0,     0,     0,     0,  2294,     0,  1478,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      11,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1479,  4362,  1480,     0,     0,     0,     0,     0,     0,
       0,     0,    12,     0,     0,     0,     0,     0,     0,  1941,
       0,    13,    14,    15,     0,   814,     0,     0,  1942,   814,
     814,     0,   814,   814,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,  2371,  2373,  2375,     0,     0,     0,     0,
       0,     0,     0,  4430,  4431,     0,     0,     0,     0,     0,
       0,    20,     0,     0,  2395,     0,     0,     0,     0,     0,
       0,     0,  2397,     0,  2398,     0,     0,     0,     0,    21,
       0,    22,     0,     0,     0,     0,    23,  1947,     0,    24,
       0,     0,   814,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    25,     0,     0,    26,     0,     0,   814,  1992,
       0,     0,   588,   588,   588,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    27,     0,     0,     0,     0,
       0,     0,     0,     0,  1948,  1949,  1950,     0,     0,     0,
       0,  1951,    28,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   814,     0,  1952,     0,
       0,  1953,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1993,  1994,  1995,  1996,  1997,  1237,  1238,  1998,
    1999,  2000,     0,  2001,  2002,  2003,  2004,  2005,  2006,  2007,
    2008,  2009,  2010,     0,  2011,  2012,     0,  1955,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   814,     0,
       0,     0,     0,     0,     0,     0,     0,   814,   814,     0,
       0,     0,     0,     0,   814,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   814,   814,
       0,   814,     0,    30,   814,   814,   814,   814,   814,     0,
       0,   814,     0,     0,     0,     0,     0,     0,     0,     0,
     814,     0,     0,     0,     0,     0,   814,     0,   814,     0,
     814,   814,     0,   814,   814,     0,    31,     0,   814,   814,
     814,     0,     0,     0,   814,   814,   814,    32,   814,     0,
     814,     0,   814,     0,   814,     0,   814,     0,     0,     0,
       0,   814,     0,     0,     0,     0,     0,     0,     0,    33,
       0,     0,    34,     0,    35,     0,     0,    36,     0,   814,
     814,     0,  1239,  1240,   814,     0,   814,    37,    38,     0,
       0,  2719,     0,     0,     0,     0,     0,    39,     0,    40,
       0,     0,     0,     0,     0,     0,     0,     0,    41,     0,
       0,     0,     0,     0,    42,     0,     0,     0,     0,     0,
       0,     0,    43,  1911,  1912,     0,     0,    44,    45,    46,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   814,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1914,
      47,     0,     0,     0,     0,     0,     0,    48,     0,     0,
       0,     0,     0,  1917,     0,     0,     0,     0,  2784,  1918,
    1919,     0,     0,  1920,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2808,     0,     0,  1922,     0,     0,
       0,    49,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1890,     0,    50,     0,  1923,     0,    51,     0,     0,
      52,     0,     0,     0,     0,    53,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2830,     0,  1928,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    54,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    55,    56,    57,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    58,     0,     0,     0,   814,
       0,     0,     0,     0,  2875,     0,     0,     0,     0,     0,
       0,     0,     0,  2878,  2879,     0,     0,     0,     0,     0,
    2893,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1932,     0,     0,  2900,  2901,     0,  2902,  1933,     0,
    2905,  2906,  2907,  2908,  2909,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2913,     0,  1934,     0,
       0,     0,  2914,     0,  2915,     0,  2916,  2917,     0,  2918,
       0,     0,     0,     0,  2921,  2922,  2923,     0,     0,     0,
    2925,  2926,  2927,     0,  2928,     0,  2930,     0,  2932,     0,
    2934,     1,  2935,     0,     2,     0,   814,  2936,   814,     0,
       0,     0,   814,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     4,     0,  1820,     0,     0,  1936,     0,
       0,     0,     0,     0,     0,     0,     0,     5,     6,     0,
       0,     0,     0,     0,     0,     7,  1937,     0,     0,     0,
       8,     9,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    10,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    11,     0,     0,     0,
    2690,  1867,     0,     0,     0,     0,  1911,  1912,     0,     0,
       0,  1941,     0,     0,     0,     0,     0,     0,    12,   814,
    1942,     0,     0,     0,     0,     0,     0,    13,    14,    15,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,  1914,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1917,     0,     0,     0,
       0,     0,  1918,  1919,     0,     0,  1920,    19,     0,     0,
       0,     0,   814,     0,     0,   814,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    20,     0,     0,
    1922,     0,     0,     0,     0,     0,   814,   814,     0,  1947,
       0,     0,     0,     0,  1890,    21,     0,    22,  1923,     0,
       0,     0,    23,     0,     0,    24,     0,     0,   814,     0,
       0,     0,     0,     0,     0,     0,     0,   814,     0,   814,
       0,   814,     0,     0,     0,  -503,     0,  1928,    25,     0,
       0,    26,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3194,  1948,  1949,  1950,     0,
       0,    27,     0,  1951,     0,     0,     0,     0,     0,   814,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
    1952,     0,    29,  1953,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2691,     0,  3492,     0,  1932,     0,     0,     0,     0,  1955,
       0,  1933,     0,  3492,  3492,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1934,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2692,     0,     0,     0,  3285,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1936,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,  1937,
       0,     0,     0,    32,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,    34,     0,
      35,     0,     0,    36,     0,  1585,     0,     0,     0,     0,
       0,     0,     0,    37,    38,     0,     0,     0,     0,     0,
       0,     0,     0,    39,  1941,    40,     0,     0,     0,     0,
     819,     0,     0,  1942,    41,     0,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,    43,     0,
       0,     0,     0,    44,    45,    46,     0,     0,  3374,     0,
       0,  3376,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3492,  3492,  3396,  3397,     0,  2693,    47,     0,     0,     0,
       0,     0,     0,    48,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3420,     0,     0,     0,  3127,  3128,
       0,     0,  1947,  3430,  3129,  3432,  3130,  3434,  3131,  3132,
       0,     0,    42,     0,     0,     0,     0,     0,     0,     0,
     814,     0,   814,     0,     0,     0,  3133,    49,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    50,
       0,     0,     0,    51,     0,     0,    52,     0,     0,     0,
       0,    53,     0,     0,     0,     0,     0,     0,     0,  1948,
    1949,  1950,     0,     0,   814,     0,  1951,     0,     0,     0,
       0,     0,     0,   814,   814,     0,  3134,     0,     0,  3135,
       0,     0,    54,  1952,     0,     0,  1953,  3136,     0,     0,
       0,     0,     0,   814,     0,     0,     0,     0,     0,   814,
       0,   814,     0,     0,     0,     0,  3137,     0,     0,     0,
       0,    58,     0,     0,     0,   814,     0,     0,     0,     0,
       0,     0,  1955,  3138,     0,     0,     0,     0,     0,  1907,
       0,     0,     0,     0,  1908,     0,  1909,     0,   814,  1910,
     814,     0,     0,   814,   814,     0,   814,     0,     0,  1911,
    1912,  3139,     0,  3140,     0,   814,     0,     0,     0,     0,
     814,     0,     0,   814,     0,   814,   814,     0,     0,  3141,
    3142,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1913,     0,     0,     0,     0,  1914,  1915,     0,     0,     0,
       0,  1916,     0,  2694,     0,     0,     0,     0,     0,  1917,
    -503,     0,     0,     0,     0,  1918,  1919,     0,     0,  1920,
       0,  3143,     0,     0,     0,     0,     0,     0,  1921,     0,
       0,     0,     0,     0,  3144,     0,     0,     0,     0,     0,
       0,     0,     0,  1922,     0,     0,     0,     0,     0,     0,
       0,   814,     0,  3145,     0,     0,     0,  1890,     0,     0,
       0,  1923,  3146,  3147,     0,  3148,     0,     0,     0,  1924,
    1925,     0,     0,     0,     0,     0,  1926,     0,     0,     0,
       0,     0,     0,     0,  1927,     0,     0,     0,     0,     0,
    1928,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1929,  3149,  3150,  3151,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3152,  3153,  3154,  1930,     0,     0,     0,  3155,     0,
       0,  3156,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3157,
    3158,     0,     0,     0,     0,   814,   814,     0,     0,     0,
       0,     0,     0,     0,     0,  1931,     0,  1932,     0,     0,
       0,     0,     0,     0,  1933,     0,     0,     0,     0,     0,
       0,     0,     0,  3159,  3160,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1934,     0,     0,  3492,  3492,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3161,
    3721,     0,     0,     0,     0,     0,     0,  1935,     0,  1867,
    3734,   814,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3721,
       0,     0,     0,     0,     0,  3746,     0,  3748,     0,     0,
     814,     0,     0,     0,  1936,     0,     0,     0,     0,     0,
       0,  3754,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3162,  1937,     0,     0,  3163,  1938,     0,     0,     0,
       0,     0,     0,     0,  3764,     0,  1867,  3164,     0,  3769,
    3770,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3777,     0,     0,     0,     0,  3779,     0,     0,  3780,
       0,  3781,  3782,     0,  1939,     0,     0,     0,  1907,     0,
    1940,     0,     0,  1908,     0,  1909,     0,  1941,  1910,     0,
       0,     0,     0,     0,     0,     0,  1942,     0,  1911,  1912,
       0,     0,     0,     0,     0,     0,     0,  3165,     0,     0,
    3166,     0,     0,  3167,  3168,  3169,  3170,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1943,  1913,
    4262,     0,  -788,  -788,  1914,  1915,     0,     0,     0,     0,
    1916,     0,  -788,  1944,  1945,  1946,     0,  3821,  1917,     0,
       0,     0,     0,     0,  1918,  1919,  3171,  3172,  1920,     0,
       0,     0,     0,     0,     0,     0,     0,  1921,     0,     0,
       0,     0,     0,     0,     0,  1947,     0,     0,     0,     0,
       0,     0,  1922,     0,  3173,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1890,     0,     0,     0,
    1923,     0,     0,     0,     0,  4262,  4262,     0,  1924,  1925,
       0,  4523,     0,     0,     0,  1926,     0,     0,     0,     0,
       0,     0,     0,  1927,     0,     0,     0,     0,     0,  1928,
       0,     0,  1948,  1949,  1950,     0,     0,     0,     0,  1951,
    1929,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3900,  3901,     0,     0,     0,  1952,     0,     0,  1953,
       0,     0,     0,  1930,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1954,     0,     0,     0,   814,     0,     0,     0,
       0,  4262,  4262,     0,   814,  1955,     0,     0,     0,     0,
       0,     0,     0,     0,  1931,     0,  1932,     0,  4262,     0,
       0,     0,     0,  1933,   814,     0,   814,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1956,
       0,     0,  1957,  1934,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3115,     0,     0,  3721,     0,  1908,     0,
    1909,     0,     0,     0,     0,     0,  1935,     0,     0,     0,
    4262,     0,     0,  1911,  1912,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4262,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4262,     0,
       0,     0,     0,  1936,  1913,     0,     0,     0,     0,  1914,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1937,  4262,  1917,     0,  1938,     0,     0,     0,  1918,
    1919,     0,     0,  1920,  4262,  4262,     0,     0,     0,     0,
       0,     0,  1921,     0,     0,     0,     0,     0,     0,     0,
       0,  4262,     0,     0,   814,     0,     0,  1922,     0,     0,
       0,  4262,     0,  1939,     0,     0,  4262,     0,     0,  1940,
       0,  1890,     0,     0,     0,  1923,  1941,   814,     0,  4262,
    4260,  4262,     0,  1924,     0,  1942,     0,     0,  4269,     0,
    3116,     0,     0,     0,     0,  4262,     0,  4262,  1927,  4262,
       0,     0,     0,     0,  1928,     0,     0,     0,     0,     0,
    4262,     0,     0,     0,     0,     0,     0,  1943,     0,     0,
       0,     0,     0,  4262,  4262,     0,     0,     0,     0,     0,
       0,     0,  1944,  1945,  1946,     0,     0,     0,  1930,  4262,
    4262,     0,     0,     0,  4262,     0,     0,     0,     0,   814,
       0,     0,     0,     0,     0,  4260,  4260,     0,     0,     0,
       0,     0,     0,     0,  1947,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1932,     0,     0,     0,     0,     0,     0,  1933,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1934,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1948,  1949,  1950,     0,     0,     0,   814,  1951,   814,
       0,  1935,  3721,     0,     0,     0,     0,     0,     0,   814,
    1867,  4260,  4260,     0,     0,  1952,     0,     0,  1953,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4260,     0,
    1867,     0,  4131,     0,     0,     0,     0,     0,  1936,     0,
       0,  1954,     0,     0,     0,     0,   814,     0,     0,     0,
       0,     0,     0,     0,  1955,     0,  1937,     0,     0,     0,
    1938,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   814,     0,
    4260,     0,     0,     0,     0,     0,     0,     0,  1956,     0,
       0,  1957,     0,     0,     0,  4260,   814,     0,     0,     0,
       0,     0,     0,     0,  1940,     0,     0,     0,  4260,     0,
       0,  1941,     0,     0,     0,     0,     0,     0,     0,     0,
    1942,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   814,  4260,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4260,  4260,     0,     0,     0,     0,
       0,     0,   814,     0,     0,     0,     0,     0,     0,     0,
       0,  4260,     0,     0,     0,     0,     0,  1944,   814,     0,
       0,  4260,     0,     0,     0,     0,  4260,     0,     0,     0,
       0,     0,   814,  4230,     0,     0,     0,     0,     0,  4260,
       0,  4260,     0,     0,     0,     0,     0,     0,     0,  1947,
       0,     0,     0,     0,     0,  4260,     0,  4260,     0,  4260,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4260,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4260,  4260,     0,     0,     0,     0,     0,
     814,     0,     0,     0,     0,     0,     0,     0,     0,  4260,
    4260,     0,     0,     0,  4260,  4308,  1948,  1949,  1950,     0,
       0,     0,     0,  1951,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1952,     0,     0,  1953,   814,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1955,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4382,     0,  4383,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4391,     0,     0,     0,     0,
       0,     0,     0,  1956,     0,     0,  1957,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4449,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4454,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4472,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4502,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4515,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     153,   154,     0,   691,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   692,     0,
     164,   165,   166,   167,   693,   169,     0,   170,     0,     0,
     694,   171,   695,   696,   697,   172,   698,     0,   173,   174,
     175,  1779,   176,     0,   177,   178,  4572,     0,   179,   699,
     700,   180,   181,     0,   182,   183,   701,   702,   185,     0,
     186,   187,   188,   189,   703,   191,     0,   704,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
    3721,   705,   706,   212,     0,     0,   213,   707,   214,   708,
       0,   215,   709,   710,     0,   216,   217,   218,   711,   712,
     713,     0,     0,     0,     0,   714,   221,   715,     0,     0,
     716,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,   717,     0,   249,   250,
     251,   252,   253,   718,   719,   254,   255,     0,   256,   257,
     258,   259,   260,   720,     0,   261,   262,     0,     0,     0,
     721,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     722,   270,   723,     0,   272,     0,   273,     0,   724,     0,
     274,   275,     0,   276,   725,     0,   277,   278,     0,     0,
       0,   726,   280,   281,   282,   727,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,   728,   287,   288,   289,
     729,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,  1780,   299,     0,   730,   300,   301,     0,
       0,     0,     0,     0,   731,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,   732,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   733,   330,   331,   332,   333,   734,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     735,   341,     0,     0,   736,   343,   737,   344,     0,   345,
     738,   739,   740,   741,   742,   350,   351,   352,   353,   354,
       0,   743,   355,   356,     0,     0,   357,   358,   359,   360,
     361,   744,   914,   745,   362,   363,     0,   746,   747,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,   748,   374,     0,   375,     0,   376,   377,   749,
     379,   380,   381,   382,   750,   751,   385,   752,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   753,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
     754,   755,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     756,     0,   757,   430,   431,   432,   433,   434,   435,   758,
     759,   438,   439,   440,   441,     0,   760,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,   761,
     762,   473,   474,     0,     0,   475,   476,   763,   478,   479,
     480,   764,   765,   481,   482,   483,   484,   766,   485,   486,
       0,     0,   487,   488,   489,   490,     0,   767,   491,   492,
       0,   768,   769,   770,   771,     0,     0,     0,     0,  1781,
     497,   498,     0,   772,   773,   774,   500,   501,   502,   775,
     503,   504,   776,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   777,   513,     0,
       0,   778,   779,   780,   514,   781,   515,     0,     0,   516,
     782,     0,   783,   517,     0,   518,   519,   784,   785,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   786,     0,     0,     0,     0,
       0,   530,   531,     0,   532,     0,     0,     0,     0,     0,
       0,   787,   788,     0,     0,     0,     0,   789,     0,   790,
       0,     0,     0,   791,   792,     0,     0,   793,   794,   153,
     154,     0,   691,   156,   157,   158,   159,  1581,     0,   160,
     161,     0,     0,     0,   162,     0,     0,   692,     0,   164,
     165,   166,   167,   693,   169,     0,   170,     0,     0,  1582,
     171,   695,   696,   697,   172,   698,     0,   173,   174,   175,
       0,   176,     0,   177,   178,     0,     0,   179,   699,   700,
     180,   181,     0,   182,   183,   701,   702,   185,     0,   186,
     187,   188,   189,   703,   191,     0,   704,   193,     0,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,     0,
     705,   706,   212,     0,     0,   213,   707,   214,   708,     0,
     215,   709,   710,     0,   216,   217,   218,   711,   712,   713,
       0,     0,     0,     0,   714,   221,   715,     0,     0,  1583,
     222,   223,     0,   224,     0,     0,     0,   225,     0,   226,
     227,   228,   229,   230,     0,     0,     0,   231,     0,     0,
     232,   233,   234,     0,     0,     0,   235,     0,   236,   237,
       0,   238,   239,   240,     0,     0,   241,   242,     0,   243,
     244,   245,   246,   247,   248,   717,     0,   249,   250,   251,
     252,   253,   718,   719,   254,   255,     0,   256,   257,   258,
     259,   260,   720,     0,   261,   262,     0,     0,     0,   721,
     264,     0,   265,     0,   266,     0,   267,     0,   268,   722,
     270,   723,     0,   272,     0,   273,     0,   724,     0,   274,
     275,     0,   276,   725,     0,   277,   278,     0,     0,     0,
     726,   280,   281,   282,   727,     0,   283,   284,   285,     0,
       0,   286,     0,     0,     0,   728,   287,   288,   289,   729,
       0,     0,   290,     0,     0,     0,   291,   292,     0,   293,
     294,     0,     0,     0,   295,     0,   296,     0,     0,   297,
     298,     0,     0,   299,     0,   730,   300,   301,     0,     0,
       0,     0,     0,   731,   303,     0,   304,     0,   305,     0,
     306,   307,     0,     0,   732,     0,     0,     0,     0,   308,
       0,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   733,   330,   331,   332,   333,   734,   334,
     335,     0,     0,     0,     0,   336,   337,   338,   339,   735,
     341,     0,     0,   736,   343,   737,   344,     0,   345,   738,
     739,   740,   741,   742,   350,   351,   352,   353,   354,     0,
     743,   355,   356,     0,     0,   357,   358,   359,   360,   361,
     744,   914,   745,   362,   363,     0,   746,   747,   364,     0,
     365,   366,  1584,   367,   368,   369,     0,     0,   370,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   371,   372,
     373,   748,   374,     0,   375,     0,   376,   377,   749,   379,
     380,   381,   382,   750,   751,   385,   752,   386,     0,   387,
     388,   389,     0,   390,     0,   391,   392,   393,   394,   395,
       0,   753,   397,   398,     0,     0,   399,     0,     0,     0,
     400,   401,   402,   403,   404,     0,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,   412,   413,   414,   754,
     755,   415,   416,   417,   418,   419,   420,   421,   422,     0,
     423,     0,   424,   425,     0,   426,   427,   428,     0,   756,
       0,   757,   430,   431,   432,   433,   434,   435,   758,   759,
     438,   439,   440,   441,     0,   760,   443,     0,     0,     0,
     444,   445,   446,   447,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,   452,   453,     0,   454,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
     461,     0,   462,   463,     0,   464,     0,     0,   465,     0,
     466,     0,   467,   468,   469,   470,   471,   472,   761,   762,
     473,   474,     0,     0,   475,   476,   763,   478,   479,   480,
     764,   765,   481,   482,   483,   484,   766,   485,   486,     0,
       0,   487,   488,   489,   490,     0,   767,   491,   492,     0,
     768,   769,   770,   771,     0,     0,     0,     0,     0,   497,
     498,     0,   772,   773,   774,   500,   501,   502,   775,   503,
     504,   776,   505,   506,     0,   507,   508,     0,     0,   509,
       0,     0,   510,     0,   511,     0,   777,   513,     0,     0,
     778,   779,   780,   514,   781,   515,     0,     0,   516,   782,
       0,   783,   517,     0,   518,   519,   784,   785,     0,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,   526,
     527,   528,     0,     0,   786,     0,     0,     0,     0,     0,
     530,   531,     0,   532,     0,     0,     0,     0,     0,     0,
     787,   788,     0,     0,     0,     0,   789,     0,   790,     0,
       0,     0,   791,   792,     0,     0,   793,   794,   153,   154,
       0,   691,   156,   157,   158,   159,     0,     0,   160,   161,
       0,     0,     0,   162,     0,     0,   692,     0,   164,   165,
     166,   167,   693,   169,     0,   170,     0,     0,   694,   171,
     695,   696,   697,   172,   698,     0,   173,   174,   175,     0,
     176,     0,   177,   178,     0,     0,   179,   699,   700,   180,
     181,     0,   182,   183,   701,   702,   185,     0,   186,   187,
     188,   189,   703,   191,     0,   704,   193,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,     0,   705,
     706,   212,     0,     0,   213,   707,   214,   708,     0,   215,
     709,   710,     0,   216,   217,   218,   711,   712,   713,     0,
       0,     0,     0,   714,   221,   715,     0,     0,   716,   222,
     223,     0,   224,     0,     0,     0,   225,     0,   226,   227,
     228,   229,   230,     0,     0,     0,   231,     0,     0,   232,
     233,   234,     0,     0,     0,   235,     0,   236,   237,     0,
     238,   239,   240,     0,     0,   241,   242,     0,   243,   244,
     245,   246,   247,   248,   717,     0,   249,   250,   251,   252,
     253,   718,   719,   254,   255,     0,   256,   257,   258,   259,
     260,   720,     0,   261,   262,     0,     0,     0,   721,   264,
       0,   265,     0,   266,     0,   267,     0,   268,   722,   270,
     723,     0,   272,     0,   273,     0,   724,     0,   274,   275,
       0,   276,   725,     0,   277,   278,     0,     0,     0,   726,
     280,   281,   282,   727,     0,   283,   284,   285,     0,     0,
     286,     0,     0,     0,   728,   287,   288,   289,   729,     0,
       0,   290,     0,     0,     0,   291,   292,     0,   293,   294,
       0,     0,     0,   295,     0,   296,     0,     0,   297,   298,
       0,     0,   299,     0,   730,   300,   301,     0,     0,     0,
       0,     0,   731,   303,     0,   304,     0,   305,     0,   306,
     307,     0,     0,   732,     0,     0,     0,     0,   308,     0,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   733,   330,   331,   332,   333,   734,   334,   335,
       0,     0,     0,     0,   336,   337,   338,   339,   735,   341,
       0,     0,   736,   343,   737,   344,     0,   345,   738,   739,
     740,   741,   742,   350,   351,   352,   353,   354,     0,   743,
     355,   356,     0,     0,   357,   358,   359,   360,   361,   744,
     914,   745,   362,   363,     0,   746,   747,   364,     0,   365,
     366,     0,   367,   368,   369,     0,     0,   370,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   371,   372,   373,
     748,   374,     0,   375,     0,   376,   377,   749,   379,   380,
     381,   382,   750,   751,   385,   752,   386,     0,   387,   388,
     389,     0,   390,     0,   391,   392,   393,   394,   395,     0,
     753,   397,   398,     0,     0,   399,     0,     0,     0,   400,
     401,   402,   403,   404,     0,     0,   405,   406,   407,   408,
     409,     0,   410,   411,     0,   412,   413,   414,   754,   755,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,     0,   426,   427,   428,     0,   756,     0,
     757,   430,   431,   432,   433,   434,   435,   758,   759,   438,
     439,   440,   441,     0,   760,   443,     0,     0,     0,   444,
     445,   446,   447,     0,     0,     0,   448,     0,     0,     0,
     449,     0,   450,   451,   452,   453,     0,   454,   455,   456,
     457,   458,     0,     0,     0,     0,     0,   459,   460,   461,
       0,   462,   463,     0,   464,     0,     0,   465,     0,   466,
       0,   467,   468,   469,   470,   471,   472,   761,   762,   473,
     474,     0,     0,   475,   476,   763,   478,   479,   480,   764,
     765,   481,   482,   483,   484,   766,   485,   486,     0,     0,
     487,   488,   489,   490,     0,   767,   491,   492,     0,   768,
     769,   770,   771,     0,     0,     0,     0,     0,   497,   498,
       0,   772,   773,   774,   500,   501,   502,   775,   503,   504,
     776,   505,   506,     0,   507,   508,     0,     0,   509,     0,
       0,   510,     0,   511,     0,   777,   513,     0,     0,   778,
     779,   780,   514,   781,   515,     0,     0,   516,   782,     0,
     783,   517,     0,   518,   519,   784,   785,     0,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,   526,   527,
     528,     0,     0,   786,     0,     0,     0,     0,     0,   530,
     531,     0,   532,     0,     0,     0,     0,     0,     0,   787,
     788,   915,     0,     0,     0,   789,     0,   790,     0,     0,
       0,   791,   792,     0,     0,   793,   794,   153,   154,     0,
     691,   156,   157,   158,   159,     0,     0,   160,   161,     0,
       0,     0,   162,     0,     0,   692,     0,   164,   165,   166,
     167,   693,   169,     0,   170,     0,     0,   694,   171,   695,
     696,   697,   172,   698,     0,   173,   174,   175,     0,   176,
       0,   177,   178,     0,     0,   179,   699,   700,   180,   181,
       0,   182,   183,   701,   702,   185,     0,   186,   187,   188,
     189,   703,   191,     0,   704,   193,     0,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,   209,   210,   211,     0,   705,   706,
     212,     0,     0,   213,   707,   214,   708,     0,   215,   709,
     710,     0,   216,   217,   218,   711,   712,   713,     0,     0,
       0,     0,   714,   221,   715,     0,     0,   716,   222,   223,
       0,   224,     0,     0,     0,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,   231,     0,     0,   232,   233,
     234,     0,     0,     0,   235,     0,   236,   237,     0,   238,
     239,   240,     0,     0,   241,   242,     0,   243,   244,   245,
     246,   247,   248,   717,     0,   249,   250,   251,   252,   253,
     718,   719,   254,   255,     0,   256,   257,   258,   259,   260,
     720,     0,   261,   262,     0,     0,     0,   721,   264,     0,
     265,     0,   266,     0,   267,     0,   268,   722,   270,   723,
       0,   272,     0,   273,     0,   724,     0,   274,   275,     0,
     276,   725,     0,   277,   278,     0,     0,     0,   726,   280,
     281,   282,   727,     0,   283,   284,   285,     0,     0,   286,
       0,     0,     0,   728,   287,   288,   289,   729,     0,     0,
     290,     0,     0,     0,   291,   292,     0,   293,   294,     0,
       0,     0,   295,     0,   296,     0,     0,   297,   298,     0,
       0,   299,     0,   730,   300,   301,     0,     0,     0,     0,
       0,   731,   303,     0,   304,     0,   305,     0,   306,   307,
       0,     0,   732,     0,     0,     0,     0,   308,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   733,   330,   331,   332,   333,   734,   334,   335,     0,
       0,     0,     0,   336,   337,   338,   339,   735,   341,     0,
       0,   736,   343,   737,   344,     0,   345,   738,   739,   740,
     741,   742,   350,   351,   352,   353,   354,     0,   743,   355,
     356,     0,     0,   357,   358,   359,   360,   361,   744,   914,
     745,   362,   363,     0,   746,   747,   364,     0,   365,   366,
       0,   367,   368,   369,     0,     0,   370,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   371,   372,   373,   748,
     374,     0,   375,     0,   376,   377,   749,   379,   380,   381,
     382,   750,   751,   385,   752,   386,     0,   387,   388,   389,
       0,   390,     0,   391,   392,   393,   394,   395,     0,   753,
     397,   398,     0,     0,   399,     0,     0,     0,   400,   401,
     402,   403,   404,     0,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,   412,   413,   414,   754,   755,   415,
     416,   417,   418,   419,   420,   421,   422,     0,   423,     0,
     424,   425,     0,   426,   427,   428,     0,   756,     0,   757,
     430,   431,   432,   433,   434,   435,   758,   759,   438,   439,
     440,   441,     0,   760,   443,    42,     0,     0,   444,   445,
     446,   447,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,   452,   453,     0,   454,   455,   456,   457,
     458,     0,     0,     0,     0,     0,   459,   460,   461,     0,
     462,   463,     0,   464,     0,     0,   465,     0,   466,     0,
     467,   468,   469,   470,   471,   472,   761,   762,   473,   474,
       0,     0,   475,   476,   763,   478,   479,   480,   764,   765,
     481,   482,   483,   484,   766,   485,   486,     0,     0,   487,
     488,   489,   490,     0,   767,   491,   492,     0,   768,   769,
     770,   771,     0,     0,     0,     0,     0,   497,   498,     0,
     772,   773,   774,   500,   501,   502,   775,   503,   504,   776,
     505,   506,     0,   507,   508,     0,     0,   509,     0,     0,
     510,     0,   511,     0,   777,   513,     0,     0,   778,   779,
     780,   514,   781,   515,     0,     0,   516,   782,     0,   783,
     517,     0,   518,   519,   784,   785,     0,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,   526,   527,   528,
       0,     0,   786,     0,     0,     0,     0,     0,   530,   531,
       0,   532,     0,     0,     0,     0,     0,     0,   787,   788,
       0,     0,     0,     0,   789,     0,   790,     0,     0,     0,
     791,   792,     0,     0,   793,   794,   153,   154,     0,   691,
     156,   157,   158,   159,     0,     0,   160,   161,     0,     0,
       0,   162,     0,     0,   692,     0,   164,   165,   166,   167,
     693,   169,     0,   170,     0,     0,   694,   171,   695,   696,
     697,   172,   698,     0,   173,   174,   175,     0,   176,     0,
     177,   178,     0,     0,   179,   699,   700,   180,   181,     0,
     182,   183,   701,   702,   185,     0,   186,   187,   188,   189,
     703,   191,     0,   704,   193,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,     0,   705,   706,   212,
       0,     0,   213,   707,   214,   708,     0,   215,   709,   710,
       0,   216,   217,   218,   711,   712,   713,     0,     0,     0,
       0,   714,   221,   715,     0,     0,   716,   222,   223,     0,
     224,     0,     0,     0,   225,     0,   226,   227,   228,   229,
     230,     0,     0,     0,   231,     0,     0,   232,   233,   234,
       0,     0,     0,   235,     0,   236,   237,     0,   238,   239,
     240,     0,     0,   241,   242,     0,   243,   244,   245,   246,
     247,   248,   717,     0,   249,   250,   251,   252,   253,   718,
     719,   254,   255,     0,   256,   257,   258,   259,   260,   720,
       0,   261,   262,     0,     0,     0,   721,   264,     0,   265,
       0,   266,     0,   267,     0,   268,   722,   270,   723,     0,
     272,     0,   273,     0,   724,     0,   274,   275,     0,   276,
     725,     0,   277,   278,     0,     0,     0,   726,   280,   281,
     282,   727,     0,   283,   284,   285,     0,     0,   286,     0,
       0,     0,   728,   287,   288,   289,   729,     0,     0,   290,
       0,     0,     0,   291,   292,     0,   293,   294,     0,     0,
       0,   295,     0,   296,     0,     0,   297,   298,     0,     0,
     299,     0,   730,   300,   301,     0,     0,     0,     0,     0,
     731,   303,     0,   304,     0,   305,     0,   306,   307,     0,
       0,   732,     0,     0,     0,     0,   308,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     733,   330,   331,   332,   333,   734,   334,   335,     0,     0,
       0,     0,   336,   337,   338,   339,   735,   341,     0,     0,
     736,   343,   737,   344,     0,   345,   738,   739,   740,   741,
     742,   350,   351,   352,   353,   354,     0,   743,   355,   356,
       0,     0,   357,   358,   359,   360,   361,   744,   914,   745,
     362,   363,     0,   746,   747,   364,     0,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   371,   372,   373,   748,   374,
       0,   375,     0,   376,   377,   749,   379,   380,   381,   382,
     750,   751,   385,   752,   386,     0,   387,   388,   389,     0,
     390,     0,   391,   392,   393,   394,   395,     0,   753,   397,
     398,     0,     0,   399,     0,     0,     0,   400,   401,   402,
     403,   404,     0,     0,   405,   406,   407,   408,   409,     0,
     410,   411,     0,   412,   413,   414,   754,   755,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,     0,   426,   427,   428,     0,   756,     0,   757,   430,
     431,   432,   433,   434,   435,   758,   759,   438,   439,   440,
     441,     0,   760,   443,     0,     0,     0,   444,   445,   446,
     447,     0,     0,     0,   448,     0,     0,     0,   449,     0,
     450,   451,   452,   453,     0,   454,   455,   456,   457,   458,
       0,     0,     0,     0,     0,   459,   460,   461,     0,   462,
     463,     0,   464,     0,     0,   465,     0,   466,     0,   467,
     468,   469,   470,   471,   472,   761,   762,   473,   474,     0,
       0,   475,   476,   763,   478,   479,   480,   764,   765,   481,
     482,   483,   484,   766,   485,   486,     0,     0,   487,   488,
     489,   490,     0,   767,   491,   492,     0,   768,   769,   770,
     771,     0,     0,     0,     0,     0,   497,   498,     0,   772,
     773,   774,   500,   501,   502,   775,   503,   504,   776,   505,
     506,     0,   507,   508,     0,     0,   509,     0,     0,   510,
       0,   511,     0,   777,   513,     0,     0,   778,   779,   780,
     514,   781,   515,     0,     0,   516,   782,     0,   783,   517,
       0,   518,   519,   784,   785,     0,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,   526,   527,   528,     0,
       0,   786,     0,     0,     0,     0,     0,   530,   531,     0,
     532,     0,     0,     0,     0,     0,     0,   787,   788,  2313,
       0,     0,     0,   789,     0,   790,     0,     0,     0,   791,
     792,     0,     0,   793,   794,   153,   154,     0,   691,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   692,     0,   164,   165,   166,   167,   693,
     169,     0,   170,     0,     0,   694,   171,   695,   696,   697,
     172,   698,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,   699,   700,   180,   181,     0,   182,
     183,   701,   702,   185,     0,   186,   187,   188,   189,   703,
     191,     0,   704,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,   705,   706,   212,     0,
       0,   213,   707,   214,   708,     0,   215,   709,   710,     0,
     216,   217,   218,   711,   712,   713,     0,     0,     0,     0,
     714,   221,   715,     0,     0,   716,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,   717,     0,   249,   250,   251,   252,   253,   718,   719,
     254,   255,     0,   256,   257,   258,   259,   260,   720,     0,
     261,   262,     0,     0,     0,   721,   264,  2370,   265,     0,
     266,     0,   267,     0,   268,   722,   270,   723,     0,   272,
       0,   273,     0,   724,     0,   274,   275,     0,   276,   725,
       0,   277,   278,     0,     0,     0,   726,   280,   281,   282,
     727,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,   728,   287,   288,   289,   729,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,   730,   300,   301,     0,     0,     0,     0,     0,   731,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
     732,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   733,
     330,   331,   332,   333,   734,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   735,   341,     0,     0,   736,
     343,   737,   344,     0,   345,   738,   739,   740,   741,   742,
     350,   351,   352,   353,   354,     0,   743,   355,   356,     0,
       0,   357,   358,   359,   360,   361,   744,   914,   745,   362,
     363,     0,   746,   747,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,   748,   374,     0,
     375,     0,   376,   377,   749,   379,   380,   381,   382,   750,
     751,   385,   752,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   753,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,   754,   755,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   756,     0,   757,   430,   431,
     432,   433,   434,   435,   758,   759,   438,   439,   440,   441,
       0,   760,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,   761,   762,   473,   474,     0,     0,
     475,   476,   763,   478,   479,   480,   764,   765,   481,   482,
     483,   484,   766,   485,   486,     0,     0,   487,   488,   489,
     490,     0,   767,   491,   492,     0,   768,   769,   770,   771,
       0,     0,     0,     0,     0,   497,   498,     0,   772,   773,
     774,   500,   501,   502,   775,   503,   504,   776,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   777,   513,     0,     0,   778,   779,   780,   514,
     781,   515,     0,     0,   516,   782,     0,   783,   517,     0,
     518,   519,   784,   785,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     786,     0,     0,     0,     0,     0,   530,   531,     0,   532,
       0,     0,     0,     0,     0,     0,   787,   788,     0,     0,
       0,     0,   789,     0,   790,     0,     0,     0,   791,   792,
       0,     0,   793,   794,   153,   154,     0,   691,   156,   157,
     158,   159,     0,     0,   160,   161,     0,     0,     0,   162,
       0,     0,   692,     0,   164,   165,   166,   167,   693,   169,
       0,   170,     0,     0,   694,   171,   695,   696,   697,   172,
     698,     0,   173,   174,   175,     0,   176,     0,   177,   178,
       0,     0,   179,   699,   700,   180,   181,     0,   182,   183,
     701,   702,   185,     0,   186,   187,   188,   189,   703,   191,
       0,   704,   193,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   211,     0,   705,   706,   212,     0,     0,
     213,   707,   214,   708,     0,   215,   709,   710,     0,   216,
     217,   218,   711,   712,   713,     0,     0,     0,     0,   714,
     221,   715,     0,     0,   716,   222,   223,     0,   224,     0,
       0,     0,   225,     0,   226,   227,   228,   229,   230,     0,
       0,     0,   231,     0,     0,   232,   233,   234,     0,     0,
       0,   235,     0,   236,   237,     0,   238,   239,   240,     0,
       0,   241,   242,     0,   243,   244,   245,   246,   247,   248,
     717,     0,   249,   250,   251,   252,   253,   718,   719,   254,
     255,     0,   256,   257,   258,   259,   260,   720,     0,   261,
     262,     0,     0,     0,   721,   264,  2372,   265,     0,   266,
       0,   267,     0,   268,   722,   270,   723,     0,   272,     0,
     273,     0,   724,     0,   274,   275,     0,   276,   725,     0,
     277,   278,     0,     0,     0,   726,   280,   281,   282,   727,
       0,   283,   284,   285,     0,     0,   286,     0,     0,     0,
     728,   287,   288,   289,   729,     0,     0,   290,     0,     0,
       0,   291,   292,     0,   293,   294,     0,     0,     0,   295,
       0,   296,     0,     0,   297,   298,     0,     0,   299,     0,
     730,   300,   301,     0,     0,     0,     0,     0,   731,   303,
       0,   304,     0,   305,     0,   306,   307,     0,     0,   732,
       0,     0,     0,     0,   308,     0,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   733,   330,
     331,   332,   333,   734,   334,   335,     0,     0,     0,     0,
     336,   337,   338,   339,   735,   341,     0,     0,   736,   343,
     737,   344,     0,   345,   738,   739,   740,   741,   742,   350,
     351,   352,   353,   354,     0,   743,   355,   356,     0,     0,
     357,   358,   359,   360,   361,   744,   914,   745,   362,   363,
       0,   746,   747,   364,     0,   365,   366,     0,   367,   368,
     369,     0,     0,   370,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   371,   372,   373,   748,   374,     0,   375,
       0,   376,   377,   749,   379,   380,   381,   382,   750,   751,
     385,   752,   386,     0,   387,   388,   389,     0,   390,     0,
     391,   392,   393,   394,   395,     0,   753,   397,   398,     0,
       0,   399,     0,     0,     0,   400,   401,   402,   403,   404,
       0,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,   412,   413,   414,   754,   755,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,     0,
     426,   427,   428,     0,   756,     0,   757,   430,   431,   432,
     433,   434,   435,   758,   759,   438,   439,   440,   441,     0,
     760,   443,     0,     0,     0,   444,   445,   446,   447,     0,
       0,     0,   448,     0,     0,     0,   449,     0,   450,   451,
     452,   453,     0,   454,   455,   456,   457,   458,     0,     0,
       0,     0,     0,   459,   460,   461,     0,   462,   463,     0,
     464,     0,     0,   465,     0,   466,     0,   467,   468,   469,
     470,   471,   472,   761,   762,   473,   474,     0,     0,   475,
     476,   763,   478,   479,   480,   764,   765,   481,   482,   483,
     484,   766,   485,   486,     0,     0,   487,   488,   489,   490,
       0,   767,   491,   492,     0,   768,   769,   770,   771,     0,
       0,     0,     0,     0,   497,   498,     0,   772,   773,   774,
     500,   501,   502,   775,   503,   504,   776,   505,   506,     0,
     507,   508,     0,     0,   509,     0,     0,   510,     0,   511,
       0,   777,   513,     0,     0,   778,   779,   780,   514,   781,
     515,     0,     0,   516,   782,     0,   783,   517,     0,   518,
     519,   784,   785,     0,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,   526,   527,   528,     0,     0,   786,
       0,     0,     0,     0,     0,   530,   531,     0,   532,     0,
       0,     0,     0,     0,     0,   787,   788,     0,     0,     0,
       0,   789,     0,   790,     0,     0,     0,   791,   792,     0,
       0,   793,   794,   153,   154,     0,   691,   156,   157,   158,
     159,     0,     0,   160,   161,     0,     0,     0,   162,     0,
       0,   692,     0,   164,   165,   166,   167,   693,   169,     0,
     170,     0,     0,   694,   171,   695,   696,   697,   172,   698,
       0,   173,   174,   175,     0,   176,     0,   177,   178,     0,
       0,   179,   699,   700,   180,   181,     0,   182,   183,   701,
     702,   185,     0,   186,   187,   188,   189,   703,   191,     0,
     704,   193,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,     0,   705,   706,   212,     0,     0,   213,
     707,   214,   708,     0,   215,   709,   710,     0,   216,   217,
     218,   711,   712,   713,     0,     0,     0,     0,   714,   221,
     715,     0,     0,   716,   222,   223,     0,   224,     0,     0,
       0,   225,     0,   226,   227,   228,   229,   230,     0,     0,
       0,   231,     0,     0,   232,   233,   234,     0,     0,     0,
     235,     0,   236,   237,     0,   238,   239,   240,     0,     0,
     241,   242,     0,   243,   244,   245,   246,   247,   248,   717,
       0,   249,   250,   251,   252,   253,   718,   719,   254,   255,
       0,   256,   257,   258,   259,   260,   720,     0,   261,   262,
       0,     0,     0,   721,   264,  2374,   265,     0,   266,     0,
     267,     0,   268,   722,   270,   723,     0,   272,     0,   273,
       0,   724,     0,   274,   275,     0,   276,   725,     0,   277,
     278,     0,     0,     0,   726,   280,   281,   282,   727,     0,
     283,   284,   285,     0,     0,   286,     0,     0,     0,   728,
     287,   288,   289,   729,     0,     0,   290,     0,     0,     0,
     291,   292,     0,   293,   294,     0,     0,     0,   295,     0,
     296,     0,     0,   297,   298,     0,     0,   299,     0,   730,
     300,   301,     0,     0,     0,     0,     0,   731,   303,     0,
     304,     0,   305,     0,   306,   307,     0,     0,   732,     0,
       0,     0,     0,   308,     0,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   733,   330,   331,
     332,   333,   734,   334,   335,     0,     0,     0,     0,   336,
     337,   338,   339,   735,   341,     0,     0,   736,   343,   737,
     344,     0,   345,   738,   739,   740,   741,   742,   350,   351,
     352,   353,   354,     0,   743,   355,   356,     0,     0,   357,
     358,   359,   360,   361,   744,   914,   745,   362,   363,     0,
     746,   747,   364,     0,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   371,   372,   373,   748,   374,     0,   375,     0,
     376,   377,   749,   379,   380,   381,   382,   750,   751,   385,
     752,   386,     0,   387,   388,   389,     0,   390,     0,   391,
     392,   393,   394,   395,     0,   753,   397,   398,     0,     0,
     399,     0,     0,     0,   400,   401,   402,   403,   404,     0,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
     412,   413,   414,   754,   755,   415,   416,   417,   418,   419,
     420,   421,   422,     0,   423,     0,   424,   425,     0,   426,
     427,   428,     0,   756,     0,   757,   430,   431,   432,   433,
     434,   435,   758,   759,   438,   439,   440,   441,     0,   760,
     443,     0,     0,     0,   444,   445,   446,   447,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,   452,
     453,     0,   454,   455,   456,   457,   458,     0,     0,     0,
       0,     0,   459,   460,   461,     0,   462,   463,     0,   464,
       0,     0,   465,     0,   466,     0,   467,   468,   469,   470,
     471,   472,   761,   762,   473,   474,     0,     0,   475,   476,
     763,   478,   479,   480,   764,   765,   481,   482,   483,   484,
     766,   485,   486,     0,     0,   487,   488,   489,   490,     0,
     767,   491,   492,     0,   768,   769,   770,   771,     0,     0,
       0,     0,     0,   497,   498,     0,   772,   773,   774,   500,
     501,   502,   775,   503,   504,   776,   505,   506,     0,   507,
     508,     0,     0,   509,     0,     0,   510,     0,   511,     0,
     777,   513,     0,     0,   778,   779,   780,   514,   781,   515,
       0,     0,   516,   782,     0,   783,   517,     0,   518,   519,
     784,   785,     0,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,   526,   527,   528,     0,     0,   786,     0,
       0,     0,     0,     0,   530,   531,     0,   532,     0,     0,
       0,     0,     0,     0,   787,   788,     0,     0,     0,     0,
     789,     0,   790,     0,     0,     0,   791,   792,     0,     0,
     793,   794,   153,   154,     0,   691,   156,   157,   158,   159,
       0,     0,   160,   161,     0,     0,     0,   162,     0,     0,
     692,     0,   164,   165,   166,   167,   693,   169,     0,   170,
       0,     0,   694,   171,   695,   696,   697,   172,   698,     0,
     173,   174,   175,     0,   176,     0,   177,   178,     0,     0,
     179,   699,   700,   180,   181,     0,   182,   183,   701,   702,
     185,     0,   186,   187,   188,   189,   703,   191,     0,   704,
     193,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,     0,   705,   706,   212,     0,     0,   213,   707,
     214,   708,     0,   215,   709,   710,     0,   216,   217,   218,
     711,   712,   713,     0,     0,     0,     0,   714,   221,   715,
       0,     0,   716,   222,   223,     0,   224,     0,     0,     0,
     225,     0,   226,   227,   228,   229,   230,     0,     0,     0,
     231,     0,     0,   232,   233,   234,     0,     0,     0,   235,
       0,   236,   237,     0,   238,   239,   240,     0,     0,   241,
     242,     0,   243,   244,   245,   246,   247,   248,   717,     0,
     249,   250,   251,   252,   253,   718,   719,   254,   255,     0,
     256,   257,   258,   259,   260,   720,     0,   261,   262,     0,
       0,     0,   721,   264,     0,   265,     0,   266,     0,   267,
       0,   268,   722,   270,   723,     0,   272,     0,   273,     0,
     724,     0,   274,   275,     0,   276,   725,     0,   277,   278,
       0,     0,     0,   726,   280,   281,   282,   727,     0,   283,
     284,   285,     0,     0,   286,     0,     0,     0,   728,   287,
     288,   289,   729,     0,     0,   290,     0,     0,     0,   291,
     292,     0,   293,   294,     0,     0,     0,   295,     0,   296,
       0,     0,   297,   298,     0,     0,   299,     0,   730,   300,
     301,     0,     0,     0,     0,     0,   731,   303,     0,   304,
       0,   305,     0,   306,   307,     0,     0,   732,     0,     0,
       0,     0,   308,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   733,   330,   331,   332,
     333,   734,   334,   335,     0,     0,     0,     0,   336,   337,
     338,   339,   735,   341,     0,     0,   736,   343,   737,   344,
       0,   345,   738,   739,   740,   741,   742,   350,   351,   352,
     353,   354,     0,   743,   355,   356,     0,     0,   357,   358,
     359,   360,   361,   744,   914,   745,   362,   363,     0,   746,
     747,   364,     0,   365,   366,     0,   367,   368,   369,     0,
       0,   370,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   371,   372,   373,   748,   374,     0,   375,     0,   376,
     377,   749,   379,   380,   381,   382,   750,   751,   385,   752,
     386,     0,   387,   388,   389,     0,   390,     0,   391,   392,
     393,   394,   395,     0,   753,   397,   398,     0,     0,   399,
       0,     0,     0,   400,   401,   402,   403,   404,     0,     0,
     405,   406,   407,   408,   409,     0,   410,   411,     0,   412,
     413,   414,   754,   755,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,     0,   426,   427,
     428,     0,   756,     0,   757,   430,   431,   432,   433,   434,
     435,   758,   759,   438,   439,   440,   441,     0,   760,   443,
       0,     0,     0,   444,   445,   446,   447,     0,     0,     0,
     448,     0,     0,     0,   449,     0,   450,   451,   452,   453,
       0,   454,   455,   456,   457,   458,     0,     0,     0,     0,
       0,   459,   460,   461,     0,   462,   463,     0,   464,     0,
       0,   465,     0,   466,     0,   467,   468,   469,   470,   471,
     472,   761,   762,   473,   474,     0,     0,   475,   476,   763,
     478,   479,   480,   764,   765,   481,   482,   483,   484,   766,
     485,   486,     0,     0,   487,   488,   489,   490,     0,   767,
     491,   492,     0,   768,   769,   770,   771,     0,     0,     0,
       0,     0,   497,   498,     0,   772,   773,   774,   500,   501,
     502,   775,   503,   504,   776,   505,   506,     0,   507,   508,
       0,     0,   509,     0,     0,   510,     0,   511,     0,   777,
     513,     0,     0,   778,   779,   780,   514,   781,   515,     0,
       0,   516,   782,     0,   783,   517,     0,   518,   519,   784,
     785,     0,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,   526,   527,   528,     0,     0,   786,     0,     0,
       0,     0,     0,   530,   531,     0,   532,     0,     0,     0,
       0,     0,     0,   787,   788,     0,     0,     0,     0,   789,
       0,   790,     0,     0,     0,   791,   792,     0,     0,   793,
     794,   153,   154,     0,   691,   156,   157,   158,   159,     0,
       0,   160,   161,     0,     0,     0,   162,     0,     0,   692,
       0,   164,   165,   166,   167,   693,   169,     0,   170,     0,
       0,   694,   171,   695,   696,   697,   172,   698,     0,   173,
     174,   175,     0,   176,     0,   177,   178,     0,     0,   179,
     699,   700,   180,   181,     0,   182,   183,   701,   702,   185,
       0,   186,   187,   188,   189,   703,   191,     0,   704,   193,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,     0,   705,   706,   212,     0,     0,   213,   707,   214,
     708,     0,   215,   709,   710,     0,   216,   217,   218,   711,
     712,   713,     0,     0,     0,     0,   714,   221,   715,     0,
       0,   716,   222,   223,     0,   224,     0,     0,     0,   225,
       0,   226,   227,   228,   229,   230,     0,     0,     0,   231,
       0,     0,   232,   233,   234,     0,     0,     0,   235,     0,
     236,   237,     0,   238,   239,   240,     0,     0,   241,   242,
       0,   243,   244,   245,   246,   247,   248,   717,     0,   249,
     250,   251,   252,   253,   718,   719,   254,   255,     0,   256,
     257,   258,   259,   260,   720,     0,   261,   262,     0,     0,
       0,   721,   264,     0,   265,     0,   266,     0,   267,     0,
     268,   722,   270,   723,     0,   272,     0,   273,     0,   724,
       0,   274,   275,     0,   276,   725,     0,   277,   278,     0,
       0,     0,   726,   280,   281,   282,   727,     0,   283,   284,
     285,     0,     0,   286,     0,     0,     0,   728,   287,   288,
     289,   729,     0,     0,   290,     0,     0,     0,   291,   292,
       0,   293,   294,     0,     0,     0,   295,     0,   296,     0,
       0,   297,   298,     0,     0,   299,     0,   730,   300,   301,
       0,     0,     0,     0,     0,   731,   303,     0,   304,     0,
     305,     0,   306,   307,     0,     0,   732,     0,     0,     0,
       0,   308,     0,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   733,   330,   331,   332,   333,
     734,   334,   335,     0,     0,     0,     0,   336,   337,   338,
     339,   735,   341,     0,     0,   736,   343,   737,   344,     0,
     345,   738,   739,   740,   741,   742,   350,   351,   352,   353,
     354,     0,   743,   355,   356,     0,     0,   357,   358,   359,
     360,   361,   744,   914,   745,   362,   363,     0,   746,   747,
     364,     0,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     371,   372,   373,   748,   374,     0,   375,     0,   376,   377,
     749,   379,   380,   381,   382,   750,   751,   385,   752,   386,
       0,   387,   388,   389,     0,   390,     0,   391,   392,   393,
     394,   395,     0,   753,   397,   398,     0,     0,   399,     0,
       0,     0,   400,   401,   402,   403,   404,     0,     0,   405,
     406,   407,   408,   409,     0,   410,   411,     0,   412,   413,
     414,   754,   755,   415,   416,   417,   418,   419,   420,   421,
     422,     0,   423,     0,   424,   425,     0,   426,   427,   428,
       0,   756,     0,   757,   430,   431,   432,   433,   434,   435,
     758,   759,   438,   439,   440,   441,     0,   760,   443,     0,
       0,     0,   444,   445,   446,   447,     0,     0,     0,   448,
       0,     0,     0,   449,     0,   450,   451,   452,   453,     0,
     454,   455,   456,   457,   458,     0,     0,     0,     0,     0,
     459,   460,   461,     0,   462,   463,     0,   464,     0,     0,
     465,     0,   466,     0,   467,   468,   469,   470,   471,   472,
     761,   762,   473,   474,     0,     0,   475,   476,   763,   478,
     479,   480,   764,   765,   481,   482,   483,   484,   766,   485,
     486,     0,     0,   487,   488,   489,   490,     0,   767,   491,
     492,     0,   768,   769,   770,   771,     0,     0,     0,     0,
       0,   497,   498,     0,   772,   773,   774,   500,   501,   502,
     775,   503,   504,   776,   505,   506,     0,   507,   508,     0,
       0,   509,     0,     0,   510,     0,   511,     0,   777,   513,
       0,     0,   778,   779,   780,   514,   781,   515,     0,     0,
     516,   782,     0,   783,   517,     0,   518,   519,   784,   785,
       0,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,   526,   527,   528,     0,     0,   786,     0,     0,     0,
       0,     0,   530,   531,     0,   532,     0,     0,     0,     0,
       0,     0,   787,   788,     0,     0,     0,     0,   789,     0,
    1130,     0,     0,     0,   791,   792,     0,     0,   793,   794,
     153,   154,     0,   691,   156,   157,   158,   159,  2072,     0,
     160,   161,     0,     0,     0,  2073,     0,     0,   692,     0,
     164,   165,   166,   167,   693,   169,     0,   170,     0,     0,
     694,   171,   695,   696,   697,   172,   698,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,   699,
     700,   180,   181,     0,   182,   183,   701,   702,   185,     0,
     186,   187,   188,   189,   703,   191,     0,   704,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,   705,   706,   212,     0,     0,   213,   707,   214,   708,
       0,   215,   709,   710,     0,   216,   217,   218,   711,   712,
     713,     0,     0,     0,     0,   714,   221,   715,     0,     0,
     716,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,   717,     0,   249,   250,
     251,   252,   253,   718,   719,   254,   255,     0,   256,   257,
     258,   259,   260,   720,     0,   261,   262,     0,     0,     0,
     721,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     722,   270,   723,     0,   272,     0,   273,     0,   724,     0,
     274,   275,     0,   276,   725,     0,   277,   278,     0,     0,
       0,   726,   280,   281,   282,   727,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,   728,   287,   288,   289,
     729,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,   730,   300,   301,     0,
       0,     0,     0,     0,   731,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,   732,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   733,   330,   331,   332,   333,   734,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     735,   341,     0,     0,   736,   343,   737,   344,     0,   345,
     738,   739,   740,   741,   742,   350,   351,   352,   353,   354,
       0,   743,   355,   356,     0,     0,   357,   358,   359,   360,
     361,   744,     0,   745,   362,   363,     0,   746,   747,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,   748,   374,     0,   375,     0,   376,   377,   749,
     379,   380,   381,   382,   750,   751,   385,   752,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   753,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
     754,   755,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     756,     0,   757,   430,   431,   432,   433,   434,   435,   758,
     759,   438,   439,   440,   441,     0,   760,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,   761,
     762,   473,   474,     0,     0,   475,   476,   763,   478,   479,
     480,   764,   765,   481,   482,   483,   484,   766,   485,   486,
       0,     0,   487,   488,   489,   490,     0,   767,   491,   492,
       0,   768,   769,   770,   771,     0,     0,     0,     0,     0,
     497,   498,     0,   772,   773,   774,   500,   501,   502,   775,
     503,   504,   776,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   777,   513,     0,
       0,   778,   779,   780,   514,   781,   515,     0,     0,   516,
     782,     0,   783,   517,     0,   518,   519,   784,   785,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   786,     0,     0,     0,     0,
       0,   530,   531,     0,   532,     0,     0,     0,     0,     0,
       0,   787,   788,     0,     0,     0,     0,   789,     0,   790,
       0,     0,     0,   791,   792,     0,     0,   793,   794,   153,
     154,     0,   691,   156,   157,   158,   159,     0,     0,   160,
     161,     0,     0,     0,   162,     0,     0,   692,     0,   164,
     165,   166,   167,   693,   169,     0,   170,     0,     0,   694,
     171,   695,   696,   697,   172,   698,     0,   173,   174,   175,
       0,   176,     0,   177,   178,     0,     0,   179,   699,   700,
     180,   181,     0,   182,   183,   701,   702,   185,     0,   186,
     187,   188,   189,   703,   191,     0,   704,   193,     0,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,     0,
     705,   706,   212,     0,     0,   213,   707,   214,   708,     0,
     215,   709,   710,     0,   216,   217,   218,   711,   712,   713,
       0,     0,     0,     0,   714,   221,   715,     0,     0,   716,
     222,   223,     0,   224,     0,     0,     0,   225,     0,   226,
     227,   228,   229,   230,     0,     0,     0,   231,     0,     0,
     232,   233,   234,     0,     0,     0,   235,     0,   236,   237,
       0,   238,   239,   240,     0,     0,   241,   242,     0,   243,
     244,   245,   246,   247,   248,   717,     0,   249,   250,   251,
     252,   253,   718,   719,   254,   255,     0,   256,   257,   258,
     259,   260,   720,     0,   261,   262,     0,     0,     0,   721,
     264,     0,   265,     0,   266,     0,   267,     0,   268,   722,
     270,   723,     0,   272,     0,   273,     0,   724,     0,   274,
     275,     0,   276,   725,     0,   277,   278,     0,     0,     0,
     726,   280,   281,   282,   727,     0,   283,   284,   285,     0,
       0,   286,     0,     0,     0,   728,   287,   288,   289,  2874,
       0,     0,   290,     0,     0,     0,   291,   292,     0,   293,
     294,     0,     0,     0,   295,     0,   296,     0,     0,   297,
     298,     0,     0,   299,     0,   730,   300,   301,     0,     0,
       0,     0,     0,   731,   303,     0,   304,     0,   305,     0,
     306,   307,     0,     0,   732,     0,     0,     0,     0,   308,
       0,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   733,   330,   331,   332,   333,   734,   334,
     335,     0,     0,     0,     0,   336,   337,   338,   339,   735,
     341,     0,     0,   736,   343,   737,   344,     0,   345,   738,
     739,   740,   741,   742,   350,   351,   352,   353,   354,     0,
     743,   355,   356,     0,     0,   357,   358,   359,   360,   361,
     744,   914,   745,   362,   363,     0,   746,   747,   364,     0,
     365,   366,     0,   367,   368,   369,     0,     0,   370,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   371,   372,
     373,   748,   374,     0,   375,     0,   376,   377,   749,   379,
     380,   381,   382,   750,   751,   385,   752,   386,     0,   387,
     388,   389,     0,   390,     0,   391,   392,   393,   394,   395,
       0,   753,   397,   398,     0,     0,   399,     0,     0,     0,
     400,   401,   402,   403,   404,     0,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,   412,   413,   414,   754,
     755,   415,   416,   417,   418,   419,   420,   421,   422,     0,
     423,     0,   424,   425,     0,   426,   427,   428,     0,   756,
       0,   757,   430,   431,   432,   433,   434,   435,   758,   759,
     438,   439,   440,   441,     0,   760,   443,     0,     0,     0,
     444,   445,   446,   447,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,   452,   453,     0,   454,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
     461,     0,   462,   463,     0,   464,     0,     0,   465,     0,
     466,     0,   467,   468,   469,   470,   471,   472,   761,   762,
     473,   474,     0,     0,   475,   476,   763,   478,   479,   480,
     764,   765,   481,   482,   483,   484,   766,   485,   486,     0,
       0,   487,   488,   489,   490,     0,   767,   491,   492,     0,
     768,   769,   770,   771,     0,     0,     0,     0,     0,   497,
     498,     0,   772,   773,   774,   500,   501,   502,   775,   503,
     504,   776,   505,   506,     0,   507,   508,     0,     0,   509,
       0,     0,   510,     0,   511,     0,   777,   513,     0,     0,
     778,   779,   780,   514,   781,   515,     0,     0,   516,   782,
       0,   783,   517,     0,   518,   519,   784,   785,     0,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,   526,
     527,   528,     0,     0,   786,     0,     0,     0,     0,     0,
     530,   531,     0,   532,     0,     0,     0,     0,     0,     0,
     787,   788,     0,     0,     0,     0,   789,     0,   790,     0,
       0,     0,   791,   792,     0,     0,   793,   794,   153,   154,
       0,   691,   156,   157,   158,   159,     0,     0,   160,   161,
       0,     0,     0,   162,     0,     0,   692,     0,   164,   165,
     166,   167,   693,   169,     0,   170,     0,     0,   694,   171,
     695,   696,   697,   172,   698,     0,   173,   174,   175,     0,
     176,     0,   177,   178,     0,     0,   179,   699,   700,   180,
     181,     0,   182,   183,   701,   702,   185,     0,   186,   187,
     188,   189,   703,   191,     0,   704,   193,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,     0,   705,
     706,   212,     0,     0,   213,   707,   214,   708,     0,   215,
     709,   710,     0,   216,   217,   218,   711,   712,   713,     0,
       0,     0,     0,   714,   221,   715,     0,     0,   716,   222,
     223,     0,   224,     0,     0,     0,   225,     0,   226,   227,
     228,   229,   230,     0,     0,     0,   231,     0,     0,   232,
     233,   234,     0,     0,     0,   235,     0,   236,   237,     0,
     238,   239,   240,     0,     0,   241,   242,     0,   243,   244,
     245,   246,   247,   248,   717,     0,   249,   250,   251,   252,
     253,   718,   719,   254,   255,     0,   256,   257,   258,   259,
     260,   720,     0,   261,   262,     0,     0,     0,   721,   264,
       0,   265,     0,   266,     0,   267,     0,   268,   722,   270,
     723,     0,   272,     0,   273,     0,   724,     0,   274,   275,
       0,   276,   725,     0,   277,   278,     0,     0,     0,   726,
     280,   281,   282,   727,     0,   283,   284,   285,     0,     0,
     286,     0,     0,     0,   728,   287,   288,   289,  2920,     0,
       0,   290,     0,     0,     0,   291,   292,     0,   293,   294,
       0,     0,     0,   295,     0,   296,     0,     0,   297,   298,
       0,     0,   299,     0,   730,   300,   301,     0,     0,     0,
       0,     0,   731,   303,     0,   304,     0,   305,     0,   306,
     307,     0,     0,   732,     0,     0,     0,     0,   308,     0,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   733,   330,   331,   332,   333,   734,   334,   335,
       0,     0,     0,     0,   336,   337,   338,   339,   735,   341,
       0,     0,   736,   343,   737,   344,     0,   345,   738,   739,
     740,   741,   742,   350,   351,   352,   353,   354,     0,   743,
     355,   356,     0,     0,   357,   358,   359,   360,   361,   744,
     914,   745,   362,   363,     0,   746,   747,   364,     0,   365,
     366,     0,   367,   368,   369,     0,     0,   370,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   371,   372,   373,
     748,   374,     0,   375,     0,   376,   377,   749,   379,   380,
     381,   382,   750,   751,   385,   752,   386,     0,   387,   388,
     389,     0,   390,     0,   391,   392,   393,   394,   395,     0,
     753,   397,   398,     0,     0,   399,     0,     0,     0,   400,
     401,   402,   403,   404,     0,     0,   405,   406,   407,   408,
     409,     0,   410,   411,     0,   412,   413,   414,   754,   755,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,     0,   426,   427,   428,     0,   756,     0,
     757,   430,   431,   432,   433,   434,   435,   758,   759,   438,
     439,   440,   441,     0,   760,   443,     0,     0,     0,   444,
     445,   446,   447,     0,     0,     0,   448,     0,     0,     0,
     449,     0,   450,   451,   452,   453,     0,   454,   455,   456,
     457,   458,     0,     0,     0,     0,     0,   459,   460,   461,
       0,   462,   463,     0,   464,     0,     0,   465,     0,   466,
       0,   467,   468,   469,   470,   471,   472,   761,   762,   473,
     474,     0,     0,   475,   476,   763,   478,   479,   480,   764,
     765,   481,   482,   483,   484,   766,   485,   486,     0,     0,
     487,   488,   489,   490,     0,   767,   491,   492,     0,   768,
     769,   770,   771,     0,     0,     0,     0,     0,   497,   498,
       0,   772,   773,   774,   500,   501,   502,   775,   503,   504,
     776,   505,   506,     0,   507,   508,     0,     0,   509,     0,
       0,   510,     0,   511,     0,   777,   513,     0,     0,   778,
     779,   780,   514,   781,   515,     0,     0,   516,   782,     0,
     783,   517,     0,   518,   519,   784,   785,     0,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,   526,   527,
     528,     0,     0,   786,     0,     0,     0,     0,     0,   530,
     531,     0,   532,     0,     0,     0,     0,     0,     0,   787,
     788,     0,     0,     0,     0,   789,     0,   790,     0,     0,
       0,   791,   792,     0,     0,   793,   794,   153,   154,     0,
     691,   156,   157,   158,   159,     0,     0,   160,   161,     0,
       0,     0,   162,     0,     0,   692,     0,   164,   165,   166,
     167,   693,   169,     0,   170,     0,     0,   694,   171,   695,
     696,   697,   172,   698,     0,   173,   174,   175,     0,   176,
       0,   177,   178,     0,     0,   179,   699,   700,   180,   181,
       0,   182,   183,   701,   702,   185,     0,   186,   187,   188,
     189,   703,   191,     0,   704,   193,     0,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,   209,   210,   211,     0,   705,   706,
     212,     0,     0,   213,   707,   214,   708,     0,   215,   709,
     710,     0,   216,   217,   218,   711,   712,   713,     0,     0,
       0,     0,   714,   221,   715,     0,     0,  3720,   222,   223,
       0,   224,     0,     0,     0,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,   231,     0,     0,   232,   233,
     234,     0,     0,     0,   235,     0,   236,   237,     0,   238,
     239,   240,     0,     0,   241,   242,     0,   243,   244,   245,
     246,   247,   248,   717,     0,   249,   250,   251,   252,   253,
     718,   719,   254,   255,     0,   256,   257,   258,   259,   260,
     720,     0,   261,   262,     0,     0,     0,   721,   264,     0,
     265,     0,   266,     0,   267,     0,   268,   722,   270,   723,
       0,   272,     0,   273,     0,   724,     0,   274,   275,     0,
     276,   725,     0,   277,   278,     0,     0,     0,   726,   280,
     281,   282,   727,     0,   283,   284,   285,     0,     0,   286,
       0,     0,     0,   728,   287,   288,   289,   729,     0,     0,
     290,     0,     0,     0,   291,   292,     0,   293,   294,     0,
       0,     0,   295,     0,   296,     0,     0,   297,   298,     0,
       0,   299,     0,   730,   300,   301,     0,     0,     0,     0,
       0,   731,   303,     0,   304,     0,   305,     0,   306,   307,
       0,     0,   732,     0,     0,     0,     0,   308,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   733,   330,   331,   332,   333,   734,   334,   335,     0,
       0,     0,     0,   336,   337,   338,   339,   735,   341,     0,
       0,   736,   343,   737,   344,     0,   345,   738,   739,   740,
     741,   742,   350,   351,   352,   353,   354,     0,   743,   355,
     356,     0,     0,   357,   358,   359,   360,   361,   744,   914,
     745,   362,   363,     0,   746,   747,   364,     0,   365,   366,
       0,   367,   368,   369,     0,     0,   370,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   371,   372,   373,   748,
     374,     0,   375,     0,   376,   377,   749,   379,   380,   381,
     382,   750,   751,   385,   752,   386,     0,   387,   388,   389,
       0,   390,     0,   391,   392,   393,   394,   395,     0,   753,
     397,   398,     0,     0,   399,     0,     0,     0,   400,   401,
     402,   403,   404,     0,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,   412,   413,   414,   754,   755,   415,
     416,   417,   418,   419,   420,   421,   422,     0,   423,     0,
     424,   425,     0,   426,   427,   428,     0,   756,     0,   757,
     430,   431,   432,   433,   434,   435,   758,   759,   438,   439,
     440,   441,     0,   760,   443,     0,     0,     0,   444,   445,
     446,   447,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,   452,   453,     0,   454,   455,   456,   457,
     458,     0,     0,     0,     0,     0,   459,   460,   461,     0,
     462,   463,     0,   464,     0,     0,   465,     0,   466,     0,
     467,   468,   469,   470,   471,   472,   761,   762,   473,   474,
       0,     0,   475,   476,   763,   478,   479,   480,   764,   765,
     481,   482,   483,   484,   766,   485,   486,     0,     0,   487,
     488,   489,   490,     0,   767,   491,   492,     0,   768,   769,
     770,   771,     0,     0,     0,     0,     0,   497,   498,     0,
     772,   773,   774,   500,   501,   502,   775,   503,   504,   776,
     505,   506,     0,   507,   508,     0,     0,   509,     0,     0,
     510,     0,   511,     0,   777,   513,     0,     0,   778,   779,
     780,   514,   781,   515,     0,     0,   516,   782,     0,   783,
     517,     0,   518,   519,   784,   785,     0,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,   526,   527,   528,
       0,     0,   786,     0,     0,     0,     0,     0,   530,   531,
       0,   532,     0,     0,     0,     0,     0,     0,   787,   788,
       0,     0,     0,     0,   789,     0,   790,     0,     0,     0,
     791,   792,     0,     0,   793,   794,   153,   154,     0,   691,
     156,   157,   158,   159,     0,     0,   160,   161,     0,     0,
       0,   162,     0,     0,   692,     0,   164,   165,   166,   167,
     693,   169,     0,   170,     0,     0,   694,   171,   695,   696,
     697,   172,   698,     0,   173,   174,   175,     0,   176,     0,
     177,   178,     0,     0,   179,   699,   700,   180,   181,     0,
     182,   183,   701,   702,   185,     0,   186,   187,   188,   189,
     703,   191,     0,   704,   193,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,     0,   705,   706,   212,
       0,     0,   213,   707,   214,   708,     0,   215,   709,   710,
       0,   216,   217,   218,   711,   712,   713,     0,     0,     0,
       0,   714,   221,   715,     0,     0,   716,   222,   223,     0,
     224,     0,     0,     0,   225,     0,   226,   227,   228,   229,
     230,     0,     0,     0,   231,     0,     0,   232,   233,   234,
       0,     0,     0,   235,     0,   236,   237,     0,   238,   239,
     240,     0,     0,   241,   242,     0,   243,   244,   245,   246,
     247,   248,   717,     0,   249,   250,   251,   252,   253,   718,
     719,   254,   255,     0,   256,   257,   258,   259,   260,   720,
       0,   261,   262,     0,     0,     0,   721,   264,     0,   265,
       0,   266,     0,   267,     0,   268,   722,   270,   723,     0,
     272,     0,   273,     0,   724,     0,   274,   275,     0,   276,
     725,     0,   277,   278,     0,     0,     0,   726,   280,   281,
     282,   727,     0,   283,   284,   285,     0,     0,   286,     0,
       0,     0,   728,   287,   288,   289,   729,     0,     0,   290,
       0,     0,     0,   291,   292,     0,   293,   294,     0,     0,
       0,   295,     0,   296,     0,     0,   297,   298,     0,     0,
     299,     0,   730,   300,   301,     0,     0,     0,     0,     0,
     731,   303,     0,   304,     0,   305,     0,   306,   307,     0,
       0,   732,     0,     0,     0,     0,   308,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     733,   330,   331,   332,   333,   734,   334,   335,  4426,     0,
       0,     0,   336,   337,   338,   339,   735,   341,     0,     0,
     736,   343,   737,   344,     0,   345,   738,   739,   740,   741,
     742,   350,   351,   352,   353,   354,     0,   743,   355,   356,
       0,     0,   357,   358,   359,   360,   361,   744,     0,   745,
     362,   363,     0,   746,   747,   364,     0,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   371,   372,   373,   748,   374,
       0,   375,     0,   376,   377,   749,   379,   380,   381,   382,
     750,   751,   385,   752,   386,     0,   387,   388,   389,     0,
     390,     0,   391,   392,   393,   394,   395,     0,   753,   397,
     398,     0,     0,   399,     0,     0,     0,   400,   401,   402,
     403,   404,     0,     0,   405,   406,   407,   408,   409,     0,
     410,   411,     0,   412,   413,   414,   754,   755,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,     0,   426,   427,   428,     0,   756,     0,   757,   430,
     431,   432,   433,   434,   435,   758,   759,   438,   439,   440,
     441,     0,   760,   443,     0,     0,     0,   444,   445,   446,
     447,     0,     0,     0,   448,     0,     0,     0,   449,     0,
     450,   451,   452,   453,     0,   454,   455,   456,   457,   458,
       0,     0,     0,     0,     0,   459,   460,   461,     0,   462,
     463,     0,   464,     0,     0,   465,     0,   466,     0,   467,
     468,   469,   470,   471,   472,   761,   762,   473,   474,     0,
       0,   475,   476,   763,   478,   479,   480,   764,   765,   481,
     482,   483,   484,   766,   485,   486,     0,     0,   487,   488,
     489,   490,     0,   767,   491,   492,     0,   768,   769,   770,
     771,     0,     0,     0,     0,     0,   497,   498,     0,   772,
     773,   774,   500,   501,   502,   775,   503,   504,   776,   505,
     506,     0,   507,   508,     0,     0,   509,     0,     0,   510,
       0,   511,     0,   777,   513,     0,     0,   778,   779,   780,
     514,   781,   515,     0,     0,   516,   782,     0,   783,   517,
       0,   518,   519,   784,   785,     0,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,   526,   527,   528,     0,
       0,   786,     0,     0,     0,     0,     0,   530,   531,     0,
     532,     0,     0,     0,     0,     0,     0,   787,   788,     0,
       0,     0,     0,   789,     0,   790,     0,     0,     0,   791,
     792,     0,     0,   793,   794,   153,   154,     0,   691,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   692,     0,   164,   165,   166,   167,   693,
     169,     0,   170,     0,     0,   694,   171,   695,   696,   697,
     172,   698,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,   699,   700,   180,   181,     0,   182,
     183,   701,   702,   185,     0,   186,   187,   188,   189,   703,
     191,     0,   704,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,   705,   706,   212,     0,
       0,   213,   707,   214,   708,     0,   215,   709,   710,     0,
     216,   217,   218,   711,   712,   713,     0,     0,     0,     0,
     714,   221,   715,     0,     0,   716,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,   717,     0,   249,   250,   251,   252,   253,   718,   719,
     254,   255,     0,   256,   257,   258,   259,   260,   720,     0,
     261,   262,     0,     0,     0,   721,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   722,   270,   723,     0,   272,
       0,   273,     0,   724,     0,   274,   275,     0,   276,   725,
       0,   277,   278,     0,     0,     0,   726,   280,   281,   282,
     727,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,   728,   287,   288,   289,   729,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,   730,   300,   301,     0,     0,     0,     0,     0,   731,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
     732,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   733,
     330,   331,   332,   333,   734,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   735,   341,     0,     0,   736,
     343,   737,   344,     0,   345,   738,   739,   740,   741,   742,
     350,   351,   352,   353,   354,     0,   743,   355,   356,     0,
       0,   357,   358,   359,   360,   361,   744,     0,   745,   362,
     363,     0,   746,   747,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,   748,   374,     0,
     375,     0,   376,   377,   749,   379,   380,   381,   382,   750,
     751,   385,   752,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   753,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,   754,   755,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   756,     0,   757,   430,   431,
     432,   433,   434,   435,   758,   759,   438,   439,   440,   441,
       0,   760,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,   761,   762,   473,   474,     0,     0,
     475,   476,   763,   478,   479,   480,   764,   765,   481,   482,
     483,   484,   766,   485,   486,     0,     0,   487,   488,   489,
     490,     0,   767,   491,   492,     0,   768,   769,   770,   771,
       0,     0,     0,     0,     0,   497,   498,     0,   772,   773,
     774,   500,   501,   502,   775,   503,   504,   776,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   777,   513,     0,     0,   778,   779,   780,   514,
     781,   515,     0,     0,   516,   782,     0,   783,   517,     0,
     518,   519,   784,   785,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     786,     0,     0,     0,     0,     0,   530,   531,     0,   532,
       0,     0,     0,     0,     0,     0,   787,   788,     0,     0,
       0,     0,   789,     0,   790,     0,     0,     0,   791,   792,
       0,     0,   793,   794,   153,   154,     0,   691,   156,   157,
     158,   159,     0,     0,   160,   161,     0,     0,     0,   162,
       0,     0,   692,     0,   164,   165,   166,   167,   693,   169,
       0,   170,     0,     0,   694,   171,   695,   696,   697,   172,
     698,     0,   173,   174,   175,     0,   176,     0,   177,   178,
       0,     0,   179,   699,   700,   180,   181,     0,   182,   183,
     701,   702,   185,     0,   186,   187,   188,   189,   703,   191,
       0,   704,   193,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   211,     0,   705,   706,   212,     0,     0,
     213,   707,   214,   708,     0,   215,   709,   710,     0,   216,
     217,   218,   711,   712,   713,     0,     0,     0,     0,   714,
     221,   715,     0,     0,   716,   222,   223,     0,   224,     0,
       0,     0,   225,     0,   226,   227,   228,   229,   230,     0,
       0,     0,   231,     0,     0,   232,   233,   234,     0,     0,
       0,   235,     0,   236,   237,     0,   238,   239,   240,     0,
       0,   241,   242,     0,   243,   244,   245,   246,   247,   248,
     717,     0,   249,   250,   251,   252,   253,   718,   719,   254,
     255,     0,   256,   257,   258,   259,   260,   720,     0,   261,
     262,     0,     0,     0,   721,   264,     0,   265,     0,   266,
       0,   267,     0,   268,   722,   270,   723,     0,   272,     0,
     273,     0,   724,     0,   274,   275,     0,   276,   725,     0,
     277,   278,     0,     0,     0,   726,   280,   281,   282,   727,
       0,   283,   284,   285,     0,     0,   286,     0,     0,     0,
     728,   287,   288,   289,  1808,     0,     0,   290,     0,     0,
       0,   291,   292,     0,   293,   294,     0,     0,     0,   295,
       0,   296,     0,     0,   297,   298,     0,     0,   299,     0,
     730,   300,   301,     0,     0,     0,     0,     0,   731,   303,
       0,   304,     0,   305,     0,   306,   307,     0,     0,   732,
       0,     0,     0,     0,   308,     0,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   733,   330,
     331,   332,   333,   734,   334,   335,     0,     0,     0,     0,
     336,   337,   338,   339,   735,   341,     0,     0,   736,   343,
     737,   344,     0,   345,   738,   739,   740,   741,   742,   350,
     351,   352,   353,   354,     0,   743,   355,   356,     0,     0,
     357,   358,   359,   360,   361,   744,     0,   745,   362,   363,
       0,   746,   747,   364,     0,   365,   366,     0,   367,   368,
     369,     0,     0,   370,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   371,   372,   373,   748,   374,     0,   375,
       0,   376,   377,   749,   379,   380,   381,   382,   750,   751,
     385,   752,   386,     0,   387,   388,   389,     0,   390,     0,
     391,   392,   393,   394,   395,     0,   753,   397,   398,     0,
       0,   399,     0,     0,     0,   400,   401,   402,   403,   404,
       0,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,   412,   413,   414,   754,   755,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,     0,
     426,   427,   428,     0,   756,     0,   757,   430,   431,   432,
     433,   434,   435,   758,   759,   438,   439,   440,   441,     0,
     760,   443,     0,     0,     0,   444,   445,   446,   447,     0,
       0,     0,   448,     0,     0,     0,   449,     0,   450,   451,
     452,   453,     0,   454,   455,   456,   457,   458,     0,     0,
       0,     0,     0,   459,   460,   461,     0,   462,   463,     0,
     464,     0,     0,   465,     0,   466,     0,   467,   468,   469,
     470,   471,   472,   761,   762,   473,   474,     0,     0,   475,
     476,   763,   478,   479,   480,   764,   765,   481,   482,   483,
     484,   766,   485,   486,     0,     0,   487,   488,   489,   490,
       0,   767,   491,   492,     0,   768,   769,   770,   771,     0,
       0,     0,     0,     0,   497,   498,     0,   772,   773,   774,
     500,   501,   502,   775,   503,   504,   776,   505,   506,     0,
     507,   508,     0,     0,   509,     0,     0,   510,     0,   511,
       0,   777,   513,     0,     0,   778,   779,   780,   514,   781,
     515,     0,     0,   516,   782,     0,   783,   517,     0,   518,
     519,   784,   785,     0,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,   526,   527,   528,     0,     0,   786,
       0,     0,     0,     0,     0,   530,   531,     0,   532,     0,
       0,     0,     0,     0,     0,   787,   788,     0,     0,     0,
       0,   789,     0,   790,     0,     0,     0,   791,   792,     0,
       0,   793,   794,   153,   154,     0,   691,   156,   157,   158,
     159,     0,     0,   160,   161,     0,     0,     0,   162,     0,
       0,   692,     0,   164,   165,   166,   167,   693,   169,     0,
     170,     0,     0,   694,   171,   695,   696,   697,   172,   698,
       0,   173,   174,   175,     0,   176,     0,   177,   178,     0,
       0,   179,   699,   700,   180,   181,     0,   182,   183,   701,
     702,   185,     0,   186,   187,   188,   189,   703,   191,     0,
     704,   193,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,     0,   705,   706,   212,     0,     0,   213,
     707,   214,   708,     0,   215,   709,   710,     0,   216,   217,
     218,   711,   712,   713,     0,     0,     0,     0,   714,   221,
     715,     0,     0,   716,   222,   223,     0,   224,     0,     0,
       0,   225,     0,   226,   227,   228,   229,   230,     0,     0,
       0,   231,     0,     0,   232,   233,   234,     0,     0,     0,
     235,     0,   236,   237,     0,   238,   239,   240,     0,     0,
     241,   242,     0,   243,   244,   245,   246,   247,   248,   717,
       0,   249,   250,   251,   252,   253,   718,   719,   254,   255,
       0,   256,   257,   258,   259,   260,   720,     0,   261,   262,
       0,     0,     0,   721,   264,     0,   265,     0,   266,     0,
     267,     0,   268,   722,   270,   723,     0,   272,     0,   273,
       0,   724,     0,   274,   275,     0,   276,   725,     0,   277,
     278,     0,     0,     0,   726,   280,   281,   282,   727,     0,
     283,   284,   285,     0,     0,   286,     0,     0,     0,   728,
     287,   288,   289,  1810,     0,     0,   290,     0,     0,     0,
     291,   292,     0,   293,   294,     0,     0,     0,   295,     0,
     296,     0,     0,   297,   298,     0,     0,   299,     0,   730,
     300,   301,     0,     0,     0,     0,     0,   731,   303,     0,
     304,     0,   305,     0,   306,   307,     0,     0,   732,     0,
       0,     0,     0,   308,     0,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   733,   330,   331,
     332,   333,   734,   334,   335,     0,     0,     0,     0,   336,
     337,   338,   339,   735,   341,     0,     0,   736,   343,   737,
     344,     0,   345,   738,   739,   740,   741,   742,   350,   351,
     352,   353,   354,     0,   743,   355,   356,     0,     0,   357,
     358,   359,   360,   361,   744,     0,   745,   362,   363,     0,
     746,   747,   364,     0,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   371,   372,   373,   748,   374,     0,   375,     0,
     376,   377,   749,   379,   380,   381,   382,   750,   751,   385,
     752,   386,     0,   387,   388,   389,     0,   390,     0,   391,
     392,   393,   394,   395,     0,   753,   397,   398,     0,     0,
     399,     0,     0,     0,   400,   401,   402,   403,   404,     0,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
     412,   413,   414,   754,   755,   415,   416,   417,   418,   419,
     420,   421,   422,     0,   423,     0,   424,   425,     0,   426,
     427,   428,     0,   756,     0,   757,   430,   431,   432,   433,
     434,   435,   758,   759,   438,   439,   440,   441,     0,   760,
     443,     0,     0,     0,   444,   445,   446,   447,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,   452,
     453,     0,   454,   455,   456,   457,   458,     0,     0,     0,
       0,     0,   459,   460,   461,     0,   462,   463,     0,   464,
       0,     0,   465,     0,   466,     0,   467,   468,   469,   470,
     471,   472,   761,   762,   473,   474,     0,     0,   475,   476,
     763,   478,   479,   480,   764,   765,   481,   482,   483,   484,
     766,   485,   486,     0,     0,   487,   488,   489,   490,     0,
     767,   491,   492,     0,   768,   769,   770,   771,     0,     0,
       0,     0,     0,   497,   498,     0,   772,   773,   774,   500,
     501,   502,   775,   503,   504,   776,   505,   506,     0,   507,
     508,     0,     0,   509,     0,     0,   510,     0,   511,     0,
     777,   513,     0,     0,   778,   779,   780,   514,   781,   515,
       0,     0,   516,   782,     0,   783,   517,     0,   518,   519,
     784,   785,     0,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,   526,   527,   528,     0,     0,   786,     0,
       0,     0,     0,     0,   530,   531,     0,   532,     0,     0,
       0,     0,     0,     0,   787,   788,     0,     0,     0,     0,
     789,     0,   790,     0,     0,     0,   791,   792,     0,     0,
     793,   794,   153,   154,     0,   155,   156,   157,   158,   159,
       0,     0,   160,   161,     0,     0,     0,   162,     0,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
       0,     0,     0,   171,   695,     0,     0,   172,     0,     0,
     173,   174,   175,     0,   176,     0,   177,   178,     0,     0,
     179,     0,     0,   180,   181,     0,   182,   183,   184,     0,
     185,     0,   186,   187,   188,   189,   190,   191,     0,   192,
     193,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,     0,     0,     0,   212,     0,     0,   213,     0,
     214,     0,     0,   215,     0,     0,     0,   216,   217,   218,
       0,     0,  2112,     0,     0,     0,     0,   220,   221,   715,
       0,     0,     0,   222,   223,     0,   224,     0,     0,     0,
     225,     0,   226,   227,   228,   229,   230,     0,     0,     0,
     231,     0,     0,   232,   233,   234,     0,     0,     0,   235,
       0,   236,   237,     0,   238,   239,   240,     0,     0,   241,
     242,     0,   243,   244,   245,   246,   247,   248,     0,     0,
     249,   250,   251,   252,   253,     0,   719,   254,   255,     0,
     256,   257,   258,   259,   260,   720,     0,   261,   262,     0,
       0,     0,   263,   264,     0,   265,     0,   266,     0,   267,
       0,   268,   269,   270,   271,     0,   272,     0,   273,     0,
       0,     0,   274,   275,     0,   276,   725,     0,   277,   278,
       0,     0,     0,   279,   280,   281,   282,     0,     0,   283,
     284,   285,     0,     0,   286,     0,     0,     0,     0,   287,
     288,   289,     0,     0,     0,   290,     0,     0,     0,   291,
     292,     0,   293,   294,     0,     0,     0,   295,     0,   296,
       0,     0,   297,   298,     0,     0,   299,     0,     0,   300,
     301,     0,     0,     0,     0,     0,   302,   303,     0,   304,
       0,   305,     0,   306,   307,     0,     0,   732,     0,     0,
       0,     0,   308,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,     0,   330,   331,   332,
     333,     0,   334,   335,     0,     0,     0,     0,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   743,   355,   356,     0,     0,   357,   358,
     359,   360,   361,     0,     0,     0,   362,   363,     0,   746,
     747,   364,     0,   365,   366,     0,   367,   368,   369,     0,
       0,   370,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   371,   372,   373,     0,   374,     0,   375,     0,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,     0,
     386,     0,   387,   388,   389,     0,   390,     0,   391,   392,
     393,   394,   395,     0,   396,   397,   398,     0,     0,   399,
       0,     0,     0,   400,   401,   402,   403,   404,     0,     0,
     405,   406,   407,   408,   409,     0,   410,   411,     0,   412,
     413,   414,     0,     0,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,     0,   426,   427,
     428,     0,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,     0,   442,   443,
       0,     0,     0,   444,   445,   446,   447,     0,     0,     0,
     448,     0,     0,     0,   449,     0,   450,   451,   452,   453,
       0,   454,   455,   456,   457,   458,     0,     0,     0,     0,
       0,   459,   460,   461,     0,   462,   463,     0,   464,     0,
       0,   465,     0,   466,     0,   467,   468,   469,   470,   471,
     472,     0,     0,   473,   474,     0,     0,   475,   476,   477,
     478,   479,   480,     0,     0,   481,   482,   483,   484,     0,
     485,   486,     0,     0,   487,   488,   489,   490,     0,   767,
     491,   492,     0,  2113,   494,   495,  2114,     0,     0,     0,
       0,     0,   497,   498,     0,     0,   773,   499,   500,   501,
     502,   775,   503,   504,   776,   505,   506,     0,   507,   508,
       0,     0,   509,     0,     0,   510,     0,   511,     0,   512,
     513,     0,     0,     0,     0,     0,   514,     0,   515,     0,
       0,   516,     0,     0,     0,   517,     0,   518,   519,   520,
     521,     0,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,   526,   527,   528,     0,     0,   529,     0,     0,
       0,     0,     0,   530,   531,     0,   532,     0,     0,     0,
       0,     0,     0,   153,   154,     0,   155,   156,   157,   158,
     159,     0,     0,   160,   161,     0,     0,     0,   162,   793,
     794,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,     0,     0,     0,   171,     0,     0,     0,   172,     0,
       0,   173,   174,   175,     0,   176,     0,   177,   178,     0,
       0,   179,     0,     0,   180,   181,     0,   182,   183,   184,
       0,   185,     0,   186,   187,   188,   189,   190,   191,     0,
     192,   193,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,     0,   205,   206,  2524,   207,   208,
     209,   210,   211,     0,     0,     0,   212,     0,     0,   213,
       0,   214,     0,     0,   215,     0,     0,     0,   216,   217,
     218,     0,     0,   219,     0,     0,     0,     0,   220,   221,
       0,     0,     0,     0,   222,   223,     0,   224,     0,     0,
       0,   225,     0,   226,   227,   228,   229,   230,     0,     0,
       0,   231,     0,     0,   232,   233,   234,     0,     0,     0,
     235,     0,   236,   237,     0,   238,   239,   240,     0,     0,
     241,   242,     0,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,   253,     0,     0,   254,   255,
       0,   256,   257,   258,   259,   260,     0,     0,   261,   262,
       0,     0,     0,   263,   264,     0,   265,  2525,   266,     0,
     267,     0,   268,   269,   270,   271,     0,   272,     0,   273,
       0,     0,     0,   274,   275,     0,   276,     0,     0,   277,
     278,     0,     0,     0,   279,   280,   281,   282,     0,     0,
     283,   284,   285,  1982,     0,   286,     0,     0,     0,     0,
     287,   288,   289,     0,     0,     0,   290,     0,     0,     0,
     291,   292,     0,   293,   294,     0,     0,     0,   295,     0,
     296,  1983,     0,   297,   298,     0,     0,   299,     0,     0,
     300,   301,     0,  3270,     0,     0,     0,   302,   303,     0,
     304,     0,   305,     0,   306,   307,     0,     0,     0,     0,
       0,     0,     0,   308,     0,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,     0,   330,   331,
     332,   333,     0,   334,   335,     0,     0,     0,     0,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,     0,   355,   356,     0,     0,   357,
     358,   359,   360,   361,     0,     0,     0,   362,   363,     0,
       0,     0,   364,     0,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   371,   372,   373,     0,   374,     0,   375,     0,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
       0,   386,     0,   387,   388,   389,     0,   390,     0,   391,
     392,   393,   394,   395,     0,   396,   397,   398,     0,     0,
     399,     0,     0,     0,   400,   401,   402,   403,   404,     0,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
     412,   413,   414,     0,     0,   415,   416,   417,   418,   419,
     420,   421,   422,     0,   423,     0,   424,   425,     0,   426,
     427,   428,     0,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,     0,   442,
     443,    42,     0,     0,   444,   445,   446,   447,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,   452,
     453,     0,   454,   455,   456,   457,   458,  2527,     0,     0,
       0,     0,   459,   460,   461,     0,   462,   463,     0,   464,
       0,     0,   465,     0,   466,     0,   467,   468,   469,   470,
     471,   472,     0,     0,   473,   474,     0,     0,   475,   476,
     477,   478,   479,   480,     0,     0,   481,   482,   483,   484,
       0,   485,   486,     0,     0,   487,   488,   489,   490,     0,
       0,   491,   492,     0,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,     0,     0,     0,   499,   500,
     501,   502,     0,   503,   504,     0,   505,   506,     0,   507,
     508,     0,     0,   509,     0,     0,   510,     0,   511,     0,
     512,   513,     0,     0,     0,     0,     0,   514,     0,   515,
       0,     0,   516,     0,     0,     0,   517,     0,   518,   519,
     520,   521,     0,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,   526,   527,   528,     0,     0,   529,     0,
       0,     0,     0,     0,   530,   531,     0,   532,     0,     0,
       0,     0,     0,     0,   153,   154,     0,   155,   156,   157,
     158,   159,  1119,     0,   160,   161,     0,     0,     0,   162,
       0,  1368,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,     0,     0,     0,   171,     0,     0,     0,   172,
       0,     0,   173,   174,   175,     0,   176,     0,   177,   178,
       0,     0,   179,     0,     0,   180,   181,     0,   182,   183,
     184,     0,   185,     0,   186,   187,   188,   189,   190,   191,
       0,   192,   193,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,     0,   205,   206,  2524,   207,
     208,   209,   210,   211,     0,     0,     0,   212,     0,     0,
     213,     0,   214,     0,     0,   215,     0,     0,     0,   216,
     217,   218,     0,     0,   219,     0,     0,     0,     0,   220,
     221,     0,     0,     0,     0,   222,   223,     0,   224,     0,
       0,     0,   225,     0,   226,   227,   228,   229,   230,     0,
       0,     0,   231,     0,     0,   232,   233,   234,     0,     0,
       0,   235,     0,   236,   237,     0,   238,   239,   240,     0,
       0,   241,   242,     0,   243,   244,   245,   246,   247,   248,
       0,     0,   249,   250,   251,   252,   253,     0,     0,   254,
     255,     0,   256,   257,   258,   259,   260,     0,     0,   261,
     262,     0,     0,     0,   263,   264,     0,   265,  2525,   266,
       0,   267,     0,   268,   269,   270,   271,     0,   272,     0,
     273,     0,     0,     0,   274,   275,     0,   276,     0,     0,
     277,   278,     0,     0,     0,   279,   280,   281,   282,     0,
       0,   283,   284,   285,  1982,     0,   286,     0,     0,     0,
       0,   287,   288,   289,     0,     0,     0,   290,     0,     0,
       0,   291,   292,     0,   293,   294,     0,     0,     0,   295,
       0,   296,  1983,     0,   297,   298,     0,     0,   299,     0,
       0,   300,   301,     0,     0,     0,     0,     0,   302,   303,
       0,   304,     0,   305,     0,   306,   307,     0,     0,     0,
       0,     0,     0,     0,   308,     0,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,     0,   330,
     331,   332,   333,     0,   334,   335,     0,     0,     0,     0,
     336,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,   358,   359,   360,   361,     0,     0,     0,   362,   363,
       0,     0,     0,   364,     0,   365,   366,     0,   367,   368,
     369,     0,     0,   370,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   371,   372,   373,     0,   374,     0,   375,
       0,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,     0,   386,     0,   387,   388,   389,     0,   390,     0,
     391,   392,   393,   394,   395,     0,   396,   397,   398,     0,
       0,   399,     0,     0,     0,   400,   401,   402,   403,   404,
       0,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,   412,   413,   414,     0,     0,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,     0,
     426,   427,   428,     0,   429,     0,     0,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,     0,
     442,   443,     0,     0,     0,   444,   445,   446,   447,     0,
       0,     0,   448,     0,     0,     0,   449,     0,   450,   451,
     452,   453,     0,   454,   455,   456,   457,   458,  2527,     0,
       0,     0,     0,   459,   460,   461,     0,   462,   463,     0,
     464,     0,     0,   465,     0,   466,     0,   467,   468,   469,
     470,   471,   472,     0,     0,   473,   474,     0,     0,   475,
     476,   477,   478,   479,   480,     0,     0,   481,   482,   483,
     484,     0,   485,   486,     0,     0,   487,   488,   489,   490,
       0,     0,   491,   492,     0,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,     0,     0,     0,   499,
     500,   501,   502,     0,   503,   504,     0,   505,   506,     0,
     507,   508,     0,     0,   509,     0,     0,   510,     0,   511,
       0,   512,   513,     0,     0,     0,     0,     0,   514,     0,
     515,     0,     0,   516,     0,     0,     0,   517,     0,   518,
     519,   520,   521,     0,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,   526,   527,   528,     0,     0,   529,
       0,     0,     0,     0,     0,   530,   531,     0,   532,     0,
       0,     0,     0,   153,   154,     0,   155,   156,   157,   158,
     159,     0,     0,   160,   161,     0,     0,     0,   162,     0,
       0,   163,  1368,   164,   165,   166,   167,   168,   169,     0,
     170,     0,     0,     0,   171,     0,     0,     0,   172,     0,
       0,   173,   174,   175,     0,   176,     0,   177,   178,     0,
       0,   179,     0,     0,   180,   181,     0,   182,   183,   184,
       0,   185,     0,   186,   187,   188,   189,   190,   191,     0,
     192,   193,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,     0,     0,     0,   212,     0,     0,   213,
       0,   214,     0,     0,   215,     0,     0,     0,   216,   217,
     218,     0,     0,   219,     0,     0,     0,     0,   220,   221,
       0,     0,     0,     0,   222,   223,     0,   224,     0,     0,
       0,   225,     0,   226,   227,   228,   229,   230,     0,     0,
       0,   231,     0,  2187,   232,   233,   234,     0,     0,     0,
     235,     0,   236,   237,     0,   238,   239,   240,     0,     0,
     241,   242,     0,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,   253,     0,     0,   254,   255,
       0,   256,   257,   258,   259,   260,     0,     0,   261,   262,
       0,     0,     0,   263,   264,     0,   265,     0,   266,     0,
     267,     0,   268,   269,   270,   271,     0,   272,     0,   273,
       0,     0,     0,   274,   275,     0,   276,     0,     0,   277,
     278,     0,     0,     0,   279,   280,   281,   282,     0,     0,
     283,   284,   285,     0,     0,   286,     0,     0,     0,     0,
     287,   288,   289,     0,     0,     0,   290,     0,     0,     0,
     291,   292,     0,   293,   294,     0,     0,     0,   295,     0,
     296,     0,     0,   297,   298,     0,     0,   299,     0,     0,
     300,   301,     0,     0,     0,     0,     0,   302,   303,     0,
     304,     0,   305,     0,   306,   307,     0,     0,     0,     0,
       0,     0,     0,   308,     0,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,     0,   330,   331,
     332,   333,     0,   334,   335,     0,     0,     0,     0,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,     0,   355,   356,     0,     0,   357,
     358,   359,   360,   361,     0,     0,     0,   362,   363,     0,
       0,     0,   364,     0,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   371,   372,   373,     0,   374,     0,   375,     0,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
       0,   386,     0,   387,   388,   389,     0,   390,     0,   391,
     392,   393,   394,   395,     0,   396,   397,   398,     0,     0,
     399,     0,     0,     0,   400,   401,   402,   403,   404,     0,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
     412,   413,   414,     0,     0,   415,   416,   417,   418,   419,
     420,   421,   422,     0,   423,     0,   424,   425,     0,   426,
     427,   428,     0,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,     0,   442,
     443,     0,     0,     0,   444,   445,   446,   447,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,   452,
     453,     0,   454,   455,   456,   457,   458,     0,     0,     0,
       0,     0,   459,   460,   461,     0,   462,   463,     0,   464,
       0,     0,   465,     0,   466,     0,   467,   468,   469,   470,
     471,   472,     0,     0,   473,   474,     0,     0,   475,   476,
     477,   478,   479,   480,     0,     0,   481,   482,   483,   484,
       0,   485,   486,     0,     0,   487,   488,   489,   490,     0,
       0,   491,   492,     0,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,     0,     0,     0,   499,   500,
     501,   502,     0,   503,   504,     0,   505,   506,     0,   507,
     508,     0,     0,   509,     0,     0,   510,     0,   511,     0,
     512,   513,     0,     0,     0,     0,     0,   514,     0,   515,
       0,     0,   516,     0,     0,     0,   517,     0,   518,   519,
     520,   521,     0,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,   526,   527,   528,     0,     0,   529,     0,
       0,     0,     0,     0,   530,   531,     0,   532,     0,     0,
       0,     0,     0,     0,   153,   154,     0,   155,   156,   157,
     158,   159,  1651,     0,   160,   161,     0,  1652,     0,   162,
       0,   597,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,     0,     0,     0,   171,     0,     0,     0,   172,
       0,     0,   173,   174,   175,     0,   176,     0,   177,   178,
       0,     0,   179,     0,     0,   180,   181,     0,   182,   183,
     184,     0,   185,     0,   186,   187,   188,   189,   190,   191,
       0,   192,   193,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   211,     0,     0,     0,   212,     0,     0,
     213,     0,   214,     0,     0,   215,     0,     0,     0,   216,
     217,   218,     0,     0,   219,     0,     0,     0,     0,   220,
     221,     0,     0,     0,     0,   222,   223,     0,   224,     0,
       0,     0,   225,     0,   226,   227,   228,   229,   230,     0,
       0,     0,   231,     0,     0,   232,   233,   234,     0,     0,
       0,   235,     0,   236,   237,     0,   238,   239,   240,     0,
       0,   241,   242,     0,   243,   244,   245,   246,   247,   248,
       0,     0,   249,   250,   251,   252,   253,     0,     0,   254,
     255,     0,   256,   257,   258,   259,   260,     0,     0,   261,
     262,     0,     0,     0,   263,   264,     0,   265,     0,   266,
       0,   267,     0,   268,   269,   270,   271,     0,   272,     0,
     273,     0,     0,     0,   274,   275,     0,   276,     0,     0,
     277,   278,     0,     0,     0,   279,   280,   281,   282,     0,
       0,   283,   284,   285,     0,     0,   286,     0,     0,     0,
       0,   287,   288,   289,     0,     0,     0,   290,     0,     0,
       0,   291,   292,     0,   293,   294,     0,     0,     0,   295,
       0,   296,     0,     0,   297,   298,     0,     0,   299,     0,
       0,   300,   301,     0,     0,     0,     0,     0,   302,   303,
       0,   304,     0,   305,     0,   306,   307,     0,     0,     0,
       0,     0,     0,     0,   308,     0,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,     0,   330,
     331,   332,   333,     0,   334,   335,     0,     0,     0,     0,
     336,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,   358,   359,   360,   361,     0,     0,     0,   362,   363,
       0,     0,     0,   364,     0,   365,   366,     0,   367,   368,
     369,     0,     0,   370,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   371,   372,   373,     0,   374,     0,   375,
       0,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,     0,   386,     0,   387,   388,   389,     0,   390,     0,
     391,   392,   393,   394,   395,     0,   396,   397,   398,     0,
       0,   399,     0,     0,     0,   400,   401,   402,   403,   404,
       0,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,   412,   413,   414,     0,     0,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,     0,
     426,   427,   428,     0,   429,     0,     0,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,     0,
     442,   443,    42,     0,     0,   444,   445,   446,   447,     0,
       0,     0,   448,     0,     0,     0,   449,     0,   450,   451,
     452,   453,     0,   454,   455,   456,   457,   458,     0,     0,
       0,     0,     0,   459,   460,   461,     0,   462,   463,     0,
     464,     0,     0,   465,     0,   466,     0,   467,   468,   469,
     470,   471,   472,     0,     0,   473,   474,     0,     0,   475,
     476,   477,   478,   479,   480,     0,     0,   481,   482,   483,
     484,     0,   485,   486,     0,     0,   487,   488,   489,   490,
       0,     0,   491,   492,     0,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,     0,     0,     0,   499,
     500,   501,   502,     0,   503,   504,     0,   505,   506,     0,
     507,   508,     0,     0,   509,     0,     0,   510,     0,   511,
       0,   512,   513,     0,     0,     0,     0,     0,   514,     0,
     515,     0,     0,   516,     0,     0,     0,   517,     0,   518,
     519,   520,   521,     0,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,   526,   527,   528,     0,     0,   529,
       0,     0,     0,     0,     0,   530,   531,     0,   532,     0,
       0,     0,     0,     0,     0,   153,   154,     0,   155,   156,
     157,   158,   159,  1651,     0,   160,   161,     0,  1652,     0,
     162,     0,   597,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,    42,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
       0,     0,     0,     0,     0,     0,   153,   154,     0,   155,
     156,   157,   158,   159,  1119,  3320,   160,   161,     0,     0,
       0,   162,     0,   794,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,     0,     0,     0,   171,     0,     0,
       0,   172,     0,     0,   173,   174,   175,     0,   176,     0,
     177,   178,     0,     0,   179,     0,     0,   180,   181,     0,
     182,   183,   184,     0,   185,     0,   186,   187,   188,   189,
     190,   191,     0,   192,   193,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,     0,     0,     0,   212,
       0,     0,   213,     0,   214,     0,     0,   215,     0,     0,
       0,   216,   217,   218,     0,     0,   219,     0,     0,     0,
       0,   220,   221,     0,     0,     0,     0,   222,   223,     0,
     224,     0,     0,     0,   225,     0,   226,   227,   228,   229,
     230,     0,     0,     0,   231,     0,     0,   232,   233,   234,
       0,     0,     0,   235,     0,   236,   237,     0,   238,   239,
     240,     0,     0,   241,   242,     0,   243,   244,   245,   246,
     247,   248,     0,     0,   249,   250,   251,   252,   253,     0,
       0,   254,   255,     0,   256,   257,   258,   259,   260,     0,
       0,   261,   262,     0,     0,     0,   263,   264,     0,   265,
       0,   266,     0,   267,     0,   268,   269,   270,   271,     0,
     272,     0,   273,     0,     0,     0,   274,   275,     0,   276,
       0,     0,   277,   278,     0,     0,     0,   279,   280,   281,
     282,     0,     0,   283,   284,   285,     0,     0,   286,     0,
       0,     0,     0,   287,   288,   289,     0,     0,     0,   290,
       0,     0,     0,   291,   292,     0,   293,   294,     0,     0,
       0,   295,     0,   296,     0,     0,   297,   298,     0,     0,
     299,     0,     0,   300,   301,     0,     0,     0,     0,     0,
     302,   303,     0,   304,     0,   305,     0,   306,   307,     0,
       0,     0,     0,     0,     0,     0,   308,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
       0,   330,   331,   332,   333,     0,   334,   335,     0,     0,
       0,     0,   336,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,   358,   359,   360,   361,     0,     0,     0,
     362,   363,     0,     0,     0,   364,     0,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   371,   372,   373,     0,   374,
       0,   375,     0,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,     0,   386,     0,   387,   388,   389,     0,
     390,     0,   391,   392,   393,   394,   395,     0,   396,   397,
     398,     0,     0,   399,     0,     0,     0,   400,   401,   402,
     403,   404,     0,     0,   405,   406,   407,   408,   409,     0,
     410,   411,     0,   412,   413,   414,     0,     0,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,     0,   426,   427,   428,     0,   429,     0,     0,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,     0,   442,   443,     0,     0,     0,   444,   445,   446,
     447,     0,     0,     0,   448,     0,     0,     0,   449,     0,
     450,   451,   452,   453,     0,   454,   455,   456,   457,   458,
       0,     0,     0,     0,     0,   459,   460,   461,     0,   462,
     463,     0,   464,     0,     0,   465,     0,   466,     0,   467,
     468,   469,   470,   471,   472,     0,     0,   473,   474,     0,
       0,   475,   476,   477,   478,   479,   480,     0,     0,   481,
     482,   483,   484,     0,   485,   486,     0,     0,   487,   488,
     489,   490,     0,     0,   491,   492,     0,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,     0,     0,
       0,   499,   500,   501,   502,     0,   503,   504,     0,   505,
     506,     0,   507,   508,     0,     0,   509,     0,     0,   510,
       0,   511,     0,   512,   513,     0,     0,     0,     0,     0,
     514,     0,   515,     0,     0,   516,     0,     0,     0,   517,
       0,   518,   519,   520,   521,     0,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,   526,   527,   528,     0,
       0,   529,     0,     0,     0,     0,     0,   530,   531,     0,
     532,     0,     0,     0,     0,     0,     0,   153,   154,     0,
     155,   156,   157,   158,   159,  1651,     0,   160,   161,     0,
    1652,     0,   162,     0,   597,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,     0,     0,     0,   171,     0,
       0,     0,   172,     0,     0,   173,   174,   175,     0,   176,
       0,   177,   178,     0,     0,   179,     0,     0,   180,   181,
       0,   182,   183,   184,     0,   185,     0,   186,   187,   188,
     189,   190,   191,     0,   192,   193,     0,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,   209,   210,   211,     0,     0,     0,
     212,     0,     0,   213,     0,   214,     0,     0,   215,     0,
       0,     0,   216,   217,   218,     0,     0,   219,     0,     0,
       0,     0,   220,   221,     0,     0,     0,     0,   222,   223,
       0,   224,     0,     0,     0,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,   231,     0,     0,   232,   233,
     234,     0,     0,     0,   235,     0,   236,   237,     0,   238,
     239,   240,     0,     0,   241,   242,     0,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,   253,
       0,     0,   254,   255,     0,   256,   257,   258,   259,   260,
       0,     0,   261,   262,     0,     0,     0,   263,   264,     0,
     265,     0,   266,     0,   267,     0,   268,   269,   270,   271,
       0,   272,     0,   273,     0,     0,     0,   274,   275,     0,
     276,     0,     0,   277,   278,     0,     0,     0,   279,   280,
     281,   282,     0,     0,   283,   284,   285,     0,     0,   286,
       0,     0,     0,     0,   287,   288,   289,     0,     0,     0,
     290,     0,     0,     0,   291,   292,     0,   293,   294,     0,
       0,     0,   295,     0,   296,     0,     0,   297,   298,     0,
       0,   299,     0,     0,   300,   301,     0,     0,     0,     0,
       0,   302,   303,     0,   304,     0,   305,     0,   306,   307,
       0,     0,     0,     0,     0,     0,     0,   308,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,     0,   330,   331,   332,   333,     0,   334,   335,     0,
       0,     0,     0,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,   358,   359,   360,   361,     0,     0,
       0,   362,   363,     0,     0,     0,   364,     0,   365,   366,
       0,   367,   368,   369,     0,     0,   370,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   371,   372,   373,     0,
     374,     0,   375,     0,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,     0,   386,     0,   387,   388,   389,
       0,   390,     0,   391,   392,   393,   394,   395,     0,   396,
     397,   398,     0,     0,   399,     0,     0,     0,   400,   401,
     402,   403,   404,     0,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,   412,   413,   414,     0,     0,   415,
     416,   417,   418,   419,   420,   421,   422,     0,   423,     0,
     424,   425,     0,   426,   427,   428,     0,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,     0,   442,   443,     0,     0,     0,   444,   445,
     446,   447,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,   452,   453,     0,   454,   455,   456,   457,
     458,     0,     0,     0,     0,     0,   459,   460,   461,     0,
     462,   463,     0,   464,     0,     0,   465,     0,   466,     0,
     467,   468,   469,   470,   471,   472,     0,     0,   473,   474,
       0,     0,   475,   476,   477,   478,   479,   480,     0,     0,
     481,   482,   483,   484,     0,   485,   486,     0,     0,   487,
     488,   489,   490,     0,     0,   491,   492,     0,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,     0,
       0,     0,   499,   500,   501,   502,     0,   503,   504,     0,
     505,   506,     0,   507,   508,     0,     0,   509,     0,     0,
     510,     0,   511,     0,   512,   513,     0,     0,     0,     0,
       0,   514,     0,   515,     0,     0,   516,     0,     0,     0,
     517,     0,   518,   519,   520,   521,     0,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,   526,   527,   528,
       0,     0,   529,     0,     0,     0,     0,     0,   530,   531,
       0,   532,     0,     0,     0,     0,     0,     0,   153,   154,
       0,   155,   156,   157,   158,   159,     0,  4577,   160,   161,
       0,     0,     0,   162,  4578,   794,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,     0,     0,     0,   171,
       0,     0,     0,   172,     0,     0,   173,   174,   175,     0,
     176,     0,   177,   178,     0,     0,   179,     0,     0,   180,
     181,     0,   182,   183,   184,     0,   185,     0,   186,   187,
     188,   189,   190,   191,     0,   192,   193,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,     0,     0,
       0,   212,     0,     0,   213,     0,   214,     0,     0,   215,
       0,     0,     0,   216,   217,   218,     0,     0,   219,     0,
       0,     0,     0,   220,   221,     0,     0,     0,     0,   222,
     223,     0,   224,     0,     0,     0,   225,     0,   226,   227,
     228,   229,   230,     0,     0,     0,   231,     0,     0,   232,
     233,   234,     0,     0,     0,   235,     0,   236,   237,     0,
     238,   239,   240,     0,     0,   241,   242,     0,   243,   244,
     245,   246,   247,   248,     0,     0,   249,   250,   251,   252,
     253,     0,     0,   254,   255,     0,   256,   257,   258,   259,
     260,     0,     0,   261,   262,     0,     0,     0,   263,   264,
       0,   265,     0,   266,     0,   267,     0,   268,   269,   270,
     271,     0,   272,     0,   273,     0,     0,     0,   274,   275,
       0,   276,     0,     0,   277,   278,     0,     0,     0,   279,
     280,   281,   282,     0,     0,   283,   284,   285,     0,     0,
     286,     0,     0,     0,     0,   287,   288,   289,     0,     0,
       0,   290,     0,     0,     0,   291,   292,     0,   293,   294,
       0,     0,     0,   295,     0,   296,     0,     0,   297,   298,
       0,     0,   299,     0,     0,   300,   301,     0,     0,     0,
       0,     0,   302,   303,     0,   304,     0,   305,     0,   306,
     307,     0,     0,     0,     0,     0,     0,     0,   308,     0,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,     0,   330,   331,   332,   333,     0,   334,   335,
       0,     0,     0,     0,   336,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,     0,
     355,   356,     0,     0,   357,   358,   359,   360,   361,     0,
       0,     0,   362,   363,     0,     0,     0,   364,     0,   365,
     366,     0,   367,   368,   369,     0,     0,   370,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   371,   372,   373,
       0,   374,     0,   375,     0,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,     0,   386,     0,   387,   388,
     389,     0,   390,     0,   391,   392,   393,   394,   395,     0,
     396,   397,   398,     0,     0,   399,     0,     0,     0,   400,
     401,   402,   403,   404,     0,     0,   405,   406,   407,   408,
     409,     0,   410,   411,     0,   412,   413,   414,     0,     0,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,     0,   426,   427,   428,     0,   429,     0,
       0,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,     0,   442,   443,     0,     0,     0,   444,
     445,   446,   447,     0,     0,     0,   448,     0,     0,     0,
     449,     0,   450,   451,   452,   453,     0,   454,   455,   456,
     457,   458,     0,     0,     0,     0,     0,   459,   460,   461,
       0,   462,   463,     0,   464,     0,     0,   465,     0,   466,
       0,   467,   468,   469,   470,   471,   472,     0,     0,   473,
     474,     0,     0,   475,   476,   477,   478,   479,   480,     0,
       0,   481,   482,   483,   484,     0,   485,   486,     0,     0,
     487,   488,   489,   490,     0,     0,   491,   492,     0,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
       0,     0,     0,   499,   500,   501,   502,     0,   503,   504,
       0,   505,   506,     0,   507,   508,     0,     0,   509,     0,
       0,   510,     0,   511,     0,   512,   513,     0,     0,     0,
       0,     0,   514,     0,   515,     0,     0,   516,     0,     0,
       0,   517,     0,   518,   519,   520,   521,     0,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,   526,   527,
     528,     0,     0,   529,     0,     0,     0,     0,     0,   530,
     531,     0,   532,     0,     0,     0,     0,     0,     0,   153,
     154,     0,   155,   156,   157,   158,   159,  1134,     0,   160,
     161,     0,     0,     0,   162,     0,   794,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,     0,     0,     0,
     171,     0,     0,     0,   172,     0,     0,   173,   174,   175,
       0,   176,     0,   177,   178,     0,     0,   179,     0,     0,
     180,   181,     0,   182,   183,   184,     0,   185,     0,   186,
     187,   188,   189,   190,   191,     0,   192,   193,     0,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,     0,
       0,     0,   212,     0,     0,   213,     0,   214,     0,     0,
     215,     0,     0,     0,   216,   217,   218,     0,     0,   219,
       0,     0,     0,     0,   220,   221,     0,     0,     0,     0,
     222,   223,     0,   224,     0,     0,     0,   225,     0,   226,
     227,   228,   229,   230,     0,     0,     0,   231,     0,     0,
     232,   233,   234,     0,     0,     0,   235,     0,   236,   237,
       0,   238,   239,   240,     0,     0,   241,   242,     0,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,   253,     0,     0,   254,   255,     0,   256,   257,   258,
     259,   260,     0,     0,   261,   262,     0,     0,     0,   263,
     264,     0,   265,     0,   266,     0,   267,     0,   268,   269,
     270,   271,     0,   272,     0,   273,     0,     0,     0,   274,
     275,     0,   276,     0,     0,   277,   278,     0,     0,     0,
     279,   280,   281,   282,     0,     0,   283,   284,   285,     0,
       0,   286,     0,     0,     0,     0,   287,   288,   289,     0,
       0,     0,   290,     0,     0,     0,   291,   292,     0,   293,
     294,     0,     0,     0,   295,     0,   296,     0,     0,   297,
     298,     0,     0,   299,     0,     0,   300,   301,     0,     0,
       0,     0,     0,   302,   303,     0,   304,     0,   305,     0,
     306,   307,     0,     0,     0,     0,     0,     0,     0,   308,
       0,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,     0,   330,   331,   332,   333,     0,   334,
     335,     0,     0,     0,     0,   336,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,     0,     0,   357,   358,   359,   360,   361,
       0,     0,     0,   362,   363,     0,     0,     0,   364,     0,
     365,   366,     0,   367,   368,   369,     0,     0,   370,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   371,   372,
     373,     0,   374,     0,   375,     0,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,     0,   386,     0,   387,
     388,   389,     0,   390,     0,   391,   392,   393,   394,   395,
       0,   396,   397,   398,     0,     0,   399,     0,     0,     0,
     400,   401,   402,   403,   404,     0,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,   412,   413,   414,     0,
       0,   415,   416,   417,   418,   419,   420,   421,   422,     0,
     423,     0,   424,   425,     0,   426,   427,   428,     0,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,     0,   442,   443,     0,     0,     0,
     444,   445,   446,   447,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,   452,   453,     0,   454,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
     461,     0,   462,   463,     0,   464,     0,     0,   465,     0,
     466,     0,   467,   468,   469,   470,   471,   472,     0,     0,
     473,   474,     0,     0,   475,   476,   477,   478,   479,   480,
       0,     0,   481,   482,   483,   484,     0,   485,   486,     0,
       0,   487,   488,   489,   490,     0,     0,   491,   492,     0,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,     0,     0,     0,   499,   500,   501,   502,     0,   503,
     504,     0,   505,   506,     0,   507,   508,     0,     0,   509,
       0,     0,   510,     0,   511,     0,   512,   513,     0,     0,
       0,     0,     0,   514,     0,   515,     0,     0,   516,     0,
       0,     0,   517,     0,   518,   519,   520,   521,     0,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,   526,
     527,   528,     0,     0,   529,     0,     0,     0,     0,     0,
     530,   531,     0,   532,     0,     0,     0,     0,     0,     0,
     153,   154,     0,   155,   156,   157,   158,   159,  2603,     0,
     160,   161,     0,     0,     0,   162,     0,  1368,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,     0,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,     0,     0,     0,     0,     0,
       0,   153,   154,     0,   155,   156,   157,   158,   159,  1651,
       0,   160,   161,     0,     0,     0,   162,     0,   597,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,     0,
       0,     0,   171,     0,     0,     0,   172,     0,     0,   173,
     174,   175,     0,   176,     0,   177,   178,     0,     0,   179,
       0,     0,   180,   181,     0,   182,   183,   184,     0,   185,
       0,   186,   187,   188,   189,   190,   191,     0,   192,   193,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,     0,     0,     0,   212,     0,     0,   213,     0,   214,
       0,     0,   215,     0,     0,     0,   216,   217,   218,     0,
       0,   219,     0,     0,     0,     0,   220,   221,     0,     0,
       0,     0,   222,   223,     0,   224,     0,     0,     0,   225,
       0,   226,   227,   228,   229,   230,     0,     0,     0,   231,
       0,     0,   232,   233,   234,     0,     0,     0,   235,     0,
     236,   237,     0,   238,   239,   240,     0,     0,   241,   242,
       0,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,   253,     0,     0,   254,   255,     0,   256,
     257,   258,   259,   260,     0,     0,   261,   262,     0,     0,
       0,   263,   264,     0,   265,     0,   266,     0,   267,     0,
     268,   269,   270,   271,     0,   272,     0,   273,     0,     0,
       0,   274,   275,     0,   276,     0,     0,   277,   278,     0,
       0,     0,   279,   280,   281,   282,     0,     0,   283,   284,
     285,     0,     0,   286,     0,     0,     0,     0,   287,   288,
     289,     0,     0,     0,   290,     0,     0,     0,   291,   292,
       0,   293,   294,     0,     0,     0,   295,     0,   296,     0,
       0,   297,   298,     0,     0,   299,     0,     0,   300,   301,
       0,     0,     0,     0,     0,   302,   303,     0,   304,     0,
     305,     0,   306,   307,     0,     0,     0,     0,     0,     0,
       0,   308,     0,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,     0,   330,   331,   332,   333,
       0,   334,   335,     0,     0,     0,     0,   336,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,   355,   356,     0,     0,   357,   358,   359,
     360,   361,     0,     0,     0,   362,   363,     0,     0,     0,
     364,     0,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     371,   372,   373,     0,   374,     0,   375,     0,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,     0,   386,
       0,   387,   388,   389,     0,   390,     0,   391,   392,   393,
     394,   395,     0,   396,   397,   398,     0,     0,   399,     0,
       0,     0,   400,   401,   402,   403,   404,     0,     0,   405,
     406,   407,   408,   409,     0,   410,   411,     0,   412,   413,
     414,     0,     0,   415,   416,   417,   418,   419,   420,   421,
     422,     0,   423,     0,   424,   425,     0,   426,   427,   428,
       0,   429,     0,     0,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,     0,   442,   443,     0,
       0,     0,   444,   445,   446,   447,     0,     0,     0,   448,
       0,     0,     0,   449,     0,   450,   451,   452,   453,     0,
     454,   455,   456,   457,   458,     0,     0,     0,     0,     0,
     459,   460,   461,     0,   462,   463,     0,   464,     0,     0,
     465,     0,   466,     0,   467,   468,   469,   470,   471,   472,
       0,     0,   473,   474,     0,     0,   475,   476,   477,   478,
     479,   480,     0,     0,   481,   482,   483,   484,     0,   485,
     486,     0,     0,   487,   488,   489,   490,     0,     0,   491,
     492,     0,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,     0,     0,     0,   499,   500,   501,   502,
       0,   503,   504,     0,   505,   506,     0,   507,   508,     0,
       0,   509,     0,     0,   510,     0,   511,     0,   512,   513,
       0,     0,     0,     0,     0,   514,     0,   515,     0,     0,
     516,     0,     0,     0,   517,     0,   518,   519,   520,   521,
       0,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,   526,   527,   528,     0,     0,   529,     0,     0,     0,
       0,     0,   530,   531,     0,   532,     0,     0,     0,     0,
       0,     0,   153,   154,  3300,   155,   156,   157,   158,   159,
       0,     0,   160,   161,     0,     0,     0,   162,     0,   597,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
       0,     0,     0,   171,     0,     0,     0,   172,     0,     0,
     173,   174,   175,     0,   176,     0,   177,   178,     0,     0,
     179,     0,     0,   180,   181,     0,   182,   183,   184,     0,
     185,     0,   186,   187,   188,   189,   190,   191,     0,   192,
     193,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,     0,     0,     0,   212,     0,     0,   213,     0,
     214,     0,     0,   215,     0,     0,     0,   216,   217,   218,
       0,     0,   219,     0,     0,     0,     0,   220,   221,     0,
       0,     0,     0,   222,   223,     0,   224,     0,     0,     0,
     225,     0,   226,   227,   228,   229,   230,     0,     0,     0,
     231,     0,     0,   232,   233,   234,     0,     0,     0,   235,
       0,   236,   237,     0,   238,   239,   240,     0,     0,   241,
     242,     0,   243,   244,   245,   246,   247,   248,     0,     0,
     249,   250,   251,   252,   253,     0,     0,   254,   255,     0,
     256,   257,   258,   259,   260,     0,     0,   261,   262,     0,
       0,     0,   263,   264,     0,   265,     0,   266,     0,   267,
       0,   268,   269,   270,   271,     0,   272,     0,   273,     0,
       0,     0,   274,   275,     0,   276,     0,     0,   277,   278,
       0,     0,     0,   279,   280,   281,   282,     0,     0,   283,
     284,   285,     0,     0,   286,     0,     0,     0,     0,   287,
     288,   289,     0,     0,     0,   290,     0,     0,     0,   291,
     292,     0,   293,   294,     0,     0,     0,   295,     0,   296,
       0,     0,   297,   298,     0,     0,   299,     0,     0,   300,
     301,     0,     0,     0,     0,     0,   302,   303,     0,   304,
       0,   305,     0,   306,   307,     0,     0,     0,     0,     0,
       0,     0,   308,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,     0,   330,   331,   332,
     333,     0,   334,   335,     0,     0,     0,     0,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,   358,
     359,   360,   361,     0,     0,     0,   362,   363,     0,     0,
       0,   364,     0,   365,   366,     0,   367,   368,   369,     0,
       0,   370,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   371,   372,   373,     0,   374,     0,   375,     0,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,     0,
     386,     0,   387,   388,   389,     0,   390,     0,   391,   392,
     393,   394,   395,     0,   396,   397,   398,     0,     0,   399,
       0,     0,     0,   400,   401,   402,   403,   404,     0,     0,
     405,   406,   407,   408,   409,     0,   410,   411,     0,   412,
     413,   414,     0,     0,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,     0,   426,   427,
     428,     0,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,     0,   442,   443,
       0,     0,     0,   444,   445,   446,   447,     0,     0,     0,
     448,     0,     0,     0,   449,     0,   450,   451,   452,   453,
       0,   454,   455,   456,   457,   458,     0,     0,     0,     0,
       0,   459,   460,   461,     0,   462,   463,     0,   464,     0,
       0,   465,     0,   466,     0,   467,   468,   469,   470,   471,
     472,     0,     0,   473,   474,     0,     0,   475,   476,   477,
     478,   479,   480,     0,     0,   481,   482,   483,   484,     0,
     485,   486,     0,     0,   487,   488,   489,   490,     0,     0,
     491,   492,     0,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,     0,     0,     0,   499,   500,   501,
     502,     0,   503,   504,     0,   505,   506,     0,   507,   508,
       0,     0,   509,     0,     0,   510,     0,   511,     0,   512,
     513,     0,     0,     0,     0,     0,   514,     0,   515,     0,
       0,   516,     0,     0,     0,   517,     0,   518,   519,   520,
     521,     0,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,   526,   527,   528,     0,     0,   529,     0,     0,
       0,     0,     0,   530,   531,     0,   532,     0,     0,     0,
       0,     0,     0,   153,   154,     0,   155,   156,   157,   158,
     159,     0,     0,   160,   161,     0,     0,     0,   162,  4578,
     794,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,     0,     0,     0,   171,     0,     0,     0,   172,     0,
       0,   173,   174,   175,     0,   176,     0,   177,   178,     0,
       0,   179,     0,     0,   180,   181,     0,   182,   183,   184,
       0,   185,     0,   186,   187,   188,   189,   190,   191,     0,
     192,   193,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,     0,     0,     0,   212,     0,     0,   213,
       0,   214,     0,     0,   215,     0,     0,     0,   216,   217,
     218,     0,     0,   219,     0,     0,     0,     0,   220,   221,
       0,     0,     0,     0,   222,   223,     0,   224,     0,     0,
       0,   225,     0,   226,   227,   228,   229,   230,     0,     0,
       0,   231,     0,     0,   232,   233,   234,     0,     0,     0,
     235,     0,   236,   237,     0,   238,   239,   240,     0,     0,
     241,   242,     0,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,   253,     0,     0,   254,   255,
       0,   256,   257,   258,   259,   260,     0,     0,   261,   262,
       0,     0,     0,   263,   264,     0,   265,     0,   266,     0,
     267,     0,   268,   269,   270,   271,     0,   272,     0,   273,
       0,     0,     0,   274,   275,     0,   276,     0,     0,   277,
     278,     0,     0,     0,   279,   280,   281,   282,     0,     0,
     283,   284,   285,     0,     0,   286,     0,     0,     0,     0,
     287,   288,   289,     0,     0,     0,   290,     0,     0,     0,
     291,   292,     0,   293,   294,     0,     0,     0,   295,     0,
     296,     0,     0,   297,   298,     0,     0,   299,     0,     0,
     300,   301,     0,     0,     0,     0,     0,   302,   303,     0,
     304,     0,   305,     0,   306,   307,     0,     0,     0,     0,
       0,     0,     0,   308,     0,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,     0,   330,   331,
     332,   333,     0,   334,   335,     0,     0,     0,     0,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,     0,   355,   356,     0,     0,   357,
     358,   359,   360,   361,     0,     0,     0,   362,   363,     0,
       0,     0,   364,     0,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   371,   372,   373,     0,   374,     0,   375,     0,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
       0,   386,     0,   387,   388,   389,     0,   390,     0,   391,
     392,   393,   394,   395,     0,   396,   397,   398,     0,     0,
     399,     0,     0,     0,   400,   401,   402,   403,   404,     0,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
     412,   413,   414,     0,     0,   415,   416,   417,   418,   419,
     420,   421,   422,     0,   423,     0,   424,   425,     0,   426,
     427,   428,     0,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,     0,   442,
     443,     0,     0,     0,   444,   445,   446,   447,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,   452,
     453,     0,   454,   455,   456,   457,   458,     0,     0,     0,
       0,     0,   459,   460,   461,     0,   462,   463,     0,   464,
       0,     0,   465,     0,   466,     0,   467,   468,   469,   470,
     471,   472,     0,     0,   473,   474,     0,     0,   475,   476,
     477,   478,   479,   480,     0,     0,   481,   482,   483,   484,
       0,   485,   486,     0,     0,   487,   488,   489,   490,     0,
       0,   491,   492,     0,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,     0,     0,     0,   499,   500,
     501,   502,     0,   503,   504,     0,   505,   506,     0,   507,
     508,     0,     0,   509,     0,     0,   510,     0,   511,     0,
     512,   513,     0,     0,     0,     0,     0,   514,     0,   515,
       0,     0,   516,     0,     0,     0,   517,     0,   518,   519,
     520,   521,     0,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,   526,   527,   528,     0,     0,   529,     0,
       0,     0,     0,     0,   530,   531,     0,   532,     0,     0,
       0,     0,   153,   154,     0,   155,   156,   157,   158,   159,
       0,     0,   160,   161,     0,     0,     0,   162,     0,     0,
     163,   597,   164,   165,   166,   167,   168,   169,     0,   170,
       0,     0,     0,   171,     0,     0,     0,   172,     0,     0,
     173,   174,   175,     0,   176,     0,   177,   178,     0,     0,
     179,     0,     0,   180,   181,     0,   182,   183,   184,     0,
     185,     0,   186,   187,   188,   189,   190,   191,     0,   192,
     193,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,     0,     0,     0,   212,     0,     0,   213,     0,
     214,     0,     0,   215,     0,     0,     0,   216,   217,   218,
       0,     0,   219,     0,     0,     0,     0,   220,   221,     0,
       0,     0,     0,   222,   223,     0,   224,     0,     0,     0,
     225,     0,   226,   227,   228,   229,   230,     0,     0,     0,
     231,     0,     0,   232,   233,   234,     0,     0,     0,   235,
       0,   236,   237,     0,   238,   239,   240,     0,     0,   241,
     242,     0,   243,   244,   245,   246,   247,   248,     0,     0,
     249,   250,   251,   851,   253,     0,     0,   254,   255,     0,
     256,   257,   258,   259,   260,     0,     0,   261,   262,     0,
       0,     0,   852,   264,     0,   265,     0,   266,     0,   267,
       0,   268,   269,   270,   271,     0,   272,     0,   273,     0,
       0,     0,   274,   275,     0,   276,     0,     0,   277,   278,
       0,     0,     0,   279,   280,   281,   282,     0,     0,   283,
     284,   285,     0,     0,   286,     0,     0,     0,     0,   287,
     288,   289,     0,     0,     0,   290,     0,     0,     0,   291,
     292,     0,   293,   294,     0,     0,     0,   295,     0,   296,
       0,     0,   297,   298,     0,     0,   299,     0,     0,   300,
     301,     0,     0,     0,     0,     0,   302,   303,     0,   304,
       0,   305,     0,   306,   307,     0,     0,     0,     0,     0,
       0,     0,   308,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,     0,   330,   331,   332,
     333,     0,   334,   335,     0,     0,     0,     0,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,   358,
     359,   360,   361,     0,     0,     0,   362,   363,     0,     0,
       0,   364,     0,   365,   366,     0,   367,   368,   369,     0,
       0,   370,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   371,   372,   373,     0,   374,     0,   375,     0,   853,
     377,   378,   379,   380,   381,   382,   383,   384,   385,     0,
     386,     0,   387,   388,   389,     0,   390,     0,   391,   392,
     393,   394,   395,     0,   396,   397,   398,     0,     0,   399,
       0,     0,     0,   400,   401,   402,   403,   404,     0,     0,
     405,   406,   407,   408,   409,     0,   410,   411,     0,   412,
     413,   414,     0,     0,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,     0,   426,   427,
     428,     0,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,     0,   442,   443,
       0,     0,     0,   444,   445,   446,   447,     0,     0,     0,
     448,     0,     0,     0,   449,     0,   450,   451,   452,   453,
       0,   454,   455,   456,   457,   458,     0,     0,     0,     0,
       0,   459,   460,   461,     0,   462,   463,     0,   464,     0,
       0,   465,     0,   466,     0,   467,   468,   469,   470,   471,
     472,     0,     0,   473,   474,     0,     0,   475,   476,   477,
     478,   479,   480,     0,     0,   481,   482,   483,   484,     0,
     485,   486,     0,     0,   487,   488,   489,   490,     0,     0,
     491,   492,     0,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,     0,     0,     0,   499,   500,   501,
     502,     0,   503,   504,     0,   505,   506,     0,   507,   508,
       0,     0,   509,     0,     0,   510,     0,   511,     0,   512,
     513,     0,     0,     0,     0,     0,   514,     0,   515,     0,
       0,   516,     0,     0,     0,   517,     0,   518,   519,   520,
     521,     0,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,   526,   527,   528,     0,     0,   529,     0,     0,
       0,     0,     0,   530,   531,     0,   532,     0,     0,     0,
       0,   153,   154,     0,   155,   156,   157,   158,   159,     0,
       0,   160,   161,     0,     0,     0,   162,     0,     0,   163,
     597,   164,   165,   166,   167,   168,   169,     0,   170,     0,
       0,     0,   171,     0,     0,     0,   172,     0,     0,   173,
     174,   175,     0,   176,     0,   177,   178,     0,     0,   179,
       0,     0,   180,   181,     0,   182,   183,   184,     0,   185,
       0,   186,   187,   188,   189,   190,   191,     0,   192,   193,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,     0,     0,     0,   212,     0,     0,   213,     0,   214,
       0,     0,   215,     0,     0,     0,   216,   217,   218,     0,
       0,   219,     0,     0,     0,     0,   220,   221,     0,     0,
       0,     0,   222,   223,     0,   224,     0,     0,     0,   225,
       0,   226,   227,   228,   229,   230,     0,     0,     0,   231,
       0,     0,   232,   233,   234,     0,     0,     0,   235,     0,
     236,   237,     0,   238,   239,   240,     0,     0,   241,   242,
       0,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,   253,     0,     0,   254,   255,     0,   256,
     257,   258,   259,   260,     0,     0,   261,   262,     0,     0,
       0,   263,   264,     0,   265,     0,   266,     0,   267,     0,
     268,   269,   270,   271,     0,   272,     0,   273,     0,     0,
       0,   274,   275,     0,   276,     0,     0,   277,   278,     0,
       0,     0,   279,   280,   281,   282,     0,     0,   283,   284,
     285,     0,     0,   286,     0,     0,     0,     0,   287,   288,
     289,     0,     0,     0,   290,     0,     0,     0,   291,   292,
       0,   293,   294,     0,     0,     0,   295,     0,   296,     0,
       0,   297,   298,     0,     0,   299,     0,     0,   300,   301,
       0,     0,     0,     0,     0,   302,   303,     0,   304,     0,
     305,     0,   306,   307,     0,     0,     0,     0,     0,     0,
       0,   308,     0,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,     0,   330,   331,   332,   333,
       0,   334,   335,     0,     0,     0,     0,   336,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,   355,   356,     0,     0,   357,   358,   359,
     360,   361,     0,     0,     0,   362,   363,     0,     0,     0,
     364,     0,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     371,   372,   373,     0,   374,     0,   375,     0,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,     0,   386,
       0,   387,   388,   389,     0,   390,     0,   391,   392,   393,
     394,   395,     0,   396,   397,   398,     0,     0,   399,     0,
       0,     0,   400,   401,   402,   403,   404,     0,     0,   405,
     406,   407,   408,   409,     0,   410,   411,     0,   412,   413,
     414,     0,     0,   415,   416,   417,   418,   419,   420,   421,
     422,     0,   423,     0,   424,   425,     0,   426,   427,   428,
       0,   429,     0,     0,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,     0,   442,   443,     0,
       0,     0,   444,   445,   446,   447,     0,     0,     0,   448,
       0,     0,     0,   449,     0,   450,   451,   452,   453,     0,
     454,   455,   456,   457,   458,     0,     0,     0,     0,     0,
     459,   460,   461,     0,   462,   463,     0,   464,     0,     0,
     465,     0,   466,     0,   467,   468,   469,   470,   471,   472,
       0,     0,   473,   474,     0,     0,   475,   476,   477,   478,
     479,   480,     0,     0,   481,   482,   483,   484,     0,   485,
     486,     0,     0,   487,   488,   489,   490,     0,     0,   491,
     492,     0,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,     0,     0,     0,   499,   500,   501,   502,
       0,   503,   504,     0,   505,   506,     0,   507,   508,     0,
       0,   509,     0,     0,   510,     0,   511,     0,   512,   513,
       0,     0,     0,     0,     0,   514,     0,   515,     0,     0,
     516,     0,     0,     0,   517,     0,   518,   519,   520,   521,
       0,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,   526,   527,   528,     0,     0,   529,     0,     0,     0,
       0,     0,   530,   531,     0,   532,     0,     0,     0,     0,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,  1368,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,     0,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,     0,     0,     0,     0,   153,
     154,     0,   155,   156,   157,   158,   159,     0,     0,   160,
     161,     0,     0,     0,   162,     0,     0,   163,   794,   164,
     165,   166,   167,   168,   169,     0,   170,     0,     0,     0,
     171,     0,     0,     0,   172,     0,     0,   173,   174,   175,
       0,   176,     0,   177,   178,     0,     0,   179,     0,     0,
     180,   181,     0,   182,   183,   651,   652,   185,     0,   186,
     187,   188,   189,   190,   191,     0,   192,   193,     0,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,     0,
       0,     0,   212,     0,     0,   213,     0,   214,     0,     0,
     215,     0,     0,     0,   216,   217,   218,     0,     0,   219,
       0,     0,     0,     0,   220,   221,     0,     0,     0,   653,
     222,   223,     0,   224,     0,     0,     0,   225,     0,   226,
     227,   228,   229,   230,     0,     0,     0,   231,     0,     0,
     232,   233,   234,     0,     0,     0,   235,     0,   236,   237,
       0,   238,   239,   240,     0,     0,   241,   242,     0,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,   253,     0,     0,   254,   255,     0,   256,   257,   258,
     259,   260,     0,     0,   261,   262,     0,     0,     0,   263,
     264,     0,   265,     0,   266,     0,   267,     0,   268,   269,
     270,   271,     0,   654,     0,   273,     0,     0,     0,   274,
     275,     0,   276,     0,     0,   277,   278,     0,     0,     0,
     279,   280,   281,   282,     0,     0,   283,   284,   285,     0,
       0,   286,     0,     0,     0,     0,   287,   288,   289,     0,
       0,     0,   290,     0,     0,     0,   291,   292,     0,   293,
     294,     0,     0,     0,   295,     0,   296,     0,     0,   297,
     298,     0,     0,   299,     0,     0,   300,   301,     0,     0,
       0,     0,     0,   302,   303,     0,   655,     0,   305,     0,
     306,   307,     0,     0,     0,     0,     0,     0,     0,   308,
       0,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,     0,   330,   331,   332,   333,     0,   334,
     335,     0,     0,     0,     0,   336,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,   348,   349,   350,   351,   656,   353,   354,     0,
       0,   355,   356,     0,     0,   357,   358,   359,   360,   361,
       0,     0,     0,   362,   363,     0,     0,     0,   364,     0,
     365,   366,     0,   367,   368,   369,     0,     0,   370,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   371,   372,
     373,     0,   374,     0,   375,     0,   376,   377,   657,   379,
     380,   381,   382,   383,   384,   385,     0,   386,     0,   387,
     388,   389,     0,   390,     0,   391,   392,   393,   394,   395,
       0,   396,   397,   398,     0,     0,   399,     0,     0,     0,
     400,   401,   402,   403,   404,     0,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,   412,   413,   414,     0,
       0,   415,   416,   417,   418,   419,   420,   421,   422,     0,
     423,     0,   424,   425,     0,   426,   427,   428,     0,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,     0,   442,   443,     0,     0,     0,
     444,   445,   658,   447,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,   452,   453,     0,   454,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
     461,     0,   462,   463,     0,   464,     0,     0,   465,     0,
     466,     0,   467,   468,   469,   470,   471,   472,     0,     0,
     473,   474,     0,     0,   475,   476,   477,   478,   479,   480,
       0,     0,   481,   482,   483,   484,     0,   485,   486,     0,
       0,   487,   488,   489,   490,     0,     0,   491,   492,     0,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   659,
     498,     0,     0,     0,   499,   500,   501,   502,     0,   503,
     504,     0,   505,   506,     0,   507,   508,     0,     0,   509,
       0,     0,   510,     0,   511,     0,   512,   513,     0,     0,
       0,     0,     0,   514,     0,   515,     0,     0,   516,     0,
       0,     0,   517,     0,   518,   519,   520,   521,     0,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,   526,
     527,   528,     0,     0,   529,     0,     0,   660,   661,     0,
     530,   531,     0,   532,     0,     0,     0,   153,   154,     0,
     155,   156,   157,   158,   159,     0,     0,   160,   161,     0,
       0,     0,   162,     0,     0,   163,   662,   164,   165,   166,
     167,   168,   169,     0,   170,     0,     0,     0,   171,     0,
       0,     0,   172,     0,     0,   173,   174,   175,     0,   176,
       0,   177,   178,     0,     0,   179,     0,     0,   180,   181,
       0,   182,   183,   184,     0,   185,     0,   186,   187,   188,
     189,   190,   191,     0,   192,   193,     0,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,   209,   210,   211,     0,     0,     0,
     212,     0,     0,   213,     0,   214,     0,     0,   215,     0,
       0,     0,   216,   217,   218,     0,     0,   219,     0,     0,
       0,     0,   220,   221,     0,     0,     0,     0,   222,   223,
       0,   224,     0,     0,     0,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,   231,     0,     0,  1249,   233,
     234,     0,     0,     0,   235,     0,   236,   237,     0,   238,
     239,   240,     0,     0,   241,   242,     0,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,   253,
       0,     0,   254,   255,     0,   256,   257,   258,   259,   260,
       0,     0,   261,   262,     0,     0,     0,   263,   264,     0,
     265,     0,   266,     0,   267,     0,   268,   269,   270,   271,
       0,   272,     0,   273,     0,     0,     0,   274,   275,     0,
     276,     0,     0,   277,   278,     0,     0,     0,   279,   280,
     281,   282,     0,     0,   283,   284,   285,     0,     0,   286,
       0,     0,     0,     0,   287,   288,   289,     0,     0,     0,
     290,     0,     0,     0,   291,   292,     0,   293,   294,     0,
       0,     0,   295,     0,   296,     0,     0,   297,   298,     0,
       0,   299,     0,     0,   300,   301,   829,     0,     0,     0,
       0,   302,   303,     0,   304,     0,   305,     0,   306,   307,
       0,     0,     0,     0,     0,     0,     0,   308,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,     0,   330,   331,   332,   333,     0,   334,   335,     0,
       0,     0,     0,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,   358,   359,   360,   361,     0,     0,
       0,   362,   363,     0,     0,     0,   364,     0,   365,   366,
       0,   367,   368,   369,     0,     0,   370,     0,     0,     0,
       0,     0,     0,     0,  1250,     0,   371,   372,   373,     0,
     374,     0,   375,     0,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,     0,   386,     0,   387,   388,   389,
       0,   390,     0,   391,   392,   393,   394,   395,     0,   396,
     397,   398,     0,     0,   399,     0,     0,     0,   400,   401,
     402,   403,   404,     0,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,   412,   413,   414,     0,     0,   415,
     416,   417,   418,   419,   420,   421,   422,     0,   423,     0,
     424,   425,     0,   426,   427,   428,     0,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,     0,   442,   443,     0,     0,     0,   444,   445,
     446,   447,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,   452,   453,     0,   454,   455,   456,   457,
     458,     0,     0,     0,     0,     0,   459,   460,   461,     0,
     462,   463,     0,   464,     0,     0,   465,     0,   466,     0,
     467,   468,   469,   470,   471,   472,     0,     0,   473,   474,
       0,     0,   475,   476,   477,   478,   479,   480,     0,     0,
     481,   482,   483,   484,     0,   485,   486,     0,     0,   487,
     488,   489,   490,     0,   150,   491,   492,     0,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,     0,
       0,     0,   499,   500,   501,   502,     0,   503,   504,     0,
     505,   506,     0,   507,   508,     0,     0,   509,     0,     0,
     510,     0,   511,     0,   512,   513,     0,     0,     0,     0,
       0,   514,     0,   515,     0,     0,   516,     0,     0,     0,
     517,     0,   518,   519,   520,   521,     0,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,   526,   527,   528,
       0,     0,   529,     0,     0,     0,     0,     0,   530,   531,
       0,   532,     0,     0,     0,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,  1251,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   651,   652,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,  1017,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   654,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   655,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   656,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   658,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,   660,     0,     0,   530,   531,     0,   532,
       0,     0,     0,   153,   154,     0,   155,   156,   157,   158,
     159,     0,     0,   160,   161,     0,     0,     0,   162,     0,
       0,   163,   662,   164,   165,   166,   167,   168,   169,     0,
     170,     0,     0,     0,   171,     0,     0,     0,   172,     0,
       0,   173,   174,   175,     0,   176,     0,   177,   178,     0,
       0,   179,     0,     0,   180,   181,     0,   182,   183,   184,
       0,   185,     0,   186,   187,   188,   189,   190,   191,     0,
     192,   193,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,     0,     0,     0,   212,     0,     0,   213,
       0,   214,     0,     0,   215,     0,     0,     0,   216,   217,
     218,     0,     0,   219,     0,     0,     0,     0,   220,   221,
       0,     0,     0,     0,   222,   223,     0,   224,     0,     0,
       0,   225,     0,   226,   227,   228,   229,   230,     0,     0,
       0,   231,     0,     0,   232,   233,   234,     0,     0,     0,
     235,     0,   236,   237,     0,   238,   239,   240,     0,     0,
     241,   242,     0,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,   253,     0,     0,   254,   255,
       0,   256,   257,   258,   259,   260,     0,     0,   261,   262,
       0,     0,     0,   263,   264,     0,   265,     0,   266,     0,
     267,     0,   268,   269,   270,   271,     0,   272,     0,   273,
       0,     0,     0,   274,   275,     0,   276,     0,     0,   277,
     278,     0,     0,     0,   279,   280,   281,   282,     0,     0,
     283,   284,   285,     0,     0,   286,     0,     0,     0,     0,
     287,   288,   289,     0,     0,     0,   290,     0,     0,     0,
     291,   292,     0,   293,   294,     0,     0,     0,   295,     0,
     296,     0,     0,   297,   298,     0,     0,   299,     0,     0,
     300,   301,   829,     0,     0,     0,     0,   302,   303,     0,
     304,     0,   305,     0,   306,   307,     0,     0,     0,     0,
       0,     0,     0,   308,     0,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,     0,   330,   331,
     332,   333,     0,   334,   335,     0,     0,     0,     0,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,     0,   355,   356,     0,     0,   357,
     358,   359,   360,   361,     0,     0,     0,   362,   363,     0,
       0,     0,   364,     0,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   371,   372,   373,     0,   374,     0,   375,     0,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
       0,   386,     0,   387,   388,   389,     0,   390,     0,   391,
     392,   393,   394,   395,     0,   396,   397,   398,     0,     0,
     399,     0,     0,     0,   400,   401,   402,   403,   404,     0,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
     412,   413,   414,     0,     0,   415,   416,   417,   418,   419,
     420,   421,   422,     0,   423,     0,   424,   425,     0,   426,
     427,   428,     0,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,     0,   442,
     443,     0,     0,     0,   444,   445,   446,   447,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,   452,
     453,     0,   454,   455,   456,   457,   458,     0,     0,     0,
       0,     0,   459,   460,   461,     0,   462,   463,     0,   464,
       0,     0,   465,     0,   466,     0,   467,   468,   469,   470,
     471,   472,     0,     0,   473,   474,     0,     0,   475,   476,
     477,   478,   479,   480,     0,     0,   481,   482,   483,   484,
       0,   485,   486,     0,     0,   487,   488,   489,   490,     0,
     150,   491,   492,     0,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,     0,     0,     0,   499,   500,
     501,   502,     0,   503,   504,     0,   505,   506,     0,   507,
     508,     0,     0,   509,     0,     0,   510,     0,   511,     0,
     512,   513,     0,     0,     0,     0,     0,   514,     0,   515,
       0,     0,   516,     0,     0,     0,   517,     0,   518,   519,
     520,   521,     0,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,   526,   527,   528,     0,     0,   529,     0,
       0,     0,     0,     0,   530,   531,     0,   532,     0,     0,
       0,   153,   154,     0,   155,   156,   157,   158,   159,     0,
       0,   160,   161,     0,     0,     0,   162,     0,     0,   163,
    1009,   164,   165,   166,   167,   168,   169,     0,   170,     0,
       0,     0,   171,     0,     0,     0,   172,     0,     0,   173,
     174,   175,     0,   176,     0,   177,   178,     0,     0,   179,
       0,     0,   180,   181,     0,   182,   183,   184,     0,   185,
       0,   186,   187,   188,   189,   190,   191,     0,   192,   193,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,     0,     0,     0,   212,     0,     0,   213,     0,   214,
       0,     0,   215,     0,     0,     0,   216,   217,   218,     0,
       0,   219,     0,     0,     0,     0,   220,   221,     0,     0,
       0,     0,   222,   223,     0,   224,     0,     0,     0,   225,
       0,   226,   227,   228,   229,   230,     0,     0,     0,   231,
       0,     0,   232,   233,   234,     0,     0,     0,   235,     0,
     236,   237,     0,   238,   239,   240,     0,     0,   241,   242,
       0,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,   253,     0,     0,   254,   255,     0,   256,
     257,   258,   259,   260,     0,     0,   261,   262,     0,     0,
       0,   263,   264,     0,   265,     0,   266,     0,   267,     0,
     268,   269,   270,   271,     0,   272,     0,   273,     0,     0,
       0,   274,   275,     0,   276,     0,     0,   277,   278,     0,
       0,     0,   279,   280,   281,   282,     0,     0,   283,   284,
     285,     0,     0,   286,     0,     0,     0,     0,   287,   288,
     289,     0,     0,     0,   290,     0,     0,     0,   291,   292,
       0,   293,   294,     0,     0,     0,   295,     0,   296,     0,
       0,   297,   298,     0,     0,   299,     0,     0,   300,   301,
     829,     0,     0,     0,     0,   302,   303,     0,   304,     0,
     305,     0,   306,   307,     0,     0,     0,     0,     0,     0,
       0,   308,     0,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,     0,   330,   331,   332,   333,
       0,   334,   335,     0,     0,     0,     0,   336,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,   355,   356,     0,     0,   357,   358,   359,
     360,   361,     0,     0,     0,   362,   363,     0,     0,     0,
     364,     0,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     371,   372,   373,     0,   374,     0,   375,     0,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,     0,   386,
       0,   387,   388,   389,     0,   390,     0,   391,   392,   393,
     394,   395,     0,   396,   397,   398,     0,     0,   399,     0,
       0,     0,   400,   401,   402,   403,   404,     0,     0,   405,
     406,   407,   408,   409,     0,   410,   411,     0,   412,   413,
     414,     0,     0,   415,   416,   417,   418,   419,   420,   421,
     422,     0,   423,     0,   424,   425,     0,   426,   427,   428,
       0,   429,     0,     0,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,     0,   442,   443,     0,
       0,     0,   444,   445,   446,   447,     0,     0,     0,   448,
       0,     0,     0,   449,     0,   450,   451,   452,   453,     0,
     454,   455,   456,   457,   458,     0,     0,     0,     0,     0,
     459,   460,   461,     0,   462,   463,     0,   464,     0,     0,
     465,     0,   466,     0,   467,   468,   469,   470,   471,   472,
       0,     0,   473,   474,     0,     0,   475,   476,   477,   478,
     479,   480,     0,     0,   481,   482,   483,   484,     0,   485,
     486,     0,     0,   487,   488,   489,   490,     0,   150,   491,
     492,     0,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,     0,     0,     0,   499,   500,   501,   502,
       0,   503,   504,     0,   505,   506,     0,   507,   508,     0,
       0,   509,     0,     0,   510,     0,   511,     0,   512,   513,
       0,     0,     0,     0,     0,   514,     0,   515,     0,     0,
     516,     0,     0,     0,   517,     0,   518,   519,   520,   521,
       0,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,   526,   527,   528,     0,     0,   529,     0,     0,     0,
       0,     0,   530,   531,     0,   532,     0,     0,     0,   153,
     154,     0,   155,   156,   157,   158,   159,     0,     0,   160,
     161,     0,     0,     0,   162,     0,     0,   163,  1195,   164,
     165,   166,   167,   168,   169,     0,   170,     0,     0,     0,
     171,     0,     0,     0,   172,     0,     0,   173,   174,   175,
       0,   176,     0,   177,   178,     0,     0,   179,     0,     0,
     180,   181,     0,   182,   183,   184,     0,   185,     0,   186,
     187,   188,   189,   190,   191,     0,   192,   193,     0,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,     0,
       0,     0,   212,     0,     0,   213,     0,   214,     0,     0,
     215,     0,     0,     0,   216,   217,   218,     0,     0,   219,
       0,     0,     0,     0,   220,   221,     0,     0,     0,     0,
     222,   223,     0,   224,     0,     0,     0,   225,     0,   226,
     227,   228,   229,   230,     0,     0,     0,   231,     0,     0,
     232,   233,   234,     0,     0,     0,   235,     0,   236,   237,
       0,   238,   239,   240,     0,     0,   241,   242,     0,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,   253,     0,     0,   254,   255,     0,   256,   257,   258,
     259,   260,     0,     0,   261,   262,     0,     0,     0,   263,
     264,     0,   265,     0,   266,     0,   267,     0,   268,   269,
     270,   271,     0,   272,     0,   273,     0,     0,     0,   274,
     275,     0,   276,     0,     0,   277,   278,     0,     0,     0,
     279,   280,   281,   282,     0,     0,   283,   284,   285,     0,
       0,   286,     0,     0,     0,     0,   287,   288,   289,     0,
       0,     0,   290,     0,     0,     0,   291,   292,     0,   293,
     294,     0,     0,     0,   295,     0,   296,     0,     0,   297,
     298,     0,     0,   299,     0,     0,   300,   301,   829,     0,
       0,     0,     0,   302,   303,     0,   304,     0,   305,     0,
     306,   307,     0,     0,     0,     0,     0,     0,     0,   308,
       0,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,     0,   330,   331,   332,   333,     0,   334,
     335,     0,     0,     0,     0,   336,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,     0,     0,   357,   358,   359,   360,   361,
       0,     0,     0,   362,   363,     0,     0,     0,   364,     0,
     365,   366,     0,   367,   368,   369,     0,     0,   370,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   371,   372,
     373,     0,   374,     0,   375,     0,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,     0,   386,     0,   387,
     388,   389,     0,   390,     0,   391,   392,   393,   394,   395,
       0,   396,   397,   398,     0,     0,   399,     0,     0,     0,
     400,   401,   402,   403,   404,     0,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,   412,   413,   414,     0,
       0,   415,   416,   417,   418,   419,   420,   421,   422,     0,
     423,     0,   424,   425,     0,   426,   427,   428,     0,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,     0,   442,   443,     0,     0,     0,
     444,   445,   446,   447,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,   452,   453,     0,   454,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
     461,     0,   462,   463,     0,   464,     0,     0,   465,     0,
     466,     0,   467,   468,   469,   470,   471,   472,     0,     0,
     473,   474,     0,     0,   475,   476,   477,   478,   479,   480,
       0,     0,   481,   482,   483,   484,     0,   485,   486,     0,
       0,   487,   488,   489,   490,     0,   150,   491,   492,     0,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,     0,     0,     0,   499,   500,   501,   502,     0,   503,
     504,     0,   505,   506,     0,   507,   508,     0,     0,   509,
       0,     0,   510,     0,   511,     0,   512,   513,     0,     0,
       0,     0,     0,   514,     0,   515,     0,     0,   516,     0,
       0,     0,   517,     0,   518,   519,   520,   521,     0,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,   526,
     527,   528,     0,     0,   529,     0,     0,     0,     0,     0,
     530,   531,     0,   532,     0,     0,     0,   153,   154,     0,
     155,   156,   157,   158,   159,     0,     0,   160,   161,     0,
       0,     0,   162,     0,     0,   163,  1251,   164,   165,   166,
     167,   168,   169,     0,   170,     0,     0,     0,   171,     0,
       0,     0,   172,     0,     0,   173,   174,   175,     0,   176,
       0,   177,   178,     0,     0,   179,     0,     0,   180,   181,
       0,   182,   183,   184,     0,   185,     0,   186,   187,   188,
     189,   190,   191,     0,   192,   193,     0,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,  1450,   205,
     206,     0,   207,   208,   209,   210,   211,     0,     0,     0,
     212,     0,     0,   213,     0,   214,     0,     0,   215,     0,
       0,     0,   216,   217,   218,     0,     0,   219,     0,     0,
       0,     0,   220,   221,     0,     0,     0,     0,   222,   223,
       0,   224,     0,     0,     0,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,   231,     0,     0,   232,   233,
     234,     0,     0,     0,   235,     0,   236,   237,     0,   238,
     239,   240,     0,     0,   241,   242,     0,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,   253,
       0,     0,   254,   255,     0,   256,   257,   258,   259,   260,
       0,     0,   261,   262,     0,     0,     0,   263,   264,     0,
     265,     0,   266,     0,   267,     0,   268,   269,   270,   271,
       0,   272,     0,   273,     0,     0,     0,   274,   275,     0,
     276,     0,     0,   277,   278,     0,     0,     0,   279,   280,
     281,   282,     0,     0,   283,   284,   285,     0,     0,   286,
       0,     0,     0,     0,   287,   288,   289,     0,     0,     0,
     290,     0,     0,     0,   291,   292,     0,   293,   294,     0,
       0,     0,   295,     0,   296,     0,     0,   297,   298,     0,
       0,   299,     0,     0,   300,   301,     0,     0,     0,     0,
       0,   302,   303,     0,   304,     0,   305,     0,   306,   307,
       0,     0,     0,     0,     0,     0,     0,   308,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,     0,   330,   331,   332,   333,     0,   334,   335,     0,
       0,     0,     0,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,   358,   359,   360,   361,     0,     0,
       0,   362,   363,     0,     0,     0,   364,     0,   365,   366,
       0,   367,   368,   369,     0,     0,   370,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   371,   372,   373,     0,
     374,     0,   375,     0,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,     0,   386,     0,   387,   388,   389,
       0,   390,     0,   391,   392,   393,   394,   395,     0,   396,
     397,   398,     0,     0,   399,     0,     0,     0,   400,   401,
     402,   403,   404,     0,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,   412,   413,   414,     0,     0,   415,
     416,   417,   418,   419,   420,   421,   422,     0,   423,     0,
     424,   425,     0,   426,   427,   428,     0,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,     0,   442,   443,     0,     0,     0,   444,   445,
     446,   447,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,   452,   453,     0,   454,   455,   456,   457,
     458,     0,     0,     0,     0,     0,   459,   460,   461,     0,
     462,   463,     0,   464,     0,     0,   465,     0,   466,     0,
     467,   468,   469,   470,   471,   472,     0,     0,   473,   474,
       0,     0,   475,   476,   477,   478,   479,   480,     0,     0,
     481,   482,   483,   484,     0,   485,   486,     0,     0,   487,
     488,   489,   490,     0,     0,   491,   492,     0,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,     0,
       0,     0,   499,   500,   501,   502,     0,   503,   504,     0,
     505,   506,     0,   507,   508,     0,     0,   509,     0,     0,
     510,     0,   511,     0,   512,   513,     0,     0,     0,     0,
       0,   514,     0,   515,     0,     0,   516,     0,     0,     0,
     517,     0,   518,   519,   520,   521,     0,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,   526,   527,   528,
       0,     0,   529,     0,     0,     0,     0,     0,   530,   531,
       0,   532,     0,     0,     0,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,  1451,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,   154,   532,
     155,   156,   157,   158,   159,     0,     0,     0,   161,     0,
       0,     0,   162,     0,     0,     0,     0,   164,   165,   166,
     167,   168,  1451,     0,  -402,     0,     0,     0,   171,     0,
       0,     0,   172,     0,     0,   173,   174,   175,     0,   176,
       0,     0,     0,     0,     0,   179,  4233,     0,   180,   181,
       0,   182,   183,     0,     0,     0,     0,   186,   187,   188,
    4234,   190,   191,     0,   192,   193,     0,   194,   195,     0,
     197,     0,   199,   200,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,   209,     0,   211,     0,     0,     0,
     212,     0,     0,   213,     0,   214,     0,     0,   215,     0,
       0,     0,   216,   217,   218,     0,     0,   219,     0,     0,
       0,     0,   220,     0,     0,     0,     0,     0,   222,   223,
       0,   224,     0,     0,     0,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,     0,     0,     0,   232,   233,
     234,     0,     0,     0,   235,     0,     0,   237,     0,   238,
     239,   240,     0,     0,   241,   242,     0,   243,   244,   245,
     246,   247,     0,     0,     0,   249,   250,   251,   252,   253,
       0,     0,   254,   255,  4235,   256,   257,   258,   259,   260,
       0,     0,     0,     0,     0,     0,     0,     0,   264,     0,
     265,     0,   266,     0,   267,     0,     0,   269,   270,   271,
       0,   272,     0,   273,     0,     0,     0,     0,   275,     0,
       0,     0,     0,     0,   278,     0,     0,     0,   279,   280,
     281,   282,  4236,     0,   283,   284,   285,     0,     0,   286,
       0,     0,     0,     0,   287,   288,     0,     0,     0,     0,
     290,     0,     0,     0,   291,   292,     0,   293,   294,  4237,
       0,     0,   295,     0,   296,     0,     0,     0,   298,     0,
       0,   299,  4238,     0,   300,   301,     0,     0,     0,     0,
       0,   302,   303,     0,   304,     0,   305,     0,   306,   307,
       0,     0,     0,     0,  -357,     0,     0,   308,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,     0,   330,   331,   332,   333,     0,   334,   335,     0,
       0,     0,     0,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   363,     0,     0,     0,   364,     0,   365,   366,
       0,   367,   368,  4239,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   372,   373,     0,
       0,     0,   375,     0,   376,   377,   378,   379,   380,   381,
     382,   383,   384,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,   392,   393,   394,   395,     0,   396,
     397,   398,     0,     0,   399,     0,     0,     0,   400,   401,
     402,   403,   404,     0,     0,   405,   406,   407,   408,   409,
       0,   410,     0,     0,   412,     0,   414,  -357,     0,   415,
     416,   417,   418,   419,   420,   421,   422,     0,     0,     0,
     424,     0,     0,   426,   427,   428,  4240,   429,     0,     0,
       0,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     440,   441,     0,   442,     0,     0,     0,     0,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,     0,
       0,     0,   451,     0,   453,     0,   454,     0,     0,   457,
     458,     0,     0,     0,     0,     0,   459,   460,   461,     0,
     462,   463,     0,   464,     0,     0,   465,     0,   466,     0,
     467,     0,   469,   470,   471,   472,     0,     0,     0,   474,
       0,     0,   475,   476,   477,   478,   479,   480,     0,     0,
     481,   482,   483,   484,     0,   485,   486,     0,     0,   487,
     488,   489,   490,     0,     0,   491,   492,     0,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,     0,
       0,     0,     0,   500,   501,   502,     0,   503,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   509,     0,     0,
     510,     0,     0,     0,   512,   513,     0,     0,     0,     0,
       0,   514,     0,   515,     0,     0,   516,     0,     0,     0,
     517,     0,   518,   519,   520,   521,     0,     0,  -357,     0,
       0,     0,   522,   523,     0,     0,   525,     0,   527,   528,
       0,     0,   529,   153,   154,     0,   155,   156,   157,   158,
     159,   532,     0,   160,   161,     0,     0,     0,   162,     0,
       0,   163,     0,   164,   165,   166,   167,   168,   169,  4584,
     170,     0,     0,     0,   171,     0,     0,     0,   172,     0,
       0,   173,   174,   175,     0,   176,     0,   177,   178,     0,
       0,   179,     0,     0,   180,   181,     0,   182,   183,   184,
       0,   185,     0,   186,   187,   188,   189,   190,   191,     0,
     192,   193,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,     0,     0,     0,   212,     0,     0,   213,
       0,   214,     0,     0,   215,     0,     0,     0,   216,   217,
     218,     0,     0,   219,     0,     0,     0,     0,   220,   221,
       0,     0,     0,     0,   222,   223,     0,   224,     0,     0,
       0,   225,     0,   226,   227,   228,   229,   230,     0,     0,
       0,   231,     0,     0,   232,   233,   234,     0,     0,     0,
     235,     0,   236,   237,     0,   238,   239,   240,     0,     0,
     241,   242,     0,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,   253,     0,     0,   254,   255,
       0,   256,   257,   258,   259,   260,     0,     0,   261,   262,
       0,     0,     0,   263,   264,     0,   265,     0,   266,     0,
     267,     0,   268,   269,   270,   271,     0,   272,     0,   273,
       0,     0,     0,   274,   275,     0,   276,     0,     0,   277,
     278,     0,     0,     0,   279,   280,   281,   282,     0,     0,
     283,   284,   285,     0,     0,   286,     0,     0,     0,     0,
     287,   288,   289,     0,     0,     0,   290,     0,     0,     0,
     291,   292,     0,   293,   294,     0,     0,     0,   295,     0,
     296,     0,     0,   297,   298,     0,     0,   299,     0,     0,
     300,   301,     0,     0,     0,     0,     0,   302,   303,     0,
     304,     0,   305,     0,   306,   307,     0,     0,     0,     0,
       0,     0,     0,   308,     0,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,     0,   330,   331,
     332,   333,     0,   334,   335,     0,     0,     0,     0,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,     0,   355,   356,     0,     0,   357,
     358,   359,   360,   361,     0,     0,     0,   362,   363,     0,
       0,     0,   364,     0,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   371,   372,   373,     0,   374,     0,   375,     0,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
       0,   386,     0,   387,   388,   389,     0,   390,     0,   391,
     392,   393,   394,   395,     0,   396,   397,   398,     0,     0,
     399,     0,     0,     0,   400,   401,   402,   403,   404,     0,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
     412,   413,   414,     0,     0,   415,   416,   417,   418,   419,
     420,   421,   422,     0,   423,     0,   424,   425,     0,   426,
     427,   428,     0,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,     0,   442,
     443,     0,     0,     0,   444,   445,   446,   447,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,   452,
     453,     0,   454,   455,   456,   457,   458,     0,     0,     0,
       0,     0,   459,   460,   461,     0,   462,   463,     0,   464,
       0,     0,   465,     0,   466,     0,   467,   468,   469,   470,
     471,   472,     0,     0,   473,   474,     0,     0,   475,   476,
     477,   478,   479,   480,     0,     0,   481,   482,   483,   484,
       0,   485,   486,     0,     0,   487,   488,   489,   490,     0,
       0,   491,   492,     0,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,     0,     0,     0,   499,   500,
     501,   502,     0,   503,   504,     0,   505,   506,     0,   507,
     508,     0,     0,   509,     0,     0,   510,     0,   511,     0,
     512,   513,     0,     0,     0,     0,     0,   514,     0,   515,
       0,     0,   516,     0,     0,     0,   517,     0,   518,   519,
     520,   521,     0,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,   526,   527,   528,     0,     0,   529,     0,
       0,     0,     0,     0,   530,   531,     0,   532,     0,   153,
     154,     0,   155,   156,   157,   158,   159,     0,     0,   160,
     161,     0,     0,  3622,   162,     0,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,     0,     0,     0,
     171,     0,     0,     0,   172,     0,     0,   173,   174,   175,
       0,   176,     0,   177,   178,     0,     0,   179,     0,     0,
     180,   181,     0,   182,   183,   184,     0,   185,     0,   186,
     187,   188,   189,   190,   191,     0,   192,   193,     0,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,     0,
       0,     0,   212,     0,     0,   213,     0,   214,     0,     0,
     215,     0,     0,     0,   216,   217,   218,     0,     0,   219,
       0,     0,     0,     0,   220,   221,     0,     0,     0,     0,
     222,   223,     0,   224,     0,     0,     0,   225,     0,   226,
     227,   228,   229,   230,     0,     0,     0,   231,     0,     0,
     232,   233,   234,     0,     0,     0,   235,     0,   236,   237,
       0,   238,   239,   240,     0,     0,   241,   242,     0,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,   253,     0,     0,   254,   255,     0,   256,   257,   258,
     259,   260,     0,     0,   261,   262,     0,     0,     0,   263,
     264,     0,   265,     0,   266,     0,   267,     0,   268,   269,
     270,   271,     0,   272,     0,   273,     0,     0,     0,   274,
     275,     0,   276,     0,     0,   277,   278,     0,     0,     0,
     279,   280,   281,   282,     0,     0,   283,   284,   285,     0,
       0,   286,     0,     0,     0,     0,   287,   288,   289,     0,
       0,     0,   290,     0,     0,     0,   291,   292,     0,   293,
     294,     0,     0,     0,   295,     0,   296,     0,     0,   297,
     298,     0,     0,   299,     0,     0,   300,   301,     0,     0,
       0,     0,     0,   302,   303,     0,   304,     0,   305,     0,
     306,   307,     0,     0,     0,     0,     0,     0,     0,   308,
       0,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,     0,   330,   331,   332,   333,     0,   334,
     335,     0,     0,     0,     0,   336,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,     0,     0,   357,   358,   359,   360,   361,
       0,     0,     0,   362,   363,     0,     0,     0,   364,     0,
     365,   366,     0,   367,   368,   369,     0,     0,   370,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   371,   372,
     373,     0,   374,     0,   375,     0,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,     0,   386,     0,   387,
     388,   389,     0,   390,     0,   391,   392,   393,   394,   395,
       0,   396,   397,   398,     0,     0,   399,     0,     0,     0,
     400,   401,   402,   403,   404,     0,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,   412,   413,   414,     0,
       0,   415,   416,   417,   418,   419,   420,   421,   422,     0,
     423,     0,   424,   425,     0,   426,   427,   428,     0,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,     0,   442,   443,     0,     0,     0,
     444,   445,   446,   447,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,   452,   453,     0,   454,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
     461,     0,   462,   463,     0,   464,     0,     0,   465,     0,
     466,     0,   467,   468,   469,   470,   471,   472,     0,     0,
     473,   474,     0,     0,   475,   476,   477,   478,   479,   480,
       0,     0,   481,   482,   483,   484,     0,   485,   486,     0,
       0,   487,   488,   489,   490,     0,     0,   491,   492,     0,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,     0,     0,     0,   499,   500,   501,   502,     0,   503,
     504,     0,   505,   506,     0,   507,   508,     0,     0,   509,
       0,     0,   510,     0,   511,     0,   512,   513,     0,     0,
       0,     0,     0,   514,     0,   515,     0,     0,   516,     0,
       0,     0,   517,     0,   518,   519,   520,   521,     0,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,   526,
     527,   528,     0,     0,   529,     0,     0,     0,     0,     0,
     530,   531,     0,   532,     0,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,  3626,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,  2059,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,     0,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,  2086,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,  3287,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,     0,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,  3963,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,  2446,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,  2447,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,  2448,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
    2449,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,  1334,  1335,     0,   362,
     363,     0,     0,  2450,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,  4564,   628,  4565,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,  2451,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,  1383,  1384,   162,  1385,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,  1386,     0,     0,  1387,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,   150,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,  1388,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,   989,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,   990,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
     991,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,   829,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,   992,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,   150,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
    1011,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
    1012,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,   829,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,   150,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
    1262,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,  1263,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,   748,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,  1264,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
     989,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
     990,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,   829,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,   150,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,   828,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,   829,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,   150,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   830,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,  1079,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,  1080,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,  1081,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,   828,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,   829,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,   150,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,  1601,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,   829,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,   150,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,  2197,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,   829,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,   150,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
     989,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,   829,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,   150,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,   829,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,   150,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
    4504,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,  4505,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,     0,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,   628,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,   909,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,     0,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,  1017,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,  1018,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,   150,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,  1017,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
    2612,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,     0,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,  3045,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,  3054,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,     0,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,  3081,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,  3189,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,     0,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,     0,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,   256,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,     0,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,   361,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,   391,   392,   393,   394,   395,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,   412,   413,   414,     0,     0,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,   481,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,     0,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,   256,   257,
     258,  2150,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,     0,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,  2151,   360,
     361,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,   391,   392,   393,   394,
     395,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,   412,   413,   414,
       0,     0,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,   481,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,     0,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,  1005,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,  1006,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,     0,   246,   247,
       0,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,     0,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,   585,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,  1007,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,     0,   392,   393,   394,     0,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,     0,
     411,     0,   412,   413,   414,     0,     0,     0,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,     0,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,     0,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,   150,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,  1547,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,     0,   246,   247,     0,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,     0,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,   585,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
    1548,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,     0,   392,   393,   394,
       0,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,     0,   411,     0,   412,   413,   414,
       0,     0,     0,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,     0,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,     0,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,   150,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,     0,   532,   153,   154,     0,   155,   156,
     157,   158,   159,  2414,     0,   160,   161,     0,     0,     0,
     162,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,     0,     0,     0,   171,     0,     0,     0,
     172,     0,     0,   173,   174,   175,     0,   176,     0,   177,
     178,     0,     0,   179,     0,     0,   180,   181,     0,   182,
     183,   184,     0,   185,     0,   186,   187,   188,   189,   190,
     191,     0,   192,   193,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,     0,     0,   212,     0,
       0,   213,     0,   214,     0,     0,   215,     0,     0,     0,
     216,   217,   218,     0,     0,   219,     0,     0,     0,     0,
     220,   221,     0,     0,     0,     0,   222,   223,     0,   224,
       0,     0,     0,   225,     0,   226,   227,   228,   229,   230,
       0,     0,     0,   231,     0,     0,   232,   233,   234,     0,
       0,     0,   235,     0,   236,   237,     0,   238,   239,   240,
       0,     0,   241,   242,     0,   243,   244,     0,   246,   247,
       0,     0,     0,   249,   250,   251,   252,   253,     0,     0,
     254,   255,     0,     0,   257,   258,   259,   260,     0,     0,
     261,   262,     0,     0,     0,   263,   264,     0,   265,     0,
     266,     0,   267,     0,   268,   269,   270,   271,     0,   272,
       0,   273,     0,     0,     0,   274,   275,     0,   276,     0,
       0,   277,   278,     0,     0,     0,   279,   280,   281,   282,
       0,     0,   283,   284,   285,     0,     0,   286,     0,     0,
       0,     0,   287,   288,   289,     0,     0,     0,   290,     0,
       0,     0,   291,   292,     0,   293,   294,     0,     0,     0,
     295,     0,   296,     0,     0,   297,   298,     0,     0,   299,
       0,     0,   300,   301,   585,     0,     0,     0,     0,   302,
     303,     0,   304,     0,   305,     0,   306,   307,     0,     0,
       0,     0,     0,     0,     0,   308,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,     0,
     330,   331,   332,   333,     0,   334,   335,     0,     0,     0,
       0,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,   358,   359,   360,  2415,     0,     0,     0,   362,
     363,     0,     0,     0,   364,     0,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   371,   372,   373,     0,   374,     0,
     375,     0,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   386,     0,   387,   388,   389,     0,   390,
       0,     0,   392,   393,   394,     0,     0,   396,   397,   398,
       0,     0,   399,     0,     0,     0,   400,   401,   402,   403,
     404,     0,     0,   405,   406,   407,   408,   409,     0,     0,
     411,     0,   412,   413,   414,     0,     0,     0,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
       0,   426,   427,   428,     0,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
       0,   442,   443,     0,     0,     0,   444,   445,   446,   447,
       0,     0,     0,   448,     0,     0,     0,     0,     0,   450,
     451,   452,   453,     0,   454,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,   461,     0,   462,   463,
       0,   464,     0,     0,   465,     0,   466,     0,   467,   468,
     469,   470,   471,   472,     0,     0,   473,   474,     0,     0,
     475,   476,   477,   478,   479,   480,     0,     0,     0,   482,
     483,   484,     0,   485,   486,     0,     0,   487,   488,   489,
     490,     0,   150,   491,   492,     0,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,     0,     0,     0,
     499,   500,   501,   502,     0,   503,   504,     0,   505,   506,
       0,   507,   508,     0,     0,   509,     0,     0,   510,     0,
     511,     0,   512,   513,     0,     0,     0,     0,     0,   514,
       0,   515,     0,     0,   516,     0,     0,     0,   517,     0,
     518,   519,   520,   521,     0,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,   526,   527,   528,     0,     0,
     529,     0,     0,     0,     0,     0,   530,   531,     0,   532,
     153,   154,     0,   155,   156,   157,   158,   159,     0,     0,
     160,   161,     0,     0,     0,   162,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,     0,     0,
       0,   171,     0,     0,     0,   172,     0,     0,   173,   174,
     175,     0,   176,     0,   177,   178,     0,     0,   179,     0,
       0,   180,   181,     0,   182,   183,   184,     0,   185,     0,
     186,   187,   188,   189,   190,   191,     0,   192,   193,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,     0,     0,   212,     0,     0,   213,     0,   214,     0,
       0,   215,     0,     0,     0,   216,   217,   218,     0,     0,
     219,     0,     0,     0,     0,   220,   221,     0,     0,     0,
       0,   222,   223,     0,   224,     0,     0,     0,   225,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   231,     0,
       0,   232,   233,   234,     0,     0,     0,   235,     0,   236,
     237,     0,   238,   239,   240,     0,     0,   241,   242,     0,
     243,   244,     0,   246,   247,     0,     0,     0,   249,   250,
     251,   252,   253,     0,     0,   254,   255,     0,     0,   257,
     258,   259,   260,     0,     0,   261,   262,     0,     0,     0,
     263,   264,     0,   265,     0,   266,     0,   267,     0,   268,
     269,   270,   271,     0,   272,     0,   273,     0,     0,     0,
     274,   275,     0,   276,     0,     0,   277,   278,     0,     0,
       0,   279,   280,   281,   282,     0,     0,   283,   284,   285,
       0,     0,   286,     0,     0,     0,     0,   287,   288,   289,
       0,     0,     0,   290,     0,     0,     0,   291,   292,     0,
     293,   294,     0,     0,     0,   295,     0,   296,     0,     0,
     297,   298,     0,     0,   299,     0,     0,   300,   301,   585,
       0,     0,     0,     0,   302,   303,     0,   304,     0,   305,
       0,   306,   307,     0,     0,     0,     0,     0,     0,     0,
     308,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,     0,   330,   331,   332,   333,     0,
     334,   335,     0,     0,     0,     0,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,   358,   359,   360,
       0,     0,     0,     0,   362,   363,     0,     0,     0,   364,
       0,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
     372,   373,     0,   374,     0,   375,     0,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,     0,   386,     0,
     387,   388,   389,     0,   390,     0,     0,   392,   393,   394,
       0,     0,   396,   397,   398,     0,     0,   399,     0,     0,
       0,   400,   401,   402,   403,   404,     0,     0,   405,   406,
     407,   408,   409,     0,     0,   411,     0,   412,   413,   414,
       0,     0,     0,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,     0,   426,   427,   428,     0,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,     0,   442,   443,     0,     0,
       0,   444,   445,   446,   447,     0,     0,     0,   448,     0,
       0,     0,     0,     0,   450,   451,   452,   453,     0,   454,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,   461,     0,   462,   463,     0,   464,     0,     0,   465,
       0,   466,     0,   467,   468,   469,   470,   471,   472,     0,
       0,   473,   474,     0,     0,   475,   476,   477,   478,   479,
     480,     0,     0,     0,   482,   483,   484,     0,   485,   486,
       0,     0,   487,   488,   489,   490,     0,   150,   491,   492,
       0,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,     0,     0,     0,   499,   500,   501,   502,     0,
     503,   504,     0,   505,   506,     0,   507,   508,     0,     0,
     509,     0,     0,   510,     0,   511,     0,   512,   513,     0,
       0,     0,     0,     0,   514,     0,   515,     0,     0,   516,
       0,     0,     0,   517,     0,   518,   519,   520,   521,     0,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
     526,   527,   528,     0,     0,   529,     0,     0,     0,     0,
       0,   530,   531,   154,   532,   155,   156,   157,   158,   159,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
       0,     0,   164,   165,   166,   167,   168,     0,     0,  -402,
       0,     0,     0,   171,     0,     0,     0,   172,     0,     0,
     173,   174,   175,     0,   176,     0,     0,     0,     0,     0,
     179,  4233,     0,   180,   181,     0,   182,   183,     0,     0,
       0,     0,   186,   187,   188,  4234,   190,   191,     0,   192,
     193,     0,   194,   195,     0,   197,     0,   199,   200,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,   209,
       0,   211,     0,     0,     0,   212,     0,     0,   213,     0,
     214,     0,     0,   215,     0,     0,     0,   216,   217,   218,
       0,     0,   219,     0,     0,     0,     0,   220,     0,     0,
       0,     0,     0,   222,   223,     0,   224,     0,     0,     0,
     225,     0,   226,   227,   228,   229,   230,     0,     0,     0,
       0,     0,     0,   232,   233,   234,     0,  -372,  -372,   235,
       0,  -372,   237,     0,   238,   239,   240,     0,     0,   241,
     242,     0,   243,   244,   245,   246,   247,     0,     0,     0,
     249,   250,   251,   252,   253,     0,     0,   254,   255,  4235,
     256,   257,   258,   259,   260,     0,     0,     0,     0,     0,
       0,     0,     0,   264,     0,   265,     0,   266,     0,   267,
       0,     0,   269,   270,   271,     0,   272,     0,   273,     0,
       0,     0,     0,   275,     0,     0,     0,     0,     0,   278,
       0,     0,     0,   279,   280,   281,   282,  4236,     0,   283,
     284,   285,     0,     0,   286,     0,     0,     0,     0,   287,
     288,     0,     0,     0,     0,   290,     0,     0,     0,   291,
     292,     0,   293,   294,  4237,     0,     0,   295,     0,   296,
       0,     0,     0,   298,     0,     0,   299,  4238,     0,   300,
     301,     0,     0,     0,     0,     0,   302,   303,     0,   304,
       0,   305,     0,   306,   307,     0,     0,     0,     0,  -357,
       0,     0,   308,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,     0,   330,   331,   332,
     333,     0,   334,   335,     0,     0,     0,     0,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   363,     0,     0,
       0,   364,     0,   365,   366,     0,   367,   368,  4239,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,     0,     0,     0,   375,     0,   376,
     377,   378,   379,   380,   381,   382,   383,   384,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,   392,
     393,   394,   395,     0,   396,   397,   398,     0,     0,   399,
       0,     0,     0,   400,   401,   402,   403,   404,     0,     0,
     405,   406,   407,   408,   409,     0,   410,     0,     0,   412,
       0,   414,  -357,     0,   415,   416,   417,   418,   419,   420,
     421,   422,     0,     0,     0,   424,     0,     0,   426,   427,
     428,  4240,   429,     0,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   440,   441,     0,   442,     0,
       0,     0,     0,   444,   445,   446,     0,     0,     0,     0,
     448,     0,     0,     0,     0,     0,     0,   451,     0,   453,
       0,   454,     0,     0,   457,   458,     0,     0,     0,     0,
       0,   459,   460,   461,     0,   462,   463,     0,   464,     0,
       0,   465,     0,   466,     0,   467,     0,   469,   470,   471,
     472,     0,     0,     0,   474,     0,     0,   475,   476,   477,
     478,   479,   480,     0,     0,   481,   482,   483,   484,     0,
     485,   486,     0,     0,   487,   488,   489,   490,     0,     0,
     491,   492,     0,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,     0,     0,     0,     0,   500,   501,
     502,     0,   503,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   509,     0,     0,   510,     0,     0,     0,   512,
     513,     0,     0,     0,     0,     0,   514,     0,   515,     0,
       0,   516,     0,     0,     0,   517,     0,   518,   519,   520,
     521,     0,     0,  -357,     0,     0,     0,   522,   523,     0,
       0,   525,     0,   527,   528,     0,     0,   529,   154,     0,
     155,   156,   157,   158,   159,     0,   532,     0,   161,     0,
       0,     0,   162,     0,     0,     0,     0,   164,   165,   166,
     167,   168,     0,     0,  -402,     0,     0,     0,   171,     0,
       0,     0,   172,     0,     0,   173,   174,   175,     0,   176,
       0,     0,     0,     0,     0,   179,  4233,     0,   180,   181,
       0,   182,   183,     0,     0,     0,     0,   186,   187,   188,
    4234,   190,   191,     0,   192,   193,     0,   194,   195,     0,
     197,     0,   199,   200,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,   209,     0,   211,     0,     0,     0,
     212,     0,     0,   213,     0,   214,     0,     0,   215,     0,
       0,     0,   216,   217,   218,     0,     0,   219,     0,     0,
       0,     0,   220,     0,     0,     0,     0,     0,   222,   223,
       0,   224,     0,     0,     0,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,     0,     0,     0,   232,   233,
     234,     0,  -393,     0,   235,     0,  -393,   237,     0,   238,
     239,   240,     0,     0,   241,   242,     0,   243,   244,   245,
     246,   247,     0,     0,     0,   249,   250,   251,   252,   253,
       0,     0,   254,   255,  4235,   256,   257,   258,   259,   260,
       0,     0,     0,     0,     0,     0,     0,     0,   264,     0,
     265,     0,   266,     0,   267,     0,     0,   269,   270,   271,
       0,   272,     0,   273,     0,     0,     0,     0,   275,     0,
       0,     0,     0,     0,   278,     0,     0,     0,   279,   280,
     281,   282,  4236,     0,   283,   284,   285,     0,     0,   286,
       0,     0,     0,     0,   287,   288,     0,     0,     0,     0,
     290,     0,     0,     0,   291,   292,     0,   293,   294,  4237,
       0,     0,   295,     0,   296,     0,     0,     0,   298,     0,
       0,   299,  4238,     0,   300,   301,     0,     0,     0,     0,
       0,   302,   303,     0,   304,     0,   305,     0,   306,   307,
       0,     0,     0,     0,  -357,     0,     0,   308,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,     0,   330,   331,   332,   333,     0,   334,   335,     0,
       0,     0,     0,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   363,     0,     0,     0,   364,     0,   365,   366,
       0,   367,   368,  4239,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   372,   373,     0,
       0,     0,   375,     0,   376,   377,   378,   379,   380,   381,
     382,   383,   384,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,   392,   393,   394,   395,     0,   396,
     397,   398,     0,     0,   399,     0,     0,     0,   400,   401,
     402,   403,   404,     0,     0,   405,   406,   407,   408,   409,
       0,   410,     0,     0,   412,     0,   414,  -357,     0,   415,
     416,   417,   418,   419,   420,   421,   422,     0,     0,     0,
     424,     0,     0,   426,   427,   428,  4240,   429,     0,     0,
       0,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     440,   441,     0,   442,     0,     0,     0,     0,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,     0,
       0,     0,   451,     0,   453,     0,   454,     0,     0,   457,
     458,     0,     0,     0,     0,     0,   459,   460,   461,     0,
     462,   463,     0,   464,     0,     0,   465,     0,   466,     0,
     467,     0,   469,   470,   471,   472,     0,     0,     0,   474,
       0,     0,   475,   476,   477,   478,   479,   480,     0,     0,
     481,   482,   483,   484,     0,   485,   486,     0,     0,   487,
     488,   489,   490,     0,     0,   491,   492,     0,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,     0,
       0,     0,     0,   500,   501,   502,     0,   503,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   509,     0,     0,
     510,     0,     0,     0,   512,   513,     0,     0,     0,     0,
       0,   514,     0,   515,     0,     0,   516,     0,     0,     0,
     517,     0,   518,   519,   520,   521,  -393,     0,  -357,     0,
       0,     0,   522,   523,     0,     0,   525,     0,   527,   528,
       0,     0,   529,   154,     0,   155,   156,   157,   158,   159,
       0,   532,     0,   161,     0,     0,     0,   162,     0,     0,
       0,     0,   164,   165,   166,   167,   168,     0,     0,  -402,
       0,     0,     0,   171,     0,     0,     0,   172,     0,     0,
     173,   174,   175,     0,   176,     0,     0,     0,     0,     0,
     179,  4233,     0,   180,   181,     0,   182,   183,     0,     0,
       0,     0,   186,   187,   188,  4234,   190,   191,     0,   192,
     193,     0,   194,   195,     0,   197,     0,   199,   200,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,   209,
       0,   211,     0,     0,     0,   212,     0,     0,   213,     0,
     214,     0,     0,   215,     0,     0,     0,   216,   217,   218,
       0,     0,   219,     0,     0,     0,     0,   220,     0,     0,
       0,     0,     0,   222,   223,     0,   224,     0,     0,     0,
     225,     0,   226,   227,   228,   229,   230,     0,     0,     0,
       0,     0,     0,   232,   233,   234,     0,  -390,     0,   235,
       0,  -390,   237,     0,   238,   239,   240,     0,     0,   241,
     242,     0,   243,   244,   245,   246,   247,     0,     0,     0,
     249,   250,   251,   252,   253,     0,     0,   254,   255,  4235,
     256,   257,   258,   259,   260,     0,     0,     0,     0,     0,
       0,     0,     0,   264,     0,   265,     0,   266,     0,   267,
       0,     0,   269,   270,   271,     0,   272,     0,   273,     0,
       0,     0,     0,   275,     0,     0,     0,     0,     0,   278,
       0,     0,     0,   279,   280,   281,   282,  4236,     0,   283,
     284,   285,     0,     0,   286,     0,     0,     0,     0,   287,
     288,     0,     0,     0,     0,   290,     0,     0,     0,   291,
     292,     0,   293,   294,  4237,     0,     0,   295,     0,   296,
       0,     0,     0,   298,     0,     0,   299,  4238,     0,   300,
     301,     0,     0,     0,     0,     0,   302,   303,     0,   304,
       0,   305,     0,   306,   307,     0,     0,     0,     0,  -357,
       0,     0,   308,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,     0,   330,   331,   332,
     333,     0,   334,   335,     0,     0,     0,     0,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   363,     0,     0,
       0,   364,     0,   365,   366,     0,   367,   368,  4239,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,     0,     0,     0,   375,     0,   376,
     377,   378,   379,   380,   381,   382,   383,   384,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,   392,
     393,   394,   395,     0,   396,   397,   398,     0,     0,   399,
       0,     0,     0,   400,   401,   402,   403,   404,     0,     0,
     405,   406,   407,   408,   409,     0,   410,     0,     0,   412,
       0,   414,  -357,     0,   415,   416,   417,   418,   419,   420,
     421,   422,     0,     0,     0,   424,     0,     0,   426,   427,
     428,  4240,   429,     0,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   440,   441,     0,   442,     0,
       0,     0,     0,   444,   445,   446,     0,     0,     0,     0,
     448,     0,     0,     0,     0,     0,     0,   451,     0,   453,
       0,   454,     0,     0,   457,   458,     0,     0,     0,     0,
       0,   459,   460,   461,     0,   462,   463,     0,   464,     0,
       0,   465,     0,   466,     0,   467,     0,   469,   470,   471,
     472,     0,     0,     0,   474,     0,     0,   475,   476,   477,
     478,   479,   480,     0,     0,   481,   482,   483,   484,     0,
     485,   486,     0,     0,   487,   488,   489,   490,     0,     0,
     491,   492,     0,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,     0,     0,     0,     0,   500,   501,
     502,     0,   503,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   509,     0,     0,   510,     0,     0,     0,   512,
     513,     0,     0,     0,     0,     0,   514,     0,   515,     0,
       0,   516,     0,     0,     0,   517,     0,   518,   519,   520,
     521,  -390,     0,  -357,     0,     0,     0,   522,   523,     0,
       0,   525,     0,   527,   528,     0,     0,   529,   154,     0,
     155,   156,   157,   158,   159,     0,   532,     0,   161,     0,
       0,     0,   162,     0,     0,     0,     0,   164,   165,   166,
     167,   168,     0,     0,  -402,     0,     0,     0,   171,     0,
       0,     0,   172,     0,     0,   173,   174,   175,     0,   176,
       0,     0,     0,     0,     0,   179,  4233,     0,   180,   181,
       0,   182,   183,     0,     0,     0,     0,   186,   187,   188,
    4234,   190,   191,     0,   192,   193,     0,   194,   195,     0,
     197,     0,   199,   200,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,   209,     0,   211,     0,     0,     0,
     212,     0,     0,   213,     0,   214,     0,     0,   215,     0,
       0,     0,   216,   217,   218,     0,     0,   219,     0,     0,
       0,     0,   220,     0,     0,     0,     0,     0,   222,   223,
       0,   224,     0,     0,     0,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,     0,     0,     0,   232,   233,
     234,     0,     0,     0,   235,     0,  4450,   237,     0,   238,
     239,   240,     0,     0,   241,   242,     0,   243,   244,   245,
     246,   247,     0,     0,     0,   249,   250,   251,   252,   253,
       0,     0,   254,   255,  4235,   256,   257,   258,   259,   260,
       0,     0,     0,     0,     0,     0,     0,     0,   264,     0,
     265,     0,   266,     0,   267,     0,     0,   269,   270,   271,
       0,   272,     0,   273,     0,     0,     0,     0,   275,     0,
       0,     0,     0,     0,   278,     0,     0,     0,   279,   280,
     281,   282,  4236,     0,   283,   284,   285,     0,     0,   286,
       0,     0,     0,     0,   287,   288,     0,     0,     0,     0,
     290,     0,     0,     0,   291,   292,     0,   293,   294,  4237,
       0,     0,   295,     0,   296,     0,     0,     0,   298,     0,
       0,   299,  4238,     0,   300,   301,     0,     0,     0,     0,
       0,   302,   303,     0,   304,     0,   305,     0,   306,   307,
       0,     0,     0,     0,  -357,     0,     0,   308,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,     0,   330,   331,   332,   333,     0,   334,   335,     0,
       0,     0,     0,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   363,     0,     0,     0,   364,     0,   365,   366,
       0,   367,   368,  4239,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   372,   373,     0,
       0,     0,   375,     0,   376,   377,   378,   379,   380,   381,
     382,   383,   384,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,   392,   393,   394,   395,     0,   396,
     397,   398,     0,     0,   399,     0,     0,     0,   400,   401,
     402,   403,   404,     0,     0,   405,   406,   407,   408,   409,
       0,   410,     0,     0,   412,     0,   414,  -357,     0,   415,
     416,   417,   418,   419,   420,   421,   422,     0,     0,     0,
     424,     0,     0,   426,   427,   428,  4240,   429,     0,     0,
       0,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     440,   441,     0,   442,     0,     0,     0,     0,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,     0,
       0,     0,   451,     0,   453,     0,   454,     0,     0,   457,
     458,     0,     0,     0,     0,     0,   459,   460,   461,     0,
     462,   463,     0,   464,     0,     0,   465,     0,   466,     0,
     467,     0,   469,   470,   471,   472,     0,     0,     0,   474,
       0,     0,   475,   476,   477,   478,   479,   480,     0,     0,
     481,   482,   483,   484,     0,   485,   486,     0,     0,   487,
     488,   489,   490,     0,     0,   491,   492,     0,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,     0,
       0,     0,     0,   500,   501,   502,     0,   503,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   509,     0,     0,
     510,     0,     0,     0,   512,   513,     0,     0,     0,     0,
       0,   514,     0,   515,     0,     0,   516,     0,     0,     0,
     517,     0,   518,   519,   520,   521,     0,     0,  -357,     0,
       0,     0,   522,   523,     0,     0,   525,     0,   527,   528,
       0,     0,   529,   154,     0,   155,   156,   157,   158,   159,
       0,   532,     0,   161,     0,     0,     0,   162,     0,     0,
       0,     0,   164,   165,   166,   167,   168,     0,     0,  -402,
       0,     0,     0,   171,     0,     0,     0,   172,     0,     0,
     173,   174,   175,     0,   176,     0,     0,     0,     0,     0,
     179,  4233,     0,   180,   181,     0,   182,   183,     0,     0,
       0,     0,   186,   187,   188,  4234,   190,   191,     0,   192,
     193,     0,   194,   195,     0,   197,     0,   199,   200,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,   209,
       0,   211,     0,     0,     0,   212,     0,     0,   213,     0,
     214,     0,     0,   215,     0,     0,     0,   216,   217,   218,
       0,     0,   219,     0,     0,     0,     0,   220,     0,     0,
       0,     0,     0,   222,   223,     0,   224,     0,     0,     0,
     225,     0,   226,   227,   228,   229,   230,     0,     0,     0,
       0,     0,     0,   232,   233,   234,     0,     0,     0,   235,
       0,  -395,   237,     0,   238,   239,   240,     0,     0,   241,
     242,     0,   243,   244,   245,   246,   247,     0,     0,     0,
     249,   250,   251,   252,   253,     0,     0,   254,   255,  4235,
     256,   257,   258,   259,   260,     0,     0,     0,     0,     0,
       0,     0,     0,   264,     0,   265,     0,   266,     0,   267,
       0,     0,   269,   270,   271,     0,   272,     0,   273,     0,
       0,     0,     0,   275,     0,     0,     0,     0,     0,   278,
       0,     0,     0,   279,   280,   281,   282,  4236,     0,   283,
     284,   285,     0,     0,   286,     0,     0,     0,     0,   287,
     288,     0,     0,     0,     0,   290,     0,     0,     0,   291,
     292,     0,   293,   294,  4237,     0,     0,   295,     0,   296,
       0,     0,     0,   298,     0,     0,   299,  4238,     0,   300,
     301,     0,     0,     0,     0,     0,   302,   303,     0,   304,
       0,   305,     0,   306,   307,     0,     0,     0,     0,  -357,
       0,     0,   308,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,     0,   330,   331,   332,
     333,     0,   334,   335,     0,     0,     0,     0,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   363,     0,     0,
       0,   364,     0,   365,   366,     0,   367,   368,  4239,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,     0,     0,     0,   375,     0,   376,
     377,   378,   379,   380,   381,   382,   383,   384,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,   392,
     393,   394,   395,     0,   396,   397,   398,     0,     0,   399,
       0,     0,     0,   400,   401,   402,   403,   404,     0,     0,
     405,   406,   407,   408,   409,     0,   410,     0,     0,   412,
       0,   414,  -357,     0,   415,   416,   417,   418,   419,   420,
     421,   422,     0,     0,     0,   424,     0,     0,   426,   427,
     428,  4240,   429,     0,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   440,   441,     0,   442,     0,
       0,     0,     0,   444,   445,   446,     0,     0,     0,     0,
     448,     0,     0,     0,     0,     0,     0,   451,     0,   453,
       0,   454,     0,     0,   457,   458,     0,     0,     0,     0,
       0,   459,   460,   461,     0,   462,   463,     0,   464,     0,
       0,   465,     0,   466,     0,   467,     0,   469,   470,   471,
     472,     0,     0,     0,   474,     0,     0,   475,   476,   477,
     478,   479,   480,     0,     0,   481,   482,   483,   484,     0,
     485,   486,     0,     0,   487,   488,   489,   490,     0,     0,
     491,   492,     0,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,     0,     0,     0,     0,   500,   501,
     502,     0,   503,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   509,     0,     0,   510,     0,     0,     0,   512,
     513,     0,     0,     0,     0,     0,   514,     0,   515,     0,
       0,   516,     0,     0,     0,   517,     0,   518,   519,   520,
     521,     0,     0,  -357,     0,     0,     0,   522,   523,     0,
       0,   525,     0,   527,   528,     0,     0,   529,   154,     0,
     155,   156,   157,   158,   159,     0,   532,     0,   161,     0,
       0,     0,   162,     0,     0,     0,     0,   164,   165,   166,
     167,   168,     0,     0,  -402,     0,     0,     0,   171,     0,
       0,     0,   172,     0,     0,   173,   174,   175,     0,   176,
       0,     0,     0,     0,     0,   179,  4233,     0,   180,   181,
       0,   182,   183,     0,     0,     0,     0,   186,   187,   188,
    4234,   190,   191,     0,   192,   193,     0,   194,   195,     0,
     197,     0,   199,   200,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,   209,     0,   211,     0,     0,     0,
     212,     0,     0,   213,     0,   214,     0,     0,   215,     0,
       0,     0,   216,   217,   218,     0,     0,   219,     0,     0,
       0,     0,   220,     0,     0,     0,     0,     0,   222,   223,
       0,   224,     0,     0,     0,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,     0,     0,     0,   232,   233,
     234,     0,     0,     0,   235,     0,  4509,   237,     0,   238,
     239,   240,     0,     0,   241,   242,     0,   243,   244,   245,
     246,   247,     0,     0,     0,   249,   250,   251,   252,   253,
       0,     0,   254,   255,  4235,   256,   257,   258,   259,   260,
       0,     0,     0,     0,     0,     0,     0,     0,   264,     0,
     265,     0,   266,     0,   267,     0,     0,   269,   270,   271,
       0,   272,     0,   273,     0,     0,     0,     0,   275,     0,
       0,     0,     0,     0,   278,     0,     0,     0,   279,   280,
     281,   282,  4236,     0,   283,   284,   285,     0,     0,   286,
       0,     0,     0,     0,   287,   288,     0,     0,     0,     0,
     290,     0,     0,     0,   291,   292,     0,   293,   294,  4237,
       0,     0,   295,     0,   296,     0,     0,     0,   298,     0,
       0,   299,  4238,     0,   300,   301,     0,     0,     0,     0,
       0,   302,   303,     0,   304,     0,   305,     0,   306,   307,
       0,     0,     0,     0,  -357,     0,     0,   308,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,     0,   330,   331,   332,   333,     0,   334,   335,     0,
       0,     0,     0,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   363,     0,     0,     0,   364,     0,   365,   366,
       0,   367,   368,  4239,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   372,   373,     0,
       0,     0,   375,     0,   376,   377,   378,   379,   380,   381,
     382,   383,   384,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,   392,   393,   394,   395,     0,   396,
     397,   398,     0,     0,   399,     0,     0,     0,   400,   401,
     402,   403,   404,     0,     0,   405,   406,   407,   408,   409,
       0,   410,     0,     0,   412,     0,   414,  -357,     0,   415,
     416,   417,   418,   419,   420,   421,   422,     0,     0,     0,
     424,     0,     0,   426,   427,   428,  4240,   429,     0,     0,
       0,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     440,   441,     0,   442,     0,     0,     0,     0,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,     0,
       0,     0,   451,     0,   453,     0,   454,     0,     0,   457,
     458,     0,     0,     0,     0,     0,   459,   460,   461,     0,
     462,   463,     0,   464,     0,     0,   465,     0,   466,     0,
     467,     0,   469,   470,   471,   472,     0,     0,     0,   474,
       0,     0,   475,   476,   477,   478,   479,   480,     0,     0,
     481,   482,   483,   484,     0,   485,   486,     0,     0,   487,
     488,   489,   490,     0,     0,   491,   492,     0,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,     0,
       0,     0,     0,   500,   501,   502,     0,   503,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   509,     0,     0,
     510,     0,     0,     0,   512,   513,     0,     0,     0,     0,
       0,   514,     0,   515,     0,     0,   516,     0,     0,     0,
     517,     0,   518,   519,   520,   521,     0,     0,  -357,     0,
       0,     0,   522,   523,     0,     0,   525,     0,   527,   528,
       0,     0,   529,   154,     0,   155,   156,   157,   158,   159,
       0,   532,     0,   161,     0,     0,     0,   162,     0,     0,
       0,     0,   164,   165,   166,   167,   168,     0,     0,  -402,
       0,     0,     0,   171,     0,     0,     0,   172,     0,     0,
     173,   174,   175,     0,   176,     0,     0,     0,     0,     0,
     179,  4233,     0,   180,   181,     0,   182,   183,     0,     0,
       0,     0,   186,   187,   188,  4234,   190,   191,     0,   192,
     193,     0,   194,   195,     0,   197,     0,   199,   200,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,   209,
       0,   211,     0,     0,     0,   212,     0,     0,   213,     0,
     214,     0,     0,   215,     0,     0,     0,   216,   217,   218,
       0,     0,   219,     0,     0,     0,     0,   220,     0,     0,
       0,     0,     0,   222,   223,     0,   224,     0,     0,     0,
     225,     0,   226,   227,   228,   229,   230,     0,     0,     0,
       0,     0,     0,   232,   233,   234,     0,     0,     0,   235,
       0,  4536,   237,     0,   238,   239,   240,     0,     0,   241,
     242,     0,   243,   244,   245,   246,   247,     0,     0,     0,
     249,   250,   251,   252,   253,     0,     0,   254,   255,  4235,
     256,   257,   258,   259,   260,     0,     0,     0,     0,     0,
       0,     0,     0,   264,     0,   265,     0,   266,     0,   267,
       0,     0,   269,   270,   271,     0,   272,     0,   273,     0,
       0,     0,     0,   275,     0,     0,     0,     0,     0,   278,
       0,     0,     0,   279,   280,   281,   282,  4236,     0,   283,
     284,   285,     0,     0,   286,     0,     0,     0,     0,   287,
     288,     0,     0,     0,     0,   290,     0,     0,     0,   291,
     292,     0,   293,   294,  4237,     0,     0,   295,     0,   296,
       0,     0,     0,   298,     0,     0,   299,  4238,     0,   300,
     301,     0,     0,     0,     0,     0,   302,   303,     0,   304,
       0,   305,     0,   306,   307,     0,     0,     0,     0,  -357,
       0,     0,   308,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,     0,   330,   331,   332,
     333,     0,   334,   335,     0,     0,     0,     0,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   363,     0,     0,
       0,   364,     0,   365,   366,     0,   367,   368,  4239,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,     0,     0,     0,   375,     0,   376,
     377,   378,   379,   380,   381,   382,   383,   384,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,   392,
     393,   394,   395,     0,   396,   397,   398,     0,     0,   399,
       0,     0,     0,   400,   401,   402,   403,   404,     0,     0,
     405,   406,   407,   408,   409,     0,   410,     0,     0,   412,
       0,   414,  -357,     0,   415,   416,   417,   418,   419,   420,
     421,   422,     0,     0,     0,   424,     0,     0,   426,   427,
     428,  4240,   429,     0,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   440,   441,     0,   442,     0,
       0,     0,     0,   444,   445,   446,     0,     0,     0,     0,
     448,     0,     0,     0,     0,     0,     0,   451,     0,   453,
       0,   454,     0,     0,   457,   458,     0,     0,     0,     0,
       0,   459,   460,   461,     0,   462,   463,     0,   464,     0,
       0,   465,     0,   466,     0,   467,     0,   469,   470,   471,
     472,     0,     0,     0,   474,     0,     0,   475,   476,   477,
     478,   479,   480,     0,     0,   481,   482,   483,   484,     0,
     485,   486,     0,     0,   487,   488,   489,   490,     0,     0,
     491,   492,     0,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,     0,     0,     0,     0,   500,   501,
     502,     0,   503,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   509,     0,     0,   510,     0,     0,     0,   512,
     513,     0,     0,     0,     0,     0,   514,     0,   515,     0,
       0,   516,     0,     0,     0,   517,     0,   518,   519,   520,
     521,     0,     0,  -357,     0,     0,     0,   522,   523,     0,
       0,   525,     0,   527,   528,     0,     0,   529,   154,     0,
     155,   156,   157,   158,   159,     0,   532,     0,   161,     0,
       0,     0,   162,     0,     0,     0,     0,   164,   165,   166,
     167,   168,     0,     0,  -402,     0,     0,     0,   171,     0,
       0,     0,   172,     0,     0,   173,   174,   175,     0,   176,
       0,     0,     0,     0,     0,   179,  4233,     0,   180,   181,
       0,   182,   183,     0,     0,     0,     0,   186,   187,   188,
    4234,   190,   191,     0,   192,   193,     0,   194,   195,     0,
     197,     0,   199,   200,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,   209,     0,   211,     0,     0,     0,
     212,     0,     0,   213,     0,   214,     0,     0,   215,     0,
       0,     0,   216,   217,   218,     0,     0,   219,     0,     0,
       0,     0,   220,     0,     0,     0,     0,     0,   222,   223,
       0,   224,     0,     0,     0,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,     0,     0,     0,   232,   233,
     234,     0,     0,     0,   235,     0,  -376,   237,     0,   238,
     239,   240,     0,     0,   241,   242,     0,   243,   244,   245,
     246,   247,     0,     0,     0,   249,   250,   251,   252,   253,
       0,     0,   254,   255,  4235,   256,   257,   258,   259,   260,
       0,     0,     0,     0,     0,     0,     0,     0,   264,     0,
     265,     0,   266,     0,   267,     0,     0,   269,   270,   271,
       0,   272,     0,   273,     0,     0,     0,     0,   275,     0,
       0,     0,     0,     0,   278,     0,     0,     0,   279,   280,
     281,   282,  4236,     0,   283,   284,   285,     0,     0,   286,
       0,     0,     0,     0,   287,   288,     0,     0,     0,     0,
     290,     0,     0,     0,   291,   292,     0,   293,   294,  4237,
       0,     0,   295,     0,   296,     0,     0,     0,   298,     0,
       0,   299,  4238,     0,   300,   301,     0,     0,     0,     0,
       0,   302,   303,     0,   304,     0,   305,     0,   306,   307,
       0,     0,     0,     0,  -357,     0,     0,   308,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,     0,   330,   331,   332,   333,     0,   334,   335,     0,
       0,     0,     0,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   363,     0,     0,     0,   364,     0,   365,   366,
       0,   367,   368,  4239,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   372,   373,     0,
       0,     0,   375,     0,   376,   377,   378,   379,   380,   381,
     382,   383,   384,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,   392,   393,   394,   395,     0,   396,
     397,   398,     0,     0,   399,     0,     0,     0,   400,   401,
     402,   403,   404,     0,     0,   405,   406,   407,   408,   409,
       0,   410,     0,     0,   412,     0,   414,  -357,     0,   415,
     416,   417,   418,   419,   420,   421,   422,     0,     0,     0,
     424,     0,     0,   426,   427,   428,  4240,   429,     0,     0,
       0,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     440,   441,     0,   442,     0,     0,     0,     0,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,     0,
       0,     0,   451,     0,   453,     0,   454,     0,     0,   457,
     458,     0,     0,     0,     0,     0,   459,   460,   461,     0,
     462,   463,     0,   464,     0,     0,   465,     0,   466,     0,
     467,     0,   469,   470,   471,   472,     0,     0,     0,   474,
       0,     0,   475,   476,   477,   478,   479,   480,     0,     0,
     481,   482,   483,   484,     0,   485,   486,     0,     0,   487,
     488,   489,   490,     0,     0,   491,   492,     0,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,     0,
       0,     0,     0,   500,   501,   502,     0,   503,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   509,     0,     0,
     510,     0,     0,     0,   512,   513,     0,     0,     0,     0,
       0,   514,     0,   515,     0,     0,   516,     0,     0,     0,
     517,     0,   518,   519,   520,   521,     0,     0,  -357,     0,
       0,     0,   522,   523,     0,     0,   525,     0,   527,   528,
       0,     0,   529,   154,     0,   155,   156,   157,   158,   159,
       0,   532,     0,   161,     0,     0,     0,   162,     0,     0,
       0,     0,   164,   165,   166,   167,   168,     0,     0,  -402,
       0,     0,     0,   171,     0,     0,     0,   172,     0,     0,
     173,   174,   175,     0,   176,     0,     0,     0,     0,     0,
     179,  4233,     0,   180,   181,     0,   182,   183,     0,     0,
       0,     0,   186,   187,   188,  4234,   190,   191,     0,   192,
     193,     0,   194,   195,     0,   197,     0,   199,   200,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,   209,
       0,   211,     0,     0,     0,   212,     0,     0,   213,     0,
     214,     0,     0,   215,     0,     0,     0,   216,   217,   218,
       0,     0,   219,     0,     0,     0,     0,   220,     0,     0,
       0,     0,     0,   222,   223,     0,   224,     0,     0,     0,
     225,     0,   226,   227,   228,   229,   230,     0,     0,     0,
       0,     0,     0,   232,   233,   234,     0,     0,     0,   235,
       0,     0,   237,     0,   238,   239,   240,     0,     0,   241,
     242,     0,   243,   244,   245,   246,   247,     0,     0,     0,
     249,   250,   251,   252,   253,     0,     0,   254,   255,  4235,
     256,   257,   258,   259,   260,     0,     0,     0,     0,     0,
       0,     0,     0,   264,     0,   265,     0,   266,     0,   267,
       0,     0,   269,   270,   271,     0,   272,     0,   273,     0,
       0,     0,     0,   275,     0,     0,     0,     0,     0,   278,
       0,     0,     0,   279,   280,   281,   282,  4236,     0,   283,
     284,   285,     0,     0,   286,     0,     0,     0,     0,   287,
     288,     0,     0,     0,     0,   290,     0,     0,     0,   291,
     292,     0,   293,   294,  4237,     0,     0,   295,     0,   296,
       0,     0,     0,   298,     0,     0,   299,  4238,     0,   300,
     301,     0,     0,     0,     0,     0,   302,   303,     0,   304,
       0,   305,     0,   306,   307,     0,     0,     0,     0,  -357,
       0,     0,   308,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,     0,   330,   331,   332,
     333,     0,   334,   335,     0,     0,     0,     0,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   363,     0,     0,
       0,   364,     0,   365,   366,     0,   367,   368,  4239,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,     0,     0,     0,   375,     0,   376,
     377,   378,   379,   380,   381,   382,   383,   384,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,   392,
     393,   394,   395,     0,   396,   397,   398,     0,     0,   399,
       0,     0,     0,   400,   401,   402,   403,   404,     0,     0,
     405,   406,   407,   408,   409,     0,   410,     0,     0,   412,
       0,   414,  -357,     0,   415,   416,   417,   418,   419,   420,
     421,   422,     0,     0,     0,   424,     0,     0,   426,   427,
     428,  4240,   429,     0,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   440,   441,     0,   442,     0,
       0,     0,     0,   444,   445,   446,     0,     0,     0,     0,
     448,     0,     0,     0,     0,     0,     0,   451,     0,   453,
       0,   454,     0,     0,   457,   458,     0,     0,     0,     0,
       0,   459,   460,   461,     0,   462,   463,     0,   464,     0,
       0,   465,     0,   466,     0,   467,     0,   469,   470,   471,
     472,     0,     0,     0,   474,     0,     0,   475,   476,   477,
     478,   479,   480,     0,     0,   481,   482,   483,   484,     0,
     485,   486,     0,     0,   487,   488,   489,   490,     0,     0,
     491,   492,     0,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,     0,     0,     0,     0,   500,   501,
     502,     0,   503,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   509,     0,     0,   510,     0,     0,     0,   512,
     513,     0,     0,     0,     0,     0,   514,     0,   515,     0,
       0,   516,     0,     0,     0,   517,     0,   518,   519,   520,
     521,     0,     0,  -357,     0,     0,     0,   522,   523,     0,
       0,   525,     0,   527,   528,     0,     0,   529,   154,     0,
     155,   156,   157,   158,   159,     0,   532,     0,   161,     0,
       0,     0,   162,     0,     0,     0,     0,   164,   165,   166,
     167,   168,     0,     0,  -402,     0,     0,     0,   171,     0,
       0,     0,   172,     0,     0,   173,   174,   175,     0,   176,
       0,     0,     0,     0,     0,   179,  4233,     0,   180,   181,
       0,   182,   183,     0,     0,     0,     0,   186,   187,   188,
    4234,   190,   191,     0,   192,   193,     0,   194,   195,     0,
     197,     0,   199,   200,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,   209,     0,   211,     0,     0,     0,
     212,     0,     0,   213,     0,   214,     0,     0,   215,     0,
       0,     0,   216,   217,   218,     0,     0,   219,     0,     0,
       0,     0,   220,     0,     0,     0,     0,     0,   222,   223,
       0,   224,     0,     0,     0,   225,     0,   226,   227,   228,
     229,   230,     0,     0,     0,     0,     0,     0,   232,   233,
     234,     0,     0,     0,   235,     0,     0,   237,     0,   238,
     239,   240,     0,     0,   241,   242,     0,   243,   244,   245,
     246,   247,     0,     0,     0,   249,   250,   251,   252,   253,
       0,     0,   254,   255,  4235,   256,   257,   258,   259,   260,
       0,     0,     0,     0,     0,     0,     0,     0,   264,     0,
     265,     0,   266,     0,   267,     0,     0,   269,   270,   271,
       0,   272,     0,   273,     0,     0,     0,     0,   275,     0,
       0,     0,     0,     0,   278,     0,     0,     0,   279,   280,
     281,   282,  4236,     0,   283,   284,   285,     0,     0,   286,
       0,     0,     0,     0,   287,   288,     0,     0,     0,     0,
     290,     0,     0,     0,   291,   292,     0,   293,   294,  4237,
       0,     0,   295,     0,   296,     0,     0,     0,   298,     0,
       0,   299,  4238,     0,   300,   301,     0,     0,     0,     0,
       0,   302,   303,     0,   304,     0,   305,     0,   306,   307,
       0,     0,     0,     0,  -357,     0,     0,   308,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,     0,   330,   331,   332,   333,     0,   334,   335,     0,
       0,     0,     0,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   363,     0,     0,     0,   364,     0,   365,   366,
       0,   367,   368,  4239,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   372,   373,     0,
       0,     0,   375,     0,   376,   377,   378,   379,   380,   381,
     382,   383,   384,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,   392,   393,   394,   395,     0,   396,
     397,   398,     0,     0,   399,     0,     0,     0,   400,   401,
     402,   403,   404,     0,     0,   405,   406,   407,   408,   409,
       0,   410,     0,     0,   412,     0,   414,  -357,     0,   415,
     416,   417,   418,   419,   420,   421,   422,     0,     0,     0,
     424,     0,     0,   426,   427,   428,  4240,   429,     0,     0,
       0,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     440,   441,     0,   442,     0,     0,     0,     0,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,     0,
       0,     0,   451,     0,   453,     0,   454,     0,     0,   457,
     458,     0,     0,     0,     0,     0,   459,   460,   461,     0,
     462,   463,     0,   464,     0,     0,   465,     0,   466,     0,
     467,     0,   469,   470,   471,   472,     0,     0,     0,   474,
       0,     0,   475,   476,   477,   478,   479,   480,     0,     0,
     481,   482,   483,   484,     0,   485,   486,     0,     0,   487,
     488,   489,   490,     0,     0,   491,   492,     0,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,     0,
       0,     0,     0,   500,   501,   502,     0,   503,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   509,     0,     0,
    4453,     0,     0,     0,   512,   513,     0,     0,     0,     0,
       0,   514,     0,   515,     0,     0,   516,     0,     0,     0,
     517,     0,   518,   519,   520,   521,     0,     0,  -357,     0,
       0,     0,   522,   523,     0,     0,   525,     0,   527,   528,
       0,     0,   529,   154,     0,   155,   156,   157,   158,   159,
       0,   532,     0,   161,     0,     0,     0,   162,     0,     0,
       0,     0,   164,   165,   166,   167,   168,     0,     0,     0,
       0,     0,     0,   171,     0,     0,     0,   172,     0,     0,
     173,   174,   175,     0,   176,     0,     0,     0,     0,     0,
     179,     0,     0,   180,   181,     0,   182,   183,     0,     0,
       0,     0,   186,   187,   188,     0,   190,   191,     0,   192,
     193,     0,   194,   195,     0,   197,     0,   199,   200,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,   209,
       0,   211,     0,     0,     0,   212,     0,     0,   213,     0,
     214,     0,     0,   215,     0,     0,     0,   216,   217,   218,
       0,     0,   219,     0,     0,     0,     0,   220,     0,     0,
       0,     0,     0,   222,   223,     0,   224,     0,     0,     0,
     225,     0,   226,   227,   228,   229,   230,     0,     0,     0,
       0,     0,     0,   232,   233,   234,     0,     0,     0,   235,
       0,     0,   237,     0,   238,   239,   240,     0,     0,   241,
     242,     0,   243,   244,   245,   246,   247,     0,     0,     0,
     249,   250,   251,   252,   253,     0,     0,   254,   255,     0,
     256,   257,   258,   259,   260,     0,     0,     0,     0,     0,
       0,     0,     0,   264,     0,   265,     0,   266,     0,   267,
       0,     0,   269,   270,   271,     0,   272,     0,   273,     0,
       0,     0,     0,   275,     0,     0,     0,     0,     0,   278,
       0,     0,     0,   279,   280,   281,   282,     0,     0,   283,
     284,   285,     0,     0,   286,     0,     0,     0,     0,   287,
     288,     0,     0,     0,     0,   290,     0,     0,     0,   291,
     292,     0,   293,   294,     0,     0,     0,   295,     0,   296,
       0,     0,     0,   298,     0,     0,   299,     0,     0,   300,
     301,     0,     0,     0,     0,     0,   302,   303,     0,   304,
       0,   305,     0,   306,   307,     0,     0,     0,     0,     0,
       0,     0,   308,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,     0,   330,   331,   332,
     333,     0,   334,   335,     0,     0,     0,     0,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   363,     0,     0,
       0,   364,     0,   365,   366,     0,   367,   368,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   372,   373,     0,     0,     0,   375,     0,   376,
     377,   378,   379,   380,   381,   382,   383,   384,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,   392,
     393,   394,   395,     0,   396,   397,   398,     0,     0,   399,
       0,     0,     0,   400,   401,   402,   403,   404,     0,     0,
     405,   406,   407,   408,   409,     0,   410,     0,     0,   412,
       0,   414,     0,     0,   415,   416,   417,   418,   419,   420,
     421,   422,     0,     0,     0,   424,     0,     0,   426,   427,
     428,     0,   429,     0,     0,     0,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   440,   441,     0,   442,     0,
       0,     0,     0,   444,   445,   446,     0,     0,     0,     0,
     448,     0,     0,     0,     0,     0,     0,   451,     0,   453,
       0,   454,     0,     0,   457,   458,     0,     0,     0,     0,
       0,   459,   460,   461,     0,   462,   463,     0,   464,     0,
       0,   465,     0,   466,     0,   467,     0,   469,   470,   471,
     472,     0,     0,     0,   474,     0,     0,   475,   476,   477,
     478,   479,   480,     0,     0,   481,   482,   483,   484,     0,
     485,   486,     0,     0,   487,   488,   489,   490,     0,     0,
     491,   492,     0,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,     0,     0,     0,     0,   500,   501,
     502,     0,   503,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   509,     0,     0,   510,     0,     0,     0,   512,
     513,     0,     0,     0,     0,     0,   514,     0,   515,     0,
       0,   516,     0,     0,     0,   517,     0,   518,   519,   520,
     521,     0,     0,     0,     0,     0,     0,   522,   523,     0,
       0,   525,     0,   527,   528,     0,     0,   529,     0,  3127,
    3128,     0,     0,     0,     0,  3129,   532,  3130,     0,  3131,
    3132,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3133,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3134,     0,     0,
    3135,     0,     0,     0,     0,     0,     0,     0,  3136,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3137,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3138,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3139,     0,  3140,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3141,  3142,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3143,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3144,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3145,     0,     0,     0,     0,     0,
       0,     0,     0,  3146,  3147,     0,  3148,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3149,  3150,  3151,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3152,  3153,  3154,     0,     0,     0,     0,  3155,
       0,     0,  3156,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3157,  3158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3159,  3160,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3161,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3162,     0,     0,     0,  3163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3164,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3165,     0,
       0,  3166,     0,     0,  3167,  3168,  3169,  3170,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3171,  3172,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3173
};

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-3890)))

#define yytable_value_is_error(Yytable_value) \
  YYID (0)

static const yytype_int16 yycheck[] =
{
       6,     0,   669,  1182,     0,   890,   656,   657,  1182,   138,
      55,  1274,    94,    19,    43,   981,   847,    23,   668,    95,
    1516,    77,   733,   855,  1297,    31,  1297,  1344,  1450,   849,
    1102,  1103,    38,  2049,  1629,    41,   921,    43,  2037,  1131,
      46,    39,    57,  1450,  2409,  1281,   694,    53,  1250,  1402,
    1576,  1030,  2177,    20,  1873,  1874,  1986,  2791,  1958,    58,
    1281,  1133,    58,    30,  1899,    22,   717,  3355,    35,     6,
    2642,    77,  2304,  1145,  1146,  1147,  1055,  2309,  2966,  1151,
      39,  1907,    39,  1907,   717,  2116,    22,  2467,  1612,  2182,
    1899,  1909,  2521,  2557,  1903,  1913,  1905,  2201,  2202,   838,
    1926,   107,  2521,    39,  3520,  1899,  1630,  2524,  1926,  1903,
    2475,  1905,  2098,  2794,  1638,  1639,   556,   557,  1944,  2673,
    1938,   666,  2673,  3658,  3236,  3089,   132,  1891,   134,   544,
     545,   137,   138,   139,   140,   145,  1377,    21,  1502,   787,
     788,   789,  1651,  2708,  2280,  3014,    23,  2060,  2461,  2495,
     798,  2051,  1911,  1912,  3266,  1914,  3025,  3026,  1917,  1918,
    1919,  1920,  2054,   807,  1923,  2057,  1662,  2513,  1609,  1928,
      35,    21,  1970,  1614,  1933,  1934,  1935,  1936,  1937,    22,
      21,    26,  1941,  1942,    48,    77,     9,   160,  1947,  1948,
    1949,  1950,    52,  1952,  1953,    26,  1955,   134,  2033,    73,
     137,    18,    19,    19,  1056,    73,    29,    21,    19,    18,
      19,    34,  1032,  3502,   197,  3147,  3148,  2533,    21,  3151,
     125,    18,    19,   197,  2033,  2272,   125,  2274,  3609,    62,
     107,   194,    18,    19,  1054,    21,  2283,  2284,  3170,  2033,
      67,    78,    23,  2707,  2673,    18,    19,   160,    21,    65,
     176,   156,    18,    19,  2673,     5,    31,   156,    70,  3025,
    3026,  2153,   163,   140,  1859,   246,   194,   222,    70,   160,
     150,    81,   156,  3635,    23,   276,   160,    18,    19,  3320,
      61,    62,    21,   109,   381,   285,    35,   125,   131,   259,
     111,   275,  1095,  1096,  1097,    57,    87,    26,   204,  1663,
      49,  2193,  1543,  1106,   378,  3579,   160,    71,   402,    44,
    3575,   275,    61,    62,  2540,  2661,    18,    19,   156,    64,
      18,    19,   333,   258,   407,   148,    18,    19,    18,    19,
     125,  2531,   370,   977,  2093,   388,  1139,   373,   377,  1142,
      68,   493,   156,   465,  2570,  2571,    37,   404,   433,   493,
      77,    18,    19,   255,  2700,     9,   128,   160,  1161,  1162,
    1010,    25,  1165,  3232,  3233,   501,    18,    19,  4041,   473,
     262,  1021,    59,   316,    18,    19,    18,    19,   592,    37,
    1183,  1184,   130,  4272,   572,   127,   282,   388,   125,   374,
     231,   156,   237,    23,   401,   127,  3508,    18,    19,   572,
     369,  1851,   543,  1853,   583,    35,   237,  1118,    22,   615,
    1651,    26,   125,   637,   235,   638,   639,   231,  2013,    49,
      21,   160,   551,  1134,    26,    35,   893,  1078,   635,  1259,
     176,    61,    62,   674,   197,   148,    61,    62,   563,  1269,
     256,   566,   683,   450,    18,    19,    71,    48,   193,  3381,
      18,    19,    62,   677,   677,   156,    18,    19,    18,    19,
    1426,   928,    77,   878,   150,   150,  3232,  3233,   908,   683,
     677,   677,   601,  4146,   187,   371,    18,    19,   323,   448,
      77,    18,    19,   624,   156,   122,   249,   273,   156,   176,
     293,   228,   323,   180,   682,   197,   235,   197,   677,  3028,
     485,  3311,   675,   429,   168,   197,   248,   194,   237,   547,
      65,   276,  2107,  1398,   457,   572,   248,   131,   130,   934,
     156,   293,   674,  3939,   263,   370,   103,   656,   219,   502,
     674,   433,   186,   662,   663,   262,   471,   156,   544,   545,
     156,   677,   194,   158,   959,   551,   246,   553,    52,    22,
     603,   188,   637,   968,  3916,   677,   158,    73,   564,   570,
     566,   219,   177,  3828,   570,  2690,  1214,  4102,   574,   184,
    4459,   160,  1216,  1217,  3462,  3309,   659,   372,   387,   683,
     674,   390,    18,    19,  2179,   596,   683,   401,   543,   502,
     387,   597,   630,   390,   323,   601,    18,    19,  2824,  3028,
     606,   387,   603,   677,   390,   511,   606,   369,   276,  3028,
     470,   502,  3886,   619,   387,   456,  3548,   390,  3035,  1691,
     355,   387,   237,  2988,   390,   389,   246,  3044,  3560,   241,
     433,   112,   475,  3097,   115,   237,  3568,   428,   677,   675,
     669,   647,   456,   493,   331,  4180,   387,  2772,   502,   390,
     656,   635,   493,   290,   404,  1891,   662,   663,   131,  2155,
     666,   620,  1734,   661,   793,   262,  3598,   544,   545,    64,
    1891,   635,   678,   418,   675,  3639,  3717,  1854,   488,   493,
      18,    19,   652,   429,   511,   387,  2521,   613,   390,   387,
    3978,  3004,   390,  3058,   677,   387,   677,   387,   390,  2525,
     390,   256,   547,   677,   661,   433,  3818,  2533,   323,   637,
     683,  3823,   841,  3825,   677,  4096,  4078,  4079,  2477,  2478,
     387,   323,  1794,   390,  3040,   661,  1377,   733,  2864,  2865,
     631,   543,  2256,   862,  2493,   387,   373,   553,   390,  1450,
    2538,   543,   429,   387,  2542,   387,   390,   823,   390,   364,
    3063,  2510,  2511,  1404,   634,   370,   579,  1405,   595,  4048,
    2182,  2559,  2560,  2272,   656,   657,   387,  4183,   370,   390,
     683,  1404,   583,   637,  2572,  2182,   681,  2603,    18,    19,
    3649,  3650,   681,  2581,  1636,   630,   792,   793,   794,  3354,
     623,   790,  2551,   616,   790,  2031,  2709,   681,  2845,   622,
     674,   930,   628,  2244,   860,  2603,   674,  2566,   583,   674,
    2031,  2052,   941,   387,  2706,  2265,   390,   677,  2259,   387,
     601,   827,   390,   666,   674,   387,   647,   387,   390,   683,
     390,   648,  1664,   674,   575,   841,    18,    19,  2673,   648,
     643,   847,  3042,   681,   583,   387,   677,  2777,   390,   855,
     387,   648,   601,   390,   860,  4271,   862,   680,   864,   604,
     674,   609,   648,   677,  2673,   592,  3231,   681,  2694,   875,
     635,   680,   878,  1676,   880,   648,   882,   626,   675,  2673,
     677,   572,   648,  3649,  3650,   891,   892,   893,   615,   895,
    2654,   677,  1543,  3703,   904,  3241,  2694,  2656,  2657,  2658,
    2659,   907,  1031,   909,  1554,  4267,   422,   648,  1348,   675,
     966,   677,   918,   502,   572,   874,   681,   615,   924,   925,
     926,  2285,   928,   929,   930,   674,   932,  4039,   934,   656,
     657,   677,   547,   939,  1582,   941,   942,   935,   875,   898,
     899,   997,   948,  1746,  1588,   547,   648,  1750,   634,   634,
     648,   387,   958,   959,   390,  3335,   648,   594,   648,   536,
     966,   967,   968,  2855,   970,   387,   470,   635,   390,  3498,
    1773,   601,  4507,   675,   933,   981,   677,   677,   935,   677,
     681,   648,   988,    18,    19,   677,   943,   677,   925,   987,
     677,   997,   929,  1022,     4,   932,   648,   609,   553,   935,
    1651,   878,   475,   880,   648,   677,   648,   943,   675,   681,
    1016,   144,    22,   681,  1429,   630,  1022,   231,    18,    19,
      18,    19,  3402,   675,   176,  1031,  1571,   648,   630,    39,
     987,   675,   909,  1744,  1579,   677,  3085,  3718,   198,    85,
     637,   677,  1873,  1874,   179,   681,   441,   563,   191,   387,
     158,   987,   390,   192,   675,   675,   677,   934,   677,   656,
     657,   677,   681,  3582,   401,   681,    18,    19,  1074,  3498,
     586,   380,  1078,  3438,   648,   122,   404,  3126,    35,  3498,
     648,   958,   959,   327,  1213,  3071,   648,  3504,   648,   388,
     967,   968,   231,   970,   683,   576,  3461,  3651,   579,  2273,
    3651,   675,  1231,   677,    18,    19,   648,  1152,  4524,   677,
      71,   648,  1118,   675,   537,   938,  1192,   677,  1857,  4051,
    1119,  4053,  1251,  1119,  4088,    18,    19,   558,  1134,    18,
      19,  1130,    13,   675,  1130,   677,  3501,   194,   675,   380,
     677,    18,    19,   197,  1273,    18,    19,   387,   571,   235,
     390,    11,  1592,   122,  1199,    47,  1201,  1202,  1203,  1204,
    1205,  1206,  1207,  1208,  1209,  1210,  1211,    13,    33,   123,
     204,    18,    19,   200,  2624,   635,  1182,  2627,  2628,  1235,
    3015,  2631,  2632,  2633,  2634,  2635,  2636,  2637,  2638,    18,
      19,  2641,  2554,  3028,   637,  3320,   200,  1074,   501,    18,
      19,   139,  2564,   367,   165,   387,  3015,  1213,   390,  2386,
      18,    19,   648,  1219,  3040,   141,   407,   677,  3027,   188,
      12,  3015,  3651,   572,    13,  1231,   648,   564,   285,  1235,
     209,  2593,  3651,  3027,   677,  3339,  3329,   372,    12,   675,
     400,   677,   456,   290,   572,  1251,   235,   293,  2425,  2426,
    2427,  2428,   416,   675,  3052,   677,  2328,    53,   227,   140,
     229,   122,   370,  1259,  3295,    18,    19,  1273,    64,  3067,
     413,    18,    19,  1269,   263,  1274,  2255,   429,  1274,  2258,
     160,  2260,  2261,  3747,  2356,  3749,    74,   641,  1344,  3115,
    3116,  3115,   238,   247,   140,  2821,    18,    19,  3116,   487,
     153,  3873,  3874,   282,   108,  2397,  2398,   167,  4596,   363,
     648,   164,  1318,   566,   194,  2839,  4204,  3549,   237,    18,
      19,   290,  1451,   626,   216,   271,   373,  2504,  2601,  2602,
    2601,  2602,    18,    19,   643,   127,   292,   675,  1344,   677,
     200,    18,    19,  1349,  1350,  1351,   278,  1345,    18,    19,
     510,   140,   387,  1359,   287,   390,   902,   903,  1403,   316,
    3879,  1406,  1368,   167,  2541,  2718,  2543,  1373,   501,   401,
     239,  1377,  1378,  1379,  3274,  2552,  1382,  1506,   677,  1385,
     249,    18,    19,  3313,   249,    18,    19,   387,  1345,   387,
     390,  2568,   390,   420,   332,  2574,   200,    18,    19,  3234,
    2574,  2052,   643,  1409,   373,    18,    19,  1413,   648,  1345,
     275,  2588,   401,  1350,  1351,  2592,   420,   350,  2654,   345,
    1426,    65,  1551,  1429,  2075,  3234,  4295,  4296,   389,   290,
     674,  2251,  2083,  2654,    52,   387,  2084,   677,   390,   547,
    3234,  1318,  2075,  1449,  1450,  1451,  2623,   235,  2625,  2626,
    2083,   370,  2629,  2630,   589,   158,    18,    19,   293,   293,
    4194,   613,  2639,  2640,    18,    19,   648,  3516,   659,   276,
     605,  2182,   548,   387,   905,   614,   390,   511,   438,  3238,
    3239,   435,    21,   212,   130,  1491,   282,  1493,   401,  1495,
      18,    19,    18,    19,   387,   677,  1373,   390,   387,   455,
    1506,   390,    18,    19,    18,    19,    18,    19,    18,    19,
     387,   285,   373,   390,   387,    18,    19,   390,    23,   498,
      18,    19,   630,  3596,   393,   677,  3599,    18,    19,   258,
      35,   477,   564,   386,   237,  1541,  1413,  1543,   209,   566,
     387,  3367,  3368,   390,    49,  1551,   623,   594,   194,   626,
     482,   585,  1429,   629,  1610,   125,    61,    62,   387,   179,
     420,   390,   566,     0,  2214,  1571,   125,  1565,   387,    18,
      19,   390,  1449,  1579,    18,    19,  2778,   442,  2889,   387,
     139,   388,   390,    18,    19,    18,    19,  1593,  1594,  1595,
    1596,  1597,  3717,  1599,   486,   241,   550,   607,   390,   433,
     231,  1607,  1608,   675,  1610,   677,  3986,  1613,  1565,   553,
     543,   282,   256,   648,  3846,  2794,   420,  2791,  1495,   404,
    2794,  2272,   502,  2274,   572,   594,  4006,  1633,   547,  1565,
     574,  2282,  2283,  2284,   387,    18,    19,   390,   598,  1598,
     387,  4306,   677,   390,  1872,  1651,  1652,    59,   648,  1877,
     648,   661,  1651,    18,    19,  1651,  1593,  1594,  1595,   388,
    1597,   447,   293,  3498,   203,   387,   235,   370,   390,   679,
    1799,  1608,    13,   533,   653,   245,  1613,   677,   277,   677,
     636,   280,   156,   197,    18,    19,    13,  3049,   387,    18,
      19,   390,  4237,  4238,   263,  2872,   648,    18,    19,    18,
      19,   387,   708,    22,   390,   128,   415,    18,    19,  1838,
     387,   630,  3538,   390,   186,    18,    19,   387,   571,  1596,
     390,   365,  1599,   608,  3086,   677,   674,   587,    18,    19,
      18,    19,  3094,   594,   648,  3533,  3098,  1866,  1744,  1745,
    3538,   316,   668,   669,   670,   671,   366,   367,   534,   246,
     387,   369,   372,   390,   387,   648,  1633,   390,  1304,   648,
     300,   301,   566,   677,   176,  3665,   387,    13,   180,   390,
      26,   648,   778,   332,   387,   648,  3849,   390,  3708,    18,
      19,   160,   194,   587,   677,  3910,  4288,   572,   677,  4291,
     216,   361,   509,  1799,   266,  1801,   603,   220,   429,   140,
     677,   648,  4467,  4468,   677,   654,   675,    40,   612,   643,
     456,   572,   131,   140,  1820,   160,  3651,    18,    19,   648,
    1366,    77,   828,  3134,   628,   387,  3188,   498,   390,   648,
     677,   430,  1838,   387,   683,  1864,   390,   263,  1836,  3444,
     648,   583,  3651,  3448,   547,    18,    19,   493,   677,  3668,
      18,    19,   470,   428,   572,  3166,  3167,  3651,   677,   387,
    1866,   387,   390,   216,   390,  2831,  1895,  1873,  1874,   677,
     293,   387,   480,   387,   390,   387,   390,   387,   390,  1836,
     390,    18,    19,   501,   387,    18,    19,   390,   141,   387,
     607,   535,   390,   239,   140,   648,   387,   369,     9,   390,
    1836,   648,   227,   249,   229,   445,   446,  3329,   918,   553,
     263,  4456,  4457,   674,    13,   212,   149,    18,    19,   331,
      31,   177,  3329,  4425,   677,   935,   648,   630,   184,   230,
     677,  3284,  4297,   943,   651,   677,   511,  4083,   387,    18,
      19,   390,   167,   387,    43,  4091,   390,   167,  1963,   648,
     960,  2771,   387,   675,   387,   390,   674,   390,   433,    77,
    4106,    32,   648,   609,  1970,  3964,  3965,  3966,   127,   589,
    2099,   648,  1978,   249,  1980,  1981,   675,   987,   648,   454,
     200,   237,  3299,    18,    19,   605,   683,  4352,   137,   675,
      18,    19,   583,  1291,  1292,    94,   272,    86,   675,    98,
     644,    18,    19,   152,   387,   675,    74,   390,    79,    18,
      19,   648,   675,   108,   677,   648,   105,   429,  3195,    18,
      19,   496,   387,    18,    19,   390,  2032,   648,   674,  2035,
      18,    19,   185,  2039,  2040,   648,  2081,  2082,   675,  2272,
    2085,  2047,   675,   667,  2050,  1343,  2052,   393,   674,  2282,
    2056,   675,    19,   387,   675,  2051,   390,   683,   387,   230,
     197,   390,   675,   575,   212,   615,   387,   323,   387,   390,
     235,   390,  2720,   122,   493,  1260,   387,   235,  2077,   390,
    2136,  2077,  2088,   154,   387,  1270,   648,   390,  4104,  4105,
     667,  2147,   345,  2099,   648,   235,   601,   387,   675,   387,
     390,  1978,   390,  2040,  1981,  3747,    19,  3749,   364,   615,
    2116,  2167,  2168,   675,   370,  2121,    38,   622,   623,   237,
     648,   675,   648,    19,    46,   193,   221,   677,  2184,    74,
    2136,   212,   648,   683,   648,  3309,   648,   637,   648,   188,
     640,  2147,   566,  3738,   615,   648,   135,   675,   387,   675,
     648,   390,  2158,   682,   253,  2032,  2162,   648,  2035,   675,
    3582,  2167,  2168,  2169,  2170,   675,   675,   235,   677,   675,
    2047,   677,   675,   381,  2230,  2304,  2182,   675,  2184,  3353,
    2309,  2177,    77,   675,   675,   677,   387,  2137,  2217,   390,
    2140,   210,   231,  2143,  2845,   263,  2194,  2195,  2196,   648,
     420,   620,   621,   246,   648,     7,   677,  2857,   246,   197,
    3282,  2217,   683,   648,   387,   648,   111,   390,  2224,   387,
     366,   367,   390,   130,  2230,   675,   675,   677,   141,   320,
     321,   675,   197,   332,   325,   326,   130,  2194,  2195,  2196,
     675,   290,   675,    61,    62,   141,   364,   675,   193,   677,
     387,  2257,   370,   390,   387,   674,    58,   390,  2194,  2195,
    2196,   501,   493,   158,   621,   648,  2272,  2273,  2274,   501,
     501,   563,  3449,   675,   566,   677,  2282,  2283,  2284,    18,
      19,  2158,  3374,   648,   683,  2162,   387,   194,  2333,   390,
     235,   547,  2169,  2170,   675,   677,   677,   396,  2304,   394,
     194,   320,   321,  2309,  3396,  3397,   325,   326,   387,   404,
     675,   390,   100,   533,   648,   675,   411,   677,   263,   648,
     612,   439,  4081,   675,   373,   677,    96,   648,  3420,   648,
     656,   657,  2461,   100,   241,  1345,  3408,   648,   674,   675,
     235,   675,   144,   674,   415,   648,   675,   241,  2586,  2587,
     418,  3530,   387,   572,   675,   390,  3530,   674,   648,   387,
     648,  2406,   390,  2408,   675,  3331,   437,   587,   150,   151,
     387,  3350,   675,   390,   630,  1385,   674,   745,   387,   674,
    2257,   390,  3699,  3700,  3701,   675,    48,   675,   387,   620,
     621,   390,   387,   674,    12,   390,   674,  2403,   766,   387,
    2601,  2602,   390,  3676,  3675,  3827,  2754,   478,  2756,   648,
     683,   779,   780,   666,   667,   668,   669,   670,   671,   518,
     515,   685,   686,   674,   688,  2882,   690,   322,   675,   547,
    2887,   674,   345,  2562,   122,  3600,   675,   674,  3603,  3604,
     675,   228,   677,   674,   674,   340,   674,   648,  4207,   345,
     238,  4210,  4211,  4212,  4213,  2461,   401,  2805,  2806,  2807,
     675,   560,   677,   675,   675,   677,   677,   122,   539,   364,
     258,   238,   674,   418,   675,   648,   675,   675,   677,   677,
     648,   599,    80,   271,    82,   674,  1496,  1497,  1169,  1170,
     108,   258,    37,   675,   674,   677,    33,   675,   674,   677,
     188,   682,   675,    77,   271,   300,   301,   675,   675,   127,
     677,   648,   630,   156,   675,   648,   677,   612,  2524,   681,
     675,  2550,   677,  3343,   675,  2531,   677,   125,  3348,   674,
    2536,  2537,  2538,   188,  4293,  4294,  2542,   612,  2544,  3718,
     481,  2670,   675,  4302,  3718,   594,   674,   648,  2554,   456,
     148,  2557,   674,  2559,  2560,  1565,  2562,  2563,  2564,  2526,
    4295,  4296,   456,  2569,   219,   367,  2572,   355,  2574,   648,
     115,  3403,  2539,    48,   675,  2581,  2582,   122,  2545,    13,
     276,   675,   200,   677,   158,  2591,   493,  2593,   355,   187,
     674,   504,   505,  4114,  4115,    35,   675,  2603,   675,   493,
     677,  3673,   290,  2732,   141,   674,  2573,  2885,   504,   505,
    2577,   674,  2618,   648,   674,   674,  2583,  2584,  3329,   675,
     648,   677,    62,   564,   674,   243,  2708,  2703,   569,    77,
     432,   648,   434,   674,   179,   290,    37,   674,   120,   648,
     675,   420,   675,   188,   677,    93,   675,   675,   677,   648,
     445,   446,   547,   648,   675,   160,   677,    56,   675,   675,
     648,   677,   674,   237,  2670,  3925,   675,    66,   286,   564,
    3930,   612,   112,  3130,   219,   115,   675,    76,   683,   675,
     675,   677,   675,   123,   677,   373,  2692,   628,  2694,   477,
     674,    90,    91,    92,  2690,  2694,   674,   674,  2694,  4195,
     674,  2707,   609,  2699,  2700,  2582,   140,   106,  3165,  2705,
     477,   674,   249,   654,   115,   609,  3173,   675,   373,   677,
     674,   122,  2728,  3180,  3556,  2724,  2732,    21,  2724,   524,
     525,   526,   675,    27,   677,  3567,   674,  3914,   275,   384,
     675,  2747,   677,   674,   226,   290,   674,  2753,  2754,   674,
    2756,   664,   665,   666,   667,   668,   669,   670,   671,   171,
     675,   549,   677,  3729,  3730,  3731,   674,   674,   664,   665,
     666,   667,   668,   669,   670,   671,  2772,    71,   179,   533,
     674,    75,   549,    77,   674,  2791,   220,   188,  2794,   675,
     364,   677,   675,   674,   677,  2794,   370,   674,  2794,  2805,
    2806,  2807,   420,   100,   675,   674,   677,    21,   345,  3901,
    1820,   356,   674,    27,    28,  2692,   122,   265,   219,   125,
     260,   674,   674,   368,  4084,  2831,  1836,   372,   373,   366,
     367,   125,  4092,   193,   675,   108,   677,  3668,   675,  2845,
     677,  1851,   440,  1853,  4021,  1855,  1856,   674,  1858,    63,
    3128,  3129,   674,   335,   493,  3133,   675,   339,   677,   674,
     674,    64,   501,    77,   346,   439,   674,   522,    27,    83,
      84,    74,     7,    87,  3003,  3004,  2753,  2754,   675,  2756,
     677,   499,   188,   675,  4144,   677,    89,   675,  4148,   290,
     674,   674,  1902,  3171,   167,   343,   108,   111,   674,  3177,
    3178,  3179,   674,   674,  3182,   442,   594,   456,   674,   203,
     674,   125,    71,   219,   674,   129,    75,   357,    77,    12,
     675,   369,   677,   675,   674,   677,  2971,   200,  2805,  2806,
    2807,   675,   674,   677,  3063,   334,   141,   683,   675,   594,
     677,   238,   156,   674,   158,   427,   564,   675,   566,   677,
    2956,   675,   351,   677,    64,   356,   674,   674,  2964,   674,
    2966,   258,   235,   674,    74,   674,   125,   504,   505,   263,
     674,   372,   373,   547,   271,  3807,  3808,   674,  3810,    89,
     517,   620,   621,   431,   290,   100,   677,   199,   674,   674,
     193,   674,  4169,   674,   612,   378,   199,  3003,  3004,   458,
     459,   460,   461,   462,   463,   464,   683,   615,   516,   491,
     677,    50,   287,   286,  3980,    50,   677,   231,   487,    71,
    4194,   235,   273,   235,   677,   599,   677,   572,   242,  3035,
     658,   576,   235,   141,   579,   674,  3042,   677,  3044,   683,
     166,   674,   194,  3049,   589,   543,  3052,   563,   262,   594,
     166,   543,   597,   287,   141,   157,   630,  3063,   355,    88,
     263,  3067,   677,   677,   194,   677,   379,   373,   559,   509,
     646,    71,   366,   367,   286,    13,   634,   140,   372,   122,
    3086,   378,   125,   193,   378,   533,   675,   675,  3094,   199,
     489,  3097,  3098,   527,   528,   529,   530,   531,   532,  4276,
    4277,  4278,  4279,    10,   263,   677,   683,  3113,   322,   675,
     160,   675,   675,   122,   502,   549,   683,    48,   156,   675,
     654,   666,   667,   238,   418,   235,   340,   664,   665,   666,
     667,   668,   669,   670,   671,   637,   186,   160,   160,   579,
     345,   160,   415,   258,   160,   188,   160,   420,   160,   677,
     632,   201,   551,   263,   160,  2165,   271,   404,   572,   677,
      16,   125,   316,     7,   214,   674,   110,   607,   650,   568,
       4,   572,   492,   628,   677,   576,   219,   249,   579,   188,
     477,   395,  3188,   677,  2194,  2195,  2196,   401,   589,   610,
     404,  4324,    57,   594,   448,   171,   597,   378,   401,  4031,
     111,  4033,  4034,   497,   378,   200,   378,   366,   367,  2219,
     219,  3217,   615,   372,  3220,   418,   266,   267,   401,   378,
    4052,   674,   275,  3229,   158,   683,   499,  2237,   682,   287,
    3236,   287,   287,   287,    50,   677,  3113,   345,   287,   287,
     355,   677,   456,  3299,   294,   160,   419,   290,   481,  3255,
      22,   385,   549,   547,   122,  2265,   654,   378,   345,   418,
    3266,  3267,  3318,   378,  3270,   666,   667,    39,   563,   483,
     677,   378,  3354,   677,   282,   677,   583,    18,    19,   493,
     677,   290,   583,    55,    56,    13,   677,   499,   594,  3295,
     160,   564,   378,  3299,  4557,   378,   569,   677,   635,   504,
     505,   197,   583,  3309,   141,   583,  3312,   519,   418,   674,
     604,  4444,  3318,   363,   587,   255,   519,   683,   615,   433,
     188,   683,   683,  3329,  3320,  3331,   540,   541,   542,   683,
     373,   677,   249,   547,   668,   561,   252,   194,   497,   612,
     181,   677,    60,   514,   405,   194,   675,  3353,   675,   675,
     564,   219,   564,   567,   566,   628,   675,   569,   675,   675,
     675,   197,   477,  4540,   373,   675,   677,   417,  4501,   677,
    4503,   141,   674,   677,  4551,   116,   117,   118,   119,   120,
    4559,   654,   667,   675,  4517,  4559,   675,  4272,   547,   603,
     677,   675,   604,  3270,   677,   675,   504,   505,   675,   675,
     612,   604,   572,  4582,   675,   675,   671,  4584,  4582,   519,
    4589,   683,  4545,  4546,   683,  4589,  4595,   504,   505,   683,
    3549,  4595,   290,   675,   402,   572,   572,   572,   228,   160,
     126,   677,   674,   609,   549,  3312,   249,    87,   263,   401,
      74,   401,   654,   401,   583,   604,   136,   261,  2458,   261,
    3579,   401,   136,   401,    48,   401,  3462,   619,   401,   141,
     674,   666,   667,   668,   669,   670,   671,   681,   401,  2479,
     619,   401,  4139,   677,   156,   677,   378,   674,   677,  2489,
    2490,   675,   223,   224,   225,   226,   160,   160,   160,   160,
    2500,  2501,  2502,  2503,   604,  2505,  2506,   160,  3504,   160,
     615,   160,  3508,   160,   160,   373,   160,   160,   345,   160,
     677,   160,  3518,    77,   160,  3544,   160,   160,   160,   160,
     160,   160,   160,   160,  3530,   160,   614,  3533,   160,    93,
     160,   160,  3538,   160,   160,   683,  2546,  2547,  2548,  2549,
     677,   642,   674,  3549,   572,   674,   674,   674,  4215,   674,
     563,   594,   572,   236,   572,   655,   664,   665,   666,   667,
     668,   669,   670,   671,   677,   212,  2576,   675,  3574,   572,
     134,   677,   433,  3579,  4459,   345,   141,   664,   665,   666,
     667,   668,   669,   670,   671,   594,   197,   677,   675,   615,
     675,   675,   258,   428,   335,   675,   337,   338,   339,    13,
      14,   675,   675,   258,  3610,   346,   675,   391,  3614,   677,
     336,   675,  3618,   154,  2624,   675,   683,  2627,  2628,   156,
     245,  2631,  2632,  2633,  2634,  2635,  2636,  2637,  2638,  3635,
     245,  2641,   683,   675,   675,   675,   555,    12,   675,   174,
     674,    56,  3648,  3699,  3700,  3701,   387,   674,   572,   390,
     674,    66,   160,   406,    73,  3661,   373,   503,   533,   533,
     533,    76,  3668,   345,   533,   492,  4551,   504,   505,  3665,
     533,   263,   263,  3610,   403,    90,    91,    92,    35,    36,
     674,   683,   451,   674,   674,    99,   427,   674,   674,  3695,
     674,   106,  3698,  3699,  3700,  3701,  4528,  3574,   286,  4584,
     674,   265,   674,   674,    61,    62,   473,   674,   674,   388,
     683,   668,  3718,  3719,   160,    72,   130,  3846,   677,   583,
     385,  3717,   677,  3729,  3730,  3731,   594,   282,   583,   643,
     144,   160,   674,   210,   504,   505,   197,    48,   217,   674,
      97,  3747,    99,  3749,   680,   373,   675,   258,   680,   490,
     491,   258,   109,   167,   141,   680,   170,  3886,   258,   247,
     247,   674,   674,    48,   674,  4432,   675,   675,   495,   183,
     675,   141,   675,   674,   116,   117,   118,   119,   120,   343,
     345,    48,   677,   677,  3661,   675,   674,   160,   674,  3795,
     675,   160,  3798,   278,   566,   677,   210,   342,   111,   111,
     157,   158,   366,   367,   263,   369,   163,   674,   263,   166,
     564,   677,  3818,   637,   674,   564,   414,  3823,   677,  3825,
     583,   235,   504,   505,   674,  3831,  3832,   241,   665,   666,
     667,   668,   669,   670,   671,   674,   674,   583,   610,   516,
    3846,   198,   674,   200,   675,   384,   212,   677,   378,   378,
     276,   433,   209,   675,   211,   567,   568,   569,   583,    21,
     572,   573,   249,   575,   576,   577,   578,   431,  3835,   583,
     583,   285,   683,   683,   378,   647,   674,   234,   235,   249,
    3886,   223,   224,   225,   226,   231,   677,   683,   677,   661,
     385,   632,   197,   197,   664,   665,   666,   667,   668,   669,
     670,   671,   197,   258,   261,   675,   258,   648,   649,   650,
    3916,   373,  3918,  3919,  3910,   674,   674,   637,   675,   334,
    3926,   475,   694,   675,   675,   282,   273,   699,   277,   401,
     120,    48,  3938,    48,   153,    48,   351,   674,   100,   504,
     505,  3947,  4592,   125,   674,   125,   566,    35,    35,   609,
     674,   626,   675,   125,  3831,   263,   203,   729,   345,   316,
     263,   372,   141,    35,   373,  2975,  2976,   416,   378,   533,
     378,    77,    21,   675,  3980,   345,   683,   674,   516,   674,
      12,  2991,   664,   665,   666,   667,   668,   669,   670,   671,
     488,   677,   285,   335,   156,   337,   338,   339,   160,   675,
     175,   285,   147,   269,   346,   675,   668,   421,   246,   677,
     197,   425,   342,   194,   265,   787,   788,   789,   790,   677,
      48,   428,    48,   675,   381,    48,   798,   441,   368,   677,
     192,   621,   194,  4039,    15,   449,    21,    81,   511,   675,
     143,   373,   675,   457,   675,   194,   210,   263,   566,  4055,
     212,   408,   675,   675,  3064,   217,   675,   472,   675,   675,
     342,   675,   419,   420,  4070,  3075,   423,   424,   675,   231,
     160,   161,  4078,  4079,   489,   677,   238,   674,   674,   493,
     683,   674,   677,   373,   246,   427,   620,   444,   677,   674,
     677,  4136,   506,   507,   675,   675,   258,   675,   674,   664,
     665,   666,   667,   668,   669,   670,   671,   674,   173,   271,
     675,   201,  4118,   675,   276,   674,   319,   504,   505,   398,
     637,  4127,  4128,   285,   214,   674,   385,   675,   473,   149,
     566,   637,    48,   609,   504,   505,   551,    48,   378,   675,
     538,   498,   914,   675,   558,   484,   674,   674,   490,   491,
     675,   677,   675,   568,   511,   674,   574,   136,   136,   158,
     441,   155,    32,   935,   254,   634,   345,    64,   684,    64,
     385,   943,   385,   587,   610,   554,   634,   267,   674,   555,
     197,    32,   675,   385,   385,   143,   543,   134,  4194,     6,
     547,   246,   378,   355,   378,   609,   609,   611,  4204,   154,
     681,   130,   634,   154,   294,   230,   292,   681,   482,   566,
     124,   647,    54,  3223,  4343,   987,   378,   684,  4224,   575,
    3230,   143,   228,   995,   936,   681,   388,   154,  4234,   677,
     681,   575,   215,  4239,    48,    54,   154,   194,   194,   231,
    4369,  4118,   194,  4372,   575,  4244,   455,   636,  4244,   125,
     373,   674,  1024,   501,   196,   677,  4244,  2735,   420,  2652,
    2646,  4267,  3918,   699,  2648,  2650,  3921,   624,  2643,   359,
    3929,  3914,  3024,  3936,   631,  4178,  4270,   664,   665,   666,
     667,   668,   669,   670,   671,   903,  4416,  4415,  3938,  2985,
     632,  1288,  4298,   729,   664,   665,   666,   667,   668,   669,
     670,   671,  4101,  4584,  4540,    46,   670,   649,   650,  2181,
    4316,  2121,  3295,  4358,  4162,   477,  4162,  4547,  4162,  1091,
    1092,  4470,  4351,  4162,  4385,   504,   505,  4162,  1100,  1101,
    1102,  1103,  1104,  1105,  4162,  4470,  4457,  4343,  4162,   501,
    4162,  1113,  1114,  4162,  1116,  1117,  4411,  4162,  4410,  4162,
    3651,  1123,  1124,  1905,   790,  1127,  1128,  1129,  1130,  1340,
    1132,  1133,  4162,  4369,  4162,  3027,  4372,  3234,  1140,  1141,
    3015,  1143,  1144,  1145,  1146,  1147,  3665,  1149,  1150,  1151,
    1152,  1153,  1154,  1155,  1156,  1157,  1158,   549,  1160,    21,
    2700,  1163,  1164,  2699,  3457,  4024,  1168,  2705,  4354,  4027,
    1172,  1173,  1174,  4434,  4464,  4432,  2031,  4215,  3253,  2694,
    3538,  3148,  3539,  1185,  1186,  1187,  2529,  3182,  3181,  4464,
    3860,  4381,  1194,  3590,  4351,  3003,  3445,  1199,  3448,  1201,
    1202,  1203,  1204,  1205,  1206,  1207,  1208,  1209,  1210,  1211,
    4219,   603,  1214,  2938,  3440,  4144,  1218,  4092,  1220,  4578,
    4084,  4148,   614,   615,  4107,  3047,  3926,  3567,  3468,  3252,
    2674,  2434,  4045,  2429,  2602,   675,  2602,  2601,   100,  4475,
     681,  1646,  2175,   635,  1642,   637,  4482,  3535,   914,  3055,
    1328,  1981,  2169,  2777,  1256,   664,   665,   666,   667,   668,
     669,   670,   671,  3709,  3312,    58,   648,   647,  1382,  1546,
    2401,  2310,  1820,  2402,  3751,  4127,  3370,  1651,  1651,  1651,
    1134,  1651,  4518,   675,  3618,   677,  2838,  4523,   680,   681,
    4128,  3338,  1106,  2726,   156,  2811,  1866,  3530,   160,  3742,
     984,  3478,   909,    17,  1414,  2092,  1274,  3702,  1274,  1311,
    1274,  3725,  3353,    35,    52,  4551,   951,   565,  2772,  2772,
    2252,   669,  1274,  4559,  2253,  2109,  1602,  1627,  4557,   995,
    3113,  4557,   194,  1519,  3315,  4490,  3473,  4514,  3814,  4589,
    4595,  3581,  4578,  1345,  3718,  3827,  4582,  1378,  4584,  1020,
     212,   943,  2217,  4589,    43,   217,  1579,    43,  1024,  4595,
    1018,  2162,  1561,  1563,  2185,   980,  1535,  2145,  2424,  3695,
    4280,   635,   983,   848,   558,   558,   238,   903,   679,   903,
    1382,   903,    -1,    -1,   246,    -1,  1388,    14,  1390,  1391,
      -1,    -1,  1235,    -1,    -1,    -1,   258,    -1,    -1,    -1,
    1402,  1403,    -1,  1405,  1406,    -1,    -1,    -1,    -1,   271,
      -1,   133,    35,    -1,   276,    -1,    -1,    -1,    -1,  3659,
      -1,    -1,    -1,   285,    -1,  1091,  1092,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1100,  1101,   158,    -1,  1104,  1105,
     162,    -1,    -1,    -1,    -1,    -1,    -1,  1113,  1114,    -1,
    1116,  1117,    -1,    -1,    -1,    13,    14,  1123,    -1,    -1,
      -1,  1127,  1128,  1129,  1130,    -1,  1132,    -1,    -1,    -1,
      -1,    -1,    99,    -1,  1140,  1141,    -1,  1143,  1144,    -1,
     202,    -1,    -1,  1149,  1150,    -1,  4340,  1153,  1154,  1155,
    1156,  1157,  1158,   355,  1160,    -1,    -1,  1163,  1164,    -1,
     222,    -1,  1168,   130,    -1,    -1,  1172,  1173,  1174,    -1,
     133,    -1,    -1,    -1,    -1,    -1,   378,   144,    -1,  1185,
    1186,  1187,    -1,    -1,    -1,    -1,   388,    -1,  1194,    -1,
      -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,  4392,   162,
     167,    99,    -1,   170,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1218,  4407,  1220,    -1,   183,    -1,   420,    -1,
      -1,    -1,    -1,  1565,    -1,   287,  4420,    -1,    -1,    -1,
    1572,    -1,   130,    -1,  1576,    -1,    -1,    -1,    -1,   202,
    1582,    -1,    -1,   210,    -1,    -1,   144,  1589,    -1,    -1,
    1256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   235,   167,
      -1,    -1,   170,    -1,   241,   477,    -1,    -1,    -1,  4473,
      -1,    -1,    -1,    -1,    -1,   183,    -1,    -1,    -1,  4483,
      -1,    -1,    -1,    -1,  4488,    -1,    -1,    -1,    -1,   501,
      -1,    -1,    -1,    -1,    -1,  1311,    -1,    -1,    -1,    -1,
      -1,    -1,   210,    -1,    -1,    -1,    -1,    -1,   285,    -1,
      -1,   383,    -1,    -1,   287,  4519,  3906,  4521,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1678,   235,  4532,    -1,
    1682,  3921,    -1,   241,    -1,    -1,    -1,   549,    -1,  1691,
      -1,  1693,    -1,    -1,    -1,  3935,    -1,   419,    -1,    -1,
      -1,    27,    28,    -1,    -1,    -1,   428,  4561,  4562,    -1,
      -1,    -1,  4566,    -1,    -1,    -1,  1382,    -1,    -1,    -1,
      -1,   443,  1388,    -1,  1390,  1391,    -1,   285,    -1,    -1,
      -1,    -1,  1734,    -1,    -1,    61,    62,    63,    -1,    -1,
      -1,   603,    -1,    -1,    -1,    71,   468,    -1,    -1,    -1,
      -1,    77,    -1,   615,    -1,    -1,    -1,    83,    84,    -1,
     383,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   635,    -1,   637,    -1,  1779,  1780,  1781,
      -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,
     512,    -1,  1794,    -1,   421,    -1,   419,    -1,  1800,   125,
      -1,    -1,    -1,   129,    -1,   428,  1808,    -1,  1810,    -1,
      -1,    -1,    -1,   675,   441,   677,    -1,    -1,   680,   681,
     443,   543,   449,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     457,    -1,   158,    -1,  1836,    -1,    -1,    -1,    -1,    -1,
    4080,   563,    -1,    -1,   566,   468,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   421,    -1,    -1,   493,   425,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   506,
     507,    -1,    -1,   441,    -1,    -1,    -1,    -1,    -1,   512,
      -1,   449,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   457,
      -1,    -1,    -1,    -1,    -1,    -1,  1572,    -1,    -1,   235,
    1576,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,
     543,    -1,    -1,  1589,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   558,    -1,    -1,    -1,   493,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   506,   507,
      -1,    -1,    -1,    -1,    -1,    14,    -1,    -1,    17,    -1,
     587,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    -1,   609,    -1,   611,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,    -1,    -1,   322,    -1,    -1,    58,
     558,    -1,    -1,    -1,    63,    64,    -1,    -1,    -1,    -1,
      -1,    -1,  1678,    -1,   340,    -1,  1682,    -1,    -1,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,  1693,    -1,   587,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   609,  4292,   611,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,   395,
      -1,   130,   131,   132,    -1,  2077,    -1,    -1,   404,  2081,
    2082,    -1,  2084,  2085,   143,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   156,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   170,    -1,  1779,  1780,  1781,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4363,  4364,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,    -1,  1800,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1808,    -1,  1810,    -1,    -1,    -1,    -1,   208,
      -1,   210,    -1,    -1,    -1,    -1,   215,   483,    -1,   218,
      -1,    -1,  2164,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,  2190,   232,
      -1,    -1,  2194,  2195,  2196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   540,   541,   542,    -1,    -1,    -1,
      -1,   547,   281,    -1,    -1,    -1,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2238,    -1,   564,    -1,
      -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,    -1,   603,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2299,  2300,    -1,
      -1,    -1,    -1,    -1,  2306,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2320,  2321,
      -1,  2323,    -1,   382,  2326,  2327,  2328,  2329,  2330,    -1,
      -1,  2333,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2342,    -1,    -1,    -1,    -1,    -1,  2348,    -1,  2350,    -1,
    2352,  2353,    -1,  2355,  2356,    -1,   415,    -1,  2360,  2361,
    2362,    -1,    -1,    -1,  2366,  2367,  2368,   426,  2370,    -1,
    2372,    -1,  2374,    -1,  2376,    -1,  2378,    -1,    -1,    -1,
      -1,  2383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   448,
      -1,    -1,   451,    -1,   453,    -1,    -1,   456,    -1,  2401,
    2402,    -1,   445,   446,  2406,    -1,  2408,   466,   467,    -1,
      -1,  2077,    -1,    -1,    -1,    -1,    -1,   476,    -1,   478,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   487,    -1,
      -1,    -1,    -1,    -1,   493,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   501,    27,    28,    -1,    -1,   506,   507,   508,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2467,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,
     539,    -1,    -1,    -1,    -1,    -1,    -1,   546,    -1,    -1,
      -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,  2164,    83,
      84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2190,    -1,    -1,   111,    -1,    -1,
      -1,   590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   125,    -1,   602,    -1,   129,    -1,   606,    -1,    -1,
     609,    -1,    -1,    -1,    -1,   614,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2238,    -1,   158,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   645,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   660,   661,   662,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   674,    -1,    -1,    -1,  2621,
      -1,    -1,    -1,    -1,  2290,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2299,  2300,    -1,    -1,    -1,    -1,    -1,
    2306,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,    -1,  2320,  2321,    -1,  2323,   242,    -1,
    2326,  2327,  2328,  2329,  2330,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2342,    -1,   262,    -1,
      -1,    -1,  2348,    -1,  2350,    -1,  2352,  2353,    -1,  2355,
      -1,    -1,    -1,    -1,  2360,  2361,  2362,    -1,    -1,    -1,
    2366,  2367,  2368,    -1,  2370,    -1,  2372,    -1,  2374,    -1,
    2376,    14,  2378,    -1,    17,    -1,  2718,  2383,  2720,    -1,
      -1,    -1,  2724,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    36,    -1,  2401,    -1,    -1,   322,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,
      -1,    -1,    -1,    -1,    -1,    58,   340,    -1,    -1,    -1,
      63,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    79,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      21,  2467,    -1,    -1,    -1,    -1,    27,    28,    -1,    -1,
      -1,   395,    -1,    -1,    -1,    -1,    -1,    -1,   121,  2821,
     404,    -1,    -1,    -1,    -1,    -1,    -1,   130,   131,   132,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     143,   144,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,
      -1,    -1,    83,    84,    -1,    -1,    87,   170,    -1,    -1,
      -1,    -1,  2874,    -1,    -1,  2877,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,
     111,    -1,    -1,    -1,    -1,    -1,  2898,  2899,    -1,   483,
      -1,    -1,    -1,    -1,   125,   208,    -1,   210,   129,    -1,
      -1,    -1,   215,    -1,    -1,   218,    -1,    -1,  2920,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2929,    -1,  2931,
      -1,  2933,    -1,    -1,    -1,   156,    -1,   158,   241,    -1,
      -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2621,   540,   541,   542,    -1,
      -1,   264,    -1,   547,    -1,    -1,    -1,    -1,    -1,  2971,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,
     564,    -1,   285,   567,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     231,    -1,  3014,    -1,   235,    -1,    -1,    -1,    -1,   603,
      -1,   242,    -1,  3025,  3026,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   275,    -1,    -1,    -1,  2724,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   415,    -1,    -1,    -1,    -1,    -1,    -1,   340,
      -1,    -1,    -1,   426,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   448,    -1,    -1,   451,    -1,
     453,    -1,    -1,   456,    -1,  2821,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,   467,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   476,   395,   478,    -1,    -1,    -1,    -1,
     401,    -1,    -1,   404,   487,    -1,    -1,    -1,    -1,    -1,
     493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,    -1,
      -1,    -1,    -1,   506,   507,   508,    -1,    -1,  2874,    -1,
      -1,  2877,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3232,  3233,  2898,  2899,    -1,   456,   539,    -1,    -1,    -1,
      -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2920,    -1,    -1,    -1,    34,    35,
      -1,    -1,   483,  2929,    40,  2931,    42,  2933,    44,    45,
      -1,    -1,   493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3282,    -1,  3284,    -1,    -1,    -1,    62,   590,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   602,
      -1,    -1,    -1,   606,    -1,    -1,   609,    -1,    -1,    -1,
      -1,   614,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   540,
     541,   542,    -1,    -1,  3326,    -1,   547,    -1,    -1,    -1,
      -1,    -1,    -1,  3335,  3336,    -1,   112,    -1,    -1,   115,
      -1,    -1,   645,   564,    -1,    -1,   567,   123,    -1,    -1,
      -1,    -1,    -1,  3355,    -1,    -1,    -1,    -1,    -1,  3361,
      -1,  3363,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,
      -1,   674,    -1,    -1,    -1,  3377,    -1,    -1,    -1,    -1,
      -1,    -1,   603,   159,    -1,    -1,    -1,    -1,    -1,     7,
      -1,    -1,    -1,    -1,    12,    -1,    14,    -1,  3400,    17,
    3402,    -1,    -1,  3405,  3406,    -1,  3408,    -1,    -1,    27,
      28,   187,    -1,   189,    -1,  3417,    -1,    -1,    -1,    -1,
    3422,    -1,    -1,  3425,    -1,  3427,  3428,    -1,    -1,   205,
     206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      58,    -1,    -1,    -1,    -1,    63,    64,    -1,    -1,    -1,
      -1,    69,    -1,   674,    -1,    -1,    -1,    -1,    -1,    77,
     681,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,
      -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,
      -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3503,    -1,   279,    -1,    -1,    -1,   125,    -1,    -1,
      -1,   129,   288,   289,    -1,   291,    -1,    -1,    -1,   137,
     138,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,
     158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   169,   328,   329,   330,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   347,   348,   349,   192,    -1,    -1,    -1,   354,    -1,
      -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,
     376,    -1,    -1,    -1,    -1,  3607,  3608,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   233,    -1,   235,    -1,    -1,
      -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   409,   410,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,  3649,  3650,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,
    3326,    -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,  3335,
    3336,  3673,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3355,
      -1,    -1,    -1,    -1,    -1,  3361,    -1,  3363,    -1,    -1,
    3702,    -1,    -1,    -1,   322,    -1,    -1,    -1,    -1,    -1,
      -1,  3377,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   497,   340,    -1,    -1,   501,   344,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3400,    -1,  3402,   513,    -1,  3405,
    3406,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3417,    -1,    -1,    -1,    -1,  3422,    -1,    -1,  3425,
      -1,  3427,  3428,    -1,   382,    -1,    -1,    -1,     7,    -1,
     388,    -1,    -1,    12,    -1,    14,    -1,   395,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   404,    -1,    27,    28,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,    -1,
     576,    -1,    -1,   579,   580,   581,   582,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   436,    58,
    4162,    -1,    61,    62,    63,    64,    -1,    -1,    -1,    -1,
      69,    -1,    71,   451,   452,   453,    -1,  3503,    77,    -1,
      -1,    -1,    -1,    -1,    83,    84,   622,   623,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   111,    -1,   650,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,
     129,    -1,    -1,    -1,    -1,  4237,  4238,    -1,   137,   138,
      -1,   677,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,   158,
      -1,    -1,   540,   541,   542,    -1,    -1,    -1,    -1,   547,
     169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3607,  3608,    -1,    -1,    -1,   564,    -1,    -1,   567,
      -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   590,    -1,    -1,    -1,  3978,    -1,    -1,    -1,
      -1,  4323,  4324,    -1,  3986,   603,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,    -1,   235,    -1,  4340,    -1,
      -1,    -1,    -1,   242,  4006,    -1,  4008,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   637,
      -1,    -1,   640,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     7,    -1,    -1,  3702,    -1,    12,    -1,
      14,    -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,
    4392,    -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4407,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4420,    -1,
      -1,    -1,    -1,   322,    58,    -1,    -1,    -1,    -1,    63,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   340,  4444,    77,    -1,   344,    -1,    -1,    -1,    83,
      84,    -1,    -1,    87,  4456,  4457,    -1,    -1,    -1,    -1,
      -1,    -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4473,    -1,    -1,  4136,    -1,    -1,   111,    -1,    -1,
      -1,  4483,    -1,   382,    -1,    -1,  4488,    -1,    -1,   388,
      -1,   125,    -1,    -1,    -1,   129,   395,  4159,    -1,  4501,
    4162,  4503,    -1,   137,    -1,   404,    -1,    -1,  4170,    -1,
     144,    -1,    -1,    -1,    -1,  4517,    -1,  4519,   152,  4521,
      -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,
    4532,    -1,    -1,    -1,    -1,    -1,    -1,   436,    -1,    -1,
      -1,    -1,    -1,  4545,  4546,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   451,   452,   453,    -1,    -1,    -1,   192,  4561,
    4562,    -1,    -1,    -1,  4566,    -1,    -1,    -1,    -1,  4231,
      -1,    -1,    -1,    -1,    -1,  4237,  4238,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   540,   541,   542,    -1,    -1,    -1,  4309,   547,  4311,
      -1,   285,  3978,    -1,    -1,    -1,    -1,    -1,    -1,  4321,
    3986,  4323,  4324,    -1,    -1,   564,    -1,    -1,   567,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4340,    -1,
    4006,    -1,  4008,    -1,    -1,    -1,    -1,    -1,   322,    -1,
      -1,   590,    -1,    -1,    -1,    -1,  4358,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   603,    -1,   340,    -1,    -1,    -1,
     344,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4390,    -1,
    4392,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   637,    -1,
      -1,   640,    -1,    -1,    -1,  4407,  4408,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   388,    -1,    -1,    -1,  4420,    -1,
      -1,   395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4443,  4444,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4456,  4457,    -1,    -1,    -1,    -1,
      -1,    -1,  4464,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4473,    -1,    -1,    -1,    -1,    -1,   451,  4480,    -1,
      -1,  4483,    -1,    -1,    -1,    -1,  4488,    -1,    -1,    -1,
      -1,    -1,  4494,  4159,    -1,    -1,    -1,    -1,    -1,  4501,
      -1,  4503,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,    -1,    -1,    -1,  4517,    -1,  4519,    -1,  4521,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4532,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4545,  4546,    -1,    -1,    -1,    -1,    -1,
    4552,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4561,
    4562,    -1,    -1,    -1,  4566,  4231,   540,   541,   542,    -1,
      -1,    -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     564,    -1,    -1,   567,  4596,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4309,    -1,  4311,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4321,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4390,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4408,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4443,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4480,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4494,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    47,    -1,    49,    50,  4552,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
    4596,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,   268,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,   584,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,   666,   667,    -1,    -1,    -1,    -1,   672,    -1,   674,
      -1,    -1,    -1,   678,   679,    -1,    -1,   682,   683,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,   101,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
     666,   667,    -1,    -1,    -1,    -1,   672,    -1,   674,    -1,
      -1,    -1,   678,   679,    -1,    -1,   682,   683,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,   101,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,   438,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,   666,
     667,   668,    -1,    -1,    -1,   672,    -1,   674,    -1,    -1,
      -1,   678,   679,    -1,    -1,   682,   683,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,   101,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,   493,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,   666,   667,
      -1,    -1,    -1,    -1,   672,    -1,   674,    -1,    -1,    -1,
     678,   679,    -1,    -1,   682,   683,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,   101,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
     529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,   666,   667,   668,
      -1,    -1,    -1,   672,    -1,   674,    -1,    -1,    -1,   678,
     679,    -1,    -1,   682,   683,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,   101,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,   666,   667,    -1,    -1,
      -1,    -1,   672,    -1,   674,    -1,    -1,    -1,   678,   679,
      -1,    -1,   682,   683,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
     101,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,   666,   667,    -1,    -1,    -1,
      -1,   672,    -1,   674,    -1,    -1,    -1,   678,   679,    -1,
      -1,   682,   683,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,   101,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,    -1,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,   666,   667,    -1,    -1,    -1,    -1,
     672,    -1,   674,    -1,    -1,    -1,   678,   679,    -1,    -1,
     682,   683,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,   101,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,    -1,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,   666,   667,    -1,    -1,    -1,    -1,   672,
      -1,   674,    -1,    -1,    -1,   678,   679,    -1,    -1,   682,
     683,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,   101,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
      -1,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,   666,   667,    -1,    -1,    -1,    -1,   672,    -1,
     674,    -1,    -1,    -1,   678,   679,    -1,    -1,   682,   683,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,   666,   667,    -1,    -1,    -1,    -1,   672,    -1,   674,
      -1,    -1,    -1,   678,   679,    -1,    -1,   682,   683,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,   101,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
     666,   667,    -1,    -1,    -1,    -1,   672,    -1,   674,    -1,
      -1,    -1,   678,   679,    -1,    -1,   682,   683,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,   101,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,   438,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,   666,
     667,    -1,    -1,    -1,    -1,   672,    -1,   674,    -1,    -1,
      -1,   678,   679,    -1,    -1,   682,   683,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,   101,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,   666,   667,
      -1,    -1,    -1,    -1,   672,    -1,   674,    -1,    -1,    -1,
     678,   679,    -1,    -1,   682,   683,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,   101,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
     529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,   666,   667,    -1,
      -1,    -1,    -1,   672,    -1,   674,    -1,    -1,    -1,   678,
     679,    -1,    -1,   682,   683,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,   101,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,   666,   667,    -1,    -1,
      -1,    -1,   672,    -1,   674,    -1,    -1,    -1,   678,   679,
      -1,    -1,   682,   683,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
     101,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,   666,   667,    -1,    -1,    -1,
      -1,   672,    -1,   674,    -1,    -1,    -1,   678,   679,    -1,
      -1,   682,   683,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,   101,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,    -1,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,   666,   667,    -1,    -1,    -1,    -1,
     672,    -1,   674,    -1,    -1,    -1,   678,   679,    -1,    -1,
     682,   683,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    37,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,    -1,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,   682,
     683,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,   275,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,   493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,   519,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,    -1,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,   674,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,   683,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,   683,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,   145,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,    -1,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,   674,    -1,    15,    16,    -1,   679,    -1,    20,
      -1,   683,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,   493,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,   674,    -1,    15,    16,    -1,   679,    -1,
      20,    -1,   683,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,   493,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,   674,   675,    15,    16,    -1,    -1,
      -1,    20,    -1,   683,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
     529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,   674,    -1,    15,    16,    -1,
     679,    -1,    20,    -1,   683,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,   675,    15,    16,
      -1,    -1,    -1,    20,   682,   683,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,   438,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,   674,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,   683,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,   674,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,   683,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,   674,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,   683,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
      -1,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,     5,     6,   668,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,   683,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,    -1,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,   682,
     683,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,    -1,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,   683,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,    -1,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
     683,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
      -1,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,   683,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,   683,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,   682,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,   682,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,    -1,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,   682,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,    -1,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
     682,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
      -1,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,   682,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,   682,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,   682,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,     6,   659,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    16,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,   682,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,    -1,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,
      -1,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,
     498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,     5,     6,    -1,     8,     9,    10,    11,
      12,   659,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,   677,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,   529,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,    -1,    -1,   656,   657,    -1,   659,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,   675,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,   438,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,
     656,   657,    -1,   659,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,   675,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,   668,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,   668,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,   668,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,   668,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,    -1,    -1,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,   521,   522,   523,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,   594,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    18,    19,    20,    21,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,   387,    -1,    -1,   390,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,   648,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,   502,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,   594,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,   104,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,   104,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      95,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,   172,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,   522,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,   418,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,    -1,   422,   423,   424,    -1,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,    -1,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,    -1,   422,   423,   424,
      -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,    -1,   450,    -1,   452,   453,   454,
      -1,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,    -1,   659,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,    -1,   422,   423,   424,    -1,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,   438,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,   529,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,    -1,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,   656,   657,    -1,   659,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,    -1,   422,   423,   424,
      -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,   438,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,    -1,   450,    -1,   452,   453,   454,
      -1,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,   529,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,   656,   657,     6,   659,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,   150,   151,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,    -1,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,     6,    -1,
       8,     9,    10,    11,    12,    -1,   659,    -1,    16,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,    -1,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,
      -1,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,
     498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,   634,    -1,   636,    -1,
      -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,     6,    -1,     8,     9,    10,    11,    12,
      -1,   659,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,   150,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,    -1,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,   634,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,     6,    -1,
       8,     9,    10,    11,    12,    -1,   659,    -1,    16,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,    -1,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,
      -1,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,
     498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,     6,    -1,     8,     9,    10,    11,    12,
      -1,   659,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,    -1,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,     6,    -1,
       8,     9,    10,    11,    12,    -1,   659,    -1,    16,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,    -1,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,
      -1,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,
     498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,     6,    -1,     8,     9,    10,    11,    12,
      -1,   659,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,    -1,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,     6,    -1,
       8,     9,    10,    11,    12,    -1,   659,    -1,    16,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,    -1,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,
      -1,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,
     498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,     6,    -1,     8,     9,    10,    11,    12,
      -1,   659,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,    -1,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,     6,    -1,
       8,     9,    10,    11,    12,    -1,   659,    -1,    16,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,    -1,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,
      -1,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
     438,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,
     498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,   529,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,     6,    -1,     8,     9,    10,    11,    12,
      -1,   659,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,   438,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,    -1,    -1,   452,
      -1,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,   529,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,    -1,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    34,
      35,    -1,    -1,    -1,    -1,    40,   659,    42,    -1,    44,
      45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     205,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   288,   289,    -1,   291,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   328,   329,   330,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   347,   348,   349,    -1,    -1,    -1,    -1,   354,
      -1,    -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     375,   376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   409,   410,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   497,    -1,    -1,    -1,   501,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   513,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,
      -1,   576,    -1,    -1,   579,   580,   581,   582,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   622,   623,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   650
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   130,   131,   132,   143,   144,   156,   170,
     190,   208,   210,   215,   218,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   590,
     602,   606,   609,   614,   645,   660,   661,   662,   674,   686,
     687,   690,   691,   692,   693,   694,   696,   701,   703,   725,
     726,   729,   753,   778,   785,   786,  1034,  1042,  1078,  1079,
    1080,  1083,  1097,  1099,  1103,  1104,  1105,  1109,  1111,  1116,
    1123,  1134,  1135,  1136,  1137,  1138,  1139,  1140,  1256,  1258,
    1269,  1270,  1288,  1292,  1296,  1303,  1320,  1323,  1326,  1335,
    1341,  1345,  1347,  1348,  1407,  1409,  1431,  1437,  1439,  1440,
    1442,  1449,  1452,  1481,  1487,  1488,  1489,  1490,  1527,  1534,
    1535,    12,   108,   127,   200,   243,   286,   420,   499,   564,
     566,   612,  1499,  1500,  1501,  1504,   282,   371,  1110,  1482,
     572,  1392,   235,     5,     6,     8,     9,    10,    11,    12,
      15,    16,    20,    23,    25,    26,    27,    28,    29,    30,
      32,    36,    40,    43,    44,    45,    47,    49,    50,    53,
      56,    57,    59,    60,    61,    63,    65,    66,    67,    68,
      69,    70,    72,    73,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    87,    88,    90,    91,    92,
      93,    94,    98,   101,   103,   106,   110,   111,   112,   115,
     120,   121,   126,   127,   129,   133,   135,   136,   137,   138,
     139,   143,   146,   147,   148,   152,   154,   155,   157,   158,
     159,   162,   163,   165,   166,   167,   168,   169,   170,   173,
     174,   175,   176,   177,   180,   181,   183,   184,   185,   186,
     187,   190,   191,   195,   196,   198,   200,   202,   204,   205,
     206,   207,   209,   211,   215,   216,   218,   221,   222,   226,
     227,   228,   229,   232,   233,   234,   237,   242,   243,   244,
     248,   252,   253,   255,   256,   260,   262,   265,   266,   269,
     272,   273,   279,   280,   282,   284,   286,   287,   295,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   316,   317,   318,
     320,   321,   322,   323,   325,   326,   331,   332,   333,   334,
     335,   336,   339,   340,   342,   344,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   357,   358,   361,   362,   363,
     364,   365,   369,   370,   374,   376,   377,   379,   380,   381,
     384,   394,   395,   396,   398,   400,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   413,   415,   416,   417,
     419,   421,   422,   423,   424,   425,   427,   428,   429,   432,
     436,   437,   438,   439,   440,   443,   444,   445,   446,   447,
     449,   450,   452,   453,   454,   457,   458,   459,   460,   461,
     462,   463,   464,   466,   468,   469,   471,   472,   473,   475,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   491,   492,   496,   497,   498,   499,   503,   507,
     509,   510,   511,   512,   514,   515,   516,   517,   518,   524,
     525,   526,   528,   529,   531,   534,   536,   538,   539,   540,
     541,   542,   543,   546,   547,   550,   551,   552,   553,   554,
     555,   558,   559,   560,   561,   563,   564,   567,   568,   569,
     570,   573,   574,   576,   577,   578,   579,   585,   586,   590,
     591,   592,   593,   595,   596,   598,   599,   601,   602,   605,
     608,   610,   612,   613,   619,   621,   624,   628,   630,   631,
     632,   633,   640,   641,   642,   644,   645,   646,   647,   650,
     656,   657,   659,   747,  1389,  1395,  1402,  1403,  1404,  1405,
     316,   457,   563,   566,  1433,  1433,   641,  1483,   108,   199,
     286,   499,   519,   564,   569,   604,   612,   654,   728,  1013,
    1265,   231,   293,   429,  1294,  1295,  1257,   108,   167,   200,
     235,   286,   420,   499,   564,   587,   612,   628,   654,  1265,
    1395,  1110,   103,   536,   787,   274,   745,   746,  1389,  1392,
    1396,  1399,  1401,  1403,  1405,  1406,  1470,   683,  1386,  1388,
    1395,   702,   128,   220,   293,  1271,   407,   659,    87,   428,
    1346,   111,   235,   647,  1352,  1433,  1110,  1395,  1342,   487,
     612,  1433,  1110,   128,   293,  1272,  1291,  1336,   522,   775,
     779,   780,  1395,   745,  1470,  1483,  1395,    13,   140,   220,
     527,   528,   529,   530,   531,   532,   549,  1145,  1146,  1147,
    1495,    61,    62,   125,   209,   282,   352,   404,   498,   585,
     653,   654,   682,   975,  1395,  1408,  1415,  1420,  1421,  1304,
     779,   204,   511,   585,   204,   511,   566,  1298,   407,   659,
    1438,  1291,  1395,    32,    79,   154,   415,   437,   478,   539,
    1530,     8,    23,    29,    35,    37,    38,    39,    41,    54,
      55,    61,    62,    69,    72,    96,    97,   102,   104,   107,
     108,   113,   114,   115,   120,   122,   125,   171,   178,   179,
     188,   195,   205,   207,   213,   219,   226,   230,   241,   245,
     271,   279,   290,   319,   324,   335,   339,   341,   345,   346,
     347,   348,   349,   356,   366,   368,   372,   373,   397,   404,
     409,   410,   412,   427,   455,   456,   475,   477,   484,   485,
     491,   544,   545,   552,   556,   557,   562,   572,   576,   577,
     578,   579,   588,   589,   590,   594,   597,   612,   616,   617,
     618,   620,   625,   627,   632,   633,   650,   666,   667,   672,
     674,   678,   679,   682,   683,   973,  1138,  1156,  1160,  1163,
    1164,  1165,  1166,  1167,  1168,  1175,  1176,  1372,  1374,  1376,
    1377,  1378,  1382,  1384,  1389,  1395,  1492,  1494,  1389,   401,
     898,  1135,  1136,  1138,     0,   156,   688,   415,   104,   274,
     612,  1050,  1392,  1395,  1398,  1400,  1471,  1472,   608,  1081,
    1095,   246,  1254,   388,   603,  1234,  1235,   276,   603,  1235,
    1239,   176,   195,   402,  1324,  1386,  1395,   160,  1054,  1395,
     160,   747,   480,  1441,   212,   747,  1398,   852,   853,   856,
     879,  1395,  1386,   230,  1264,   167,  1040,  1499,  1433,  1483,
    1117,   754,   683,   583,   185,  1261,  1386,  1261,    19,  1484,
     230,   927,   235,   212,  1398,   235,   854,   879,   927,   927,
     390,  1496,  1500,  1501,  1502,  1503,  1504,   235,   566,   197,
    1263,  1387,  1395,  1294,   367,   668,  1149,  1150,  1153,  1154,
    1155,  1156,  1380,  1395,  1264,  1264,  1264,  1395,   212,  1264,
    1264,   879,  1264,  1264,  1264,  1264,  1433,   697,  1327,   135,
    1453,   682,   583,   677,  1395,   381,    68,   433,   683,  1398,
     231,  1074,  1395,  1392,  1536,  1153,   246,  1349,  1432,  1433,
     197,    35,   316,  1311,  1343,  1395,   745,  1112,  1433,   246,
    1273,   316,   428,   511,  1337,  1338,   621,   776,   501,   781,
    1450,   197,   583,  1484,  1149,  1147,   501,   654,   683,    35,
     125,   160,   502,   976,   977,  1281,  1398,   194,  1281,   255,
     433,  1422,  1423,  1425,  1427,    13,   125,   365,  1470,   682,
    1398,    35,   125,   979,   980,  1398,   683,   125,   585,  1411,
    1419,  1421,   677,  1412,  1281,    36,    61,    72,    97,    99,
     109,   158,   163,   166,   198,   200,   209,   211,   234,   235,
     261,   282,   316,   381,   408,   419,   420,   423,   424,   444,
     498,   511,   547,   566,   631,   975,  1012,  1305,  1311,  1312,
    1314,  1416,   781,   447,   534,  1092,  1093,  1094,   433,   637,
    1084,  1085,  1086,  1092,  1297,  1395,  1536,  1433,  1074,    37,
     219,   572,  1373,  1393,  1529,  1529,  1529,    96,  1528,  1529,
    1529,   674,   674,   674,  1163,   674,   674,   674,  1153,  1188,
     674,   674,   674,   674,   674,   674,   674,   674,  1152,  1152,
     674,   961,   674,   674,   674,   572,   674,   674,   674,   674,
    1493,  1494,   674,   674,   674,   674,   674,   674,   674,   674,
     674,  1153,   674,   674,   674,  1186,  1187,  1382,  1395,   674,
     674,   674,   674,   674,   674,   674,   674,   674,   961,   674,
     674,   674,   674,   674,   674,   674,   674,   674,   674,   674,
     674,   674,   674,   674,   674,   674,   961,   572,   674,   674,
     674,   572,   674,   674,   674,    37,   219,   572,   674,  1152,
     961,   961,   674,   674,   674,   674,   674,   674,  1163,  1163,
    1163,  1136,  1138,  1153,  1395,   682,  1177,  1398,  1395,   141,
     156,   345,   504,   505,   664,   665,   666,   667,   668,   669,
     670,   671,  1163,    71,   389,  1393,   259,   652,   674,   683,
     674,    48,   156,   675,   675,   675,   681,  1395,  1152,   674,
     228,   682,   125,   228,   465,   677,  1476,   300,   301,   445,
     446,   524,   525,   526,   723,  1096,   612,  1087,  1088,   146,
     392,   682,  1252,  1253,  1255,  1398,    48,    13,   140,  1491,
    1238,  1239,   290,   373,   594,  1240,  1241,  1374,  1395,  1491,
    1238,   420,  1249,   160,  1321,  1325,  1373,  1395,   333,   570,
     596,  1036,  1400,  1038,  1398,   858,   880,  1395,  1037,   384,
       7,    58,   144,   367,   432,   434,   881,  1035,   171,   745,
     747,   533,  1505,  1506,  1039,  1261,  1118,  1119,  1120,  1121,
    1386,   674,   755,  1395,   704,   705,   176,   429,   677,  1098,
      59,   176,   180,   194,   331,   429,  1106,  1107,  1108,    57,
     369,   369,   448,  1485,   366,   367,  1159,  1395,  1395,   857,
     880,   193,  1395,     7,   745,   745,   456,    11,   167,   200,
     420,   587,   732,  1498,  1506,  1514,  1516,  1517,  1522,   200,
     732,  1497,  1506,  1514,  1517,  1522,  1499,  1504,   683,  1025,
    1031,  1385,  1395,   927,  1263,  1386,  1395,   197,   677,   683,
    1293,  1153,   677,    18,    19,    21,   387,   390,   648,  1151,
    1157,  1158,  1392,  1395,   160,   161,   201,   214,   254,   267,
     294,   359,  1161,    33,   249,   275,   442,   517,  1159,   683,
    1395,   747,  1395,   378,   880,   747,  1398,   370,   630,   890,
     892,  1266,  1267,  1268,  1312,   747,   745,  1261,  1470,  1264,
     615,   698,    35,   133,   158,   162,   202,   222,   287,   383,
     419,   428,   443,   468,   512,   543,  1328,  1332,  1333,  1433,
      86,   682,   788,   789,   790,   791,  1395,    13,    14,    99,
     130,   144,   167,   170,   183,   210,   235,   241,   285,   421,
     425,   441,   449,   457,   493,   506,   507,   558,   587,   609,
     611,  1454,  1456,  1458,  1459,  1398,  1400,  1469,  1401,    21,
     160,  1221,  1222,  1443,  1395,  1273,   516,   677,    50,    85,
     293,  1354,  1386,  1434,  1435,  1261,   682,   695,  1392,   287,
    1113,  1400,  1114,  1115,  1386,  1261,  1386,    50,  1339,   677,
    1393,    56,    66,    76,    90,    91,    92,   106,   334,   351,
     489,   551,   568,   782,   784,    13,   425,  1451,  1456,  1469,
     487,  1486,  1485,   197,  1141,  1142,  1254,    13,   365,  1470,
    1395,    71,   982,  1153,  1400,   404,   572,  1429,   273,   380,
     643,   677,  1426,   677,  1424,   658,  1410,   209,   282,   498,
     653,  1418,  1281,  1395,  1422,  1412,  1281,  1413,  1414,  1415,
    1420,    13,    35,   125,   378,  1153,  1430,   166,   275,   635,
    1319,   674,   108,   167,   200,   420,   566,   587,   612,   628,
    1319,    13,  1398,  1238,   197,   249,  1313,  1315,    70,   543,
     194,   543,   563,    70,   543,    13,    43,    94,    98,   253,
     332,   396,   518,   560,  1299,  1300,  1301,   166,   222,   543,
     543,  1238,  1319,  1315,   287,   157,    73,   422,   563,   586,
     543,   624,   677,   380,   643,    88,   677,   194,   724,  1262,
    1386,   674,   679,  1144,  1191,  1193,  1201,  1202,  1203,  1204,
    1205,  1206,  1386,  1493,   677,   379,  1532,   559,  1533,   646,
     258,   471,  1531,  1153,  1153,    13,   140,  1182,  1223,  1182,
    1182,  1182,   634,  1190,  1153,  1153,  1153,  1185,  1185,  1153,
    1153,   140,  1182,  1223,   675,   373,   675,   675,  1153,  1153,
    1153,  1153,  1382,   116,   117,   118,   119,   120,   223,   224,
     225,   226,   335,   337,   338,   339,   346,   427,   490,   491,
     632,   649,   650,  1218,  1219,  1153,  1184,  1185,   112,   115,
     576,   579,  1220,   140,  1178,  1153,  1153,  1153,  1153,  1218,
    1153,  1185,  1187,    10,   677,   683,   140,  1182,  1153,  1153,
     140,  1182,  1153,  1153,  1185,  1185,  1185,  1153,  1153,  1185,
    1156,  1153,  1153,  1153,  1153,  1153,  1153,   675,  1153,  1182,
    1182,  1153,  1153,   140,  1182,  1153,  1219,  1219,  1153,    46,
     268,   584,  1153,  1153,   675,  1383,  1384,  1395,  1182,  1182,
    1153,  1153,  1153,   675,   677,  1153,   209,   282,   498,  1417,
     502,   683,  1156,  1156,  1156,  1156,  1156,  1156,   245,  1156,
     245,  1156,  1156,  1156,  1156,  1156,  1398,  1163,  1393,  1393,
    1153,  1172,  1173,  1174,  1395,  1153,   277,   280,   430,   899,
     900,   156,   689,   675,    48,  1398,   654,    48,   637,    65,
     256,   365,   535,   553,   644,  1466,  1467,  1400,  1472,   637,
    1047,   160,   160,   160,   160,   160,   160,   677,   160,  1082,
     404,  1089,   572,  1394,  1394,  1398,   677,  1153,  1236,  1381,
    1138,  1139,  1249,   377,   677,  1138,  1139,  1249,    16,   194,
     285,  1148,  1398,   194,  1134,  1269,  1270,  1288,  1292,  1322,
     125,   925,   926,   933,   934,   985,   748,   316,     7,   859,
     748,   674,   110,   876,   876,   876,     4,     7,    12,    14,
      17,    27,    28,    58,    63,    64,    69,    77,    83,    84,
      87,    96,   111,   129,   137,   138,   144,   152,   158,   169,
     192,   233,   235,   242,   262,   285,   322,   340,   344,   382,
     388,   395,   404,   436,   451,   452,   453,   483,   540,   541,
     542,   547,   564,   567,   590,   603,   637,   640,   928,   931,
     933,   934,  1055,  1056,  1057,  1060,  1063,  1064,  1065,  1066,
    1067,  1068,  1069,  1071,  1072,  1231,  1041,   492,   628,  1506,
     249,   677,   235,   263,   401,  1010,  1129,  1131,  1132,   756,
     757,  1153,   232,   295,   296,   297,   298,   299,   302,   303,
     304,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   317,   318,   719,   720,   723,   458,   459,   460,   461,
     462,   463,   464,   706,   707,  1386,   610,  1107,    57,   448,
     171,   727,   378,   859,   111,   378,   876,  1471,  1470,   200,
     927,   747,  1395,   747,   747,  1506,  1395,   378,   615,   592,
     683,  1386,   615,   401,  1199,  1200,   683,  1144,  1387,   668,
    1395,  1150,  1392,  1395,  1153,  1153,  1153,   179,   372,   589,
     605,  1159,    13,    20,  1155,  1162,  1156,   674,  1493,  1163,
    1156,   275,    33,   249,   275,   442,   668,  1395,   683,  1386,
    1266,   677,   930,   158,  1469,    52,   470,  1075,  1261,   682,
     699,   700,   287,   287,   287,   287,    50,   287,   287,   677,
    1261,  1334,   115,   576,   579,   783,   793,  1176,  1376,  1382,
    1398,   677,   160,   419,  1457,   481,   481,   564,   569,   612,
     628,   654,   654,   385,  1461,   563,   378,  1463,    67,   511,
    1460,   109,   628,  1462,   378,   677,   637,   677,  1464,  1395,
     186,   363,  1395,  1444,  1445,  1386,  1392,  1392,  1124,   282,
    1353,  1222,   677,  1398,    31,   583,  1344,   677,   583,   677,
     583,   176,   429,   613,  1100,  1101,  1102,  1199,    13,  1340,
    1338,   677,   160,  1457,   378,   378,  1395,   145,  1143,  1144,
     635,  1224,  1225,  1141,   583,   583,   583,   125,   981,   984,
    1398,  1281,   674,   433,   454,   496,  1428,  1425,  1423,  1470,
     683,   683,   683,   683,  1421,  1153,  1430,   677,  1419,   249,
    1316,  1393,  1153,   668,   927,   747,   747,   747,  1386,   747,
     745,  1386,   287,   350,   543,  1310,  1310,   275,   635,  1318,
    1395,   747,  1318,  1400,  1313,   747,  1318,   252,   561,   181,
     194,  1302,   677,  1316,   724,  1313,  1386,  1315,  1313,  1313,
    1308,  1309,  1094,   514,  1086,    60,  1144,  1193,  1202,  1203,
    1204,  1205,  1395,   501,   677,   100,   238,   258,   271,   355,
     477,   549,  1194,  1195,  1196,  1199,  1222,  1373,   405,   194,
     677,   675,  1182,   675,  1153,   675,   675,   675,  1153,   150,
     634,  1189,    21,   675,   615,   675,   677,   675,   675,   615,
     677,  1185,   675,   668,   675,   677,   677,   675,   675,   675,
     197,   677,   675,   677,  1185,   675,   677,   677,   677,   667,
     677,   675,   675,   674,  1382,  1395,  1182,   675,   675,   675,
    1182,   675,   677,   675,   675,   675,   675,   675,   677,   675,
     249,   675,   677,   677,   675,   677,   677,   675,   675,   675,
     677,   197,   677,  1182,   675,   675,   677,   677,   677,   675,
     197,  1153,   197,  1153,   197,  1153,   197,   675,   677,   675,
     675,   675,   675,   677,    21,   273,   677,  1000,   675,  1185,
     680,   683,   683,   683,  1398,  1153,  1395,  1153,  1153,  1151,
     675,   677,   674,   683,   675,    73,   674,    73,   674,   402,
     902,   216,   263,   572,    13,   365,  1470,   404,   572,  1398,
     572,   572,   572,    19,  1465,   320,   321,   325,   326,  1048,
    1049,     5,   404,  1043,  1044,  1045,  1046,  1390,  1392,   122,
     188,   290,   373,   594,  1245,  1390,   122,   188,   219,   290,
     373,   594,  1243,  1392,  1392,   723,  1392,   724,   160,   126,
    1090,   975,   978,  1253,    22,   131,  1237,   677,  1148,  1241,
    1241,  1148,   674,   609,   249,    87,   926,    71,   975,    77,
      93,   265,   343,   369,   431,   533,   750,   752,   263,   438,
     598,   877,   878,   237,   873,   874,   875,   882,   890,   892,
     108,   221,   394,   404,   411,   515,   612,   730,   731,  1392,
      26,   323,   867,   868,   869,   882,   883,   884,   890,   892,
     860,   861,   867,    74,    89,   199,   401,   519,   942,   944,
     945,  1008,  1010,  1014,  1073,  1281,  1282,   235,  1073,   401,
    1282,  1282,  1073,  1282,   401,   401,  1282,  1282,  1282,  1282,
     583,   136,  1282,   261,   401,   564,   193,   401,   418,  1010,
    1073,   261,  1282,   401,   401,   564,   136,  1282,  1282,  1282,
    1282,  1282,  1073,   401,    48,  1282,  1282,   401,    21,   160,
     583,  1010,  1077,   401,   401,  1282,  1282,  1282,  1282,   139,
     332,  1282,  1282,   401,  1282,   619,   619,   931,   450,   898,
    1061,   677,   677,   674,  1385,  1395,   378,   740,  1051,   127,
     248,  1386,   125,  1122,  1395,  1120,  1386,  1130,   674,  1131,
     675,   677,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   677,   724,   160,   160,   160,   160,   160,
     160,   160,   677,   924,   925,  1386,    77,   364,   439,   599,
     870,   871,   872,   882,   886,   887,   888,   889,   890,   892,
     642,  1386,   614,   855,  1476,  1395,   747,   674,   473,  1523,
       9,    31,   850,  1386,    47,   216,   486,  1028,  1028,  1395,
      21,   231,   275,   456,   674,   894,   895,   896,   897,   898,
     929,   931,  1136,  1138,  1278,  1356,  1144,   674,  1224,  1395,
    1224,   683,  1293,   179,   372,   589,   605,  1493,    19,  1153,
     165,  1227,  1156,  1156,   674,  1493,  1163,  1156,   683,  1395,
    1259,  1268,  1282,  1075,  1398,   677,   724,  1333,  1329,   791,
     794,   795,   790,   374,   485,   792,   563,   674,  1473,  1400,
    1473,  1473,  1473,   200,   420,   566,  1455,  1459,   655,  1400,
     160,   186,   201,   214,   266,   267,   294,   363,   417,  1446,
    1448,  1224,  1199,  1125,  1126,  1127,  1128,  1386,   236,   293,
     433,   643,  1436,  1435,  1153,  1392,  1400,  1400,  1115,  1386,
    1102,   501,   620,   621,   674,  1274,  1275,  1277,  1278,  1279,
     724,   784,   783,   677,  1400,   200,   420,  1455,  1153,   212,
    1228,  1224,  1470,  1470,  1470,   404,  1429,  1429,    78,   595,
     433,  1281,  1414,  1392,   197,  1317,   675,  1395,  1400,  1392,
    1153,   615,  1318,   428,  1238,  1301,  1317,  1319,  1313,  1386,
    1319,  1318,  1319,  1319,  1390,   677,   675,   675,   675,   675,
     675,  1191,  1192,  1193,  1201,  1289,  1290,  1383,  1191,   258,
     258,   391,  1198,   238,   271,   477,  1197,  1198,  1201,  1191,
    1191,  1222,   677,   336,   245,  1153,   675,   575,  1153,  1153,
     154,    35,    62,   112,   115,   123,   260,   357,   509,   579,
     607,  1183,   976,  1153,   976,  1183,   675,   675,   245,   245,
    1153,  1153,  1153,   388,  1180,  1153,  1153,  1153,  1153,  1153,
    1156,   675,   675,  1153,  1153,  1153,  1153,  1153,  1153,  1185,
     245,  1153,  1153,  1153,   675,  1153,  1153,  1153,  1153,   197,
    1153,   197,  1153,   197,  1153,  1153,  1153,    35,    62,   122,
     188,   219,   290,   373,   594,   995,   996,   997,   998,   999,
    1244,  1247,  1248,  1243,   675,   675,   683,  1032,  1218,  1218,
    1174,  1184,  1395,   156,   674,  1156,   674,  1156,  1244,   555,
     903,   674,    12,   901,   572,    21,    48,  1466,  1243,  1243,
    1243,  1243,  1049,   285,   606,   174,  1045,   125,   245,   361,
    1392,   160,   406,  1091,   977,    73,  1357,  1381,   373,  1250,
    1251,   503,  1244,  1282,  1282,  1392,   533,   533,   533,   533,
     533,   492,  1392,  1392,  1282,   930,  1392,  1392,  1392,  1392,
    1243,  1392,  1392,   675,   677,  1282,  1282,   930,   862,   863,
     882,   883,   884,  1031,  1010,  1011,  1110,    64,   193,   418,
     604,   943,  1009,  1025,  1011,   125,  1395,  1395,  1385,  1110,
    1245,  1243,  1385,  1243,    13,  1062,  1217,  1395,  1110,  1392,
    1392,  1392,  1392,   975,  1282,  1243,  1062,   263,  1217,   263,
    1385,  1385,  1398,  1395,  1062,  1282,   186,   266,   369,   936,
    1243,   125,  1395,  1245,  1245,  1385,  1110,  1232,  1233,  1383,
     125,   932,  1243,  1392,  1110,  1385,  1386,  1110,  1110,    80,
      82,   125,   148,   187,   440,   935,   932,   932,   125,  1243,
    1395,  1243,  1062,   674,   403,     7,   144,  1068,  1069,  1057,
    1065,  1069,   938,   939,   940,   942,  1385,    34,    35,    40,
      42,    44,    45,    62,   112,   115,   123,   142,   159,   187,
     189,   205,   206,   247,   260,   279,   288,   289,   291,   328,
     329,   330,   347,   348,   349,   354,   357,   375,   376,   409,
     410,   435,   497,   501,   513,   573,   576,   579,   580,   581,
     582,   622,   623,   650,   946,   949,   950,   951,   952,   953,
     954,   955,   957,    81,   488,   451,  1052,  1507,   674,   418,
    1213,  1214,  1215,  1395,  1153,   674,  1243,  1390,  1243,  1243,
    1390,  1390,  1243,  1243,  1390,  1390,  1390,  1390,  1390,  1390,
    1390,  1390,  1243,  1243,  1390,  1377,   720,   674,   708,   708,
     674,   713,   713,   674,   716,   716,   674,   711,   707,   674,
    1282,  1282,  1282,  1282,   930,  1398,   674,   286,   177,   184,
     864,   865,   866,   882,   883,   884,   885,   888,   889,   890,
     891,   892,  1047,   473,   733,  1518,   123,   247,   435,   550,
     937,   674,   130,   241,   609,   851,   674,   683,  1278,  1386,
     275,   938,   896,   895,   930,   897,  1224,  1216,  1217,  1234,
    1155,   675,   677,  1163,    19,  1153,  1227,   668,  1260,  1398,
     700,   194,   637,  1330,   160,   677,  1395,  1474,  1475,   583,
     668,  1386,  1395,  1468,  1468,  1468,   385,  1447,  1238,   501,
    1274,  1275,   677,  1129,  1131,  1394,   643,   282,   583,  1289,
     675,  1276,  1379,  1380,  1383,  1395,   674,  1280,  1283,   160,
     210,   197,  1468,  1468,  1468,    48,   217,  1226,  1228,   674,
     675,  1430,  1245,  1306,   163,   631,  1469,   373,  1307,  1225,
    1313,  1191,   680,   677,  1224,  1281,   258,  1198,  1198,   258,
     258,   378,   615,   378,   615,   192,   231,   614,  1208,  1209,
    1210,  1211,  1212,  1243,  1153,   675,  1153,   575,   674,   965,
     966,   966,   674,   960,   674,   958,   959,   965,   966,   247,
     960,   247,   675,   675,   675,   675,  1153,  1153,   675,   675,
     677,   675,    48,   495,  1179,   677,   677,   675,   677,   675,
     249,  1169,  1170,   675,   675,   675,   675,   677,   675,   675,
    1153,   675,   194,   675,   675,   677,   675,   677,   677,   675,
    1153,   675,  1153,   675,  1153,   675,   675,   675,   674,   990,
     990,    22,   131,   475,   666,   992,   993,   994,   677,   677,
    1395,   675,   905,  1395,   675,   905,   675,    48,   674,   907,
    1156,   160,   674,  1392,  1392,   746,  1244,  1392,   160,   153,
     164,   386,   571,  1358,  1359,   278,  1360,   675,   677,   342,
     984,   977,   111,   111,   127,   248,   290,   373,   594,   893,
    1246,  1247,  1389,   875,   731,   893,   893,   869,   677,   863,
    1031,   402,   674,   674,   263,   263,  1011,  1025,   674,  1031,
     656,   657,  1027,   144,   501,  1062,  1385,  1106,   677,  1244,
     977,  1392,   564,  1385,  1075,   637,   564,  1392,   946,  1062,
     677,  1237,  1062,   583,  1217,  1062,  1334,   675,   677,   946,
     965,   965,   966,    23,    35,    49,   601,   626,   965,   975,
     986,   987,   988,   960,   414,   956,   674,   988,    62,   622,
     952,   988,   988,    62,   623,   623,   626,   674,   966,   960,
     960,   988,   965,   966,   441,   941,   943,  1002,    27,    71,
      75,    77,   125,   372,   378,   418,   497,   547,   604,   968,
     969,   970,   983,  1001,  1159,    35,   965,   989,   965,   965,
     966,   674,   959,   967,   958,   367,   416,    25,   168,   734,
     583,   137,   152,   736,   674,  1508,  1062,   675,   677,   721,
     722,  1243,   675,   709,   710,  1395,   675,   714,   715,  1395,
     675,   717,   718,  1390,  1391,   674,   675,   712,  1029,  1030,
    1395,  1392,  1244,   893,   893,   872,   384,  1029,   212,  1282,
    1282,   930,  1043,   937,   378,   758,   759,   760,  1395,   516,
    1524,   378,  1029,  1395,  1386,   675,   931,   675,   276,  1242,
    1185,  1155,   675,   677,  1070,  1071,  1072,  1331,   433,    56,
      66,    76,    90,    91,    92,   106,   334,   351,   472,   489,
     551,   568,   796,   795,   675,   677,  1471,   683,   683,   583,
     583,   583,   674,  1289,   378,  1287,  1287,  1127,  1386,  1131,
     231,  1133,  1355,  1356,  1400,  1277,  1278,   675,   677,   683,
     125,  1153,  1284,  1285,  1286,   677,   783,   385,  1469,   197,
     197,   197,  1229,  1381,  1153,  1226,  1429,  1238,  1238,  1319,
     675,  1290,  1234,  1286,   258,   258,  1153,   674,  1153,   674,
    1010,  1010,  1209,  1218,  1153,   122,   290,   373,   594,   988,
     373,   373,  1218,  1218,  1153,  1181,  1381,  1373,   675,  1153,
    1153,  1185,    44,   355,   675,   637,  1171,  1153,  1218,  1153,
    1153,  1153,  1153,   675,   675,   675,  1244,   675,  1000,   995,
     993,   995,   996,  1243,   675,   677,   675,   900,   401,   908,
     909,   675,  1244,   904,   905,   120,  1392,    48,    48,   153,
      48,  1359,   537,   571,  1361,  1362,  1251,   863,   674,  1244,
     908,  1153,  1031,   674,  1029,   674,   125,   125,   946,  1395,
     982,   566,     9,   186,  1076,  1058,  1233,  1385,   246,  1100,
     675,   939,   941,    35,    23,   601,   975,    35,   988,   976,
    1033,  1373,   988,   626,  1033,   988,   509,   607,   651,   962,
     963,   964,  1386,  1076,   981,   125,   148,   187,   971,  1392,
     115,   576,   579,   666,   667,   973,   974,  1375,  1376,   609,
     125,   125,   139,   332,   972,   263,    71,   970,   203,   947,
     263,   372,   989,   988,   989,   962,   373,   962,   962,   416,
    1153,  1153,   378,   740,   747,   378,    77,   741,  1395,  1509,
      21,   675,  1214,   675,   677,   675,   677,   675,   677,   683,
     675,   677,   710,   675,   677,   675,   677,  1237,   674,   674,
     675,  1395,   893,   893,   866,   516,   488,   675,   677,   949,
    1392,   239,   249,   393,   761,   762,   763,   764,  1386,   675,
     675,   894,  1241,   675,  1185,  1072,  1071,   175,   285,  1475,
     637,  1478,   668,   668,  1471,  1471,  1471,  1285,  1287,   147,
    1133,   269,   246,  1277,  1278,  1379,  1395,   675,   677,  1283,
     197,  1469,  1469,  1469,   638,   639,   677,  1230,   675,   724,
    1242,  1216,  1216,   194,  1207,  1207,   675,   675,   675,   675,
     675,   675,   677,   675,   675,   675,   677,   675,   677,   675,
     342,   265,   428,   675,   675,   675,   675,   675,   675,   991,
     675,   677,  1395,   216,   263,  1395,   675,   677,   675,  1373,
    1373,    48,  1373,    48,    48,  1362,  1029,   675,   675,   674,
    1029,   675,  1029,  1375,  1076,  1386,  1395,  1110,   674,   976,
     989,   675,   677,   675,   964,   674,  1003,  1377,  1377,   973,
     621,   981,    15,    21,  1218,   511,  1392,   143,  1053,   675,
     677,  1278,  1510,   722,   710,   715,  1395,   718,   677,   674,
      77,   262,   637,  1015,  1016,  1017,  1024,  1027,  1030,   373,
     730,  1018,  1019,  1020,  1024,  1392,   734,  1519,   760,   982,
     675,   677,  1395,   194,   592,   615,  1021,  1022,  1023,  1024,
    1026,   675,   210,  1476,  1476,  1476,   675,   263,   566,  1286,
    1469,  1381,   675,   675,   212,   258,   388,   674,   674,   373,
    1381,  1153,   342,   173,   675,  1243,   674,   901,   620,   910,
     909,  1373,  1373,  1373,   675,  1029,   675,  1021,   675,  1059,
    1060,   908,   988,  1373,   988,  1004,  1395,   319,  1005,   674,
     735,   742,   743,  1395,   637,  1511,   710,   710,  1392,  1282,
     398,  1070,  1017,  1237,   675,   675,  1070,  1020,   739,   740,
     473,  1525,   763,   949,   149,  1028,  1028,  1070,  1023,   385,
     637,  1477,  1477,  1477,   609,  1386,    48,    48,  1213,  1215,
     675,   675,   675,  1156,   674,   249,   272,    77,   111,   235,
     322,   340,   364,   564,   921,   922,   923,  1312,  1015,   675,
    1021,  1018,   675,   675,   677,   198,   400,   510,   378,  1006,
    1153,   538,   737,    54,    68,   182,   230,   257,   270,   381,
     474,   744,   800,   802,   803,   804,   806,   807,   808,   809,
     810,   811,   813,   821,   822,   825,   836,   839,   841,   842,
    1389,  1397,  1404,    53,    64,   282,   675,   677,  1243,  1389,
     736,   949,   749,   982,   484,   210,   320,   321,   325,   326,
    1479,  1480,  1289,  1199,   675,   675,   675,   905,   674,   912,
     914,   574,  1282,   136,   136,  1282,  1282,  1282,  1282,   674,
     918,   923,   158,  1002,  1395,   130,   609,   675,  1153,   155,
     738,   823,   826,  1395,   197,   363,   814,   801,  1397,  1397,
    1395,   805,   691,   292,   455,   636,   845,    32,   843,   684,
      64,   385,    64,   710,   741,   982,   134,   750,   751,  1159,
    1526,   191,   413,  1512,  1513,   385,  1243,  1243,  1243,  1243,
    1480,  1350,   554,   906,   675,   674,   913,   914,   915,   327,
     911,   914,  1392,  1282,  1282,  1246,  1246,  1244,  1395,   555,
     919,   920,  1282,    52,   369,   470,   501,  1007,  1007,   548,
     629,   948,  1153,  1153,   634,   828,   832,   197,  1395,   816,
     817,  1153,   766,   799,   800,   802,   804,   806,   808,   809,
     810,   811,   813,   821,   836,   839,   841,   766,   846,   844,
     837,   840,   385,   385,   675,   143,  1520,   134,   799,  1398,
    1515,   978,  1244,   906,   675,   677,   327,   916,   917,  1156,
    1392,  1392,  1398,   675,   677,  1398,     6,   125,   372,   378,
     378,   968,   824,   833,   150,   832,   835,   246,   154,  1153,
     154,   799,   681,   608,  1153,   767,   845,   843,   742,   749,
     799,  1351,   914,   675,   677,   921,   920,   609,   130,   634,
     827,   829,  1153,   766,   154,   812,   230,   818,   292,   681,
     848,   847,   124,   765,   768,   838,  1397,   838,  1521,   482,
    1363,   917,  1007,  1007,   830,   829,   835,   834,    54,   815,
    1395,   575,  1153,   143,    95,   172,   771,   797,  1395,   154,
     799,   681,   799,   228,  1357,  1153,   154,   575,   677,   766,
     849,   766,   215,   677,   949,    86,   105,   681,    48,  1360,
     831,    54,   766,  1395,   819,   154,   154,   194,  1395,   982,
     194,   194,  1373,   231,  1364,   575,   150,   151,   820,   455,
     636,   769,   125,   798,   774,   775,  1243,   770,   373,   674,
    1366,   766,   766,   816,   521,   523,   772,   773,   774,   777,
    1159,  1395,  1153,  1134,   278,   482,  1365,   675,   682,  1367,
    1368,  1383,   501,  1369,   677,   799,   196,  1398,   675,   677,
    1370,  1371,  1383,   773,  1368,   677,  1281,  1371,  1286
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  However,
   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
   discussed.  */

#define YYFAIL		goto yyerrlab
#if defined YYFAIL
  /* This is here to suppress warnings from the GCC cpp's
     -Wunused-macros.  Normally we don't worry about that warning, but
     some users do, and we want to make it easy for users to remove
     YYFAIL uses, which will produce warnings from Bison 2.5.  */
#endif

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))

/* Error token number */
#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (YYID (N))                                                     \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (YYID (0))
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

__attribute__((__unused__))
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
#else
static unsigned
yy_location_print_ (yyo, yylocp)
    FILE *yyo;
    YYLTYPE const * const yylocp;
#endif
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += fprintf (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += fprintf (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += fprintf (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += fprintf (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += fprintf (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */
#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, YYTHD)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, YYTHD); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (YYTHD);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
        break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
#else
static void
yy_stack_print (yybottom, yytop)
    yytype_int16 *yybottom;
    yytype_int16 *yytop;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, YYTHD)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    class THD *YYTHD;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , YYTHD);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, YYTHD); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULL;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - Assume YYFAIL is not used.  It's too flawed to consider.  See
       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
       for details.  YYERROR is fine as it does not invoke this
       function.
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, YYTHD)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    class THD *YYTHD;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
        break;
    }
}




/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (class THD *YYTHD)
#else
int
yyparse (YYTHD)
    class THD *YYTHD;
#endif
#endif
{
/* The lookahead symbol.  */
int yychar;


#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
static YYSTYPE yyval_default;
# define YY_INITIAL_VALUE(Value) = Value
#endif
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);

/* Location data for the lookahead symbol.  */
YYLTYPE yylloc = yyloc_default;


    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       `yyss': related to states.
       `yyvs': related to semantic values.
       `yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);

	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss_alloc, yyss);
	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
	YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
/* Line 1792 of yacc.c  */
#line 1708 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[(2) - (3)].item);
          }
    break;

  case 4:
/* Line 1792 of yacc.c  */
#line 1713 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[(2) - (3)].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[(2) - (3)].partition_clause)->part_info;
          }
    break;

  case 5:
/* Line 1792 of yacc.c  */
#line 1723 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (my_strcasecmp(system_charset_info, (yyvsp[(2) - (6)].lex_str).str, "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Generated_column;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[(4) - (6)].item), &(yyvsp[(4) - (6)].item));
            gcol_info->expr_item= (yyvsp[(4) - (6)].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
    break;

  case 6:
/* Line 1792 of yacc.c  */
#line 1744 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 7:
/* Line 1792 of yacc.c  */
#line 1756 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 9:
/* Line 1792 of yacc.c  */
#line 1781 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 24:
/* Line 1792 of yacc.c  */
#line 1809 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {  MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 26:
/* Line 1792 of yacc.c  */
#line 1811 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select_stmt)); }
    break;

  case 35:
/* Line 1792 of yacc.c  */
#line 1820 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 48:
/* Line 1792 of yacc.c  */
#line 1833 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 54:
/* Line 1792 of yacc.c  */
#line 1839 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select_stmt)); }
    break;

  case 55:
/* Line 1792 of yacc.c  */
#line 1840 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].set)); }
    break;

  case 56:
/* Line 1792 of yacc.c  */
#line 1841 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 59:
/* Line 1792 of yacc.c  */
#line 1844 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 65:
/* Line 1792 of yacc.c  */
#line 1850 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 68:
/* Line 1792 of yacc.c  */
#line 1857 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 71:
/* Line 1792 of yacc.c  */
#line 1872 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (4)].lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
    break;

  case 72:
/* Line 1792 of yacc.c  */
#line 1892 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 73:
/* Line 1792 of yacc.c  */
#line 1899 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 74:
/* Line 1792 of yacc.c  */
#line 1909 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 75:
/* Line 1792 of yacc.c  */
#line 1916 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 80:
/* Line 1792 of yacc.c  */
#line 1931 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 81:
/* Line 1792 of yacc.c  */
#line 1943 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 82:
/* Line 1792 of yacc.c  */
#line 1951 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 83:
/* Line 1792 of yacc.c  */
#line 1962 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
    break;

  case 84:
/* Line 1792 of yacc.c  */
#line 1973 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 85:
/* Line 1792 of yacc.c  */
#line 1975 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 86:
/* Line 1792 of yacc.c  */
#line 1985 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 89:
/* Line 1792 of yacc.c  */
#line 1994 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_DB);
          }
    break;

  case 90:
/* Line 1792 of yacc.c  */
#line 2001 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_DB);
          }
    break;

  case 91:
/* Line 1792 of yacc.c  */
#line 2008 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_TABLE);
          }
    break;

  case 92:
/* Line 1792 of yacc.c  */
#line 2015 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
    break;

  case 93:
/* Line 1792 of yacc.c  */
#line 2022 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
    break;

  case 94:
/* Line 1792 of yacc.c  */
#line 2029 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
    break;

  case 95:
/* Line 1792 of yacc.c  */
#line 2037 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_REWRITE_DB);
          }
    break;

  case 96:
/* Line 1792 of yacc.c  */
#line 2046 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 97:
/* Line 1792 of yacc.c  */
#line 2052 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 98:
/* Line 1792 of yacc.c  */
#line 2059 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 99:
/* Line 1792 of yacc.c  */
#line 2066 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 100:
/* Line 1792 of yacc.c  */
#line 2074 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
    break;

  case 101:
/* Line 1792 of yacc.c  */
#line 2083 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 102:
/* Line 1792 of yacc.c  */
#line 2089 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 103:
/* Line 1792 of yacc.c  */
#line 2095 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (5)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (5)].item));
          }
    break;

  case 104:
/* Line 1792 of yacc.c  */
#line 2103 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(4) - (7)].item));
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(6) - (7)].item));
            (yyval.item_list)= (yyvsp[(1) - (7)].item_list);
          }
    break;

  case 105:
/* Line 1792 of yacc.c  */
#line 2111 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 106:
/* Line 1792 of yacc.c  */
#line 2117 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 107:
/* Line 1792 of yacc.c  */
#line 2124 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 108:
/* Line 1792 of yacc.c  */
#line 2131 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 109:
/* Line 1792 of yacc.c  */
#line 2139 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[(1) - (3)].lex_str).str, (yyvsp[(1) - (3)].lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            (yyval.item)= table_item;
          }
    break;

  case 110:
/* Line 1792 of yacc.c  */
#line 2151 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 111:
/* Line 1792 of yacc.c  */
#line 2157 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 112:
/* Line 1792 of yacc.c  */
#line 2164 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 113:
/* Line 1792 of yacc.c  */
#line 2171 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 114:
/* Line 1792 of yacc.c  */
#line 2179 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
    break;

  case 117:
/* Line 1792 of yacc.c  */
#line 2194 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 118:
/* Line 1792 of yacc.c  */
#line 2198 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 119:
/* Line 1792 of yacc.c  */
#line 2202 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 120:
/* Line 1792 of yacc.c  */
#line 2206 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
            if (strlen((yyvsp[(3) - (3)].lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
    break;

  case 121:
/* Line 1792 of yacc.c  */
#line 2216 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 122:
/* Line 1792 of yacc.c  */
#line 2220 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 123:
/* Line 1792 of yacc.c  */
#line 2224 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 124:
/* Line 1792 of yacc.c  */
#line 2229 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[(3) - (3)]).cpp.start, (yylsp[(3) - (3)]).cpp.end - (yylsp[(3) - (3)]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 125:
/* Line 1792 of yacc.c  */
#line 2240 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 126:
/* Line 1792 of yacc.c  */
#line 2245 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 127:
/* Line 1792 of yacc.c  */
#line 2249 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 128:
/* Line 1792 of yacc.c  */
#line 2253 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.tls_version= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 129:
/* Line 1792 of yacc.c  */
#line 2257 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 130:
/* Line 1792 of yacc.c  */
#line 2261 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 131:
/* Line 1792 of yacc.c  */
#line 2265 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 132:
/* Line 1792 of yacc.c  */
#line 2269 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 133:
/* Line 1792 of yacc.c  */
#line 2274 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 134:
/* Line 1792 of yacc.c  */
#line 2278 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 135:
/* Line 1792 of yacc.c  */
#line 2283 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Item *num= (yyvsp[(3) - (3)].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 136:
/* Line 1792 of yacc.c  */
#line 2317 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 137:
/* Line 1792 of yacc.c  */
#line 2322 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 142:
/* Line 1792 of yacc.c  */
#line 2339 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[(1) - (1)].ulong_num));
          }
    break;

  case 143:
/* Line 1792 of yacc.c  */
#line 2345 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 144:
/* Line 1792 of yacc.c  */
#line 2349 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 145:
/* Line 1792 of yacc.c  */
#line 2365 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 146:
/* Line 1792 of yacc.c  */
#line 2369 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 147:
/* Line 1792 of yacc.c  */
#line 2379 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
    break;

  case 148:
/* Line 1792 of yacc.c  */
#line 2384 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[(3) - (3)].lex_str).str);
         Lex->mi.channel= (yyvsp[(3) - (3)].lex_str).str;
         Lex->mi.for_channel= true;
       }
    break;

  case 149:
/* Line 1792 of yacc.c  */
#line 2400 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_create_table_stmt((yyvsp[(2) - (9)].is_not_empty), (yyvsp[(4) - (9)].is_not_empty), (yyvsp[(5) - (9)].table),
                                             (yyvsp[(7) - (9)].table_element_list),
                                             (yyvsp[(9) - (9)].create_table_tail).opt_create_table_options,
                                             (yyvsp[(9) - (9)].create_table_tail).opt_partitioning,
                                             (yyvsp[(9) - (9)].create_table_tail).on_duplicate,
                                             (yyvsp[(9) - (9)].create_table_tail).opt_query_expression);
          }
    break;

  case 150:
/* Line 1792 of yacc.c  */
#line 2410 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_create_table_stmt((yyvsp[(2) - (6)].is_not_empty), (yyvsp[(4) - (6)].is_not_empty), (yyvsp[(5) - (6)].table),
                                             NULL,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_create_table_options,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_partitioning,
                                             (yyvsp[(6) - (6)].create_table_tail).on_duplicate,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_query_expression);
          }
    break;

  case 151:
/* Line 1792 of yacc.c  */
#line 2420 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_create_table_stmt((yyvsp[(2) - (7)].is_not_empty), (yyvsp[(4) - (7)].is_not_empty), (yyvsp[(5) - (7)].table), (yyvsp[(7) - (7)].table));
          }
    break;

  case 152:
/* Line 1792 of yacc.c  */
#line 2425 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_create_table_stmt((yyvsp[(2) - (9)].is_not_empty), (yyvsp[(4) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(8) - (9)].table));
          }
    break;

  case 153:
/* Line 1792 of yacc.c  */
#line 2431 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 154:
/* Line 1792 of yacc.c  */
#line 2432 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].index_definition_stmt)); }
    break;

  case 155:
/* Line 1792 of yacc.c  */
#line 2434 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
    break;

  case 156:
/* Line 1792 of yacc.c  */
#line 2442 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info->options= (yyvsp[(3) - (6)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
    break;

  case 157:
/* Line 1792 of yacc.c  */
#line 2449 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 158:
/* Line 1792 of yacc.c  */
#line 2458 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 159:
/* Line 1792 of yacc.c  */
#line 2461 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[(3) - (8)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
    break;

  case 160:
/* Line 1792 of yacc.c  */
#line 2470 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_ROLE;
            PT_statement *tmp= NEW_PTN PT_create_role(!!(yyvsp[(3) - (5)].is_not_empty), (yyvsp[(5) - (5)].user_list));
            MAKE_CMD(tmp);
          }
    break;

  case 161:
/* Line 1792 of yacc.c  */
#line 2476 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 162:
/* Line 1792 of yacc.c  */
#line 2480 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 163:
/* Line 1792 of yacc.c  */
#line 2485 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[(3) - (11)].lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[(3) - (11)].lex_str);
            Lex->server_options.set_scheme((yyvsp[(7) - (11)].lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
    break;

  case 164:
/* Line 1792 of yacc.c  */
#line 2503 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_definition_stmt)= NEW_PTN PT_index_definition_stmt((yyvsp[(2) - (11)].key_type), (yyvsp[(4) - (11)].index_name_and_type).name, (yyvsp[(4) - (11)].index_name_and_type).type, (yyvsp[(6) - (11)].table), (yyvsp[(8) - (11)].index_column_list),
                                                 (yyvsp[(10) - (11)].index_options), (yyvsp[(11) - (11)].index_options));
          }
    break;

  case 165:
/* Line 1792 of yacc.c  */
#line 2509 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_definition_stmt)= NEW_PTN PT_index_definition_stmt(KEYTYPE_FULLTEXT, (yyvsp[(4) - (11)].lex_str), NULL,
                                                 (yyvsp[(6) - (11)].table), (yyvsp[(8) - (11)].index_column_list), (yyvsp[(10) - (11)].index_options), (yyvsp[(11) - (11)].index_options));
          }
    break;

  case 166:
/* Line 1792 of yacc.c  */
#line 2515 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_definition_stmt)= NEW_PTN PT_index_definition_stmt(KEYTYPE_SPATIAL, (yyvsp[(4) - (11)].lex_str), NULL, (yyvsp[(6) - (11)].table),
                                                 (yyvsp[(8) - (11)].index_column_list), (yyvsp[(10) - (11)].index_options), (yyvsp[(11) - (11)].index_options));
          }
    break;

  case 169:
/* Line 1792 of yacc.c  */
#line 2528 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_username((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 170:
/* Line 1792 of yacc.c  */
#line 2532 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_host((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 171:
/* Line 1792 of yacc.c  */
#line 2536 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_db((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 172:
/* Line 1792 of yacc.c  */
#line 2540 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_owner((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 173:
/* Line 1792 of yacc.c  */
#line 2544 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_password((yyvsp[(2) - (2)].lex_str));
            Lex->contains_plaintext_password= true;
          }
    break;

  case 174:
/* Line 1792 of yacc.c  */
#line 2549 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_socket((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 175:
/* Line 1792 of yacc.c  */
#line 2553 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_port((yyvsp[(2) - (2)].ulong_num));
          }
    break;

  case 176:
/* Line 1792 of yacc.c  */
#line 2560 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->create_info->options= (yyvsp[(2) - (3)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(3) - (3)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 177:
/* Line 1792 of yacc.c  */
#line 2580 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 178:
/* Line 1792 of yacc.c  */
#line 2591 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));

            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 180:
/* Line 1792 of yacc.c  */
#line 2600 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 181:
/* Line 1792 of yacc.c  */
#line 2608 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 182:
/* Line 1792 of yacc.c  */
#line 2610 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 183:
/* Line 1792 of yacc.c  */
#line 2616 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 184:
/* Line 1792 of yacc.c  */
#line 2622 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 185:
/* Line 1792 of yacc.c  */
#line 2631 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 186:
/* Line 1792 of yacc.c  */
#line 2638 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 188:
/* Line 1792 of yacc.c  */
#line 2648 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 189:
/* Line 1792 of yacc.c  */
#line 2656 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 191:
/* Line 1792 of yacc.c  */
#line 2662 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 192:
/* Line 1792 of yacc.c  */
#line 2668 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 193:
/* Line 1792 of yacc.c  */
#line 2676 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 194:
/* Line 1792 of yacc.c  */
#line 2678 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 195:
/* Line 1792 of yacc.c  */
#line 2685 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[(0) - (0)]).cpp.end);
          }
    break;

  case 196:
/* Line 1792 of yacc.c  */
#line 2731 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 210:
/* Line 1792 of yacc.c  */
#line 2760 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex->db= NULL;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           lex->alter_password.update_account_locked_column= false;
           lex->alter_password.account_locked= false;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
    break;

  case 211:
/* Line 1792 of yacc.c  */
#line 2777 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->alter_password.update_password_expired_fields= false;
           lex->alter_password.update_password_expired_column= false;
           lex->alter_password.use_default_password_lifetime= true;
           lex->alter_password.expire_after_days= 0;
         }
    break;

  case 212:
/* Line 1792 of yacc.c  */
#line 2788 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 213:
/* Line 1792 of yacc.c  */
#line 2802 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (sp_check_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(to_lex_cstring(db), (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 214:
/* Line 1792 of yacc.c  */
#line 2820 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 215:
/* Line 1792 of yacc.c  */
#line 2821 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 216:
/* Line 1792 of yacc.c  */
#line 2825 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 217:
/* Line 1792 of yacc.c  */
#line 2826 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 218:
/* Line 1792 of yacc.c  */
#line 2832 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[(2) - (2)].lex_str)); }
    break;

  case 219:
/* Line 1792 of yacc.c  */
#line 2834 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 220:
/* Line 1792 of yacc.c  */
#line 2836 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 221:
/* Line 1792 of yacc.c  */
#line 2838 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 222:
/* Line 1792 of yacc.c  */
#line 2840 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 223:
/* Line 1792 of yacc.c  */
#line 2842 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 224:
/* Line 1792 of yacc.c  */
#line 2844 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 225:
/* Line 1792 of yacc.c  */
#line 2849 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 226:
/* Line 1792 of yacc.c  */
#line 2850 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 227:
/* Line 1792 of yacc.c  */
#line 2851 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 228:
/* Line 1792 of yacc.c  */
#line 2856 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 229:
/* Line 1792 of yacc.c  */
#line 2860 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 230:
/* Line 1792 of yacc.c  */
#line 2867 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[(2) - (2)].spname);
            lex->call_value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[(2) - (2)].spname), enum_sp_type::PROCEDURE);
          }
    break;

  case 231:
/* Line 1792 of yacc.c  */
#line 2875 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 236:
/* Line 1792 of yacc.c  */
#line 2891 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

           Lex->call_value_list.push_back((yyvsp[(3) - (3)].item));
          }
    break;

  case 237:
/* Line 1792 of yacc.c  */
#line 2897 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            Lex->call_value_list.push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 242:
/* Line 1792 of yacc.c  */
#line 2917 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[(2) - (3)].type));
            enum_field_types field_type= (yyvsp[(2) - (3)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(2) - (3)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(3) - (3)].charset)))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[(1) - (3)].lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(1) - (3)].lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[(2) - (3)].type)->get_length(), (yyvsp[(2) - (3)].type)->get_dec(),
                                      (yyvsp[(2) - (3)].type)->get_type_flags(),
                                      NULL, NULL, &NULL_STR, 0,
                                      (yyvsp[(2) - (3)].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[(2) - (3)].type)->get_uint_geom_type(), NULL))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        field_type,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
    break;

  case 247:
/* Line 1792 of yacc.c  */
#line 2978 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[(2) - (4)].lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[(2) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(2) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[(3) - (4)].type));
            enum_field_types field_type= (yyvsp[(3) - (4)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(3) - (4)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(4) - (4)].charset)))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(2) - (4)].lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[(3) - (4)].type)->get_length(), (yyvsp[(3) - (4)].type)->get_dec(),
                                      (yyvsp[(3) - (4)].type)->get_type_flags(),
                                      NULL, NULL, &NULL_STR, 0,
                                      (yyvsp[(3) - (4)].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[(3) - (4)].type)->get_uint_geom_type(), NULL))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        field_type,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
    break;

  case 248:
/* Line 1792 of yacc.c  */
#line 3026 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 249:
/* Line 1792 of yacc.c  */
#line 3027 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 250:
/* Line 1792 of yacc.c  */
#line 3028 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 251:
/* Line 1792 of yacc.c  */
#line 3029 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 252:
/* Line 1792 of yacc.c  */
#line 3033 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 254:
/* Line 1792 of yacc.c  */
#line 3038 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 256:
/* Line 1792 of yacc.c  */
#line 3044 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 257:
/* Line 1792 of yacc.c  */
#line 3048 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 258:
/* Line 1792 of yacc.c  */
#line 3076 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[(2) - (5)].num));

            CONTEXTUALIZE((yyvsp[(3) - (5)].type));
            enum enum_field_types var_type= (yyvsp[(3) - (5)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(3) - (5)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(4) - (5)].charset)))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[(5) - (5)].sp_default).expr;

            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[(5) - (5)].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[(5) - (5)]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[(3) - (5)].type)->get_length(), (yyvsp[(3) - (5)].type)->get_dec(),
                                        (yyvsp[(3) - (5)].type)->get_type_flags(),
                                        NULL, NULL, &NULL_STR, 0,
                                        (yyvsp[(3) - (5)].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[(3) - (5)].type)->get_uint_geom_type(), NULL))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, var_type, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.maybe_null= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 259:
/* Line 1792 of yacc.c  */
#line 3169 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 260:
/* Line 1792 of yacc.c  */
#line 3186 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
    break;

  case 261:
/* Line 1792 of yacc.c  */
#line 3227 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 262:
/* Line 1792 of yacc.c  */
#line 3264 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[(4) - (4)]).raw.end);
          }
    break;

  case 263:
/* Line 1792 of yacc.c  */
#line 3273 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {             /*$7*/
            CONTEXTUALIZE((yyvsp[(6) - (6)].select_stmt));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[(2) - (6)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (6)].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(6) - (6)]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[(2) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 264:
/* Line 1792 of yacc.c  */
#line 3336 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 265:
/* Line 1792 of yacc.c  */
#line 3337 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 266:
/* Line 1792 of yacc.c  */
#line 3343 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 267:
/* Line 1792 of yacc.c  */
#line 3345 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 268:
/* Line 1792 of yacc.c  */
#line 3350 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 269:
/* Line 1792 of yacc.c  */
#line 3373 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 271:
/* Line 1792 of yacc.c  */
#line 3388 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 272:
/* Line 1792 of yacc.c  */
#line 3409 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 273:
/* Line 1792 of yacc.c  */
#line 3410 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 274:
/* Line 1792 of yacc.c  */
#line 3415 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 275:
/* Line 1792 of yacc.c  */
#line 3419 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 276:
/* Line 1792 of yacc.c  */
#line 3432 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 277:
/* Line 1792 of yacc.c  */
#line 3438 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 278:
/* Line 1792 of yacc.c  */
#line 3444 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 279:
/* Line 1792 of yacc.c  */
#line 3453 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 280:
/* Line 1792 of yacc.c  */
#line 3466 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 281:
/* Line 1792 of yacc.c  */
#line 3492 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 282:
/* Line 1792 of yacc.c  */
#line 3497 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 283:
/* Line 1792 of yacc.c  */
#line 3499 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 284:
/* Line 1792 of yacc.c  */
#line 3504 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
    break;

  case 285:
/* Line 1792 of yacc.c  */
#line 3506 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= (yyvsp[(2) - (2)].signal_item_list); }
    break;

  case 286:
/* Line 1792 of yacc.c  */
#line 3511 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[(1) - (3)].da_condition_item_name), (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 287:
/* Line 1792 of yacc.c  */
#line 3518 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= (yyvsp[(1) - (5)].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[(3) - (5)].da_condition_item_name), (yyvsp[(5) - (5)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 288:
/* Line 1792 of yacc.c  */
#line 3530 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 289:
/* Line 1792 of yacc.c  */
#line 3532 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 290:
/* Line 1792 of yacc.c  */
#line 3552 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 291:
/* Line 1792 of yacc.c  */
#line 3558 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
    break;

  case 292:
/* Line 1792 of yacc.c  */
#line 3560 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
    break;

  case 293:
/* Line 1792 of yacc.c  */
#line 3562 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
    break;

  case 294:
/* Line 1792 of yacc.c  */
#line 3564 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
    break;

  case 295:
/* Line 1792 of yacc.c  */
#line 3566 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
    break;

  case 296:
/* Line 1792 of yacc.c  */
#line 3568 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
    break;

  case 297:
/* Line 1792 of yacc.c  */
#line 3570 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
    break;

  case 298:
/* Line 1792 of yacc.c  */
#line 3572 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
    break;

  case 299:
/* Line 1792 of yacc.c  */
#line 3574 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
    break;

  case 300:
/* Line 1792 of yacc.c  */
#line 3576 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
    break;

  case 301:
/* Line 1792 of yacc.c  */
#line 3578 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
    break;

  case 302:
/* Line 1792 of yacc.c  */
#line 3580 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
    break;

  case 303:
/* Line 1792 of yacc.c  */
#line 3585 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 304:
/* Line 1792 of yacc.c  */
#line 3599 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 305:
/* Line 1792 of yacc.c  */
#line 3615 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 306:
/* Line 1792 of yacc.c  */
#line 3617 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 307:
/* Line 1792 of yacc.c  */
#line 3619 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
    break;

  case 308:
/* Line 1792 of yacc.c  */
#line 3624 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 309:
/* Line 1792 of yacc.c  */
#line 3630 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 310:
/* Line 1792 of yacc.c  */
#line 3639 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 311:
/* Line 1792 of yacc.c  */
#line 3645 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 312:
/* Line 1792 of yacc.c  */
#line 3654 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 313:
/* Line 1792 of yacc.c  */
#line 3662 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[(1) - (1)].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[(1) - (1)]).raw.start,
                (yylsp[(1) - (1)]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 314:
/* Line 1792 of yacc.c  */
#line 3690 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[(2) - (2)].lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
    break;

  case 315:
/* Line 1792 of yacc.c  */
#line 3698 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 316:
/* Line 1792 of yacc.c  */
#line 3700 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 317:
/* Line 1792 of yacc.c  */
#line 3709 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 318:
/* Line 1792 of yacc.c  */
#line 3714 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 319:
/* Line 1792 of yacc.c  */
#line 3720 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 320:
/* Line 1792 of yacc.c  */
#line 3729 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 321:
/* Line 1792 of yacc.c  */
#line 3737 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 322:
/* Line 1792 of yacc.c  */
#line 3739 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 323:
/* Line 1792 of yacc.c  */
#line 3741 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 324:
/* Line 1792 of yacc.c  */
#line 3743 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 325:
/* Line 1792 of yacc.c  */
#line 3745 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 326:
/* Line 1792 of yacc.c  */
#line 3747 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 327:
/* Line 1792 of yacc.c  */
#line 3749 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 328:
/* Line 1792 of yacc.c  */
#line 3751 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 329:
/* Line 1792 of yacc.c  */
#line 3753 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 330:
/* Line 1792 of yacc.c  */
#line 3755 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 331:
/* Line 1792 of yacc.c  */
#line 3757 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 332:
/* Line 1792 of yacc.c  */
#line 3759 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 333:
/* Line 1792 of yacc.c  */
#line 3761 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 334:
/* Line 1792 of yacc.c  */
#line 3766 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(1) - (1)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 335:
/* Line 1792 of yacc.c  */
#line 3786 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(3) - (3)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 336:
/* Line 1792 of yacc.c  */
#line 3809 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
    break;

  case 337:
/* Line 1792 of yacc.c  */
#line 3814 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.sp_default).expr_start= (yylsp[(1) - (2)]).raw.end;
            (yyval.sp_default).expr= (yyvsp[(2) - (2)].item);
          }
    break;

  case 351:
/* Line 1792 of yacc.c  */
#line 3838 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
    break;

  case 352:
/* Line 1792 of yacc.c  */
#line 3840 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 353:
/* Line 1792 of yacc.c  */
#line 3848 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
    break;

  case 354:
/* Line 1792 of yacc.c  */
#line 3857 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(2) - (2)]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 355:
/* Line 1792 of yacc.c  */
#line 3905 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 356:
/* Line 1792 of yacc.c  */
#line 3913 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;

            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 357:
/* Line 1792 of yacc.c  */
#line 3961 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
    break;

  case 358:
/* Line 1792 of yacc.c  */
#line 3972 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 359:
/* Line 1792 of yacc.c  */
#line 3984 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 360:
/* Line 1792 of yacc.c  */
#line 4041 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 361:
/* Line 1792 of yacc.c  */
#line 4088 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 362:
/* Line 1792 of yacc.c  */
#line 4111 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 363:
/* Line 1792 of yacc.c  */
#line 4131 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 364:
/* Line 1792 of yacc.c  */
#line 4136 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 368:
/* Line 1792 of yacc.c  */
#line 4165 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 369:
/* Line 1792 of yacc.c  */
#line 4183 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 370:
/* Line 1792 of yacc.c  */
#line 4203 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 371:
/* Line 1792 of yacc.c  */
#line 4211 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(0) - (2)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(2) - (2)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[(2) - (2)].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 372:
/* Line 1792 of yacc.c  */
#line 4249 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
    break;

  case 373:
/* Line 1792 of yacc.c  */
#line 4267 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 379:
/* Line 1792 of yacc.c  */
#line 4290 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
    break;

  case 380:
/* Line 1792 of yacc.c  */
#line 4300 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[(3) - (3)].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 381:
/* Line 1792 of yacc.c  */
#line 4345 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
    break;

  case 382:
/* Line 1792 of yacc.c  */
#line 4352 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_case(YYTHD);
          }
    break;

  case 383:
/* Line 1792 of yacc.c  */
#line 4359 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_end_case(Lex, false);
          }
    break;

  case 388:
/* Line 1792 of yacc.c  */
#line 4376 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 389:
/* Line 1792 of yacc.c  */
#line 4384 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[(3) - (3)].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 390:
/* Line 1792 of yacc.c  */
#line 4426 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 391:
/* Line 1792 of yacc.c  */
#line 4434 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 392:
/* Line 1792 of yacc.c  */
#line 4442 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 393:
/* Line 1792 of yacc.c  */
#line 4480 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 394:
/* Line 1792 of yacc.c  */
#line 4488 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 396:
/* Line 1792 of yacc.c  */
#line 4506 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 397:
/* Line 1792 of yacc.c  */
#line 4524 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
    break;

  case 398:
/* Line 1792 of yacc.c  */
#line 4543 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 399:
/* Line 1792 of yacc.c  */
#line 4544 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 400:
/* Line 1792 of yacc.c  */
#line 4549 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 401:
/* Line 1792 of yacc.c  */
#line 4565 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 402:
/* Line 1792 of yacc.c  */
#line 4582 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
    break;

  case 403:
/* Line 1792 of yacc.c  */
#line 4593 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
    break;

  case 404:
/* Line 1792 of yacc.c  */
#line 4601 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
    break;

  case 405:
/* Line 1792 of yacc.c  */
#line 4616 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[(3) - (5)].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
    break;

  case 406:
/* Line 1792 of yacc.c  */
#line 4650 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 407:
/* Line 1792 of yacc.c  */
#line 4663 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 408:
/* Line 1792 of yacc.c  */
#line 4671 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 409:
/* Line 1792 of yacc.c  */
#line 4712 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 410:
/* Line 1792 of yacc.c  */
#line 4729 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 411:
/* Line 1792 of yacc.c  */
#line 4737 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                             /*$6*/
            ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(3) - (5)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(5) - (5)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[(5) - (5)].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
    break;

  case 413:
/* Line 1792 of yacc.c  */
#line 4780 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_BEFORE; }
    break;

  case 414:
/* Line 1792 of yacc.c  */
#line 4782 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_AFTER; }
    break;

  case 415:
/* Line 1792 of yacc.c  */
#line 4787 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_INSERT; }
    break;

  case 416:
/* Line 1792 of yacc.c  */
#line 4789 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_UPDATE; }
    break;

  case 417:
/* Line 1792 of yacc.c  */
#line 4791 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_DELETE; }
    break;

  case 421:
/* Line 1792 of yacc.c  */
#line 4825 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 422:
/* Line 1792 of yacc.c  */
#line 4827 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 423:
/* Line 1792 of yacc.c  */
#line 4837 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE;
          }
    break;

  case 424:
/* Line 1792 of yacc.c  */
#line 4843 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE;
          }
    break;

  case 429:
/* Line 1792 of yacc.c  */
#line 4866 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 477:
/* Line 1792 of yacc.c  */
#line 4961 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 478:
/* Line 1792 of yacc.c  */
#line 4969 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 479:
/* Line 1792 of yacc.c  */
#line 4977 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 480:
/* Line 1792 of yacc.c  */
#line 4985 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 481:
/* Line 1792 of yacc.c  */
#line 4997 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 482:
/* Line 1792 of yacc.c  */
#line 5009 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 483:
/* Line 1792 of yacc.c  */
#line 5014 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 484:
/* Line 1792 of yacc.c  */
#line 5019 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 485:
/* Line 1792 of yacc.c  */
#line 5027 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 486:
/* Line 1792 of yacc.c  */
#line 5035 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 487:
/* Line 1792 of yacc.c  */
#line 5043 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 488:
/* Line 1792 of yacc.c  */
#line 5051 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 489:
/* Line 1792 of yacc.c  */
#line 5059 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 490:
/* Line 1792 of yacc.c  */
#line 5067 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 491:
/* Line 1792 of yacc.c  */
#line 5075 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 492:
/* Line 1792 of yacc.c  */
#line 5088 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 493:
/* Line 1792 of yacc.c  */
#line 5101 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            if (resolve_engine(YYTHD, (yyvsp[(4) - (4)].lex_str), false, false,
                  &lex->alter_tablespace_info->storage_engine))
              MYSQL_YYABORT;
          }
    break;

  case 494:
/* Line 1792 of yacc.c  */
#line 5117 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->file_block_size != 0)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "FILE_BLOCK_SIZE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->file_block_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 495:
/* Line 1792 of yacc.c  */
#line 5131 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 496:
/* Line 1792 of yacc.c  */
#line 5136 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 497:
/* Line 1792 of yacc.c  */
#line 5148 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulonglong_number);}
    break;

  case 498:
/* Line 1792 of yacc.c  */
#line 5150 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            size_t str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 499:
/* Line 1792 of yacc.c  */
#line 5224 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail)= (yyvsp[(2) - (2)].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[(1) - (2)].create_table_options);
          }
    break;

  case 501:
/* Line 1792 of yacc.c  */
#line 5233 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail)= (yyvsp[(2) - (2)].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[(1) - (2)].partition_clause);
          }
    break;

  case 503:
/* Line 1792 of yacc.c  */
#line 5242 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
    break;

  case 504:
/* Line 1792 of yacc.c  */
#line 5250 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[(1) - (2)].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[(2) - (2)].query_expression);
          }
    break;

  case 505:
/* Line 1792 of yacc.c  */
#line 5257 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[(1) - (1)].query_expression);
          }
    break;

  case 506:
/* Line 1792 of yacc.c  */
#line 5266 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.query_expression)= (yyvsp[(2) - (2)].query_expression); }
    break;

  case 508:
/* Line 1792 of yacc.c  */
#line 5283 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[(3) - (6)].part_type_def), (yyvsp[(4) - (6)].ulong_num), (yyvsp[(5) - (6)].opt_sub_part), (yylsp[(6) - (6)]), (yyvsp[(6) - (6)].part_def_list));
          }
    break;

  case 509:
/* Line 1792 of yacc.c  */
#line 5290 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[(1) - (6)].is_not_empty), (yyvsp[(3) - (6)].opt_key_algo), (yyvsp[(5) - (6)].name_list));
          }
    break;

  case 510:
/* Line 1792 of yacc.c  */
#line 5294 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[(1) - (5)].is_not_empty), (yylsp[(4) - (5)]), (yyvsp[(4) - (5)].item));
          }
    break;

  case 511:
/* Line 1792 of yacc.c  */
#line 5298 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[(3) - (4)]), (yyvsp[(3) - (4)].item));
          }
    break;

  case 512:
/* Line 1792 of yacc.c  */
#line 5302 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[(4) - (5)].name_list));
          }
    break;

  case 513:
/* Line 1792 of yacc.c  */
#line 5306 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[(3) - (4)]), (yyvsp[(3) - (4)].item));
          }
    break;

  case 514:
/* Line 1792 of yacc.c  */
#line 5310 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[(4) - (5)].name_list));
          }
    break;

  case 515:
/* Line 1792 of yacc.c  */
#line 5316 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 516:
/* Line 1792 of yacc.c  */
#line 5317 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 517:
/* Line 1792 of yacc.c  */
#line 5322 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
    break;

  case 518:
/* Line 1792 of yacc.c  */
#line 5324 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            switch ((yyvsp[(3) - (3)].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 519:
/* Line 1792 of yacc.c  */
#line 5341 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 520:
/* Line 1792 of yacc.c  */
#line 5343 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 521:
/* Line 1792 of yacc.c  */
#line 5354 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_sub_part)= NULL; }
    break;

  case 522:
/* Line 1792 of yacc.c  */
#line 5357 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[(3) - (8)].is_not_empty), (yylsp[(6) - (8)]), (yyvsp[(6) - (8)].item), (yyvsp[(8) - (8)].ulong_num));
          }
    break;

  case 523:
/* Line 1792 of yacc.c  */
#line 5362 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].opt_key_algo), (yyvsp[(7) - (9)].name_list), (yyvsp[(9) - (9)].ulong_num));
          }
    break;

  case 524:
/* Line 1792 of yacc.c  */
#line 5369 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.name_list)= NULL; }
    break;

  case 526:
/* Line 1792 of yacc.c  */
#line 5376 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[(1) - (1)].lex_str).str))
              MYSQL_YYABORT;
          }
    break;

  case 527:
/* Line 1792 of yacc.c  */
#line 5382 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.name_list)= (yyvsp[(1) - (3)].name_list);
            if ((yyval.name_list)->push_back((yyvsp[(3) - (3)].lex_str).str))
              MYSQL_YYABORT;
          }
    break;

  case 528:
/* Line 1792 of yacc.c  */
#line 5391 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 529:
/* Line 1792 of yacc.c  */
#line 5393 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 530:
/* Line 1792 of yacc.c  */
#line 5404 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.part_def_list)= NULL; }
    break;

  case 531:
/* Line 1792 of yacc.c  */
#line 5405 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.part_def_list)= (yyvsp[(2) - (3)].part_def_list); }
    break;

  case 532:
/* Line 1792 of yacc.c  */
#line 5410 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_def_list)= NEW_PTN Trivial_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[(1) - (1)].part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 533:
/* Line 1792 of yacc.c  */
#line 5416 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_def_list)= (yyvsp[(1) - (3)].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[(3) - (3)].part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 534:
/* Line 1792 of yacc.c  */
#line 5425 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[(0) - (5)]), (yyvsp[(2) - (5)].lex_str), (yyvsp[(3) - (5)].opt_part_values).type, (yyvsp[(3) - (5)].opt_part_values).values, (yylsp[(3) - (5)]),
                                           (yyvsp[(4) - (5)].partition_option_list), (yyvsp[(5) - (5)].sub_part_list), (yylsp[(5) - (5)]));
          }
    break;

  case 535:
/* Line 1792 of yacc.c  */
#line 5433 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
    break;

  case 536:
/* Line 1792 of yacc.c  */
#line 5437 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[(4) - (4)].part_value_item_list_paren);
          }
    break;

  case 537:
/* Line 1792 of yacc.c  */
#line 5442 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[(3) - (3)].part_values);
          }
    break;

  case 538:
/* Line 1792 of yacc.c  */
#line 5449 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.part_value_item_list_paren)= NULL; }
    break;

  case 540:
/* Line 1792 of yacc.c  */
#line 5455 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].part_value_item_list_paren));
          }
    break;

  case 541:
/* Line 1792 of yacc.c  */
#line 5459 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[(3) - (3)]), (yyvsp[(2) - (3)].part_value_list));
          }
    break;

  case 542:
/* Line 1792 of yacc.c  */
#line 5466 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_list)= NEW_PTN
              Trivial_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[(1) - (1)].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 543:
/* Line 1792 of yacc.c  */
#line 5473 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_list)= (yyvsp[(1) - (3)].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[(3) - (3)].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 544:
/* Line 1792 of yacc.c  */
#line 5482 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
    break;

  case 545:
/* Line 1792 of yacc.c  */
#line 5493 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[(3) - (4)].part_value_item_list), (yylsp[(4) - (4)]));
          }
    break;

  case 546:
/* Line 1792 of yacc.c  */
#line 5500 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_item_list)= NEW_PTN Trivial_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[(1) - (1)].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 547:
/* Line 1792 of yacc.c  */
#line 5506 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_item_list)= (yyvsp[(1) - (3)].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[(3) - (3)].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 548:
/* Line 1792 of yacc.c  */
#line 5514 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[(1) - (1)])); }
    break;

  case 549:
/* Line 1792 of yacc.c  */
#line 5515 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].item)); }
    break;

  case 550:
/* Line 1792 of yacc.c  */
#line 5520 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.sub_part_list)= NULL; }
    break;

  case 551:
/* Line 1792 of yacc.c  */
#line 5521 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.sub_part_list)= (yyvsp[(2) - (3)].sub_part_list); }
    break;

  case 552:
/* Line 1792 of yacc.c  */
#line 5526 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.sub_part_list)= NEW_PTN Trivial_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[(1) - (1)].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 553:
/* Line 1792 of yacc.c  */
#line 5532 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.sub_part_list)= (yyvsp[(1) - (3)].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[(3) - (3)].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 554:
/* Line 1792 of yacc.c  */
#line 5541 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[(1) - (3)]), (yyvsp[(2) - (3)].lex_str).str, (yyvsp[(3) - (3)].partition_option_list));
          }
    break;

  case 555:
/* Line 1792 of yacc.c  */
#line 5547 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option_list)= NULL; }
    break;

  case 557:
/* Line 1792 of yacc.c  */
#line 5553 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.partition_option_list)= (yyvsp[(1) - (2)].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[(2) - (2)].partition_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 558:
/* Line 1792 of yacc.c  */
#line 5559 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.partition_option_list)= NEW_PTN Trivial_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[(1) - (1)].partition_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 559:
/* Line 1792 of yacc.c  */
#line 5568 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[(3) - (3)].lex_str).str); }
    break;

  case 560:
/* Line 1792 of yacc.c  */
#line 5570 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_engine((yyvsp[(4) - (4)].lex_str)); }
    break;

  case 561:
/* Line 1792 of yacc.c  */
#line 5572 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[(3) - (3)].ulong_num)); }
    break;

  case 562:
/* Line 1792 of yacc.c  */
#line 5574 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[(3) - (3)].ulonglong_number)); }
    break;

  case 563:
/* Line 1792 of yacc.c  */
#line 5576 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[(3) - (3)].ulonglong_number)); }
    break;

  case 564:
/* Line 1792 of yacc.c  */
#line 5578 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[(4) - (4)].lex_str).str); }
    break;

  case 565:
/* Line 1792 of yacc.c  */
#line 5580 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[(4) - (4)].lex_str).str); }
    break;

  case 566:
/* Line 1792 of yacc.c  */
#line 5582 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[(3) - (3)].lex_str).str); }
    break;

  case 567:
/* Line 1792 of yacc.c  */
#line 5590 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 568:
/* Line 1792 of yacc.c  */
#line 5591 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 569:
/* Line 1792 of yacc.c  */
#line 5595 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 570:
/* Line 1792 of yacc.c  */
#line 5596 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 571:
/* Line 1792 of yacc.c  */
#line 5600 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].create_table_option)); }
    break;

  case 572:
/* Line 1792 of yacc.c  */
#line 5601 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].create_table_option)); }
    break;

  case 573:
/* Line 1792 of yacc.c  */
#line 5605 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 574:
/* Line 1792 of yacc.c  */
#line 5606 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 575:
/* Line 1792 of yacc.c  */
#line 5611 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_options)= NEW_PTN Trivial_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[(1) - (1)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 576:
/* Line 1792 of yacc.c  */
#line 5617 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_options)= (yyvsp[(1) - (2)].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[(2) - (2)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 577:
/* Line 1792 of yacc.c  */
#line 5626 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_options)= NEW_PTN Trivial_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[(1) - (1)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 578:
/* Line 1792 of yacc.c  */
#line 5632 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_options)= (yyvsp[(1) - (3)].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[(3) - (3)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 581:
/* Line 1792 of yacc.c  */
#line 5646 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 582:
/* Line 1792 of yacc.c  */
#line 5650 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 583:
/* Line 1792 of yacc.c  */
#line 5654 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 584:
/* Line 1792 of yacc.c  */
#line 5658 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 585:
/* Line 1792 of yacc.c  */
#line 5662 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 586:
/* Line 1792 of yacc.c  */
#line 5666 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 587:
/* Line 1792 of yacc.c  */
#line 5670 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[(3) - (3)].lex_str));
	  }
    break;

  case 588:
/* Line 1792 of yacc.c  */
#line 5674 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[(3) - (3)].lex_str));
	  }
    break;

  case 589:
/* Line 1792 of yacc.c  */
#line 5678 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 590:
/* Line 1792 of yacc.c  */
#line 5682 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 591:
/* Line 1792 of yacc.c  */
#line 5686 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 592:
/* Line 1792 of yacc.c  */
#line 5690 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 593:
/* Line 1792 of yacc.c  */
#line 5694 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[(3) - (3)].ulong_num) == 0 || (yyvsp[(3) - (3)].ulong_num) > 0xffff)
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 594:
/* Line 1792 of yacc.c  */
#line 5711 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
    break;

  case 595:
/* Line 1792 of yacc.c  */
#line 5715 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 596:
/* Line 1792 of yacc.c  */
#line 5719 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 597:
/* Line 1792 of yacc.c  */
#line 5723 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 598:
/* Line 1792 of yacc.c  */
#line 5727 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[(3) - (3)].row_type));
          }
    break;

  case 599:
/* Line 1792 of yacc.c  */
#line 5731 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[(4) - (5)].table_list));
          }
    break;

  case 602:
/* Line 1792 of yacc.c  */
#line 5737 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 603:
/* Line 1792 of yacc.c  */
#line 5741 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 604:
/* Line 1792 of yacc.c  */
#line 5745 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 605:
/* Line 1792 of yacc.c  */
#line 5749 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 606:
/* Line 1792 of yacc.c  */
#line 5753 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
    break;

  case 607:
/* Line 1792 of yacc.c  */
#line 5757 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
    break;

  case 608:
/* Line 1792 of yacc.c  */
#line 5761 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 609:
/* Line 1792 of yacc.c  */
#line 5765 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 610:
/* Line 1792 of yacc.c  */
#line 5772 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(1) - (1)].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
          }
    break;

  case 611:
/* Line 1792 of yacc.c  */
#line 5785 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
    break;

  case 612:
/* Line 1792 of yacc.c  */
#line 5790 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[(4) - (4)].charset));
          }
    break;

  case 613:
/* Line 1792 of yacc.c  */
#line 5797 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[(4) - (4)].charset));
          }
    break;

  case 614:
/* Line 1792 of yacc.c  */
#line 5803 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 615:
/* Line 1792 of yacc.c  */
#line 5804 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 616:
/* Line 1792 of yacc.c  */
#line 5805 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 617:
/* Line 1792 of yacc.c  */
#line 5806 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 618:
/* Line 1792 of yacc.c  */
#line 5807 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 619:
/* Line 1792 of yacc.c  */
#line 5808 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 620:
/* Line 1792 of yacc.c  */
#line 5812 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 621:
/* Line 1792 of yacc.c  */
#line 5813 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 622:
/* Line 1792 of yacc.c  */
#line 5814 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 623:
/* Line 1792 of yacc.c  */
#line 5818 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 624:
/* Line 1792 of yacc.c  */
#line 5819 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 625:
/* Line 1792 of yacc.c  */
#line 5820 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 626:
/* Line 1792 of yacc.c  */
#line 5821 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 627:
/* Line 1792 of yacc.c  */
#line 5826 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_element_list)= NEW_PTN Trivial_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[(1) - (1)].table_element)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 628:
/* Line 1792 of yacc.c  */
#line 5832 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_element_list)= (yyvsp[(1) - (3)].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[(3) - (3)].table_element)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 629:
/* Line 1792 of yacc.c  */
#line 5840 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_element)= (yyvsp[(1) - (1)].column_def); }
    break;

  case 630:
/* Line 1792 of yacc.c  */
#line 5841 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_element)= (yyvsp[(1) - (1)].table_constraint_def); }
    break;

  case 631:
/* Line 1792 of yacc.c  */
#line 5846 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[(1) - (3)].field_ident), (yyvsp[(2) - (3)].field_def), (yyvsp[(3) - (3)].check_constraint));
          }
    break;

  case 632:
/* Line 1792 of yacc.c  */
#line 5852 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.check_constraint)= NULL; }
    break;

  case 633:
/* Line 1792 of yacc.c  */
#line 5854 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              Currently we ignore the CHECK clause.

              Return expression for syntax validation purposes only:
            */
            (yyval.check_constraint)= (yyvsp[(1) - (1)].check_constraint);
          }
    break;

  case 634:
/* Line 1792 of yacc.c  */
#line 5863 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* Currently we ignore FK references here: */
            (yyval.check_constraint)= NULL;
          }
    break;

  case 635:
/* Line 1792 of yacc.c  */
#line 5872 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[(1) - (6)].key_type), (yyvsp[(2) - (6)].index_name_and_type).name, (yyvsp[(2) - (6)].index_name_and_type).type, (yyvsp[(4) - (6)].index_column_list),
                                                   (yyvsp[(6) - (6)].index_options));
          }
    break;

  case 636:
/* Line 1792 of yacc.c  */
#line 5878 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[(3) - (7)].field_ident), NULL,
                                                   (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 637:
/* Line 1792 of yacc.c  */
#line 5884 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[(1) - (7)].key_type), (yyvsp[(3) - (7)].field_ident), NULL, (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 638:
/* Line 1792 of yacc.c  */
#line 5889 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            PT_field_ident *name= (yyvsp[(3) - (7)].index_name_and_type).name != NULL ? (yyvsp[(3) - (7)].index_name_and_type).name : (yyvsp[(1) - (7)].field_ident);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[(2) - (7)].key_type), name, (yyvsp[(3) - (7)].index_name_and_type).type, (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 639:
/* Line 1792 of yacc.c  */
#line 5898 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[(1) - (8)].field_ident), (yyvsp[(4) - (8)].field_ident), (yyvsp[(6) - (8)].index_column_list), (yyvsp[(8) - (8)].fk_references).table_name,
                                                  (yyvsp[(8) - (8)].fk_references).reference_list,
                                                  (yyvsp[(8) - (8)].fk_references).fk_match_option,
                                                  (yyvsp[(8) - (8)].fk_references).fk_update_opt,
                                                  (yyvsp[(8) - (8)].fk_references).fk_delete_opt);
          }
    break;

  case 640:
/* Line 1792 of yacc.c  */
#line 5906 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= (yyvsp[(2) - (2)].check_constraint);
          }
    break;

  case 641:
/* Line 1792 of yacc.c  */
#line 5913 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              Currently we ignore CHECK clauses in the query executor.

              Return expression for syntax validation purposes only:
            */
            (yyval.check_constraint)= NEW_PTN PT_check_constraint((yyvsp[(3) - (4)].item));
          }
    break;

  case 642:
/* Line 1792 of yacc.c  */
#line 5924 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.field_ident)= NULL; }
    break;

  case 644:
/* Line 1792 of yacc.c  */
#line 5929 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.field_ident)=(yyvsp[(2) - (2)].field_ident); }
    break;

  case 645:
/* Line 1792 of yacc.c  */
#line 5934 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[(1) - (2)].type), (yyvsp[(2) - (2)].col_attr_list));
          }
    break;

  case 646:
/* Line 1792 of yacc.c  */
#line 5940 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            auto *opt_attrs= (yyvsp[(9) - (9)].col_attr_list);
            if ((yyvsp[(2) - (9)].col_attr) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Trivial_array<PT_column_attr_base *>(YYMEM_ROOT);
                if (opt_attrs == NULL)
                  MYSQL_YYABORT; // OOM
              }
              if (opt_attrs->push_back((yyvsp[(2) - (9)].col_attr)))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[(1) - (9)].type), (yyvsp[(6) - (9)].item), (yyvsp[(8) - (9)].virtual_or_stored), opt_attrs);
          }
    break;

  case 649:
/* Line 1792 of yacc.c  */
#line 5964 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
    break;

  case 650:
/* Line 1792 of yacc.c  */
#line 5965 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
    break;

  case 651:
/* Line 1792 of yacc.c  */
#line 5966 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
    break;

  case 652:
/* Line 1792 of yacc.c  */
#line 5971 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[(1) - (3)].int_type), (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 653:
/* Line 1792 of yacc.c  */
#line 5975 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[(1) - (3)].numeric_type), (yyvsp[(2) - (3)].precision).length, (yyvsp[(2) - (3)].precision).dec, (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 654:
/* Line 1792 of yacc.c  */
#line 5979 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[(1) - (3)].numeric_type), (yyvsp[(2) - (3)].precision).length, (yyvsp[(2) - (3)].precision).dec, (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 655:
/* Line 1792 of yacc.c  */
#line 5983 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
    break;

  case 656:
/* Line 1792 of yacc.c  */
#line 5987 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 657:
/* Line 1792 of yacc.c  */
#line 5991 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
    break;

  case 658:
/* Line 1792 of yacc.c  */
#line 5995 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
    break;

  case 659:
/* Line 1792 of yacc.c  */
#line 5999 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 660:
/* Line 1792 of yacc.c  */
#line 6004 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 661:
/* Line 1792 of yacc.c  */
#line 6009 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(3) - (3)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (3)].c_str), cs);
          }
    break;

  case 662:
/* Line 1792 of yacc.c  */
#line 6017 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(2) - (2)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
          }
    break;

  case 663:
/* Line 1792 of yacc.c  */
#line 6025 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (2)].c_str), &my_charset_bin);
          }
    break;

  case 664:
/* Line 1792 of yacc.c  */
#line 6029 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
    break;

  case 665:
/* Line 1792 of yacc.c  */
#line 6033 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 666:
/* Line 1792 of yacc.c  */
#line 6038 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(3) - (3)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (3)].c_str), cs);
          }
    break;

  case 667:
/* Line 1792 of yacc.c  */
#line 6046 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (2)].c_str), &my_charset_bin);
          }
    break;

  case 668:
/* Line 1792 of yacc.c  */
#line 6050 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (3)].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[(2) - (3)].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
    break;

  case 669:
/* Line 1792 of yacc.c  */
#line 6066 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
    break;

  case 670:
/* Line 1792 of yacc.c  */
#line 6070 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[(2) - (2)].c_str));
          }
    break;

  case 671:
/* Line 1792 of yacc.c  */
#line 6074 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[(2) - (2)].c_str));
            else
              (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 672:
/* Line 1792 of yacc.c  */
#line 6081 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[(2) - (2)].c_str));
          }
    break;

  case 673:
/* Line 1792 of yacc.c  */
#line 6085 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
    break;

  case 674:
/* Line 1792 of yacc.c  */
#line 6089 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 676:
/* Line 1792 of yacc.c  */
#line 6094 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
    break;

  case 677:
/* Line 1792 of yacc.c  */
#line 6098 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
    break;

  case 678:
/* Line 1792 of yacc.c  */
#line 6102 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
    break;

  case 679:
/* Line 1792 of yacc.c  */
#line 6106 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 680:
/* Line 1792 of yacc.c  */
#line 6111 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 681:
/* Line 1792 of yacc.c  */
#line 6116 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 682:
/* Line 1792 of yacc.c  */
#line 6121 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 683:
/* Line 1792 of yacc.c  */
#line 6126 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 684:
/* Line 1792 of yacc.c  */
#line 6131 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[(3) - (5)].string_list), (yyvsp[(5) - (5)].charset_with_opt_binary).charset, (yyvsp[(5) - (5)].charset_with_opt_binary).force_binary);
          }
    break;

  case 685:
/* Line 1792 of yacc.c  */
#line 6135 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[(3) - (5)].string_list), (yyvsp[(5) - (5)].charset_with_opt_binary).charset, (yyvsp[(5) - (5)].charset_with_opt_binary).force_binary);
          }
    break;

  case 686:
/* Line 1792 of yacc.c  */
#line 6139 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 687:
/* Line 1792 of yacc.c  */
#line 6144 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
    break;

  case 688:
/* Line 1792 of yacc.c  */
#line 6148 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
    break;

  case 689:
/* Line 1792 of yacc.c  */
#line 6155 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
    break;

  case 690:
/* Line 1792 of yacc.c  */
#line 6157 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
    break;

  case 691:
/* Line 1792 of yacc.c  */
#line 6159 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
    break;

  case 692:
/* Line 1792 of yacc.c  */
#line 6161 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
    break;

  case 693:
/* Line 1792 of yacc.c  */
#line 6163 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
    break;

  case 694:
/* Line 1792 of yacc.c  */
#line 6165 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
    break;

  case 695:
/* Line 1792 of yacc.c  */
#line 6167 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
    break;

  case 696:
/* Line 1792 of yacc.c  */
#line 6169 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
    break;

  case 697:
/* Line 1792 of yacc.c  */
#line 6173 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 698:
/* Line 1792 of yacc.c  */
#line 6174 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 699:
/* Line 1792 of yacc.c  */
#line 6178 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 700:
/* Line 1792 of yacc.c  */
#line 6179 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 701:
/* Line 1792 of yacc.c  */
#line 6183 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 702:
/* Line 1792 of yacc.c  */
#line 6184 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 703:
/* Line 1792 of yacc.c  */
#line 6185 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 704:
/* Line 1792 of yacc.c  */
#line 6186 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 705:
/* Line 1792 of yacc.c  */
#line 6187 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 706:
/* Line 1792 of yacc.c  */
#line 6191 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::INT; }
    break;

  case 707:
/* Line 1792 of yacc.c  */
#line 6192 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::TINYINT; }
    break;

  case 708:
/* Line 1792 of yacc.c  */
#line 6193 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::SMALLINT; }
    break;

  case 709:
/* Line 1792 of yacc.c  */
#line 6194 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::MEDIUMINT; }
    break;

  case 710:
/* Line 1792 of yacc.c  */
#line 6195 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::BIGINT; }
    break;

  case 711:
/* Line 1792 of yacc.c  */
#line 6200 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
    break;

  case 712:
/* Line 1792 of yacc.c  */
#line 6205 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
    break;

  case 715:
/* Line 1792 of yacc.c  */
#line 6214 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
    break;

  case 716:
/* Line 1792 of yacc.c  */
#line 6215 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 717:
/* Line 1792 of yacc.c  */
#line 6216 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 718:
/* Line 1792 of yacc.c  */
#line 6217 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 719:
/* Line 1792 of yacc.c  */
#line 6222 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
    break;

  case 720:
/* Line 1792 of yacc.c  */
#line 6227 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(1) - (1)].c_str);
            (yyval.precision).dec= NULL;
          }
    break;

  case 722:
/* Line 1792 of yacc.c  */
#line 6236 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(2) - (5)].lex_str).str;
            (yyval.precision).dec= (yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 723:
/* Line 1792 of yacc.c  */
#line 6244 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 724:
/* Line 1792 of yacc.c  */
#line 6245 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 725:
/* Line 1792 of yacc.c  */
#line 6249 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 726:
/* Line 1792 of yacc.c  */
#line 6250 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 727:
/* Line 1792 of yacc.c  */
#line 6252 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 728:
/* Line 1792 of yacc.c  */
#line 6259 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::NONE; }
    break;

  case 730:
/* Line 1792 of yacc.c  */
#line 6265 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_option)= static_cast<Field_option>(static_cast<ulong>((yyvsp[(1) - (2)].field_option)) |
                                          static_cast<ulong>((yyvsp[(2) - (2)].field_option)));
          }
    break;

  case 732:
/* Line 1792 of yacc.c  */
#line 6273 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::NONE; }
    break;

  case 733:
/* Line 1792 of yacc.c  */
#line 6274 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::UNSIGNED; }
    break;

  case 734:
/* Line 1792 of yacc.c  */
#line 6275 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::ZEROFILL_UNSIGNED; }
    break;

  case 735:
/* Line 1792 of yacc.c  */
#line 6279 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 736:
/* Line 1792 of yacc.c  */
#line 6280 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 737:
/* Line 1792 of yacc.c  */
#line 6281 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 738:
/* Line 1792 of yacc.c  */
#line 6282 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 739:
/* Line 1792 of yacc.c  */
#line 6285 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; /* use default length */ }
    break;

  case 741:
/* Line 1792 of yacc.c  */
#line 6291 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
    break;

  case 743:
/* Line 1792 of yacc.c  */
#line 6299 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.col_attr_list)= NULL; }
    break;

  case 745:
/* Line 1792 of yacc.c  */
#line 6305 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr_list)= (yyvsp[(1) - (2)].col_attr_list);
            if ((yyval.col_attr_list)->push_back((yyvsp[(2) - (2)].col_attr)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 746:
/* Line 1792 of yacc.c  */
#line 6311 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr_list)=
              NEW_PTN Trivial_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[(1) - (1)].col_attr)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 747:
/* Line 1792 of yacc.c  */
#line 6321 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
    break;

  case 748:
/* Line 1792 of yacc.c  */
#line 6325 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
    break;

  case 749:
/* Line 1792 of yacc.c  */
#line 6329 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[(2) - (2)].item));
          }
    break;

  case 750:
/* Line 1792 of yacc.c  */
#line 6333 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[(3) - (3)].ulong_num)));
          }
    break;

  case 751:
/* Line 1792 of yacc.c  */
#line 6337 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
    break;

  case 752:
/* Line 1792 of yacc.c  */
#line 6341 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
    break;

  case 753:
/* Line 1792 of yacc.c  */
#line 6345 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
    break;

  case 754:
/* Line 1792 of yacc.c  */
#line 6349 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
    break;

  case 755:
/* Line 1792 of yacc.c  */
#line 6353 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
    break;

  case 756:
/* Line 1792 of yacc.c  */
#line 6357 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 757:
/* Line 1792 of yacc.c  */
#line 6361 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yyvsp[(2) - (2)].charset));
          }
    break;

  case 758:
/* Line 1792 of yacc.c  */
#line 6365 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[(2) - (2)].column_format));
          }
    break;

  case 759:
/* Line 1792 of yacc.c  */
#line 6369 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[(2) - (2)].storage_media));
          }
    break;

  case 760:
/* Line 1792 of yacc.c  */
#line 6376 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
    break;

  case 761:
/* Line 1792 of yacc.c  */
#line 6377 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
    break;

  case 762:
/* Line 1792 of yacc.c  */
#line 6378 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
    break;

  case 763:
/* Line 1792 of yacc.c  */
#line 6382 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_DEFAULT; }
    break;

  case 764:
/* Line 1792 of yacc.c  */
#line 6383 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_DISK; }
    break;

  case 765:
/* Line 1792 of yacc.c  */
#line 6384 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_MEMORY; }
    break;

  case 766:
/* Line 1792 of yacc.c  */
#line 6389 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 767:
/* Line 1792 of yacc.c  */
#line 6395 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 769:
/* Line 1792 of yacc.c  */
#line 6402 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 770:
/* Line 1792 of yacc.c  */
#line 6403 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 771:
/* Line 1792 of yacc.c  */
#line 6408 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 772:
/* Line 1792 of yacc.c  */
#line 6415 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 773:
/* Line 1792 of yacc.c  */
#line 6419 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 774:
/* Line 1792 of yacc.c  */
#line 6420 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 775:
/* Line 1792 of yacc.c  */
#line 6424 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 776:
/* Line 1792 of yacc.c  */
#line 6425 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 777:
/* Line 1792 of yacc.c  */
#line 6430 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 778:
/* Line 1792 of yacc.c  */
#line 6438 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 779:
/* Line 1792 of yacc.c  */
#line 6442 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 780:
/* Line 1792 of yacc.c  */
#line 6443 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 781:
/* Line 1792 of yacc.c  */
#line 6448 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 782:
/* Line 1792 of yacc.c  */
#line 6455 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 783:
/* Line 1792 of yacc.c  */
#line 6456 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 784:
/* Line 1792 of yacc.c  */
#line 6460 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.col_attr)= NULL; }
    break;

  case 785:
/* Line 1792 of yacc.c  */
#line 6462 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yyvsp[(2) - (2)].charset)); }
    break;

  case 786:
/* Line 1792 of yacc.c  */
#line 6466 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 787:
/* Line 1792 of yacc.c  */
#line 6467 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 788:
/* Line 1792 of yacc.c  */
#line 6471 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 789:
/* Line 1792 of yacc.c  */
#line 6472 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 790:
/* Line 1792 of yacc.c  */
#line 6477 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1; }
    break;

  case 791:
/* Line 1792 of yacc.c  */
#line 6478 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 792:
/* Line 1792 of yacc.c  */
#line 6479 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 793:
/* Line 1792 of yacc.c  */
#line 6484 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 794:
/* Line 1792 of yacc.c  */
#line 6492 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 795:
/* Line 1792 of yacc.c  */
#line 6497 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 796:
/* Line 1792 of yacc.c  */
#line 6505 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 797:
/* Line 1792 of yacc.c  */
#line 6510 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 798:
/* Line 1792 of yacc.c  */
#line 6515 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 799:
/* Line 1792 of yacc.c  */
#line 6520 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 800:
/* Line 1792 of yacc.c  */
#line 6525 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(3) - (3)].is_not_empty) ? get_bin_collation((yyvsp[(2) - (3)].charset)) : (yyvsp[(2) - (3)].charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 801:
/* Line 1792 of yacc.c  */
#line 6532 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
    break;

  case 802:
/* Line 1792 of yacc.c  */
#line 6537 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[(3) - (3)].charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 803:
/* Line 1792 of yacc.c  */
#line 6546 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 804:
/* Line 1792 of yacc.c  */
#line 6547 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 805:
/* Line 1792 of yacc.c  */
#line 6552 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
    break;

  case 806:
/* Line 1792 of yacc.c  */
#line 6560 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 807:
/* Line 1792 of yacc.c  */
#line 6564 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 808:
/* Line 1792 of yacc.c  */
#line 6565 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
    break;

  case 809:
/* Line 1792 of yacc.c  */
#line 6569 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
    break;

  case 810:
/* Line 1792 of yacc.c  */
#line 6572 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 811:
/* Line 1792 of yacc.c  */
#line 6573 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 812:
/* Line 1792 of yacc.c  */
#line 6574 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (2)].ulong_num) | (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 813:
/* Line 1792 of yacc.c  */
#line 6575 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) ; }
    break;

  case 814:
/* Line 1792 of yacc.c  */
#line 6580 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) < 1 ? 1 : ((yyvsp[(1) - (1)].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[(1) - (1)].ulong_num));
          (yyval.ulong_num)--;
        }
    break;

  case 815:
/* Line 1792 of yacc.c  */
#line 6588 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (1 | (yyvsp[(2) - (2)].ulong_num)) << (yyvsp[(1) - (2)].ulong_num);
        }
    break;

  case 816:
/* Line 1792 of yacc.c  */
#line 6594 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 817:
/* Line 1792 of yacc.c  */
#line 6595 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)|= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 818:
/* Line 1792 of yacc.c  */
#line 6600 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
          uint start= (yyvsp[(1) - (3)].ulong_num);
          uint end= (yyvsp[(3) - (3)].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
    break;

  case 819:
/* Line 1792 of yacc.c  */
#line 6609 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 820:
/* Line 1792 of yacc.c  */
#line 6610 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 821:
/* Line 1792 of yacc.c  */
#line 6614 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 822:
/* Line 1792 of yacc.c  */
#line 6615 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 825:
/* Line 1792 of yacc.c  */
#line 6629 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_references).table_name= (yyvsp[(2) - (5)].table);
            (yyval.fk_references).reference_list= (yyvsp[(3) - (5)].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[(4) - (5)].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[(5) - (5)].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[(5) - (5)].fk_options).fk_delete_opt;
          }
    break;

  case 826:
/* Line 1792 of yacc.c  */
#line 6639 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.reference_list)= NULL; }
    break;

  case 827:
/* Line 1792 of yacc.c  */
#line 6640 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.reference_list)= (yyvsp[(2) - (3)].reference_list); }
    break;

  case 828:
/* Line 1792 of yacc.c  */
#line 6645 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.reference_list)= (yyvsp[(1) - (3)].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[(3) - (3)].lex_str)), 0);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
    break;

  case 829:
/* Line 1792 of yacc.c  */
#line 6652 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[(1) - (1)].lex_str)), 0);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
    break;

  case 830:
/* Line 1792 of yacc.c  */
#line 6661 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
    break;

  case 831:
/* Line 1792 of yacc.c  */
#line 6662 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
    break;

  case 832:
/* Line 1792 of yacc.c  */
#line 6663 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
    break;

  case 833:
/* Line 1792 of yacc.c  */
#line 6664 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
    break;

  case 834:
/* Line 1792 of yacc.c  */
#line 6669 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 835:
/* Line 1792 of yacc.c  */
#line 6674 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 836:
/* Line 1792 of yacc.c  */
#line 6679 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 837:
/* Line 1792 of yacc.c  */
#line 6685 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 838:
/* Line 1792 of yacc.c  */
#line 6691 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 839:
/* Line 1792 of yacc.c  */
#line 6698 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
    break;

  case 840:
/* Line 1792 of yacc.c  */
#line 6699 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
    break;

  case 841:
/* Line 1792 of yacc.c  */
#line 6700 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
    break;

  case 842:
/* Line 1792 of yacc.c  */
#line 6701 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
    break;

  case 843:
/* Line 1792 of yacc.c  */
#line 6702 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
    break;

  case 844:
/* Line 1792 of yacc.c  */
#line 6706 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 845:
/* Line 1792 of yacc.c  */
#line 6710 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
    break;

  case 846:
/* Line 1792 of yacc.c  */
#line 6711 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 847:
/* Line 1792 of yacc.c  */
#line 6715 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 848:
/* Line 1792 of yacc.c  */
#line 6716 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 849:
/* Line 1792 of yacc.c  */
#line 6720 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 851:
/* Line 1792 of yacc.c  */
#line 6725 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 852:
/* Line 1792 of yacc.c  */
#line 6726 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 853:
/* Line 1792 of yacc.c  */
#line 6727 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 854:
/* Line 1792 of yacc.c  */
#line 6731 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 855:
/* Line 1792 of yacc.c  */
#line 6732 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 856:
/* Line 1792 of yacc.c  */
#line 6737 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_type)= KEYTYPE_SPATIAL;
          }
    break;

  case 857:
/* Line 1792 of yacc.c  */
#line 6743 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 859:
/* Line 1792 of yacc.c  */
#line 6749 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 860:
/* Line 1792 of yacc.c  */
#line 6755 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 862:
/* Line 1792 of yacc.c  */
#line 6765 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING plugin_name= {(yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
          }
    break;

  case 863:
/* Line 1792 of yacc.c  */
#line 6778 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 865:
/* Line 1792 of yacc.c  */
#line 6784 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 866:
/* Line 1792 of yacc.c  */
#line 6790 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 868:
/* Line 1792 of yacc.c  */
#line 6802 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 870:
/* Line 1792 of yacc.c  */
#line 6808 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 871:
/* Line 1792 of yacc.c  */
#line 6814 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 872:
/* Line 1792 of yacc.c  */
#line 6822 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_option)= (yyvsp[(1) - (1)].index_option); }
    break;

  case 873:
/* Line 1792 of yacc.c  */
#line 6823 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_option)= (yyvsp[(1) - (1)].index_type); }
    break;

  case 874:
/* Line 1792 of yacc.c  */
#line 6828 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[(3) - (3)].ulong_num)); }
    break;

  case 875:
/* Line 1792 of yacc.c  */
#line 6830 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[(2) - (2)].lex_str)));
          }
    break;

  case 876:
/* Line 1792 of yacc.c  */
#line 6834 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[(1) - (1)].visibility));
          }
    break;

  case 877:
/* Line 1792 of yacc.c  */
#line 6857 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_name_and_type)= {(yyvsp[(1) - (1)].field_ident), NULL}; }
    break;

  case 878:
/* Line 1792 of yacc.c  */
#line 6858 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_name_and_type)= {(yyvsp[(1) - (3)].field_ident), NEW_PTN PT_index_type((yyvsp[(3) - (3)].key_alg))}; }
    break;

  case 879:
/* Line 1792 of yacc.c  */
#line 6860 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_name_and_type)= { NEW_PTN PT_field_ident((yyvsp[(1) - (3)].lex_str)), NEW_PTN PT_index_type((yyvsp[(3) - (3)].key_alg)) };
          }
    break;

  case 880:
/* Line 1792 of yacc.c  */
#line 6866 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_type)= NEW_PTN PT_index_type((yyvsp[(2) - (2)].key_alg)); }
    break;

  case 881:
/* Line 1792 of yacc.c  */
#line 6867 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_type)= NEW_PTN PT_index_type((yyvsp[(2) - (2)].key_alg)); }
    break;

  case 882:
/* Line 1792 of yacc.c  */
#line 6871 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.visibility)= true; }
    break;

  case 883:
/* Line 1792 of yacc.c  */
#line 6872 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.visibility)= false; }
    break;

  case 884:
/* Line 1792 of yacc.c  */
#line 6876 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 885:
/* Line 1792 of yacc.c  */
#line 6877 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 886:
/* Line 1792 of yacc.c  */
#line 6878 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 887:
/* Line 1792 of yacc.c  */
#line 6883 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            // The order is ignored.
            if ((yyvsp[(1) - (4)].index_column_list)->push_back((yyvsp[(3) - (4)].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[(1) - (4)].index_column_list);
          }
    break;

  case 888:
/* Line 1792 of yacc.c  */
#line 6890 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            // The order is ignored.
            (yyval.index_column_list)= new List<Key_part_spec>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[(1) - (2)].key_part)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 889:
/* Line 1792 of yacc.c  */
#line 6900 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec(to_lex_cstring((yyvsp[(1) - (1)].lex_str)), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 890:
/* Line 1792 of yacc.c  */
#line 6906 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (4)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (4)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec(to_lex_cstring((yyvsp[(1) - (4)].lex_str)), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 891:
/* Line 1792 of yacc.c  */
#line 6919 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.field_ident)= NULL; }
    break;

  case 893:
/* Line 1792 of yacc.c  */
#line 6924 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 894:
/* Line 1792 of yacc.c  */
#line 6925 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 895:
/* Line 1792 of yacc.c  */
#line 6930 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[(1) - (1)].string)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 896:
/* Line 1792 of yacc.c  */
#line 6936 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.string_list)->push_back((yyvsp[(3) - (3)].string)))
              MYSQL_YYABORT;
          }
    break;

  case 897:
/* Line 1792 of yacc.c  */
#line 6948 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->select_lex->init_order();
            lex->select_lex->db=
                    const_cast<char*>((lex->select_lex->table_list.first)->db);
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->db_type= 0;
            lex->create_info->default_table_charset= NULL;
            lex->create_info->row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
    break;

  case 898:
/* Line 1792 of yacc.c  */
#line 6976 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 899:
/* Line 1792 of yacc.c  */
#line 6988 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
    break;

  case 900:
/* Line 1792 of yacc.c  */
#line 6996 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 901:
/* Line 1792 of yacc.c  */
#line 7005 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 902:
/* Line 1792 of yacc.c  */
#line 7016 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 903:
/* Line 1792 of yacc.c  */
#line 7023 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 904:
/* Line 1792 of yacc.c  */
#line 7034 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 905:
/* Line 1792 of yacc.c  */
#line 7041 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
    break;

  case 906:
/* Line 1792 of yacc.c  */
#line 7052 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 907:
/* Line 1792 of yacc.c  */
#line 7059 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
    break;

  case 908:
/* Line 1792 of yacc.c  */
#line 7071 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 909:
/* Line 1792 of yacc.c  */
#line 7073 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 910:
/* Line 1792 of yacc.c  */
#line 7093 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 911:
/* Line 1792 of yacc.c  */
#line 7106 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 912:
/* Line 1792 of yacc.c  */
#line 7111 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 913:
/* Line 1792 of yacc.c  */
#line 7116 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 914:
/* Line 1792 of yacc.c  */
#line 7121 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 915:
/* Line 1792 of yacc.c  */
#line 7126 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[(3) - (7)].lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
    break;

  case 917:
/* Line 1792 of yacc.c  */
#line 7136 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(2) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(2) - (5)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 918:
/* Line 1792 of yacc.c  */
#line 7142 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 919:
/* Line 1792 of yacc.c  */
#line 7144 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            List<LEX_USER> *users= new List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new List<LEX_USER>;
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
              PT_statement *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list, ROLE_ALL);
              MAKE_CMD(tmp);
          }
    break;

  case 920:
/* Line 1792 of yacc.c  */
#line 7156 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            List<LEX_USER> *users= new List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new List<LEX_USER>;
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
              PT_statement *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list, ROLE_NONE);
              MAKE_CMD(tmp);
          }
    break;

  case 921:
/* Line 1792 of yacc.c  */
#line 7168 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            List<LEX_USER> *users= new List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
            PT_statement *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[(5) - (5)].user_list), ROLE_NAME);
            MAKE_CMD(tmp);
          }
    break;

  case 922:
/* Line 1792 of yacc.c  */
#line 7182 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
          }
    break;

  case 923:
/* Line 1792 of yacc.c  */
#line 7190 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 927:
/* Line 1792 of yacc.c  */
#line 7201 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
    break;

  case 928:
/* Line 1792 of yacc.c  */
#line 7207 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
    break;

  case 929:
/* Line 1792 of yacc.c  */
#line 7213 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.update_password_expired_column= true;
          }
    break;

  case 930:
/* Line 1792 of yacc.c  */
#line 7219 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if ((yyvsp[(3) - (4)].ulong_num) == 0 || (yyvsp[(3) - (4)].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              my_snprintf(buf, sizeof(buf), "%lu", (yyvsp[(3) - (4)].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.expire_after_days= (yyvsp[(3) - (4)].ulong_num);
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 931:
/* Line 1792 of yacc.c  */
#line 7233 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 932:
/* Line 1792 of yacc.c  */
#line 7239 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_password.update_password_expired_fields= true;
          }
    break;

  case 933:
/* Line 1792 of yacc.c  */
#line 7245 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 934:
/* Line 1792 of yacc.c  */
#line 7249 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 936:
/* Line 1792 of yacc.c  */
#line 7254 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 937:
/* Line 1792 of yacc.c  */
#line 7255 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 938:
/* Line 1792 of yacc.c  */
#line 7260 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 939:
/* Line 1792 of yacc.c  */
#line 7266 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 940:
/* Line 1792 of yacc.c  */
#line 7272 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 941:
/* Line 1792 of yacc.c  */
#line 7278 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 942:
/* Line 1792 of yacc.c  */
#line 7287 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(st_lex_user));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
    break;

  case 943:
/* Line 1792 of yacc.c  */
#line 7300 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 944:
/* Line 1792 of yacc.c  */
#line 7301 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 945:
/* Line 1792 of yacc.c  */
#line 7302 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 946:
/* Line 1792 of yacc.c  */
#line 7303 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 947:
/* Line 1792 of yacc.c  */
#line 7307 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 948:
/* Line 1792 of yacc.c  */
#line 7309 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname);
            (yyval.num)= 1;
          }
    break;

  case 949:
/* Line 1792 of yacc.c  */
#line 7320 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 950:
/* Line 1792 of yacc.c  */
#line 7321 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 951:
/* Line 1792 of yacc.c  */
#line 7325 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 952:
/* Line 1792 of yacc.c  */
#line 7326 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 954:
/* Line 1792 of yacc.c  */
#line 7332 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            CONTEXTUALIZE((yyvsp[(2) - (2)].partition_clause));
            Lex->part_info= &(yyvsp[(2) - (2)].partition_clause)->part_info;
          }
    break;

  case 962:
/* Line 1792 of yacc.c  */
#line 7351 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DISCARD_TABLESPACE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_discard_import_tablespace();
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 963:
/* Line 1792 of yacc.c  */
#line 7358 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_IMPORT_TABLESPACE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_discard_import_tablespace();
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 964:
/* Line 1792 of yacc.c  */
#line 7372 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].add_partition_rule)); }
    break;

  case 965:
/* Line 1792 of yacc.c  */
#line 7374 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
            DBUG_ASSERT(Lex->alter_info.partition_names.is_empty());
            Lex->alter_info.partition_names= *(yyvsp[(3) - (3)].string_list);
          }
    break;

  case 966:
/* Line 1792 of yacc.c  */
#line 7381 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 967:
/* Line 1792 of yacc.c  */
#line 7388 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 969:
/* Line 1792 of yacc.c  */
#line 7401 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 970:
/* Line 1792 of yacc.c  */
#line 7412 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            lex->check_opt.flags|= (yyvsp[(4) - (4)].mi_type).flags;
            lex->check_opt.sql_flags|= (yyvsp[(4) - (4)].mi_type).sql_flags;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 971:
/* Line 1792 of yacc.c  */
#line 7426 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (5)].num);
            lex->check_opt.init();
            lex->check_opt.flags|= (yyvsp[(5) - (5)].mi_type).flags;
            lex->check_opt.sql_flags|= (yyvsp[(5) - (5)].mi_type).sql_flags;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 972:
/* Line 1792 of yacc.c  */
#line 7439 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 973:
/* Line 1792 of yacc.c  */
#line 7446 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 975:
/* Line 1792 of yacc.c  */
#line 7458 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            String *s= NEW_PTN String((const char *) (yyvsp[(3) - (7)].lex_str).str,
                                      (yyvsp[(3) - (7)].lex_str).length,
                                      system_charset_info);
            if (s == NULL || lex->alter_info.partition_names.push_back(s))
              MYSQL_YYABORT;

            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(6) - (7)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name.str= const_cast<char*>((yyvsp[(6) - (7)].table)->table.str);
            lex->name.length= (yyvsp[(6) - (7)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (7)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 976:
/* Line 1792 of yacc.c  */
#line 7490 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DISCARD_TABLESPACE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_discard_import_tablespace();
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 977:
/* Line 1792 of yacc.c  */
#line 7498 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_IMPORT_TABLESPACE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_discard_import_tablespace();
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 980:
/* Line 1792 of yacc.c  */
#line 7513 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation= Alter_info::ALTER_WITH_VALIDATION;
          }
    break;

  case 981:
/* Line 1792 of yacc.c  */
#line 7517 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation=
              Alter_info::ALTER_WITHOUT_VALIDATION;
          }
    break;

  case 982:
/* Line 1792 of yacc.c  */
#line 7525 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 983:
/* Line 1792 of yacc.c  */
#line 7532 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
    break;

  case 984:
/* Line 1792 of yacc.c  */
#line 7536 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->alter_info.partition_names.is_empty());
            Lex->alter_info.partition_names= *(yyvsp[(1) - (1)].string_list);
          }
    break;

  case 985:
/* Line 1792 of yacc.c  */
#line 7544 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.add_partition_rule)= NEW_PTN PT_add_partition((yyvsp[(3) - (3)].num));
          }
    break;

  case 986:
/* Line 1792 of yacc.c  */
#line 7548 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.add_partition_rule)= NEW_PTN PT_add_partition_def_list((yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].part_def_list));
          }
    break;

  case 987:
/* Line 1792 of yacc.c  */
#line 7552 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.add_partition_rule)= NEW_PTN PT_add_partition_num((yyvsp[(3) - (5)].num), (yyvsp[(5) - (5)].ulong_num));
          }
    break;

  case 988:
/* Line 1792 of yacc.c  */
#line 7559 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX * const lex= Lex;
            lex->part_info= NEW_PTN partition_info();
            if (!lex->part_info)
              MYSQL_YYABORT;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
            lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
    break;

  case 989:
/* Line 1792 of yacc.c  */
#line 7569 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX * const lex= Lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (8)].num);
            lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;

            DBUG_ASSERT(lex->alter_info.partition_names.is_empty());
            lex->alter_info.partition_names= *(yyvsp[(4) - (8)].string_list);

            partition_info * const part_info= NEW_PTN partition_info();
            if (part_info == NULL)
              MYSQL_YYABORT;

            Partition_parse_context pc(YYTHD, part_info);
            if (YYTHD->is_error())
              MYSQL_YYABORT;

            for (auto part_def : *(yyvsp[(7) - (8)].part_def_list))
            {
              if (part_def->contextualize(&pc))
                MYSQL_YYABORT;
            }

            part_info->num_parts= part_info->partitions.elements;

            lex->part_info= part_info;
          }
    break;

  case 995:
/* Line 1792 of yacc.c  */
#line 7614 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
    break;

  case 996:
/* Line 1792 of yacc.c  */
#line 7622 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(2) - (5)].field_ident));
            CONTEXTUALIZE((yyvsp[(3) - (5)].field_def));
            if ((yyvsp[(4) - (5)].check_constraint))
              CONTEXTUALIZE((yyvsp[(4) - (5)].check_constraint));

            Lex->alter_info.flags|= (yyvsp[(3) - (5)].field_def)->alter_info_flags;
            if (Lex->alter_info.add_field(YYTHD,
                                          &(yyvsp[(2) - (5)].field_ident)->field_name,
                                          (yyvsp[(3) - (5)].field_def)->type,
                                          (yyvsp[(3) - (5)].field_def)->length,
                                          (yyvsp[(3) - (5)].field_def)->dec,
                                          (yyvsp[(3) - (5)].field_def)->type_flags,
                                          (yyvsp[(3) - (5)].field_def)->default_value,
                                          (yyvsp[(3) - (5)].field_def)->on_update_value,
                                          &(yyvsp[(3) - (5)].field_def)->comment,
                                          NULL,
                                          (yyvsp[(3) - (5)].field_def)->interval_list,
                                          (yyvsp[(3) - (5)].field_def)->charset,
                                          (yyvsp[(3) - (5)].field_def)->uint_geom_type,
                                          (yyvsp[(3) - (5)].field_def)->gcol_info,
                                          (yyvsp[(5) - (5)].c_str)))
              MYSQL_YYABORT;

            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 997:
/* Line 1792 of yacc.c  */
#line 7649 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(2) - (2)].table_constraint_def));
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 998:
/* Line 1792 of yacc.c  */
#line 7655 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            for (auto element : *(yyvsp[(3) - (4)].table_element_list))
              CONTEXTUALIZE(element);
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 999:
/* Line 1792 of yacc.c  */
#line 7663 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (6)].field_ident));
            CONTEXTUALIZE((yyvsp[(4) - (6)].field_ident));
            CONTEXTUALIZE((yyvsp[(5) - (6)].field_def));
            lex->alter_info.flags|= (yyvsp[(5) - (6)].field_def)->alter_info_flags;
            if (lex->alter_info.add_field(YYTHD, &(yyvsp[(4) - (6)].field_ident)->field_name, (yyvsp[(5) - (6)].field_def)->type,
                                          (yyvsp[(5) - (6)].field_def)->length, (yyvsp[(5) - (6)].field_def)->dec, (yyvsp[(5) - (6)].field_def)->type_flags,
                                          (yyvsp[(5) - (6)].field_def)->default_value,
                                          (yyvsp[(5) - (6)].field_def)->on_update_value,
                                          &(yyvsp[(5) - (6)].field_def)->comment,
                                          (yyvsp[(3) - (6)].field_ident)->field_name.str,
                                          (yyvsp[(5) - (6)].field_def)->interval_list,
                                          (yyvsp[(5) - (6)].field_def)->charset,
                                          (yyvsp[(5) - (6)].field_def)->uint_geom_type,
                                          (yyvsp[(5) - (6)].field_def)->gcol_info,
                                          (yyvsp[(6) - (6)].c_str)))
              MYSQL_YYABORT;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1000:
/* Line 1792 of yacc.c  */
#line 7687 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (5)].field_ident));
            CONTEXTUALIZE((yyvsp[(4) - (5)].field_def));
            lex->alter_info.flags|= (yyvsp[(4) - (5)].field_def)->alter_info_flags;
            if (lex->alter_info.add_field(YYTHD, &(yyvsp[(3) - (5)].field_ident)->field_name,
                                          (yyvsp[(4) - (5)].field_def)->type,
                                          (yyvsp[(4) - (5)].field_def)->length, (yyvsp[(4) - (5)].field_def)->dec, (yyvsp[(4) - (5)].field_def)->type_flags,
                                          (yyvsp[(4) - (5)].field_def)->default_value,
                                          (yyvsp[(4) - (5)].field_def)->on_update_value,
                                          &(yyvsp[(4) - (5)].field_def)->comment,
                                          (yyvsp[(3) - (5)].field_ident)->field_name.str,
                                          (yyvsp[(4) - (5)].field_def)->interval_list,
                                          (yyvsp[(4) - (5)].field_def)->charset,
                                          (yyvsp[(4) - (5)].field_def)->uint_geom_type,
                                          (yyvsp[(4) - (5)].field_def)->gcol_info,
                                          (yyvsp[(5) - (5)].c_str)))
              MYSQL_YYABORT;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1001:
/* Line 1792 of yacc.c  */
#line 7709 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (4)].field_ident));
            lex->drop_mode= (yyvsp[(4) - (4)].opt_restrict);
            auto ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].field_ident)->field_name.str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
    break;

  case 1002:
/* Line 1792 of yacc.c  */
#line 7720 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(4) - (4)].field_ident));
            auto ad= new Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[(4) - (4)].field_ident)->field_name.str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
    break;

  case 1003:
/* Line 1792 of yacc.c  */
#line 7730 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1004:
/* Line 1792 of yacc.c  */
#line 7739 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (3)].field_ident));
            auto ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].field_ident)->field_name.str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1005:
/* Line 1792 of yacc.c  */
#line 7749 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1006:
/* Line 1792 of yacc.c  */
#line 7755 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1007:
/* Line 1792 of yacc.c  */
#line 7761 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (6)].field_ident));
            ITEMIZE((yyvsp[(6) - (6)].item), &(yyvsp[(6) - (6)].item));
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].field_ident)->field_name.str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1008:
/* Line 1792 of yacc.c  */
#line 7772 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            auto ac= new Alter_index_visibility((yyvsp[(3) - (4)].lex_str).str, (yyvsp[(4) - (4)].visibility));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_index_visibility_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_INDEX_VISIBILITY;
          }
    break;

  case 1009:
/* Line 1792 of yacc.c  */
#line 7781 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (5)].field_ident));
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].field_ident)->field_name.str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1010:
/* Line 1792 of yacc.c  */
#line 7791 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(3) - (3)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            Ident_name_check ident_check_status=
              check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length);
            if (ident_check_status == Ident_name_check::WRONG)
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            else if (ident_check_status == Ident_name_check::TOO_LONG)
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            LEX_STRING db_str= to_lex_string((yyvsp[(3) - (3)].table)->db);
            if (db_str.str &&
                (check_and_convert_db_name(&db_str, false) !=
                 Ident_name_check::OK))
              MYSQL_YYABORT;
            lex->name.str= const_cast<char*>((yyvsp[(3) - (3)].table)->table.str);
            lex->name.length= (yyvsp[(3) - (3)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
    break;

  case 1011:
/* Line 1792 of yacc.c  */
#line 7822 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            CONTEXTUALIZE((yyvsp[(3) - (5)].field_ident));
            CONTEXTUALIZE((yyvsp[(5) - (5)].field_ident));
            Alter_rename_key *ak=
              NEW_PTN Alter_rename_key((yyvsp[(3) - (5)].field_ident)->field_name.str, (yyvsp[(5) - (5)].field_ident)->field_name.str);
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= Alter_info::ALTER_RENAME_INDEX;
          }
    break;

  case 1012:
/* Line 1792 of yacc.c  */
#line 7834 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }

            LEX *lex= Lex;
            HA_CREATE_INFO *cinfo= lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(5) - (5)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(5) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }

            cinfo->table_charset= cinfo->default_table_charset= (yyvsp[(5) - (5)].charset);
            cinfo->used_fields|= (HA_CREATE_USED_CHARSET |
                                  HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
          }
    break;

  case 1013:
/* Line 1792 of yacc.c  */
#line 7866 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            for (auto *option : *(yyvsp[(1) - (1)].create_table_options))
              CONTEXTUALIZE(option);

            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info->used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info->db_type)
            {
              lex->create_info->used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
    break;

  case 1014:
/* Line 1792 of yacc.c  */
#line 7879 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
    break;

  case 1015:
/* Line 1792 of yacc.c  */
#line 7883 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
    break;

  case 1016:
/* Line 1792 of yacc.c  */
#line 7890 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].index_option)); }
    break;

  case 1017:
/* Line 1792 of yacc.c  */
#line 7891 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].index_option)); }
    break;

  case 1019:
/* Line 1792 of yacc.c  */
#line 7896 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 1020:
/* Line 1792 of yacc.c  */
#line 7898 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1021:
/* Line 1792 of yacc.c  */
#line 7904 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1022:
/* Line 1792 of yacc.c  */
#line 7910 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (2)].index_option)) || (yyval.index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1023:
/* Line 1792 of yacc.c  */
#line 7916 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (2)].index_option)) || (yyval.index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1024:
/* Line 1792 of yacc.c  */
#line 7925 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_requested_algorithm(default_word);
          }
    break;

  case 1025:
/* Line 1792 of yacc.c  */
#line 7929 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_requested_algorithm((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1026:
/* Line 1792 of yacc.c  */
#line 7936 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_requested_lock(default_word);
          }
    break;

  case 1027:
/* Line 1792 of yacc.c  */
#line 7940 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_requested_lock((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1028:
/* Line 1792 of yacc.c  */
#line 7946 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1029:
/* Line 1792 of yacc.c  */
#line 7947 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1030:
/* Line 1792 of yacc.c  */
#line 7951 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1031:
/* Line 1792 of yacc.c  */
#line 7952 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1032:
/* Line 1792 of yacc.c  */
#line 7956 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_DEFAULT; }
    break;

  case 1033:
/* Line 1792 of yacc.c  */
#line 7957 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_RESTRICT; }
    break;

  case 1034:
/* Line 1792 of yacc.c  */
#line 7958 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_CASCADE; }
    break;

  case 1035:
/* Line 1792 of yacc.c  */
#line 7962 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 1036:
/* Line 1792 of yacc.c  */
#line 7963 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1037:
/* Line 1792 of yacc.c  */
#line 7964 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= first_keyword; }
    break;

  case 1038:
/* Line 1792 of yacc.c  */
#line 7968 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1039:
/* Line 1792 of yacc.c  */
#line 7969 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1040:
/* Line 1792 of yacc.c  */
#line 7970 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1041:
/* Line 1792 of yacc.c  */
#line 7971 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1042:
/* Line 1792 of yacc.c  */
#line 7976 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
    break;

  case 1043:
/* Line 1792 of yacc.c  */
#line 7981 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
    break;

  case 1044:
/* Line 1792 of yacc.c  */
#line 7988 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1045:
/* Line 1792 of yacc.c  */
#line 7990 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[(3) - (4)].num);
        }
    break;

  case 1046:
/* Line 1792 of yacc.c  */
#line 8000 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1047:
/* Line 1792 of yacc.c  */
#line 8015 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1049:
/* Line 1792 of yacc.c  */
#line 8036 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1050:
/* Line 1792 of yacc.c  */
#line 8052 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1051:
/* Line 1792 of yacc.c  */
#line 8056 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1052:
/* Line 1792 of yacc.c  */
#line 8063 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1053:
/* Line 1792 of yacc.c  */
#line 8067 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1054:
/* Line 1792 of yacc.c  */
#line 8074 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 1055:
/* Line 1792 of yacc.c  */
#line 8078 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 1056:
/* Line 1792 of yacc.c  */
#line 8082 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 1058:
/* Line 1792 of yacc.c  */
#line 8093 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1059:
/* Line 1792 of yacc.c  */
#line 8097 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1060:
/* Line 1792 of yacc.c  */
#line 8103 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1061:
/* Line 1792 of yacc.c  */
#line 8107 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 1062:
/* Line 1792 of yacc.c  */
#line 8113 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1063:
/* Line 1792 of yacc.c  */
#line 8117 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1064:
/* Line 1792 of yacc.c  */
#line 8123 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1065:
/* Line 1792 of yacc.c  */
#line 8127 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1066:
/* Line 1792 of yacc.c  */
#line 8134 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1067:
/* Line 1792 of yacc.c  */
#line 8138 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1068:
/* Line 1792 of yacc.c  */
#line 8145 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1069:
/* Line 1792 of yacc.c  */
#line 8149 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1070:
/* Line 1792 of yacc.c  */
#line 8156 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_SQL;
          }
    break;

  case 1071:
/* Line 1792 of yacc.c  */
#line 8160 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_IO;
          }
    break;

  case 1072:
/* Line 1792 of yacc.c  */
#line 8167 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
    break;

  case 1073:
/* Line 1792 of yacc.c  */
#line 8172 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
    break;

  case 1076:
/* Line 1792 of yacc.c  */
#line 8199 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
    break;

  case 1077:
/* Line 1792 of yacc.c  */
#line 8204 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
    break;

  case 1078:
/* Line 1792 of yacc.c  */
#line 8209 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.until_after_gaps= true;
          }
    break;

  case 1079:
/* Line 1792 of yacc.c  */
#line 8216 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[(3) - (4)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 1080:
/* Line 1792 of yacc.c  */
#line 8229 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 1081:
/* Line 1792 of yacc.c  */
#line 8230 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= T_QUICK; }
    break;

  case 1082:
/* Line 1792 of yacc.c  */
#line 8231 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= T_EXTEND; }
    break;

  case 1083:
/* Line 1792 of yacc.c  */
#line 8237 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (5)].num);
            lex->check_opt.init();
            lex->check_opt.flags|= (yyvsp[(5) - (5)].mi_type).flags;
            lex->check_opt.sql_flags|= (yyvsp[(5) - (5)].mi_type).sql_flags;
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(thd, (yyvsp[(4) - (5)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1084:
/* Line 1792 of yacc.c  */
#line 8259 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1087:
/* Line 1792 of yacc.c  */
#line 8266 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.mi_type).flags= (yyvsp[(1) - (2)].mi_type).flags | (yyvsp[(2) - (2)].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[(1) - (2)].mi_type).sql_flags | (yyvsp[(2) - (2)].mi_type).sql_flags;
          }
    break;

  case 1088:
/* Line 1792 of yacc.c  */
#line 8273 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
    break;

  case 1089:
/* Line 1792 of yacc.c  */
#line 8274 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1090:
/* Line 1792 of yacc.c  */
#line 8275 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
    break;

  case 1091:
/* Line 1792 of yacc.c  */
#line 8280 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (4)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(thd, (yyvsp[(4) - (4)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1092:
/* Line 1792 of yacc.c  */
#line 8301 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1093:
/* Line 1792 of yacc.c  */
#line 8309 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->check_opt.flags|= (yyvsp[(4) - (4)].mi_type).flags;
            lex->check_opt.sql_flags|= (yyvsp[(4) - (4)].mi_type).sql_flags;
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(thd, (yyvsp[(3) - (4)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1094:
/* Line 1792 of yacc.c  */
#line 8336 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1097:
/* Line 1792 of yacc.c  */
#line 8343 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.mi_type).flags= (yyvsp[(1) - (2)].mi_type).flags | (yyvsp[(2) - (2)].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[(1) - (2)].mi_type).sql_flags | (yyvsp[(2) - (2)].mi_type).sql_flags;
          }
    break;

  case 1098:
/* Line 1792 of yacc.c  */
#line 8351 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
    break;

  case 1099:
/* Line 1792 of yacc.c  */
#line 8353 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
    break;

  case 1100:
/* Line 1792 of yacc.c  */
#line 8355 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
    break;

  case 1101:
/* Line 1792 of yacc.c  */
#line 8357 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
    break;

  case 1102:
/* Line 1792 of yacc.c  */
#line 8359 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1103:
/* Line 1792 of yacc.c  */
#line 8361 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
    break;

  case 1104:
/* Line 1792 of yacc.c  */
#line 8366 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (4)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(thd, (yyvsp[(4) - (4)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1105:
/* Line 1792 of yacc.c  */
#line 8386 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1106:
/* Line 1792 of yacc.c  */
#line 8387 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1107:
/* Line 1792 of yacc.c  */
#line 8388 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1108:
/* Line 1792 of yacc.c  */
#line 8393 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1109:
/* Line 1792 of yacc.c  */
#line 8397 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1110:
/* Line 1792 of yacc.c  */
#line 8399 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1111:
/* Line 1792 of yacc.c  */
#line 8406 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1112:
/* Line 1792 of yacc.c  */
#line 8411 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1115:
/* Line 1792 of yacc.c  */
#line 8424 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1116:
/* Line 1792 of yacc.c  */
#line 8437 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 1117:
/* Line 1792 of yacc.c  */
#line 8441 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 1122:
/* Line 1792 of yacc.c  */
#line 8460 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (2)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1123:
/* Line 1792 of yacc.c  */
#line 8470 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1124:
/* Line 1792 of yacc.c  */
#line 8479 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1125:
/* Line 1792 of yacc.c  */
#line 8480 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1126:
/* Line 1792 of yacc.c  */
#line 8485 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 1127:
/* Line 1792 of yacc.c  */
#line 8491 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1132:
/* Line 1792 of yacc.c  */
#line 8506 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1133:
/* Line 1792 of yacc.c  */
#line 8516 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (4)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1134:
/* Line 1792 of yacc.c  */
#line 8526 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
    break;

  case 1137:
/* Line 1792 of yacc.c  */
#line 8537 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1138:
/* Line 1792 of yacc.c  */
#line 8539 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(3) - (4)].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[(3) - (4)].key_usage_list);
          }
    break;

  case 1139:
/* Line 1792 of yacc.c  */
#line 8549 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1140:
/* Line 1792 of yacc.c  */
#line 8550 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1141:
/* Line 1792 of yacc.c  */
#line 8555 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_stmt)= NEW_PTN PT_select_stmt((yyvsp[(1) - (1)].query_expression));
          }
    break;

  case 1142:
/* Line 1792 of yacc.c  */
#line 8559 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.select_stmt)= NEW_PTN PT_select_stmt((yyvsp[(1) - (1)].query_expression));
          }
    break;

  case 1144:
/* Line 1792 of yacc.c  */
#line 8601 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_stmt)= (yyvsp[(2) - (3)].select_stmt);
          }
    break;

  case 1145:
/* Line 1792 of yacc.c  */
#line 8605 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (2)].query_expression)->has_into_clause())
              YYTHD->syntax_error_at((yylsp[(2) - (2)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));

            if ((yyvsp[(1) - (2)].query_expression)->has_procedure())
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "INTO");
              MYSQL_YYABORT;
            }

            (yyval.select_stmt)= NEW_PTN PT_select_stmt((yyvsp[(1) - (2)].query_expression), (yyvsp[(2) - (2)].into_destination));
          }
    break;

  case 1146:
/* Line 1792 of yacc.c  */
#line 8653 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (5)].query_expression_body) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (5)].query_expression_body)->is_union() && (yyvsp[(4) - (5)].procedure_analyse) != NULL)
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "UNION");

            if ((yyvsp[(1) - (5)].query_expression_body)->has_into_clause() && (yyvsp[(4) - (5)].procedure_analyse) != NULL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "INTO");
              MYSQL_YYABORT;
            }

            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (5)].query_expression_body), (yyvsp[(2) - (5)].order), (yyvsp[(3) - (5)].limit_clause), (yyvsp[(4) - (5)].procedure_analyse), (yyvsp[(5) - (5)].select_lock_type));
          }
    break;

  case 1147:
/* Line 1792 of yacc.c  */
#line 8673 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (5)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            if ((yyvsp[(1) - (5)].query_expression)->is_union() && (yyvsp[(4) - (5)].procedure_analyse) != NULL)
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "UNION");
            PT_nested_query_expression *nested=
              NEW_PTN PT_nested_query_expression((yyvsp[(1) - (5)].query_expression));
            PT_query_expression_body_primary *body=
              NEW_PTN PT_query_expression_body_primary(nested);
            (yyval.query_expression)= NEW_PTN PT_query_expression(body, (yyvsp[(2) - (5)].order), (yyvsp[(3) - (5)].limit_clause), (yyvsp[(4) - (5)].procedure_analyse), (yyvsp[(5) - (5)].select_lock_type));
          }
    break;

  case 1148:
/* Line 1792 of yacc.c  */
#line 8688 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            if ((yyvsp[(1) - (4)].query_expression)->is_union() && (yyvsp[(3) - (4)].procedure_analyse) != NULL)
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "UNION");
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (4)].query_expression)->body(), NULL, (yyvsp[(2) - (4)].limit_clause), (yyvsp[(3) - (4)].procedure_analyse), (yyvsp[(4) - (4)].select_lock_type));
          }
    break;

  case 1149:
/* Line 1792 of yacc.c  */
#line 8699 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_expression_body)= NEW_PTN PT_query_expression_body_primary((yyvsp[(1) - (1)].query_primary));
          }
    break;

  case 1150:
/* Line 1792 of yacc.c  */
#line 8703 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_expression_body)= NEW_PTN PT_union(NEW_PTN PT_query_expression((yyvsp[(1) - (4)].query_expression_body)), (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].query_primary));
          }
    break;

  case 1151:
/* Line 1792 of yacc.c  */
#line 8707 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            (yyvsp[(1) - (4)].query_expression)->set_parentheses();

            (yyval.query_expression_body)= NEW_PTN PT_union((yyvsp[(1) - (4)].query_expression), (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].query_primary));
          }
    break;

  case 1152:
/* Line 1792 of yacc.c  */
#line 8716 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(4) - (4)].query_expression)->is_union())
              YYTHD->syntax_error_at((yylsp[(4) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));

            auto lhs_qe= NEW_PTN PT_query_expression((yyvsp[(1) - (4)].query_expression_body));
            PT_nested_query_expression *nested_qe=
              NEW_PTN PT_nested_query_expression((yyvsp[(4) - (4)].query_expression));

            (yyval.query_expression_body)= NEW_PTN PT_union(lhs_qe, (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), nested_qe);
          }
    break;

  case 1153:
/* Line 1792 of yacc.c  */
#line 8730 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (4)].query_expression) == NULL || (yyvsp[(4) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(4) - (4)].query_expression)->is_union())
              YYTHD->syntax_error_at((yylsp[(4) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));

            (yyvsp[(1) - (4)].query_expression)->set_parentheses();

            PT_nested_query_expression *nested_qe=
              NEW_PTN PT_nested_query_expression((yyvsp[(4) - (4)].query_expression));
            (yyval.query_expression_body)= NEW_PTN PT_union((yyvsp[(1) - (4)].query_expression), (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), nested_qe);
          }
    break;

  case 1154:
/* Line 1792 of yacc.c  */
#line 8747 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.query_expression)= (yyvsp[(2) - (3)].query_expression); }
    break;

  case 1155:
/* Line 1792 of yacc.c  */
#line 8749 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              We don't call set_parentheses() on a query expression here. It
              makes no difference to the contextualization phase whether a
              query expression was within parentheses unless it is used in
              conjunction with UNION. Therefore set_parentheses() is called
              only in the rules producing UNION syntax.

              The need for set_parentheses() is purely to support legacy parse
              rules, and we are gradually moving away from them and using the
              query_expression_body to define UNION syntax. When this move is
              complete, we will not need set_parentheses() any more, and the
              contextualize() phase can be greatly simplified.
            */
            (yyval.query_expression)= (yyvsp[(2) - (3)].query_expression);
          }
    break;

  case 1156:
/* Line 1792 of yacc.c  */
#line 8769 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[(1) - (1)].query_primary);
          }
    break;

  case 1157:
/* Line 1792 of yacc.c  */
#line 8784 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[(1) - (8)].optimizer_hints),  // SELECT_SYM
                                      (yyvsp[(2) - (8)].select_options),  // select_options
                                      (yyvsp[(3) - (8)].item_list2),  // select_item_list
                                      (yyvsp[(4) - (8)].into_destination),  // into_clause
                                      (yyvsp[(5) - (8)].table_reference_list),  // from
                                      (yyvsp[(6) - (8)].item),  // where
                                      (yyvsp[(7) - (8)].group),  // group
                                      (yyvsp[(8) - (8)].item)); // having
          }
    break;

  case 1158:
/* Line 1792 of yacc.c  */
#line 8802 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[(1) - (7)].optimizer_hints),  // SELECT_SYM
                                      (yyvsp[(2) - (7)].select_options),  // select_options
                                      (yyvsp[(3) - (7)].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[(4) - (7)].table_reference_list),  // from
                                      (yyvsp[(5) - (7)].item),  // where
                                      (yyvsp[(6) - (7)].group),  // group
                                      (yyvsp[(7) - (7)].item)); // having
          }
    break;

  case 1159:
/* Line 1792 of yacc.c  */
#line 8816 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
    break;

  case 1161:
/* Line 1792 of yacc.c  */
#line 8821 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (2)].table_reference_list); }
    break;

  case 1162:
/* Line 1792 of yacc.c  */
#line 8825 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
    break;

  case 1164:
/* Line 1792 of yacc.c  */
#line 8831 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[(1) - (1)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1165:
/* Line 1792 of yacc.c  */
#line 8837 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list)= (yyvsp[(1) - (3)].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[(3) - (3)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1166:
/* Line 1792 of yacc.c  */
#line 8846 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1168:
/* Line 1792 of yacc.c  */
#line 8855 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.select_options).merge((yyvsp[(1) - (2)].select_options), (yyvsp[(2) - (2)].select_options)))
              MYSQL_YYABORT;
          }
    break;

  case 1170:
/* Line 1792 of yacc.c  */
#line 8864 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= (yyvsp[(1) - (1)].ulonglong_number);
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1171:
/* Line 1792 of yacc.c  */
#line 8869 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
    break;

  case 1172:
/* Line 1792 of yacc.c  */
#line 8878 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE;
          }
    break;

  case 1173:
/* Line 1792 of yacc.c  */
#line 8889 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.select_lock_type)= Select_lock_type(); }
    break;

  case 1174:
/* Line 1792 of yacc.c  */
#line 8891 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lock_type).is_set= true;
            (yyval.select_lock_type).lock_type= TL_WRITE;
            (yyval.select_lock_type).is_safe_to_cache_query= false;
          }
    break;

  case 1175:
/* Line 1792 of yacc.c  */
#line 8897 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lock_type).is_set= true;
            (yyval.select_lock_type).lock_type= TL_READ_WITH_SHARED_LOCKS;
            (yyval.select_lock_type).is_safe_to_cache_query= false;
          }
    break;

  case 1176:
/* Line 1792 of yacc.c  */
#line 8906 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1177:
/* Line 1792 of yacc.c  */
#line 8912 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1178:
/* Line 1792 of yacc.c  */
#line 8918 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
    break;

  case 1179:
/* Line 1792 of yacc.c  */
#line 8927 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1180:
/* Line 1792 of yacc.c  */
#line 8929 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[(1) - (2)].item), (yylsp[(1) - (2)]).cpp, (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1181:
/* Line 1792 of yacc.c  */
#line 8936 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1182:
/* Line 1792 of yacc.c  */
#line 8937 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1183:
/* Line 1792 of yacc.c  */
#line 8938 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1184:
/* Line 1792 of yacc.c  */
#line 8939 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1185:
/* Line 1792 of yacc.c  */
#line 8940 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1186:
/* Line 1792 of yacc.c  */
#line 8944 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1187:
/* Line 1792 of yacc.c  */
#line 8945 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1188:
/* Line 1792 of yacc.c  */
#line 8951 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1189:
/* Line 1792 of yacc.c  */
#line 8957 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1190:
/* Line 1792 of yacc.c  */
#line 8962 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1191:
/* Line 1792 of yacc.c  */
#line 8968 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1192:
/* Line 1792 of yacc.c  */
#line 8972 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_istrue((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1193:
/* Line 1792 of yacc.c  */
#line 8976 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnottrue((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1194:
/* Line 1792 of yacc.c  */
#line 8980 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isfalse((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1195:
/* Line 1792 of yacc.c  */
#line 8984 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotfalse((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1196:
/* Line 1792 of yacc.c  */
#line 8988 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1197:
/* Line 1792 of yacc.c  */
#line 8992 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1199:
/* Line 1792 of yacc.c  */
#line 9000 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1200:
/* Line 1792 of yacc.c  */
#line 9004 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1201:
/* Line 1792 of yacc.c  */
#line 9008 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(2) - (3)].boolfunc2creator), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1202:
/* Line 1792 of yacc.c  */
#line 9012 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (4)].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[(2) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(2) - (4)].boolfunc2creator), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].subquery));
          }
    break;

  case 1204:
/* Line 1792 of yacc.c  */
#line 9029 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].subquery));
          }
    break;

  case 1205:
/* Line 1792 of yacc.c  */
#line 9033 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(4) - (4)].subquery));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1206:
/* Line 1792 of yacc.c  */
#line 9038 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
          }
    break;

  case 1207:
/* Line 1792 of yacc.c  */
#line 9042 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item_list2) == NULL || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(4) - (7)].item)) || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(1) - (7)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(6) - (7)].item_list2), false);
          }
    break;

  case 1208:
/* Line 1792 of yacc.c  */
#line 9049 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
          }
    break;

  case 1209:
/* Line 1792 of yacc.c  */
#line 9053 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(7) - (8)].item_list2) == NULL || (yyvsp[(7) - (8)].item_list2)->push_front((yyvsp[(5) - (8)].item)) || (yyvsp[(7) - (8)].item_list2)->value.push_front((yyvsp[(1) - (8)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(7) - (8)].item_list2), true);
          }
    break;

  case 1210:
/* Line 1792 of yacc.c  */
#line 9060 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].item), false);
          }
    break;

  case 1211:
/* Line 1792 of yacc.c  */
#line 9064 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].item), true);
          }
    break;

  case 1212:
/* Line 1792 of yacc.c  */
#line 9068 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(1) - (4)].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
    break;

  case 1213:
/* Line 1792 of yacc.c  */
#line 9076 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(3) - (4)].item), (yyvsp[(4) - (4)].item));
          }
    break;

  case 1214:
/* Line 1792 of yacc.c  */
#line 9080 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_not((yyloc), item);
          }
    break;

  case 1215:
/* Line 1792 of yacc.c  */
#line 9087 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1216:
/* Line 1792 of yacc.c  */
#line 9091 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(4) - (4)].item));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1218:
/* Line 1792 of yacc.c  */
#line 9100 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1219:
/* Line 1792 of yacc.c  */
#line 9104 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1220:
/* Line 1792 of yacc.c  */
#line 9108 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1221:
/* Line 1792 of yacc.c  */
#line 9112 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1222:
/* Line 1792 of yacc.c  */
#line 9116 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1223:
/* Line 1792 of yacc.c  */
#line 9120 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1224:
/* Line 1792 of yacc.c  */
#line 9124 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 0);
          }
    break;

  case 1225:
/* Line 1792 of yacc.c  */
#line 9128 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 1);
          }
    break;

  case 1226:
/* Line 1792 of yacc.c  */
#line 9132 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1227:
/* Line 1792 of yacc.c  */
#line 9136 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1228:
/* Line 1792 of yacc.c  */
#line 9140 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1229:
/* Line 1792 of yacc.c  */
#line 9144 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1230:
/* Line 1792 of yacc.c  */
#line 9148 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1231:
/* Line 1792 of yacc.c  */
#line 9152 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1241:
/* Line 1792 of yacc.c  */
#line 9179 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1242:
/* Line 1792 of yacc.c  */
#line 9180 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
    break;

  case 1243:
/* Line 1792 of yacc.c  */
#line 9181 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1244:
/* Line 1792 of yacc.c  */
#line 9182 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1245:
/* Line 1792 of yacc.c  */
#line 9183 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1246:
/* Line 1792 of yacc.c  */
#line 9184 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1247:
/* Line 1792 of yacc.c  */
#line 9185 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1248:
/* Line 1792 of yacc.c  */
#line 9189 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1249:
/* Line 1792 of yacc.c  */
#line 9190 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1255:
/* Line 1792 of yacc.c  */
#line 9200 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1257:
/* Line 1792 of yacc.c  */
#line 9204 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].param_marker); }
    break;

  case 1260:
/* Line 1792 of yacc.c  */
#line 9208 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1261:
/* Line 1792 of yacc.c  */
#line 9212 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
    break;

  case 1262:
/* Line 1792 of yacc.c  */
#line 9216 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1263:
/* Line 1792 of yacc.c  */
#line 9220 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1264:
/* Line 1792 of yacc.c  */
#line 9224 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1265:
/* Line 1792 of yacc.c  */
#line 9228 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[(1) - (1)].subquery));
          }
    break;

  case 1266:
/* Line 1792 of yacc.c  */
#line 9231 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1267:
/* Line 1792 of yacc.c  */
#line 9233 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item_list2)->value);
          }
    break;

  case 1268:
/* Line 1792 of yacc.c  */
#line 9237 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item_list2)->value);
          }
    break;

  case 1269:
/* Line 1792 of yacc.c  */
#line 9241 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[(2) - (2)].subquery));
          }
    break;

  case 1270:
/* Line 1792 of yacc.c  */
#line 9245 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[(2) - (4)].lex_str), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1271:
/* Line 1792 of yacc.c  */
#line 9249 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[(2) - (7)].item_list2), (yyvsp[(5) - (7)].item), (yyvsp[(6) - (7)].num));
          }
    break;

  case 1272:
/* Line 1792 of yacc.c  */
#line 9253 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(2) - (2)]), (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
    break;

  case 1273:
/* Line 1792 of yacc.c  */
#line 9257 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1274:
/* Line 1792 of yacc.c  */
#line 9261 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
          }
    break;

  case 1275:
/* Line 1792 of yacc.c  */
#line 9265 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1276:
/* Line 1792 of yacc.c  */
#line 9269 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
          }
    break;

  case 1277:
/* Line 1792 of yacc.c  */
#line 9273 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1278:
/* Line 1792 of yacc.c  */
#line 9277 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1279:
/* Line 1792 of yacc.c  */
#line 9282 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(5) - (5)].item), (yyvsp[(2) - (5)].item), (yyvsp[(3) - (5)].interval), 0);
          }
    break;

  case 1280:
/* Line 1792 of yacc.c  */
#line 9286 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
          }
    break;

  case 1281:
/* Line 1792 of yacc.c  */
#line 9293 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
    break;

  case 1282:
/* Line 1792 of yacc.c  */
#line 9310 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1283:
/* Line 1792 of yacc.c  */
#line 9314 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (6)].item_list2), (yyvsp[(5) - (6)].charset));
          }
    break;

  case 1284:
/* Line 1792 of yacc.c  */
#line 9318 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
    break;

  case 1285:
/* Line 1792 of yacc.c  */
#line 9322 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1286:
/* Line 1792 of yacc.c  */
#line 9326 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1287:
/* Line 1792 of yacc.c  */
#line 9330 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1288:
/* Line 1792 of yacc.c  */
#line 9334 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].item), (yyvsp[(7) - (10)].item), (yyvsp[(9) - (10)].item));
          }
    break;

  case 1289:
/* Line 1792 of yacc.c  */
#line 9338 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1290:
/* Line 1792 of yacc.c  */
#line 9342 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item_list2));
          }
    break;

  case 1291:
/* Line 1792 of yacc.c  */
#line 9346 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1292:
/* Line 1792 of yacc.c  */
#line 9350 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1293:
/* Line 1792 of yacc.c  */
#line 9354 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1294:
/* Line 1792 of yacc.c  */
#line 9358 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1295:
/* Line 1792 of yacc.c  */
#line 9362 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1296:
/* Line 1792 of yacc.c  */
#line 9366 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_time_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1297:
/* Line 1792 of yacc.c  */
#line 9370 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_datetime_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1298:
/* Line 1792 of yacc.c  */
#line 9374 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
          }
    break;

  case 1299:
/* Line 1792 of yacc.c  */
#line 9378 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(3) - (4)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1300:
/* Line 1792 of yacc.c  */
#line 9383 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1301:
/* Line 1792 of yacc.c  */
#line 9388 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1302:
/* Line 1792 of yacc.c  */
#line 9393 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1303:
/* Line 1792 of yacc.c  */
#line 9397 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1304:
/* Line 1792 of yacc.c  */
#line 9401 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1305:
/* Line 1792 of yacc.c  */
#line 9405 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1306:
/* Line 1792 of yacc.c  */
#line 9409 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), (yyvsp[(3) - (6)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1307:
/* Line 1792 of yacc.c  */
#line 9414 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
    break;

  case 1308:
/* Line 1792 of yacc.c  */
#line 9418 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1309:
/* Line 1792 of yacc.c  */
#line 9437 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 0);
          }
    break;

  case 1310:
/* Line 1792 of yacc.c  */
#line 9441 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1311:
/* Line 1792 of yacc.c  */
#line 9445 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
    break;

  case 1312:
/* Line 1792 of yacc.c  */
#line 9449 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1313:
/* Line 1792 of yacc.c  */
#line 9454 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1314:
/* Line 1792 of yacc.c  */
#line 9459 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1315:
/* Line 1792 of yacc.c  */
#line 9463 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1316:
/* Line 1792 of yacc.c  */
#line 9467 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1317:
/* Line 1792 of yacc.c  */
#line 9471 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 1318:
/* Line 1792 of yacc.c  */
#line 9476 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
          }
    break;

  case 1319:
/* Line 1792 of yacc.c  */
#line 9480 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 1);
          }
    break;

  case 1320:
/* Line 1792 of yacc.c  */
#line 9484 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1321:
/* Line 1792 of yacc.c  */
#line 9488 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1322:
/* Line 1792 of yacc.c  */
#line 9492 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1323:
/* Line 1792 of yacc.c  */
#line 9496 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1324:
/* Line 1792 of yacc.c  */
#line 9500 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1325:
/* Line 1792 of yacc.c  */
#line 9504 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1326:
/* Line 1792 of yacc.c  */
#line 9509 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(7) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(3) - (8)].interval_time_st), 0);
          }
    break;

  case 1327:
/* Line 1792 of yacc.c  */
#line 9513 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
          }
    break;

  case 1328:
/* Line 1792 of yacc.c  */
#line 9517 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
    break;

  case 1329:
/* Line 1792 of yacc.c  */
#line 9521 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1330:
/* Line 1792 of yacc.c  */
#line 9525 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1331:
/* Line 1792 of yacc.c  */
#line 9537 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1332:
/* Line 1792 of yacc.c  */
#line 9541 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1333:
/* Line 1792 of yacc.c  */
#line 9545 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1334:
/* Line 1792 of yacc.c  */
#line 9549 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1335:
/* Line 1792 of yacc.c  */
#line 9553 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
    break;

  case 1336:
/* Line 1792 of yacc.c  */
#line 9557 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1337:
/* Line 1792 of yacc.c  */
#line 9561 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1338:
/* Line 1792 of yacc.c  */
#line 9565 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
          }
    break;

  case 1339:
/* Line 1792 of yacc.c  */
#line 9569 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1340:
/* Line 1792 of yacc.c  */
#line 9573 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1341:
/* Line 1792 of yacc.c  */
#line 9577 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_password((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1342:
/* Line 1792 of yacc.c  */
#line 9581 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1343:
/* Line 1792 of yacc.c  */
#line 9585 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1344:
/* Line 1792 of yacc.c  */
#line 9589 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1345:
/* Line 1792 of yacc.c  */
#line 9593 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1346:
/* Line 1792 of yacc.c  */
#line 9597 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
    break;

  case 1347:
/* Line 1792 of yacc.c  */
#line 9601 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
          }
    break;

  case 1348:
/* Line 1792 of yacc.c  */
#line 9605 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (4)].item), NULL);
          }
    break;

  case 1349:
/* Line 1792 of yacc.c  */
#line 9609 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1350:
/* Line 1792 of yacc.c  */
#line 9613 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (5)].item), 0, 0, (yyvsp[(4) - (5)].ulong_num));
          }
    break;

  case 1351:
/* Line 1792 of yacc.c  */
#line 9617 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (8)].item), 0, (yyvsp[(6) - (8)].ulong_num),
                        (yyvsp[(7) - (8)].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
          }
    break;

  case 1352:
/* Line 1792 of yacc.c  */
#line 9622 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc),
                        (yyvsp[(3) - (7)].item), 0, (yyvsp[(6) - (7)].ulong_num), MY_STRXFRM_PAD_WITH_SPACE, true);
          }
    break;

  case 1353:
/* Line 1792 of yacc.c  */
#line 9627 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
          }
    break;

  case 1355:
/* Line 1792 of yacc.c  */
#line 9635 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
    break;

  case 1356:
/* Line 1792 of yacc.c  */
#line 9641 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
    break;

  case 1357:
/* Line 1792 of yacc.c  */
#line 9647 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
    break;

  case 1358:
/* Line 1792 of yacc.c  */
#line 9653 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
    break;

  case 1359:
/* Line 1792 of yacc.c  */
#line 9659 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
    break;

  case 1360:
/* Line 1792 of yacc.c  */
#line 9665 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1361:
/* Line 1792 of yacc.c  */
#line 9669 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
    break;

  case 1362:
/* Line 1792 of yacc.c  */
#line 9687 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1363:
/* Line 1792 of yacc.c  */
#line 9691 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), (yyvsp[(5) - (6)].item_list2));
          }
    break;

  case 1364:
/* Line 1792 of yacc.c  */
#line 9698 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1365:
/* Line 1792 of yacc.c  */
#line 9700 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                MYSQLerror(NULL,thd,"syntax error");
                            });
          }
    break;

  case 1366:
/* Line 1792 of yacc.c  */
#line 9712 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1367:
/* Line 1792 of yacc.c  */
#line 9713 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1368:
/* Line 1792 of yacc.c  */
#line 9717 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1369:
/* Line 1792 of yacc.c  */
#line 9718 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1370:
/* Line 1792 of yacc.c  */
#line 9722 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1371:
/* Line 1792 of yacc.c  */
#line 9723 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1372:
/* Line 1792 of yacc.c  */
#line 9728 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1373:
/* Line 1792 of yacc.c  */
#line 9734 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1374:
/* Line 1792 of yacc.c  */
#line 9743 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].lex_str), (yylsp[(1) - (2)]).cpp);
          }
    break;

  case 1375:
/* Line 1792 of yacc.c  */
#line 9750 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1376:
/* Line 1792 of yacc.c  */
#line 9754 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1377:
/* Line 1792 of yacc.c  */
#line 9758 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1378:
/* Line 1792 of yacc.c  */
#line 9762 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1379:
/* Line 1792 of yacc.c  */
#line 9766 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1380:
/* Line 1792 of yacc.c  */
#line 9770 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc));
          }
    break;

  case 1381:
/* Line 1792 of yacc.c  */
#line 9774 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1382:
/* Line 1792 of yacc.c  */
#line 9778 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[(4) - (5)].item_list2));
          }
    break;

  case 1383:
/* Line 1792 of yacc.c  */
#line 9782 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1384:
/* Line 1792 of yacc.c  */
#line 9791 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1385:
/* Line 1792 of yacc.c  */
#line 9795 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1386:
/* Line 1792 of yacc.c  */
#line 9799 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1387:
/* Line 1792 of yacc.c  */
#line 9803 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1388:
/* Line 1792 of yacc.c  */
#line 9807 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1389:
/* Line 1792 of yacc.c  */
#line 9811 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1390:
/* Line 1792 of yacc.c  */
#line 9815 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1391:
/* Line 1792 of yacc.c  */
#line 9819 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1392:
/* Line 1792 of yacc.c  */
#line 9823 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1393:
/* Line 1792 of yacc.c  */
#line 9830 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[(3) - (7)].num), (yyvsp[(4) - (7)].item_list2), (yyvsp[(5) - (7)].order_list), (yyvsp[(6) - (7)].string));
          }
    break;

  case 1394:
/* Line 1792 of yacc.c  */
#line 9836 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1395:
/* Line 1792 of yacc.c  */
#line 9841 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1396:
/* Line 1792 of yacc.c  */
#line 9845 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1397:
/* Line 1792 of yacc.c  */
#line 9849 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yylsp[(3) - (4)]), (yyvsp[(4) - (4)].lex_str));
          }
    break;

  case 1398:
/* Line 1792 of yacc.c  */
#line 9855 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1399:
/* Line 1792 of yacc.c  */
#line 9856 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1400:
/* Line 1792 of yacc.c  */
#line 9861 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1401:
/* Line 1792 of yacc.c  */
#line 9866 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1402:
/* Line 1792 of yacc.c  */
#line 9870 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= NULL; }
    break;

  case 1403:
/* Line 1792 of yacc.c  */
#line 9871 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= (yyvsp[(3) - (3)].order_list); }
    break;

  case 1404:
/* Line 1792 of yacc.c  */
#line 9876 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1405:
/* Line 1792 of yacc.c  */
#line 9881 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1406:
/* Line 1792 of yacc.c  */
#line 9891 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1407:
/* Line 1792 of yacc.c  */
#line 9898 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1408:
/* Line 1792 of yacc.c  */
#line 9905 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[(2) - (3)].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[(3) - (3)].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[(3) - (3)].charset_with_opt_binary).charset ? (yyvsp[(3) - (3)].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[(3) - (3)].charset_with_opt_binary).charset;
          }
    break;

  case 1409:
/* Line 1792 of yacc.c  */
#line 9924 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1410:
/* Line 1792 of yacc.c  */
#line 9931 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1411:
/* Line 1792 of yacc.c  */
#line 9938 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1412:
/* Line 1792 of yacc.c  */
#line 9945 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1413:
/* Line 1792 of yacc.c  */
#line 9952 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1414:
/* Line 1792 of yacc.c  */
#line 9959 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1415:
/* Line 1792 of yacc.c  */
#line 9966 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1416:
/* Line 1792 of yacc.c  */
#line 9973 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1417:
/* Line 1792 of yacc.c  */
#line 9980 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].precision).length;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].precision).dec;
          }
    break;

  case 1418:
/* Line 1792 of yacc.c  */
#line 9987 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1419:
/* Line 1792 of yacc.c  */
#line 9996 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1421:
/* Line 1792 of yacc.c  */
#line 10002 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1422:
/* Line 1792 of yacc.c  */
#line 10008 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1423:
/* Line 1792 of yacc.c  */
#line 10016 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1424:
/* Line 1792 of yacc.c  */
#line 10017 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1425:
/* Line 1792 of yacc.c  */
#line 10022 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1426:
/* Line 1792 of yacc.c  */
#line 10028 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1427:
/* Line 1792 of yacc.c  */
#line 10036 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1428:
/* Line 1792 of yacc.c  */
#line 10037 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1429:
/* Line 1792 of yacc.c  */
#line 10041 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1430:
/* Line 1792 of yacc.c  */
#line 10042 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1431:
/* Line 1792 of yacc.c  */
#line 10047 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1432:
/* Line 1792 of yacc.c  */
#line 10055 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1433:
/* Line 1792 of yacc.c  */
#line 10063 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].table_reference); }
    break;

  case 1434:
/* Line 1792 of yacc.c  */
#line 10064 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].join_table); }
    break;

  case 1435:
/* Line 1792 of yacc.c  */
#line 10065 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(3) - (4)].table_reference); }
    break;

  case 1436:
/* Line 1792 of yacc.c  */
#line 10076 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].table_reference); }
    break;

  case 1437:
/* Line 1792 of yacc.c  */
#line 10077 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].join_table); }
    break;

  case 1438:
/* Line 1792 of yacc.c  */
#line 10159 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[(1) - (5)].table_reference), (yylsp[(2) - (5)]), (yyvsp[(2) - (5)].join_type), (yyvsp[(3) - (5)].table_reference), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1439:
/* Line 1792 of yacc.c  */
#line 10164 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (7)].table_reference), (yylsp[(2) - (7)]), (yyvsp[(2) - (7)].join_type), (yyvsp[(3) - (7)].table_reference), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1440:
/* Line 1792 of yacc.c  */
#line 10168 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[(1) - (5)].table_reference), (yylsp[(2) - (5)]), (yyvsp[(2) - (5)].join_type), (yyvsp[(3) - (5)].table_reference), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1441:
/* Line 1792 of yacc.c  */
#line 10172 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (7)].table_reference), (yylsp[(2) - (7)]), (yyvsp[(2) - (7)].join_type), (yyvsp[(3) - (7)].table_reference), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1442:
/* Line 1792 of yacc.c  */
#line 10177 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[(1) - (3)].table_reference), (yylsp[(2) - (3)]), (yyvsp[(2) - (3)].join_type), NULL);

            if ((yyvsp[(3) - (3)].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[(3) - (3)].table_reference)->add_cross_join(this_cross_join);
          }
    break;

  case 1443:
/* Line 1792 of yacc.c  */
#line 10186 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (3)].table_reference), (yylsp[(2) - (3)]), (yyvsp[(2) - (3)].join_type), (yyvsp[(3) - (3)].table_reference));
          }
    break;

  case 1444:
/* Line 1792 of yacc.c  */
#line 10192 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_INNER; }
    break;

  case 1445:
/* Line 1792 of yacc.c  */
#line 10193 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
    break;

  case 1446:
/* Line 1792 of yacc.c  */
#line 10194 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
    break;

  case 1447:
/* Line 1792 of yacc.c  */
#line 10198 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1448:
/* Line 1792 of yacc.c  */
#line 10199 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1449:
/* Line 1792 of yacc.c  */
#line 10200 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1450:
/* Line 1792 of yacc.c  */
#line 10201 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
    break;

  case 1451:
/* Line 1792 of yacc.c  */
#line 10204 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_LEFT; }
    break;

  case 1452:
/* Line 1792 of yacc.c  */
#line 10205 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_RIGHT; }
    break;

  case 1457:
/* Line 1792 of yacc.c  */
#line 10223 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.string_list)= NULL; }
    break;

  case 1459:
/* Line 1792 of yacc.c  */
#line 10229 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (4)].string_list);
          }
    break;

  case 1462:
/* Line 1792 of yacc.c  */
#line 10259 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference) = (yyvsp[(1) - (1)].derived_table); }
    break;

  case 1463:
/* Line 1792 of yacc.c  */
#line 10261 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[(1) - (1)].join_table)); }
    break;

  case 1464:
/* Line 1792 of yacc.c  */
#line 10263 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[(1) - (1)].table_reference_list)); }
    break;

  case 1465:
/* Line 1792 of yacc.c  */
#line 10267 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (3)].table_reference_list); }
    break;

  case 1466:
/* Line 1792 of yacc.c  */
#line 10269 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list)= (yyvsp[(2) - (5)].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[(4) - (5)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1467:
/* Line 1792 of yacc.c  */
#line 10277 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(2) - (3)].table_reference); }
    break;

  case 1468:
/* Line 1792 of yacc.c  */
#line 10278 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(2) - (3)].table_reference); }
    break;

  case 1469:
/* Line 1792 of yacc.c  */
#line 10283 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[(1) - (4)].table), (yyvsp[(2) - (4)].string_list), (yyvsp[(3) - (4)].lex_str_ptr), (yyvsp[(4) - (4)].key_usage_list));
          }
    break;

  case 1470:
/* Line 1792 of yacc.c  */
#line 10289 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.join_table)= (yyvsp[(2) - (3)].join_table); }
    break;

  case 1471:
/* Line 1792 of yacc.c  */
#line 10290 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.join_table)= (yyvsp[(2) - (3)].join_table); }
    break;

  case 1472:
/* Line 1792 of yacc.c  */
#line 10295 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[(2) - (2)].lex_str_ptr) == NULL)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table((yyvsp[(1) - (2)].subquery), (yyvsp[(2) - (2)].lex_str_ptr));
          }
    break;

  case 1473:
/* Line 1792 of yacc.c  */
#line 10311 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
    break;

  case 1474:
/* Line 1792 of yacc.c  */
#line 10314 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1475:
/* Line 1792 of yacc.c  */
#line 10315 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1476:
/* Line 1792 of yacc.c  */
#line 10316 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1477:
/* Line 1792 of yacc.c  */
#line 10320 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1478:
/* Line 1792 of yacc.c  */
#line 10321 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1479:
/* Line 1792 of yacc.c  */
#line 10327 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), (yyvsp[(1) - (6)].index_hint), (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1480:
/* Line 1792 of yacc.c  */
#line 10333 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), INDEX_HINT_USE, (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1482:
/* Line 1792 of yacc.c  */
#line 10342 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].key_usage_list)->concat((yyvsp[(1) - (2)].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[(2) - (2)].key_usage_list);
          }
    break;

  case 1483:
/* Line 1792 of yacc.c  */
#line 10349 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1486:
/* Line 1792 of yacc.c  */
#line 10359 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
    break;

  case 1488:
/* Line 1792 of yacc.c  */
#line 10370 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1489:
/* Line 1792 of yacc.c  */
#line 10376 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1490:
/* Line 1792 of yacc.c  */
#line 10385 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[(1) - (1)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1491:
/* Line 1792 of yacc.c  */
#line 10391 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[(3) - (3)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1493:
/* Line 1792 of yacc.c  */
#line 10403 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[(1) - (1)].lex_str).str),
                                               (yyvsp[(1) - (1)].lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
    break;

  case 1494:
/* Line 1792 of yacc.c  */
#line 10412 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[(3) - (3)].lex_str).str),
                                               (yyvsp[(3) - (3)].lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[(1) - (3)].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1495:
/* Line 1792 of yacc.c  */
#line 10423 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1496:
/* Line 1792 of yacc.c  */
#line 10424 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1497:
/* Line 1792 of yacc.c  */
#line 10425 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1498:
/* Line 1792 of yacc.c  */
#line 10426 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1499:
/* Line 1792 of yacc.c  */
#line 10427 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1500:
/* Line 1792 of yacc.c  */
#line 10428 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1501:
/* Line 1792 of yacc.c  */
#line 10429 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1502:
/* Line 1792 of yacc.c  */
#line 10430 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1503:
/* Line 1792 of yacc.c  */
#line 10431 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1504:
/* Line 1792 of yacc.c  */
#line 10432 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1505:
/* Line 1792 of yacc.c  */
#line 10433 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1506:
/* Line 1792 of yacc.c  */
#line 10434 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1507:
/* Line 1792 of yacc.c  */
#line 10438 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1508:
/* Line 1792 of yacc.c  */
#line 10439 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1509:
/* Line 1792 of yacc.c  */
#line 10440 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1510:
/* Line 1792 of yacc.c  */
#line 10441 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1511:
/* Line 1792 of yacc.c  */
#line 10442 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1512:
/* Line 1792 of yacc.c  */
#line 10443 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1513:
/* Line 1792 of yacc.c  */
#line 10444 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1514:
/* Line 1792 of yacc.c  */
#line 10445 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1515:
/* Line 1792 of yacc.c  */
#line 10446 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1516:
/* Line 1792 of yacc.c  */
#line 10450 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1517:
/* Line 1792 of yacc.c  */
#line 10451 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1518:
/* Line 1792 of yacc.c  */
#line 10452 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1519:
/* Line 1792 of yacc.c  */
#line 10453 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1523:
/* Line 1792 of yacc.c  */
#line 10463 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1524:
/* Line 1792 of yacc.c  */
#line 10465 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1527:
/* Line 1792 of yacc.c  */
#line 10479 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].item) != NULL)
              (yyval.item)= new PTI_context<CTX_WHERE>((yyloc), (yyvsp[(1) - (1)].item));
            else
              (yyval.item)= NULL;
          }
    break;

  case 1528:
/* Line 1792 of yacc.c  */
#line 10487 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1529:
/* Line 1792 of yacc.c  */
#line 10489 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1530:
/* Line 1792 of yacc.c  */
#line 10495 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1531:
/* Line 1792 of yacc.c  */
#line 10497 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new PTI_context<CTX_HAVING>((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1532:
/* Line 1792 of yacc.c  */
#line 10503 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1533:
/* Line 1792 of yacc.c  */
#line 10504 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1534:
/* Line 1792 of yacc.c  */
#line 10512 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.group)= NULL; }
    break;

  case 1535:
/* Line 1792 of yacc.c  */
#line 10514 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[(3) - (4)].order_list), (yyvsp[(4) - (4)].olap_type));
          }
    break;

  case 1536:
/* Line 1792 of yacc.c  */
#line 10521 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1537:
/* Line 1792 of yacc.c  */
#line 10526 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1538:
/* Line 1792 of yacc.c  */
#line 10535 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
    break;

  case 1539:
/* Line 1792 of yacc.c  */
#line 10536 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= CUBE_TYPE; }
    break;

  case 1540:
/* Line 1792 of yacc.c  */
#line 10544 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= ROLLUP_TYPE; }
    break;

  case 1544:
/* Line 1792 of yacc.c  */
#line 10569 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (2)].item), &(yyvsp[(1) - (2)].item));

            THD *thd= YYTHD;
            ORDER *order= (ORDER *) thd->alloc(sizeof(ORDER));
            if (order == NULL)
              MYSQL_YYABORT;
            order->item_ptr= (yyvsp[(1) - (2)].item);
            order->direction= ((yyvsp[(2) - (2)].num) == 1) ? ORDER::ORDER_ASC : ORDER::ORDER_DESC;
            order->is_position= false;
            add_order_to_list(thd, order);
          }
    break;

  case 1545:
/* Line 1792 of yacc.c  */
#line 10588 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.order)= NULL; }
    break;

  case 1547:
/* Line 1792 of yacc.c  */
#line 10594 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[(3) - (3)].order_list));
          }
    break;

  case 1548:
/* Line 1792 of yacc.c  */
#line 10601 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1549:
/* Line 1792 of yacc.c  */
#line 10606 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1550:
/* Line 1792 of yacc.c  */
#line 10615 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1551:
/* Line 1792 of yacc.c  */
#line 10616 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1552:
/* Line 1792 of yacc.c  */
#line 10617 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1553:
/* Line 1792 of yacc.c  */
#line 10621 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.limit_clause)= NULL; }
    break;

  case 1555:
/* Line 1792 of yacc.c  */
#line 10627 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[(2) - (2)].limit_options));
          }
    break;

  case 1556:
/* Line 1792 of yacc.c  */
#line 10634 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (1)].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1557:
/* Line 1792 of yacc.c  */
#line 10640 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).is_offset_first= true;
          }
    break;

  case 1558:
/* Line 1792 of yacc.c  */
#line 10646 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1559:
/* Line 1792 of yacc.c  */
#line 10655 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), (yyvsp[(1) - (1)].lex_str), (yylsp[(1) - (1)]).raw);
          }
    break;

  case 1560:
/* Line 1792 of yacc.c  */
#line 10659 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[(1) - (1)].param_marker));
          }
    break;

  case 1561:
/* Line 1792 of yacc.c  */
#line 10663 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1562:
/* Line 1792 of yacc.c  */
#line 10667 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1563:
/* Line 1792 of yacc.c  */
#line 10671 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1564:
/* Line 1792 of yacc.c  */
#line 10677 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1565:
/* Line 1792 of yacc.c  */
#line 10678 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1566:
/* Line 1792 of yacc.c  */
#line 10682 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1567:
/* Line 1792 of yacc.c  */
#line 10683 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1568:
/* Line 1792 of yacc.c  */
#line 10684 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1569:
/* Line 1792 of yacc.c  */
#line 10685 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1570:
/* Line 1792 of yacc.c  */
#line 10686 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1571:
/* Line 1792 of yacc.c  */
#line 10687 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1572:
/* Line 1792 of yacc.c  */
#line 10691 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1573:
/* Line 1792 of yacc.c  */
#line 10692 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1574:
/* Line 1792 of yacc.c  */
#line 10693 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1575:
/* Line 1792 of yacc.c  */
#line 10694 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1576:
/* Line 1792 of yacc.c  */
#line 10695 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1577:
/* Line 1792 of yacc.c  */
#line 10699 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1578:
/* Line 1792 of yacc.c  */
#line 10700 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1579:
/* Line 1792 of yacc.c  */
#line 10701 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1580:
/* Line 1792 of yacc.c  */
#line 10702 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1581:
/* Line 1792 of yacc.c  */
#line 10703 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1582:
/* Line 1792 of yacc.c  */
#line 10707 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1583:
/* Line 1792 of yacc.c  */
#line 10708 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1584:
/* Line 1792 of yacc.c  */
#line 10709 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1585:
/* Line 1792 of yacc.c  */
#line 10710 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1586:
/* Line 1792 of yacc.c  */
#line 10715 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { my_syntax_error(YYTHD, ER_THD(YYTHD, ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1589:
/* Line 1792 of yacc.c  */
#line 10724 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.procedure_analyse)= NULL; }
    break;

  case 1590:
/* Line 1792 of yacc.c  */
#line 10727 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse)= NEW_PTN PT_procedure_analyse((yyvsp[(4) - (5)].procedure_analyse_params));
          }
    break;

  case 1591:
/* Line 1792 of yacc.c  */
#line 10734 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= Proc_analyse_params::default_max_tree_elements;
            (yyval.procedure_analyse_params).max_treemem= Proc_analyse_params::default_max_treemem;
          }
    break;

  case 1592:
/* Line 1792 of yacc.c  */
#line 10739 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= static_cast<uint>((yyvsp[(1) - (1)].ulonglong_number));
            (yyval.procedure_analyse_params).max_treemem= Proc_analyse_params::default_max_treemem;
          }
    break;

  case 1593:
/* Line 1792 of yacc.c  */
#line 10744 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= static_cast<uint>((yyvsp[(1) - (3)].ulonglong_number));
            (yyval.procedure_analyse_params).max_treemem= static_cast<uint>((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 1594:
/* Line 1792 of yacc.c  */
#line 10752 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            int error;
            (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error);
            if (error != 0)
            {
              my_error(ER_WRONG_PARAMETERS_TO_PROCEDURE, MYF(0), "ANALYSE");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1595:
/* Line 1792 of yacc.c  */
#line 10765 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= (yyvsp[(1) - (3)].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(3) - (3)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1596:
/* Line 1792 of yacc.c  */
#line 10771 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(1) - (1)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1597:
/* Line 1792 of yacc.c  */
#line 10780 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1598:
/* Line 1792 of yacc.c  */
#line 10784 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1599:
/* Line 1792 of yacc.c  */
#line 10791 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= (yyvsp[(2) - (2)].into_destination);
          }
    break;

  case 1600:
/* Line 1792 of yacc.c  */
#line 10800 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[(2) - (5)].lex_str), (yyvsp[(3) - (5)].charset), (yyvsp[(4) - (5)].field_separators), (yyvsp[(5) - (5)].line_separators));
          }
    break;

  case 1601:
/* Line 1792 of yacc.c  */
#line 10804 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1602:
/* Line 1792 of yacc.c  */
#line 10807 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.into_destination)= (yyvsp[(1) - (1)].select_var_list); }
    break;

  case 1603:
/* Line 1792 of yacc.c  */
#line 10816 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_stmt)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_expression_body_primary(
                      NEW_PTN PT_query_specification((yyvsp[(2) - (3)].select_options), (yyvsp[(3) - (3)].item_list2)))));
          }
    break;

  case 1604:
/* Line 1792 of yacc.c  */
#line 10826 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1605:
/* Line 1792 of yacc.c  */
#line 10838 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (6)].is_not_empty);
            lex->drop_if_exists= (yyvsp[(4) - (6)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[(5) - (6)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            lex->drop_mode= (yyvsp[(6) - (6)].opt_restrict);
          }
    break;

  case 1606:
/* Line 1792 of yacc.c  */
#line 10850 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1607:
/* Line 1792 of yacc.c  */
#line 10851 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
    break;

  case 1608:
/* Line 1792 of yacc.c  */
#line 10867 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Parse_context pc(YYTHD, Select);
            if (YYTHD->is_error() || contextualize_nodes((yyvsp[(8) - (8)].index_options), &pc))
              MYSQL_YYABORT;
          }
    break;

  case 1609:
/* Line 1792 of yacc.c  */
#line 10873 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1610:
/* Line 1792 of yacc.c  */
#line 10880 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(6) - (6)].lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name(to_lex_cstring((yyvsp[(4) - (6)].lex_str)), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1611:
/* Line 1792 of yacc.c  */
#line 10903 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(4) - (4)].lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(to_lex_cstring(db), (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1612:
/* Line 1792 of yacc.c  */
#line 10935 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1613:
/* Line 1792 of yacc.c  */
#line 10947 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[(3) - (5)].num);
             lex->users_list= *(yyvsp[(5) - (5)].user_list);
          }
    break;

  case 1614:
/* Line 1792 of yacc.c  */
#line 10954 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (5)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[(4) - (5)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            lex->drop_mode= (yyvsp[(5) - (5)].opt_restrict);
          }
    break;

  case 1615:
/* Line 1792 of yacc.c  */
#line 10966 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1616:
/* Line 1792 of yacc.c  */
#line 10972 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
    break;

  case 1617:
/* Line 1792 of yacc.c  */
#line 10980 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1618:
/* Line 1792 of yacc.c  */
#line 10985 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1619:
/* Line 1792 of yacc.c  */
#line 10990 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[(4) - (4)].lex_str), (yyvsp[(3) - (4)].num));
          }
    break;

  case 1620:
/* Line 1792 of yacc.c  */
#line 10995 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_DROP_ROLE;
            PT_statement *tmp= NEW_PTN PT_drop_role((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].user_list));
            MAKE_CMD(tmp);
          }
    break;

  case 1621:
/* Line 1792 of yacc.c  */
#line 11004 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list)= NEW_PTN Trivial_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[(1) - (1)].table)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1622:
/* Line 1792 of yacc.c  */
#line 11010 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list)= (yyvsp[(1) - (3)].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[(3) - (3)].table)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1623:
/* Line 1792 of yacc.c  */
#line 11019 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1624:
/* Line 1792 of yacc.c  */
#line 11030 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[(1) - (1)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1625:
/* Line 1792 of yacc.c  */
#line 11036 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list)= (yyvsp[(1) - (3)].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[(3) - (3)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1626:
/* Line 1792 of yacc.c  */
#line 11044 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1627:
/* Line 1792 of yacc.c  */
#line 11045 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1628:
/* Line 1792 of yacc.c  */
#line 11049 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1629:
/* Line 1792 of yacc.c  */
#line 11050 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1636:
/* Line 1792 of yacc.c  */
#line 11079 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].column_row_value_list_pair).column_list, (yyvsp[(7) - (8)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1637:
/* Line 1792 of yacc.c  */
#line 11094 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(8) - (9)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(6) - (9)].string_list),
                                  (yyvsp[(8) - (9)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[(9) - (9)].column_value_list_pair).column_list, (yyvsp[(9) - (9)].column_value_list_pair).value_list);
          }
    break;

  case 1638:
/* Line 1792 of yacc.c  */
#line 11111 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].insert_query_expression).column_list, NULL,
                                  (yyvsp[(7) - (8)].insert_query_expression).insert_query_expression,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1639:
/* Line 1792 of yacc.c  */
#line 11126 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].column_row_value_list_pair).column_list, (yyvsp[(6) - (6)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1640:
/* Line 1792 of yacc.c  */
#line 11139 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(7) - (7)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].lock_type), false, (yyvsp[(4) - (7)].table), (yyvsp[(5) - (7)].string_list),
                                  (yyvsp[(7) - (7)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1641:
/* Line 1792 of yacc.c  */
#line 11154 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].insert_query_expression).column_list, NULL,
                                  (yyvsp[(6) - (6)].insert_query_expression).insert_query_expression,
                                  NULL, NULL);
          }
    break;

  case 1642:
/* Line 1792 of yacc.c  */
#line 11163 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
    break;

  case 1643:
/* Line 1792 of yacc.c  */
#line 11164 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1644:
/* Line 1792 of yacc.c  */
#line 11166 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
    break;

  case 1645:
/* Line 1792 of yacc.c  */
#line 11174 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1646:
/* Line 1792 of yacc.c  */
#line 11178 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1647:
/* Line 1792 of yacc.c  */
#line 11180 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
    break;

  case 1650:
/* Line 1792 of yacc.c  */
#line 11197 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(1) - (1)].values_list);
          }
    break;

  case 1651:
/* Line 1792 of yacc.c  */
#line 11202 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(3) - (3)].values_list);
          }
    break;

  case 1652:
/* Line 1792 of yacc.c  */
#line 11207 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(4) - (4)].values_list);
          }
    break;

  case 1653:
/* Line 1792 of yacc.c  */
#line 11215 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(1) - (1)].query_expression);
          }
    break;

  case 1654:
/* Line 1792 of yacc.c  */
#line 11220 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(3) - (3)].query_expression);
          }
    break;

  case 1655:
/* Line 1792 of yacc.c  */
#line 11225 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(4) - (4)].query_expression);
          }
    break;

  case 1656:
/* Line 1792 of yacc.c  */
#line 11233 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1657:
/* Line 1792 of yacc.c  */
#line 11239 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1658:
/* Line 1792 of yacc.c  */
#line 11248 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= (yyvsp[(2) - (2)].values_list);
          }
    break;

  case 1663:
/* Line 1792 of yacc.c  */
#line 11265 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.values_list)->push_back(&(yyvsp[(3) - (3)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1664:
/* Line 1792 of yacc.c  */
#line 11270 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[(1) - (1)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1669:
/* Line 1792 of yacc.c  */
#line 11289 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1670:
/* Line 1792 of yacc.c  */
#line 11294 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1672:
/* Line 1792 of yacc.c  */
#line 11304 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1673:
/* Line 1792 of yacc.c  */
#line 11310 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1675:
/* Line 1792 of yacc.c  */
#line 11320 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
    break;

  case 1676:
/* Line 1792 of yacc.c  */
#line 11327 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
    break;

  case 1677:
/* Line 1792 of yacc.c  */
#line 11332 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(5) - (5)].column_value_list_pair);
          }
    break;

  case 1678:
/* Line 1792 of yacc.c  */
#line 11349 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_update((yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(4) - (9)].table_reference_list), (yyvsp[(6) - (9)].column_value_list_pair).column_list, (yyvsp[(6) - (9)].column_value_list_pair).value_list,
                                  (yyvsp[(7) - (9)].item), (yyvsp[(8) - (9)].order), (yyvsp[(9) - (9)].item));
          }
    break;

  case 1679:
/* Line 1792 of yacc.c  */
#line 11357 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(1) - (3)].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[(3) - (3)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(3) - (3)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1680:
/* Line 1792 of yacc.c  */
#line 11364 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[(1) - (1)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(1) - (1)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1681:
/* Line 1792 of yacc.c  */
#line 11376 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_pair).column= (yyvsp[(1) - (3)].item);
            (yyval.column_value_pair).value= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1682:
/* Line 1792 of yacc.c  */
#line 11383 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1683:
/* Line 1792 of yacc.c  */
#line 11384 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1684:
/* Line 1792 of yacc.c  */
#line 11398 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].num), (yyvsp[(4) - (8)].table), (yyvsp[(5) - (8)].string_list), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].order), (yyvsp[(8) - (8)].item));
          }
    break;

  case 1685:
/* Line 1792 of yacc.c  */
#line 11407 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].num), (yyvsp[(3) - (6)].table_ident_list), (yyvsp[(5) - (6)].table_reference_list), (yyvsp[(6) - (6)].item));
          }
    break;

  case 1686:
/* Line 1792 of yacc.c  */
#line 11417 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].num), (yyvsp[(4) - (7)].table_ident_list), (yyvsp[(6) - (7)].table_reference_list), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1689:
/* Line 1792 of yacc.c  */
#line 11428 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1690:
/* Line 1792 of yacc.c  */
#line 11429 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].opt_delete_option) | (yyvsp[(2) - (2)].num); }
    break;

  case 1691:
/* Line 1792 of yacc.c  */
#line 11433 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_QUICK; }
    break;

  case 1692:
/* Line 1792 of yacc.c  */
#line 11434 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
    break;

  case 1693:
/* Line 1792 of yacc.c  */
#line 11435 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
    break;

  case 1694:
/* Line 1792 of yacc.c  */
#line 11440 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1695:
/* Line 1792 of yacc.c  */
#line 11448 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= NEW_PTN Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1702:
/* Line 1792 of yacc.c  */
#line 11473 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1703:
/* Line 1792 of yacc.c  */
#line 11477 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1704:
/* Line 1792 of yacc.c  */
#line 11481 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1705:
/* Line 1792 of yacc.c  */
#line 11485 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1706:
/* Line 1792 of yacc.c  */
#line 11489 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1707:
/* Line 1792 of yacc.c  */
#line 11493 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1708:
/* Line 1792 of yacc.c  */
#line 11497 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1709:
/* Line 1792 of yacc.c  */
#line 11501 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1710:
/* Line 1792 of yacc.c  */
#line 11505 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1711:
/* Line 1792 of yacc.c  */
#line 11512 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
      Lex->query_id= 0;
    }
    break;

  case 1712:
/* Line 1792 of yacc.c  */
#line 11516 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
      int error;
      Lex->query_id= static_cast<my_thread_id>(my_strtoll10((yyvsp[(3) - (3)].lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
    break;

  case 1713:
/* Line 1792 of yacc.c  */
#line 11528 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1715:
/* Line 1792 of yacc.c  */
#line 11539 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
             Lex->sql_command= SQLCOM_SHOW_DATABASES;
             Item *where_cond= Select->where_cond();
             Select->set_where_cond(NULL);
             if (dd::info_schema::build_show_databases_query(
                       (yyloc), YYTHD, Lex->wild, where_cond) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1716:
/* Line 1792 of yacc.c  */
#line 11548 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             Item *where_cond= Select->where_cond();
             Select->set_where_cond(NULL);
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         where_cond, false) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1717:
/* Line 1792 of yacc.c  */
#line 11559 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
    break;

  case 1718:
/* Line 1792 of yacc.c  */
#line 11567 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[(2) - (3)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
    break;

  case 1719:
/* Line 1792 of yacc.c  */
#line 11575 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             Item *where_cond= Select->where_cond();
             Select->set_where_cond(NULL);
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         where_cond, true) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1720:
/* Line 1792 of yacc.c  */
#line 11586 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1721:
/* Line 1792 of yacc.c  */
#line 11594 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1722:
/* Line 1792 of yacc.c  */
#line 11601 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            const bool is_temp_table=
              Lex->create_info->options & HA_LEX_CREATE_TMP_TABLE;
            if (resolve_engine(YYTHD, (yyvsp[(2) - (3)].lex_str), is_temp_table, true,
                               &Lex->create_info->db_type))
              MYSQL_YYABORT;
          }
    break;

  case 1723:
/* Line 1792 of yacc.c  */
#line 11609 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->create_info->db_type= NULL; }
    break;

  case 1724:
/* Line 1792 of yacc.c  */
#line 11611 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            LEX_STRING db;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));

            if ((yyvsp[(4) - (6)].table)->db.str)
              db.str= (char *) (yyvsp[(4) - (6)].table)->db.str;
            else if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;

            if (find_temporary_table(YYTHD, db.str, (yyvsp[(4) - (6)].table)->table.str) != nullptr)
            {
              // Itemize the condition.
              Item *cond= Select->where_cond();
              if (cond)
              {
                ITEMIZE(cond, &cond);
                Select->set_where_cond(cond);
              }

              if (prepare_schema_table(YYTHD, lex, (yyvsp[(4) - (6)].table), SCH_TMP_TABLE_COLUMNS))
                MYSQL_YYABORT;
            }
            else
            {
               Item *where_cond= Select->where_cond();
               Select->set_where_cond(NULL);
               if (dd::info_schema::build_show_columns_query(
                         (yyloc), YYTHD, (yyvsp[(4) - (6)].table), lex->wild, where_cond) == nullptr)
                  MYSQL_YYABORT;
            }
          }
    break;

  case 1725:
/* Line 1792 of yacc.c  */
#line 11646 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1726:
/* Line 1792 of yacc.c  */
#line 11650 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1727:
/* Line 1792 of yacc.c  */
#line 11654 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1728:
/* Line 1792 of yacc.c  */
#line 11659 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (6)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (6)].limit_clause));
          }
    break;

  case 1729:
/* Line 1792 of yacc.c  */
#line 11664 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1730:
/* Line 1792 of yacc.c  */
#line 11669 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (7)].limit_clause));
          }
    break;

  case 1731:
/* Line 1792 of yacc.c  */
#line 11678 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            LEX_STRING db;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));

            if ((yyvsp[(3) - (5)].table)->db.str)
              db.str= (char *) (yyvsp[(3) - (5)].table)->db.str;
            else if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;

            if (find_temporary_table(YYTHD, db.str, (yyvsp[(3) - (5)].table)->table.str) != NULL)
            {
              if ((yyvsp[(5) - (5)].item) != NULL)
              {
                Item *where_context= new PTI_context<CTX_WHERE>((yyloc), (yyvsp[(5) - (5)].item));
                ITEMIZE(where_context, &(yyvsp[(5) - (5)].item));
              }
              Select->set_where_cond((yyvsp[(5) - (5)].item));

              if (prepare_schema_table(YYTHD, lex, (yyvsp[(3) - (5)].table), SCH_TMP_TABLE_KEYS))
                MYSQL_YYABORT;
            }
            else
            {
               if (dd::info_schema::build_show_keys_query(
                                      (yyloc), YYTHD, (yyvsp[(3) - (5)].table), (yyvsp[(5) - (5)].item)) == nullptr)
                  MYSQL_YYABORT;
            }
          }
    break;

  case 1732:
/* Line 1792 of yacc.c  */
#line 11710 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1733:
/* Line 1792 of yacc.c  */
#line 11717 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "warning_count");
          }
    break;

  case 1734:
/* Line 1792 of yacc.c  */
#line 11723 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "error_count");
          }
    break;

  case 1735:
/* Line 1792 of yacc.c  */
#line 11729 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
    break;

  case 1736:
/* Line 1792 of yacc.c  */
#line 11737 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
    break;

  case 1737:
/* Line 1792 of yacc.c  */
#line 11745 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
    break;

  case 1738:
/* Line 1792 of yacc.c  */
#line 11753 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(4) - (4)].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1739:
/* Line 1792 of yacc.c  */
#line 11763 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_STATUS;
          }
    break;

  case 1740:
/* Line 1792 of yacc.c  */
#line 11767 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->sql_command= SQLCOM_SHOW_STATUS;
              lex->option_type= (yyvsp[(1) - (4)].var_type);
              if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ((yyvsp[(1) - (4)].var_type) == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_status((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_status((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          }
    break;

  case 1741:
/* Line 1792 of yacc.c  */
#line 11798 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1742:
/* Line 1792 of yacc.c  */
#line 11800 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_VARIABLES;
          }
    break;

  case 1743:
/* Line 1792 of yacc.c  */
#line 11804 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->option_type= (yyvsp[(1) - (4)].var_type);
              if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ((yyvsp[(1) - (4)].var_type) == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_variables((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_variables((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          }
    break;

  case 1744:
/* Line 1792 of yacc.c  */
#line 11834 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_CHARSETS;
            Item *where_cond= Select->where_cond();
            Select->set_where_cond(NULL);
            if (dd::info_schema::build_show_character_set_query(
                                  (yyloc), YYTHD, Lex->wild, where_cond) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 1745:
/* Line 1792 of yacc.c  */
#line 11843 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            Item *where_cond= Select->where_cond();
            Select->set_where_cond(NULL);
            if (dd::info_schema::build_show_collation_query(
                                  (yyloc), YYTHD, Lex->wild, where_cond) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 1746:
/* Line 1792 of yacc.c  */
#line 11852 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
            /* Show all available grants in the server */
          }
    break;

  case 1747:
/* Line 1792 of yacc.c  */
#line 11858 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;			
            PT_statement *tmp= NEW_PTN PT_show_privileges(0, 0);
            MAKE_CMD(tmp);
          }
    break;

  case 1748:
/* Line 1792 of yacc.c  */
#line 11864 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            PT_statement *tmp= NEW_PTN PT_show_privileges((yyvsp[(3) - (3)].lex_user), 0);
            MAKE_CMD(tmp);
          }
    break;

  case 1749:
/* Line 1792 of yacc.c  */
#line 11871 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            PT_statement *tmp= NEW_PTN PT_show_privileges((yyvsp[(3) - (5)].lex_user), (yyvsp[(5) - (5)].user_list));
            MAKE_CMD(tmp);
          }
    break;

  case 1750:
/* Line 1792 of yacc.c  */
#line 11877 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info->options= (yyvsp[(3) - (4)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1751:
/* Line 1792 of yacc.c  */
#line 11883 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1752:
/* Line 1792 of yacc.c  */
#line 11892 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1753:
/* Line 1792 of yacc.c  */
#line 11900 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1754:
/* Line 1792 of yacc.c  */
#line 11904 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1755:
/* Line 1792 of yacc.c  */
#line 11908 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1756:
/* Line 1792 of yacc.c  */
#line 11915 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1757:
/* Line 1792 of yacc.c  */
#line 11922 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1758:
/* Line 1792 of yacc.c  */
#line 11928 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1759:
/* Line 1792 of yacc.c  */
#line 11935 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1760:
/* Line 1792 of yacc.c  */
#line 11942 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1761:
/* Line 1792 of yacc.c  */
#line 11947 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1762:
/* Line 1792 of yacc.c  */
#line 11952 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1763:
/* Line 1792 of yacc.c  */
#line 11957 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[(4) - (4)].lex_user);
          }
    break;

  case 1764:
/* Line 1792 of yacc.c  */
#line 11966 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1765:
/* Line 1792 of yacc.c  */
#line 11968 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1766:
/* Line 1792 of yacc.c  */
#line 11970 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1771:
/* Line 1792 of yacc.c  */
#line 11984 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1772:
/* Line 1792 of yacc.c  */
#line 11985 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1773:
/* Line 1792 of yacc.c  */
#line 11989 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1774:
/* Line 1792 of yacc.c  */
#line 11990 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1777:
/* Line 1792 of yacc.c  */
#line 11999 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1778:
/* Line 1792 of yacc.c  */
#line 12000 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1779:
/* Line 1792 of yacc.c  */
#line 12004 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1780:
/* Line 1792 of yacc.c  */
#line 12005 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1782:
/* Line 1792 of yacc.c  */
#line 12011 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= NEW_PTN String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1783:
/* Line 1792 of yacc.c  */
#line 12017 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Select->set_where_cond((yyvsp[(2) - (2)].item));
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1785:
/* Line 1792 of yacc.c  */
#line 12029 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= NEW_PTN String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1786:
/* Line 1792 of yacc.c  */
#line 12035 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (show_compatibility_56 &&
                (Lex->sql_command == SQLCOM_SHOW_STATUS ||
                 Lex->sql_command == SQLCOM_SHOW_VARIABLES))
            {
              /*
                This parsed tree fragment is added as part of a
                SQLCOM_SHOW_STATUS or SQLCOM_SHOW_VARIABLES command.
              */
              ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

              Select->set_where_cond((yyvsp[(2) - (2)].item));
              if ((yyvsp[(2) - (2)].item))
                (yyvsp[(2) - (2)].item)->top_level_item();
            }
            else
            {
              /*
                This parsed tree fragment is used to build a
                SQLCOM_SELECT statement, see sql/sql_show_status.cc
              */
              Select->set_where_cond((yyvsp[(2) - (2)].item));
            }
          }
    break;

  case 1787:
/* Line 1792 of yacc.c  */
#line 12064 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            LEX_STRING db;
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex->db= NULL;
            lex->verbose= 0;

            if ((yyvsp[(2) - (3)].table)->db.str)
              db.str= (char *) (yyvsp[(2) - (3)].table)->db.str;
            else if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;

            if (find_temporary_table(YYTHD, db.str, (yyvsp[(2) - (3)].table)->table.str) != NULL)
            {
              if (prepare_schema_table(YYTHD, lex, (yyvsp[(2) - (3)].table), SCH_TMP_TABLE_COLUMNS))
                MYSQL_YYABORT;
            }
            else
            {
              if (dd::info_schema::build_show_columns_query(
                    (yyloc), YYTHD, (yyvsp[(2) - (3)].table), lex->wild, nullptr) == nullptr)
                 MYSQL_YYABORT;
            }

            // WL#6599 opt_describe_column is handled during prepare
            // stage in prepare_schema_dd_view instead of execution stage
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1788:
/* Line 1792 of yacc.c  */
#line 12094 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->describe|= DESCRIBE_NORMAL;
          }
    break;

  case 1790:
/* Line 1792 of yacc.c  */
#line 12101 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select_stmt)); }
    break;

  case 1791:
/* Line 1792 of yacc.c  */
#line 12102 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1792:
/* Line 1792 of yacc.c  */
#line 12103 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1793:
/* Line 1792 of yacc.c  */
#line 12104 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1794:
/* Line 1792 of yacc.c  */
#line 12105 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1795:
/* Line 1792 of yacc.c  */
#line 12107 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_EXPLAIN_OTHER;
            if (Lex->sphead)
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "non-standalone EXPLAIN FOR CONNECTION");
              MYSQL_YYABORT;
            }
            Lex->query_id= (my_thread_id)((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 1798:
/* Line 1792 of yacc.c  */
#line 12126 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1799:
/* Line 1792 of yacc.c  */
#line 12131 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "EXTENDED");
          }
    break;

  case 1800:
/* Line 1792 of yacc.c  */
#line 12137 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "PARTITIONS");
          }
    break;

  case 1801:
/* Line 1792 of yacc.c  */
#line 12143 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1802:
/* Line 1792 of yacc.c  */
#line 12163 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1803:
/* Line 1792 of yacc.c  */
#line 12164 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1804:
/* Line 1792 of yacc.c  */
#line 12166 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= NEW_PTN String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                      (yyvsp[(1) - (1)].lex_str).length,
                                      system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1805:
/* Line 1792 of yacc.c  */
#line 12180 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1806:
/* Line 1792 of yacc.c  */
#line 12187 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1807:
/* Line 1792 of yacc.c  */
#line 12192 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[(2) - (2)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1808:
/* Line 1792 of yacc.c  */
#line 12204 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1810:
/* Line 1792 of yacc.c  */
#line 12209 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1811:
/* Line 1792 of yacc.c  */
#line 12211 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1812:
/* Line 1792 of yacc.c  */
#line 12223 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_NO_TABLES_USED));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1813:
/* Line 1792 of yacc.c  */
#line 12231 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1815:
/* Line 1792 of yacc.c  */
#line 12247 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1816:
/* Line 1792 of yacc.c  */
#line 12252 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1817:
/* Line 1792 of yacc.c  */
#line 12254 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1818:
/* Line 1792 of yacc.c  */
#line 12256 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1819:
/* Line 1792 of yacc.c  */
#line 12258 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1820:
/* Line 1792 of yacc.c  */
#line 12260 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1821:
/* Line 1792 of yacc.c  */
#line 12262 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1822:
/* Line 1792 of yacc.c  */
#line 12264 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1823:
/* Line 1792 of yacc.c  */
#line 12266 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1824:
/* Line 1792 of yacc.c  */
#line 12268 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1825:
/* Line 1792 of yacc.c  */
#line 12270 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1826:
/* Line 1792 of yacc.c  */
#line 12272 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1827:
/* Line 1792 of yacc.c  */
#line 12274 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1828:
/* Line 1792 of yacc.c  */
#line 12276 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1829:
/* Line 1792 of yacc.c  */
#line 12278 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
    break;

  case 1830:
/* Line 1792 of yacc.c  */
#line 12282 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.table_list)= NULL; }
    break;

  case 1832:
/* Line 1792 of yacc.c  */
#line 12288 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1833:
/* Line 1792 of yacc.c  */
#line 12293 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1836:
/* Line 1792 of yacc.c  */
#line 12302 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1838:
/* Line 1792 of yacc.c  */
#line 12304 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1839:
/* Line 1792 of yacc.c  */
#line 12305 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1840:
/* Line 1792 of yacc.c  */
#line 12309 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1841:
/* Line 1792 of yacc.c  */
#line 12310 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1842:
/* Line 1792 of yacc.c  */
#line 12315 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1843:
/* Line 1792 of yacc.c  */
#line 12321 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1845:
/* Line 1792 of yacc.c  */
#line 12330 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1846:
/* Line 1792 of yacc.c  */
#line 12334 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1847:
/* Line 1792 of yacc.c  */
#line 12348 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1848:
/* Line 1792 of yacc.c  */
#line 12359 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1849:
/* Line 1792 of yacc.c  */
#line 12360 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1850:
/* Line 1792 of yacc.c  */
#line 12361 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1851:
/* Line 1792 of yacc.c  */
#line 12368 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1852:
/* Line 1792 of yacc.c  */
#line 12379 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0),
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1853:
/* Line 1792 of yacc.c  */
#line 12392 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (12)].num);
            lex->duplicates= DUP_ERROR;
            lex->set_ignore(false);
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (12)].lex_str).str, 0, (yyvsp[(2) - (12)].filetype))))
              MYSQL_YYABORT;

            switch ((yyvsp[(8) - (12)].on_duplicate)) {
            case On_duplicate::ERROR:
              Lex->duplicates=DUP_ERROR;
              break;
            case On_duplicate::IGNORE_DUP:
              Lex->set_ignore(true);
              break;
            case On_duplicate::REPLACE_DUP:
              Lex->duplicates=DUP_REPLACE;
              break;
            }

            /* Fix lock for LOAD DATA CONCURRENT REPLACE */
            if (lex->duplicates == DUP_REPLACE && (yyvsp[(4) - (12)].lock_type) == TL_WRITE_CONCURRENT_INSERT)
              (yyvsp[(4) - (12)].lock_type)= TL_WRITE_DEFAULT;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(11) - (12)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (12)].lock_type), (yyvsp[(4) - (12)].lock_type) == TL_WRITE_LOW_PRIORITY ?
                                               MDL_SHARED_WRITE_LOW_PRIO :
                                               MDL_SHARED_WRITE, NULL, (yyvsp[(12) - (12)].string_list)))
              MYSQL_YYABORT;
            lex->load_field_list.empty();
            lex->load_update_list.empty();
            lex->load_value_list.empty();
            /* We can't give an error in the middle when using LOCAL files */
            if (lex->local_file && lex->duplicates == DUP_ERROR)
              lex->set_ignore(true);
          }
    break;

  case 1854:
/* Line 1792 of yacc.c  */
#line 12429 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(14) - (14)].charset); }
    break;

  case 1855:
/* Line 1792 of yacc.c  */
#line 12433 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->exchange->field.merge_field_separators((yyvsp[(17) - (21)].field_separators));
            Lex->exchange->line.merge_line_separators((yyvsp[(18) - (21)].line_separators));
          }
    break;

  case 1856:
/* Line 1792 of yacc.c  */
#line 12440 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1857:
/* Line 1792 of yacc.c  */
#line 12441 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1858:
/* Line 1792 of yacc.c  */
#line 12445 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1859:
/* Line 1792 of yacc.c  */
#line 12446 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1860:
/* Line 1792 of yacc.c  */
#line 12450 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1861:
/* Line 1792 of yacc.c  */
#line 12451 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
    break;

  case 1862:
/* Line 1792 of yacc.c  */
#line 12452 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1863:
/* Line 1792 of yacc.c  */
#line 12456 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
    break;

  case 1865:
/* Line 1792 of yacc.c  */
#line 12461 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
    break;

  case 1866:
/* Line 1792 of yacc.c  */
#line 12462 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
    break;

  case 1867:
/* Line 1792 of yacc.c  */
#line 12466 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators).cleanup(); }
    break;

  case 1868:
/* Line 1792 of yacc.c  */
#line 12467 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators)= (yyvsp[(2) - (2)].field_separators); }
    break;

  case 1869:
/* Line 1792 of yacc.c  */
#line 12472 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators)= (yyvsp[(1) - (2)].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[(2) - (2)].field_separators));
          }
    break;

  case 1871:
/* Line 1792 of yacc.c  */
#line 12481 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1872:
/* Line 1792 of yacc.c  */
#line 12486 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(4) - (4)].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
    break;

  case 1873:
/* Line 1792 of yacc.c  */
#line 12492 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1874:
/* Line 1792 of yacc.c  */
#line 12497 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1875:
/* Line 1792 of yacc.c  */
#line 12504 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators).cleanup(); }
    break;

  case 1876:
/* Line 1792 of yacc.c  */
#line 12505 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators)= (yyvsp[(2) - (2)].line_separators); }
    break;

  case 1877:
/* Line 1792 of yacc.c  */
#line 12510 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators)= (yyvsp[(1) - (2)].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[(2) - (2)].line_separators));
          }
    break;

  case 1879:
/* Line 1792 of yacc.c  */
#line 12519 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1880:
/* Line 1792 of yacc.c  */
#line 12524 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1881:
/* Line 1792 of yacc.c  */
#line 12531 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1882:
/* Line 1792 of yacc.c  */
#line 12533 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->exchange->line.line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1884:
/* Line 1792 of yacc.c  */
#line 12538 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1885:
/* Line 1792 of yacc.c  */
#line 12545 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1886:
/* Line 1792 of yacc.c  */
#line 12547 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1887:
/* Line 1792 of yacc.c  */
#line 12551 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1888:
/* Line 1792 of yacc.c  */
#line 12552 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1889:
/* Line 1792 of yacc.c  */
#line 12553 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1890:
/* Line 1792 of yacc.c  */
#line 12558 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1891:
/* Line 1792 of yacc.c  */
#line 12560 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1892:
/* Line 1792 of yacc.c  */
#line 12564 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 1893:
/* Line 1792 of yacc.c  */
#line 12566 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1894:
/* Line 1792 of yacc.c  */
#line 12574 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1895:
/* Line 1792 of yacc.c  */
#line 12575 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1898:
/* Line 1792 of yacc.c  */
#line 12585 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (3)].item), &(yyvsp[(1) - (3)].item));
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex= Lex;
            uint length= (uint) ((yylsp[(3) - (3)]).cpp.end - (yylsp[(2) - (3)]).cpp.start);
            String *val= NEW_PTN String((yylsp[(2) - (3)]).cpp.start,
                                        length,
                                        YYTHD->charset());
            if (val == NULL)
              MYSQL_YYABORT;
            if (lex->load_update_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->load_value_list.push_back((yyvsp[(3) - (3)].item)) ||
                lex->load_set_str_list.push_back(val))
                MYSQL_YYABORT;
            (yyvsp[(3) - (3)].item)->item_name.copy((yylsp[(2) - (3)]).cpp.start, length, YYTHD->charset());
          }
    break;

  case 1899:
/* Line 1792 of yacc.c  */
#line 12608 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1900:
/* Line 1792 of yacc.c  */
#line 12613 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1901:
/* Line 1792 of yacc.c  */
#line 12618 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1902:
/* Line 1792 of yacc.c  */
#line 12623 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].text_literal), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1903:
/* Line 1792 of yacc.c  */
#line 12631 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= NEW_PTN String((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1904:
/* Line 1792 of yacc.c  */
#line 12638 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_hex_string::make_hex_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1905:
/* Line 1792 of yacc.c  */
#line 12645 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_bin_string::make_bin_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1906:
/* Line 1792 of yacc.c  */
#line 12655 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.param_marker)= NEW_PTN Item_param((yyloc),
                                   (uint) ((yylsp[(1) - (1)]).raw.start - YYLIP->get_buf()));
          }
    break;

  case 1908:
/* Line 1792 of yacc.c  */
#line 12663 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item_num); }
    break;

  case 1909:
/* Line 1792 of yacc.c  */
#line 12665 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[(2) - (2)].item_num)->max_length++;
            (yyval.item)= (yyvsp[(2) - (2)].item_num)->neg();
          }
    break;

  case 1910:
/* Line 1792 of yacc.c  */
#line 12675 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].text_literal); }
    break;

  case 1911:
/* Line 1792 of yacc.c  */
#line 12676 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item_num); }
    break;

  case 1913:
/* Line 1792 of yacc.c  */
#line 12679 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
            lip->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
    break;

  case 1914:
/* Line 1792 of yacc.c  */
#line 12692 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("FALSE"), 0, 1);
          }
    break;

  case 1915:
/* Line 1792 of yacc.c  */
#line 12696 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("TRUE"), 1, 1);
          }
    break;

  case 1916:
/* Line 1792 of yacc.c  */
#line 12700 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1917:
/* Line 1792 of yacc.c  */
#line 12704 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1918:
/* Line 1792 of yacc.c  */
#line 12708 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1919:
/* Line 1792 of yacc.c  */
#line 12712 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1920:
/* Line 1792 of yacc.c  */
#line 12719 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1921:
/* Line 1792 of yacc.c  */
#line 12723 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1922:
/* Line 1792 of yacc.c  */
#line 12727 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1923:
/* Line 1792 of yacc.c  */
#line 12731 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, YYCSCL);
          }
    break;

  case 1924:
/* Line 1792 of yacc.c  */
#line 12735 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1925:
/* Line 1792 of yacc.c  */
#line 12743 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
    break;

  case 1926:
/* Line 1792 of yacc.c  */
#line 12747 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
    break;

  case 1927:
/* Line 1792 of yacc.c  */
#line 12751 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
    break;

  case 1930:
/* Line 1792 of yacc.c  */
#line 12770 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[(1) - (3)].lex_str).str);
          }
    break;

  case 1931:
/* Line 1792 of yacc.c  */
#line 12774 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str);
          }
    break;

  case 1932:
/* Line 1792 of yacc.c  */
#line 12781 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].num));
          }
    break;

  case 1933:
/* Line 1792 of yacc.c  */
#line 12788 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1935:
/* Line 1792 of yacc.c  */
#line 12796 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1937:
/* Line 1792 of yacc.c  */
#line 12804 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 1938:
/* Line 1792 of yacc.c  */
#line 12808 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), NULL, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 1939:
/* Line 1792 of yacc.c  */
#line 12812 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
          }
    break;

  case 1940:
/* Line 1792 of yacc.c  */
#line 12819 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_ident)= NEW_PTN PT_field_ident((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1941:
/* Line 1792 of yacc.c  */
#line 12823 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_ident)= NEW_PTN PT_field_ident_3d((yyvsp[(1) - (5)].lex_str), (yyvsp[(3) - (5)].lex_str), (yyvsp[(5) - (5)].lex_str));
          }
    break;

  case 1942:
/* Line 1792 of yacc.c  */
#line 12827 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_ident)= NEW_PTN PT_field_ident_3d((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1943:
/* Line 1792 of yacc.c  */
#line 12831 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_ident)= NEW_PTN PT_field_ident((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1944:
/* Line 1792 of yacc.c  */
#line 12838 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (1)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1945:
/* Line 1792 of yacc.c  */
#line 12844 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1946:
/* Line 1792 of yacc.c  */
#line 12854 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /* For Delphi */
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(2) - (2)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1947:
/* Line 1792 of yacc.c  */
#line 12864 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (2)].lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1948:
/* Line 1792 of yacc.c  */
#line 12870 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[(1) - (4)].lex_str)),
                                    to_lex_cstring((yyvsp[(3) - (4)].lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1949:
/* Line 1792 of yacc.c  */
#line 12881 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING db= { any_db, strlen(any_db) };
            (yyval.table)= new Table_ident(YYTHD->get_protocol(),
                                db, to_lex_cstring((yyvsp[(1) - (1)].lex_str)), 0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1950:
/* Line 1792 of yacc.c  */
#line 12891 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1951:
/* Line 1792 of yacc.c  */
#line 12893 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                     (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                     (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1952:
/* Line 1792 of yacc.c  */
#line 12923 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1953:
/* Line 1792 of yacc.c  */
#line 12936 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (strcont((yyvsp[(1) - (1)].lex_str).str, "."))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1954:
/* Line 1792 of yacc.c  */
#line 12949 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1955:
/* Line 1792 of yacc.c  */
#line 12965 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1956:
/* Line 1792 of yacc.c  */
#line 12981 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1957:
/* Line 1792 of yacc.c  */
#line 12997 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1958:
/* Line 1792 of yacc.c  */
#line 12999 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1960:
/* Line 1792 of yacc.c  */
#line 13011 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str).str= YYTHD->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1961:
/* Line 1792 of yacc.c  */
#line 13020 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1962:
/* Line 1792 of yacc.c  */
#line 13022 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1963:
/* Line 1792 of yacc.c  */
#line 13032 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1964:
/* Line 1792 of yacc.c  */
#line 13033 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1965:
/* Line 1792 of yacc.c  */
#line 13034 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1969:
/* Line 1792 of yacc.c  */
#line 13045 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= st_lex_user::alloc(YYTHD, &(yyvsp[(1) - (1)].lex_str), NULL)))
              MYSQL_YYABORT;
          }
    break;

  case 1970:
/* Line 1792 of yacc.c  */
#line 13050 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= st_lex_user::alloc(YYTHD, &(yyvsp[(1) - (3)].lex_str), &(yyvsp[(3) - (3)].lex_str))))
              MYSQL_YYABORT;
          }
    break;

  case 1971:
/* Line 1792 of yacc.c  */
#line 13055 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 1972:
/* Line 1792 of yacc.c  */
#line 13069 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= st_lex_user::alloc(YYTHD, &(yyvsp[(1) - (1)].lex_str), NULL)))
              MYSQL_YYABORT;
          }
    break;

  case 1973:
/* Line 1792 of yacc.c  */
#line 13074 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= st_lex_user::alloc(YYTHD, &(yyvsp[(1) - (3)].lex_str), &(yyvsp[(3) - (3)].lex_str))))
              MYSQL_YYABORT;
          }
    break;

  case 1974:
/* Line 1792 of yacc.c  */
#line 13094 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1975:
/* Line 1792 of yacc.c  */
#line 13095 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1976:
/* Line 1792 of yacc.c  */
#line 13096 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1977:
/* Line 1792 of yacc.c  */
#line 13097 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1978:
/* Line 1792 of yacc.c  */
#line 13102 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1979:
/* Line 1792 of yacc.c  */
#line 13103 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1980:
/* Line 1792 of yacc.c  */
#line 13104 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1981:
/* Line 1792 of yacc.c  */
#line 13105 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1982:
/* Line 1792 of yacc.c  */
#line 13106 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1983:
/* Line 1792 of yacc.c  */
#line 13107 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1984:
/* Line 1792 of yacc.c  */
#line 13108 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1985:
/* Line 1792 of yacc.c  */
#line 13109 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1986:
/* Line 1792 of yacc.c  */
#line 13110 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1987:
/* Line 1792 of yacc.c  */
#line 13111 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1988:
/* Line 1792 of yacc.c  */
#line 13112 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1989:
/* Line 1792 of yacc.c  */
#line 13113 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1990:
/* Line 1792 of yacc.c  */
#line 13114 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1991:
/* Line 1792 of yacc.c  */
#line 13115 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1992:
/* Line 1792 of yacc.c  */
#line 13116 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1993:
/* Line 1792 of yacc.c  */
#line 13117 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1994:
/* Line 1792 of yacc.c  */
#line 13118 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1995:
/* Line 1792 of yacc.c  */
#line 13119 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1996:
/* Line 1792 of yacc.c  */
#line 13120 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1997:
/* Line 1792 of yacc.c  */
#line 13121 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1998:
/* Line 1792 of yacc.c  */
#line 13122 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1999:
/* Line 1792 of yacc.c  */
#line 13123 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2000:
/* Line 1792 of yacc.c  */
#line 13124 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2001:
/* Line 1792 of yacc.c  */
#line 13125 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2002:
/* Line 1792 of yacc.c  */
#line 13126 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2003:
/* Line 1792 of yacc.c  */
#line 13127 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2004:
/* Line 1792 of yacc.c  */
#line 13128 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2005:
/* Line 1792 of yacc.c  */
#line 13129 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2006:
/* Line 1792 of yacc.c  */
#line 13130 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2007:
/* Line 1792 of yacc.c  */
#line 13131 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2008:
/* Line 1792 of yacc.c  */
#line 13132 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2009:
/* Line 1792 of yacc.c  */
#line 13133 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2010:
/* Line 1792 of yacc.c  */
#line 13134 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2011:
/* Line 1792 of yacc.c  */
#line 13135 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2012:
/* Line 1792 of yacc.c  */
#line 13136 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2013:
/* Line 1792 of yacc.c  */
#line 13137 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2014:
/* Line 1792 of yacc.c  */
#line 13138 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2015:
/* Line 1792 of yacc.c  */
#line 13139 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2016:
/* Line 1792 of yacc.c  */
#line 13140 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2017:
/* Line 1792 of yacc.c  */
#line 13141 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2018:
/* Line 1792 of yacc.c  */
#line 13142 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2019:
/* Line 1792 of yacc.c  */
#line 13143 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2020:
/* Line 1792 of yacc.c  */
#line 13144 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2021:
/* Line 1792 of yacc.c  */
#line 13145 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2022:
/* Line 1792 of yacc.c  */
#line 13146 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2023:
/* Line 1792 of yacc.c  */
#line 13147 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2024:
/* Line 1792 of yacc.c  */
#line 13148 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2025:
/* Line 1792 of yacc.c  */
#line 13149 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2026:
/* Line 1792 of yacc.c  */
#line 13150 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2027:
/* Line 1792 of yacc.c  */
#line 13151 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2028:
/* Line 1792 of yacc.c  */
#line 13152 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2029:
/* Line 1792 of yacc.c  */
#line 13153 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2030:
/* Line 1792 of yacc.c  */
#line 13154 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2031:
/* Line 1792 of yacc.c  */
#line 13155 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2032:
/* Line 1792 of yacc.c  */
#line 13156 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2033:
/* Line 1792 of yacc.c  */
#line 13166 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2034:
/* Line 1792 of yacc.c  */
#line 13167 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2035:
/* Line 1792 of yacc.c  */
#line 13168 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2036:
/* Line 1792 of yacc.c  */
#line 13169 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2037:
/* Line 1792 of yacc.c  */
#line 13170 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2038:
/* Line 1792 of yacc.c  */
#line 13171 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2039:
/* Line 1792 of yacc.c  */
#line 13172 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2040:
/* Line 1792 of yacc.c  */
#line 13173 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2041:
/* Line 1792 of yacc.c  */
#line 13174 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2042:
/* Line 1792 of yacc.c  */
#line 13179 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2043:
/* Line 1792 of yacc.c  */
#line 13180 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2044:
/* Line 1792 of yacc.c  */
#line 13181 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2045:
/* Line 1792 of yacc.c  */
#line 13182 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2046:
/* Line 1792 of yacc.c  */
#line 13183 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2047:
/* Line 1792 of yacc.c  */
#line 13184 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2048:
/* Line 1792 of yacc.c  */
#line 13185 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2049:
/* Line 1792 of yacc.c  */
#line 13186 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2050:
/* Line 1792 of yacc.c  */
#line 13187 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2051:
/* Line 1792 of yacc.c  */
#line 13188 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2052:
/* Line 1792 of yacc.c  */
#line 13189 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2053:
/* Line 1792 of yacc.c  */
#line 13190 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2054:
/* Line 1792 of yacc.c  */
#line 13191 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2055:
/* Line 1792 of yacc.c  */
#line 13192 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2056:
/* Line 1792 of yacc.c  */
#line 13193 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2057:
/* Line 1792 of yacc.c  */
#line 13194 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2058:
/* Line 1792 of yacc.c  */
#line 13195 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2059:
/* Line 1792 of yacc.c  */
#line 13196 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2060:
/* Line 1792 of yacc.c  */
#line 13197 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2061:
/* Line 1792 of yacc.c  */
#line 13198 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2062:
/* Line 1792 of yacc.c  */
#line 13199 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2063:
/* Line 1792 of yacc.c  */
#line 13200 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2064:
/* Line 1792 of yacc.c  */
#line 13201 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2065:
/* Line 1792 of yacc.c  */
#line 13202 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2066:
/* Line 1792 of yacc.c  */
#line 13203 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2067:
/* Line 1792 of yacc.c  */
#line 13204 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2068:
/* Line 1792 of yacc.c  */
#line 13205 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2069:
/* Line 1792 of yacc.c  */
#line 13206 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2070:
/* Line 1792 of yacc.c  */
#line 13207 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2071:
/* Line 1792 of yacc.c  */
#line 13208 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2072:
/* Line 1792 of yacc.c  */
#line 13209 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2073:
/* Line 1792 of yacc.c  */
#line 13210 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2074:
/* Line 1792 of yacc.c  */
#line 13211 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2075:
/* Line 1792 of yacc.c  */
#line 13212 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2076:
/* Line 1792 of yacc.c  */
#line 13213 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2077:
/* Line 1792 of yacc.c  */
#line 13214 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2078:
/* Line 1792 of yacc.c  */
#line 13215 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2079:
/* Line 1792 of yacc.c  */
#line 13216 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2080:
/* Line 1792 of yacc.c  */
#line 13217 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2081:
/* Line 1792 of yacc.c  */
#line 13218 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2082:
/* Line 1792 of yacc.c  */
#line 13219 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2083:
/* Line 1792 of yacc.c  */
#line 13220 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2084:
/* Line 1792 of yacc.c  */
#line 13221 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2085:
/* Line 1792 of yacc.c  */
#line 13222 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2086:
/* Line 1792 of yacc.c  */
#line 13223 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2087:
/* Line 1792 of yacc.c  */
#line 13224 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2088:
/* Line 1792 of yacc.c  */
#line 13225 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2089:
/* Line 1792 of yacc.c  */
#line 13226 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2090:
/* Line 1792 of yacc.c  */
#line 13227 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2091:
/* Line 1792 of yacc.c  */
#line 13232 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2092:
/* Line 1792 of yacc.c  */
#line 13233 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2093:
/* Line 1792 of yacc.c  */
#line 13234 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2094:
/* Line 1792 of yacc.c  */
#line 13235 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2095:
/* Line 1792 of yacc.c  */
#line 13236 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2096:
/* Line 1792 of yacc.c  */
#line 13237 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2097:
/* Line 1792 of yacc.c  */
#line 13238 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2098:
/* Line 1792 of yacc.c  */
#line 13239 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2099:
/* Line 1792 of yacc.c  */
#line 13240 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2100:
/* Line 1792 of yacc.c  */
#line 13241 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2101:
/* Line 1792 of yacc.c  */
#line 13242 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2102:
/* Line 1792 of yacc.c  */
#line 13243 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2103:
/* Line 1792 of yacc.c  */
#line 13244 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2104:
/* Line 1792 of yacc.c  */
#line 13245 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2105:
/* Line 1792 of yacc.c  */
#line 13246 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2106:
/* Line 1792 of yacc.c  */
#line 13247 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2107:
/* Line 1792 of yacc.c  */
#line 13248 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2108:
/* Line 1792 of yacc.c  */
#line 13249 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2109:
/* Line 1792 of yacc.c  */
#line 13250 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2110:
/* Line 1792 of yacc.c  */
#line 13251 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2111:
/* Line 1792 of yacc.c  */
#line 13252 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2112:
/* Line 1792 of yacc.c  */
#line 13253 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2113:
/* Line 1792 of yacc.c  */
#line 13254 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2114:
/* Line 1792 of yacc.c  */
#line 13255 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2115:
/* Line 1792 of yacc.c  */
#line 13256 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2116:
/* Line 1792 of yacc.c  */
#line 13257 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2117:
/* Line 1792 of yacc.c  */
#line 13258 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2118:
/* Line 1792 of yacc.c  */
#line 13259 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2119:
/* Line 1792 of yacc.c  */
#line 13260 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2120:
/* Line 1792 of yacc.c  */
#line 13261 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2121:
/* Line 1792 of yacc.c  */
#line 13262 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2122:
/* Line 1792 of yacc.c  */
#line 13263 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2123:
/* Line 1792 of yacc.c  */
#line 13264 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2124:
/* Line 1792 of yacc.c  */
#line 13265 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2125:
/* Line 1792 of yacc.c  */
#line 13266 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2126:
/* Line 1792 of yacc.c  */
#line 13267 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2127:
/* Line 1792 of yacc.c  */
#line 13268 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2128:
/* Line 1792 of yacc.c  */
#line 13269 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2129:
/* Line 1792 of yacc.c  */
#line 13270 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2130:
/* Line 1792 of yacc.c  */
#line 13271 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2131:
/* Line 1792 of yacc.c  */
#line 13272 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2132:
/* Line 1792 of yacc.c  */
#line 13273 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2133:
/* Line 1792 of yacc.c  */
#line 13274 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2134:
/* Line 1792 of yacc.c  */
#line 13275 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2135:
/* Line 1792 of yacc.c  */
#line 13276 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2136:
/* Line 1792 of yacc.c  */
#line 13277 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2137:
/* Line 1792 of yacc.c  */
#line 13278 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2138:
/* Line 1792 of yacc.c  */
#line 13279 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2139:
/* Line 1792 of yacc.c  */
#line 13280 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2140:
/* Line 1792 of yacc.c  */
#line 13281 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2141:
/* Line 1792 of yacc.c  */
#line 13282 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2142:
/* Line 1792 of yacc.c  */
#line 13283 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2143:
/* Line 1792 of yacc.c  */
#line 13284 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2144:
/* Line 1792 of yacc.c  */
#line 13285 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2145:
/* Line 1792 of yacc.c  */
#line 13286 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2146:
/* Line 1792 of yacc.c  */
#line 13287 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2147:
/* Line 1792 of yacc.c  */
#line 13288 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2148:
/* Line 1792 of yacc.c  */
#line 13289 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2149:
/* Line 1792 of yacc.c  */
#line 13290 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2150:
/* Line 1792 of yacc.c  */
#line 13291 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2151:
/* Line 1792 of yacc.c  */
#line 13292 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2152:
/* Line 1792 of yacc.c  */
#line 13293 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2153:
/* Line 1792 of yacc.c  */
#line 13294 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2154:
/* Line 1792 of yacc.c  */
#line 13295 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2155:
/* Line 1792 of yacc.c  */
#line 13296 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2156:
/* Line 1792 of yacc.c  */
#line 13297 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2157:
/* Line 1792 of yacc.c  */
#line 13298 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2158:
/* Line 1792 of yacc.c  */
#line 13299 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2159:
/* Line 1792 of yacc.c  */
#line 13300 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2160:
/* Line 1792 of yacc.c  */
#line 13301 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2161:
/* Line 1792 of yacc.c  */
#line 13302 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2162:
/* Line 1792 of yacc.c  */
#line 13303 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2163:
/* Line 1792 of yacc.c  */
#line 13304 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2164:
/* Line 1792 of yacc.c  */
#line 13305 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2165:
/* Line 1792 of yacc.c  */
#line 13306 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2166:
/* Line 1792 of yacc.c  */
#line 13307 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2167:
/* Line 1792 of yacc.c  */
#line 13308 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2168:
/* Line 1792 of yacc.c  */
#line 13309 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2169:
/* Line 1792 of yacc.c  */
#line 13310 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2170:
/* Line 1792 of yacc.c  */
#line 13311 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2171:
/* Line 1792 of yacc.c  */
#line 13312 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2172:
/* Line 1792 of yacc.c  */
#line 13313 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2173:
/* Line 1792 of yacc.c  */
#line 13314 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2174:
/* Line 1792 of yacc.c  */
#line 13315 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2175:
/* Line 1792 of yacc.c  */
#line 13316 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2176:
/* Line 1792 of yacc.c  */
#line 13317 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2177:
/* Line 1792 of yacc.c  */
#line 13318 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2178:
/* Line 1792 of yacc.c  */
#line 13319 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2179:
/* Line 1792 of yacc.c  */
#line 13320 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2180:
/* Line 1792 of yacc.c  */
#line 13321 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2181:
/* Line 1792 of yacc.c  */
#line 13322 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2182:
/* Line 1792 of yacc.c  */
#line 13323 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2183:
/* Line 1792 of yacc.c  */
#line 13324 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2184:
/* Line 1792 of yacc.c  */
#line 13325 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2185:
/* Line 1792 of yacc.c  */
#line 13326 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2186:
/* Line 1792 of yacc.c  */
#line 13327 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2187:
/* Line 1792 of yacc.c  */
#line 13328 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2188:
/* Line 1792 of yacc.c  */
#line 13329 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2189:
/* Line 1792 of yacc.c  */
#line 13330 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2190:
/* Line 1792 of yacc.c  */
#line 13331 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2191:
/* Line 1792 of yacc.c  */
#line 13332 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2192:
/* Line 1792 of yacc.c  */
#line 13333 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2193:
/* Line 1792 of yacc.c  */
#line 13334 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2194:
/* Line 1792 of yacc.c  */
#line 13335 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2195:
/* Line 1792 of yacc.c  */
#line 13336 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2196:
/* Line 1792 of yacc.c  */
#line 13337 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2197:
/* Line 1792 of yacc.c  */
#line 13338 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2198:
/* Line 1792 of yacc.c  */
#line 13339 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2199:
/* Line 1792 of yacc.c  */
#line 13340 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2200:
/* Line 1792 of yacc.c  */
#line 13341 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2201:
/* Line 1792 of yacc.c  */
#line 13342 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2202:
/* Line 1792 of yacc.c  */
#line 13343 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2203:
/* Line 1792 of yacc.c  */
#line 13344 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2204:
/* Line 1792 of yacc.c  */
#line 13345 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2205:
/* Line 1792 of yacc.c  */
#line 13346 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2206:
/* Line 1792 of yacc.c  */
#line 13347 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2207:
/* Line 1792 of yacc.c  */
#line 13348 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2208:
/* Line 1792 of yacc.c  */
#line 13349 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2209:
/* Line 1792 of yacc.c  */
#line 13350 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2210:
/* Line 1792 of yacc.c  */
#line 13351 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2211:
/* Line 1792 of yacc.c  */
#line 13352 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2212:
/* Line 1792 of yacc.c  */
#line 13353 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2213:
/* Line 1792 of yacc.c  */
#line 13354 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2214:
/* Line 1792 of yacc.c  */
#line 13355 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2215:
/* Line 1792 of yacc.c  */
#line 13356 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2216:
/* Line 1792 of yacc.c  */
#line 13357 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2217:
/* Line 1792 of yacc.c  */
#line 13358 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2218:
/* Line 1792 of yacc.c  */
#line 13359 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2219:
/* Line 1792 of yacc.c  */
#line 13360 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2220:
/* Line 1792 of yacc.c  */
#line 13361 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2221:
/* Line 1792 of yacc.c  */
#line 13362 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2222:
/* Line 1792 of yacc.c  */
#line 13363 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2223:
/* Line 1792 of yacc.c  */
#line 13364 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2224:
/* Line 1792 of yacc.c  */
#line 13365 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2225:
/* Line 1792 of yacc.c  */
#line 13366 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2226:
/* Line 1792 of yacc.c  */
#line 13367 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2227:
/* Line 1792 of yacc.c  */
#line 13368 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2228:
/* Line 1792 of yacc.c  */
#line 13369 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2229:
/* Line 1792 of yacc.c  */
#line 13370 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2230:
/* Line 1792 of yacc.c  */
#line 13371 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2231:
/* Line 1792 of yacc.c  */
#line 13372 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2232:
/* Line 1792 of yacc.c  */
#line 13373 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2233:
/* Line 1792 of yacc.c  */
#line 13374 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2234:
/* Line 1792 of yacc.c  */
#line 13375 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2235:
/* Line 1792 of yacc.c  */
#line 13376 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2236:
/* Line 1792 of yacc.c  */
#line 13377 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2237:
/* Line 1792 of yacc.c  */
#line 13378 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2238:
/* Line 1792 of yacc.c  */
#line 13379 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2239:
/* Line 1792 of yacc.c  */
#line 13380 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2240:
/* Line 1792 of yacc.c  */
#line 13381 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2241:
/* Line 1792 of yacc.c  */
#line 13382 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2242:
/* Line 1792 of yacc.c  */
#line 13383 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2243:
/* Line 1792 of yacc.c  */
#line 13384 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2244:
/* Line 1792 of yacc.c  */
#line 13385 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2245:
/* Line 1792 of yacc.c  */
#line 13386 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2246:
/* Line 1792 of yacc.c  */
#line 13387 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2247:
/* Line 1792 of yacc.c  */
#line 13388 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2248:
/* Line 1792 of yacc.c  */
#line 13389 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2249:
/* Line 1792 of yacc.c  */
#line 13390 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2250:
/* Line 1792 of yacc.c  */
#line 13391 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2251:
/* Line 1792 of yacc.c  */
#line 13392 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2252:
/* Line 1792 of yacc.c  */
#line 13393 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2253:
/* Line 1792 of yacc.c  */
#line 13394 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2254:
/* Line 1792 of yacc.c  */
#line 13395 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2255:
/* Line 1792 of yacc.c  */
#line 13396 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2256:
/* Line 1792 of yacc.c  */
#line 13397 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2257:
/* Line 1792 of yacc.c  */
#line 13398 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2258:
/* Line 1792 of yacc.c  */
#line 13399 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2259:
/* Line 1792 of yacc.c  */
#line 13400 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2260:
/* Line 1792 of yacc.c  */
#line 13401 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2261:
/* Line 1792 of yacc.c  */
#line 13402 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2262:
/* Line 1792 of yacc.c  */
#line 13403 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2263:
/* Line 1792 of yacc.c  */
#line 13404 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2264:
/* Line 1792 of yacc.c  */
#line 13405 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2265:
/* Line 1792 of yacc.c  */
#line 13406 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2266:
/* Line 1792 of yacc.c  */
#line 13407 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2267:
/* Line 1792 of yacc.c  */
#line 13408 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2268:
/* Line 1792 of yacc.c  */
#line 13409 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2269:
/* Line 1792 of yacc.c  */
#line 13410 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2270:
/* Line 1792 of yacc.c  */
#line 13411 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2271:
/* Line 1792 of yacc.c  */
#line 13412 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2272:
/* Line 1792 of yacc.c  */
#line 13413 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2273:
/* Line 1792 of yacc.c  */
#line 13414 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2274:
/* Line 1792 of yacc.c  */
#line 13415 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2275:
/* Line 1792 of yacc.c  */
#line 13416 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2276:
/* Line 1792 of yacc.c  */
#line 13417 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2277:
/* Line 1792 of yacc.c  */
#line 13418 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2278:
/* Line 1792 of yacc.c  */
#line 13419 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2279:
/* Line 1792 of yacc.c  */
#line 13420 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2280:
/* Line 1792 of yacc.c  */
#line 13421 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2281:
/* Line 1792 of yacc.c  */
#line 13422 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2282:
/* Line 1792 of yacc.c  */
#line 13423 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2283:
/* Line 1792 of yacc.c  */
#line 13424 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2284:
/* Line 1792 of yacc.c  */
#line 13425 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2285:
/* Line 1792 of yacc.c  */
#line 13426 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2286:
/* Line 1792 of yacc.c  */
#line 13427 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2287:
/* Line 1792 of yacc.c  */
#line 13428 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2288:
/* Line 1792 of yacc.c  */
#line 13429 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2289:
/* Line 1792 of yacc.c  */
#line 13430 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2290:
/* Line 1792 of yacc.c  */
#line 13431 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2291:
/* Line 1792 of yacc.c  */
#line 13432 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2292:
/* Line 1792 of yacc.c  */
#line 13433 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2293:
/* Line 1792 of yacc.c  */
#line 13434 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2294:
/* Line 1792 of yacc.c  */
#line 13435 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2295:
/* Line 1792 of yacc.c  */
#line 13436 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2296:
/* Line 1792 of yacc.c  */
#line 13437 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2297:
/* Line 1792 of yacc.c  */
#line 13438 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2298:
/* Line 1792 of yacc.c  */
#line 13439 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2299:
/* Line 1792 of yacc.c  */
#line 13440 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2300:
/* Line 1792 of yacc.c  */
#line 13441 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2301:
/* Line 1792 of yacc.c  */
#line 13442 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2302:
/* Line 1792 of yacc.c  */
#line 13443 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2303:
/* Line 1792 of yacc.c  */
#line 13444 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2304:
/* Line 1792 of yacc.c  */
#line 13445 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2305:
/* Line 1792 of yacc.c  */
#line 13446 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2306:
/* Line 1792 of yacc.c  */
#line 13447 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2307:
/* Line 1792 of yacc.c  */
#line 13448 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2308:
/* Line 1792 of yacc.c  */
#line 13449 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2309:
/* Line 1792 of yacc.c  */
#line 13450 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2310:
/* Line 1792 of yacc.c  */
#line 13451 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2311:
/* Line 1792 of yacc.c  */
#line 13452 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2312:
/* Line 1792 of yacc.c  */
#line 13453 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2313:
/* Line 1792 of yacc.c  */
#line 13454 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2314:
/* Line 1792 of yacc.c  */
#line 13455 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2315:
/* Line 1792 of yacc.c  */
#line 13456 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2316:
/* Line 1792 of yacc.c  */
#line 13457 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2317:
/* Line 1792 of yacc.c  */
#line 13458 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2318:
/* Line 1792 of yacc.c  */
#line 13459 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2319:
/* Line 1792 of yacc.c  */
#line 13460 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2320:
/* Line 1792 of yacc.c  */
#line 13461 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2321:
/* Line 1792 of yacc.c  */
#line 13462 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2322:
/* Line 1792 of yacc.c  */
#line 13463 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2323:
/* Line 1792 of yacc.c  */
#line 13464 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2324:
/* Line 1792 of yacc.c  */
#line 13465 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2325:
/* Line 1792 of yacc.c  */
#line 13466 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2326:
/* Line 1792 of yacc.c  */
#line 13467 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2327:
/* Line 1792 of yacc.c  */
#line 13468 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2328:
/* Line 1792 of yacc.c  */
#line 13469 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2329:
/* Line 1792 of yacc.c  */
#line 13470 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2330:
/* Line 1792 of yacc.c  */
#line 13471 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2331:
/* Line 1792 of yacc.c  */
#line 13472 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2332:
/* Line 1792 of yacc.c  */
#line 13473 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2333:
/* Line 1792 of yacc.c  */
#line 13474 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2334:
/* Line 1792 of yacc.c  */
#line 13475 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2335:
/* Line 1792 of yacc.c  */
#line 13476 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2336:
/* Line 1792 of yacc.c  */
#line 13477 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2337:
/* Line 1792 of yacc.c  */
#line 13478 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2338:
/* Line 1792 of yacc.c  */
#line 13479 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2339:
/* Line 1792 of yacc.c  */
#line 13480 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2340:
/* Line 1792 of yacc.c  */
#line 13481 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2341:
/* Line 1792 of yacc.c  */
#line 13482 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2342:
/* Line 1792 of yacc.c  */
#line 13483 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2343:
/* Line 1792 of yacc.c  */
#line 13484 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2344:
/* Line 1792 of yacc.c  */
#line 13485 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2345:
/* Line 1792 of yacc.c  */
#line 13486 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2346:
/* Line 1792 of yacc.c  */
#line 13487 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2347:
/* Line 1792 of yacc.c  */
#line 13488 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2348:
/* Line 1792 of yacc.c  */
#line 13489 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2349:
/* Line 1792 of yacc.c  */
#line 13490 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2350:
/* Line 1792 of yacc.c  */
#line 13491 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2351:
/* Line 1792 of yacc.c  */
#line 13492 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2352:
/* Line 1792 of yacc.c  */
#line 13493 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2353:
/* Line 1792 of yacc.c  */
#line 13494 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2354:
/* Line 1792 of yacc.c  */
#line 13495 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2357:
/* Line 1792 of yacc.c  */
#line 13528 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].start_option_value_list));
          }
    break;

  case 2358:
/* Line 1792 of yacc.c  */
#line 13537 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[(1) - (2)].option_value_no_option_type), (yylsp[(1) - (2)]), (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2359:
/* Line 1792 of yacc.c  */
#line 13541 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[(2) - (2)].transaction_characteristics), (yylsp[(2) - (2)]));
          }
    break;

  case 2360:
/* Line 1792 of yacc.c  */
#line 13545 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].start_option_value_list_following_option_type));
          }
    break;

  case 2361:
/* Line 1792 of yacc.c  */
#line 13549 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(3) - (3)].simple_string), (yylsp[(3) - (3)]));
          }
    break;

  case 2362:
/* Line 1792 of yacc.c  */
#line 13553 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD = '<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(5) - (6)].simple_string), (yylsp[(5) - (6)]));
          }
    break;

  case 2363:
/* Line 1792 of yacc.c  */
#line 13560 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (5)].lex_user), (yyvsp[(5) - (5)].simple_string), (yylsp[(5) - (5)]));
          }
    break;

  case 2364:
/* Line 1792 of yacc.c  */
#line 13564 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD FOR <user> = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD FOR <user> = "
                                 "'<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (8)].lex_user), (yyvsp[(7) - (8)].simple_string), (yylsp[(7) - (8)]));
          }
    break;

  case 2365:
/* Line 1792 of yacc.c  */
#line 13575 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_set_role((yyvsp[(3) - (3)].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2366:
/* Line 1792 of yacc.c  */
#line 13580 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_set_role(ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2367:
/* Line 1792 of yacc.c  */
#line 13585 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_set_role(ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2368:
/* Line 1792 of yacc.c  */
#line 13590 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), (yyvsp[(4) - (6)].user_list), ROLE_NAME);
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
          }
    break;

  case 2369:
/* Line 1792 of yacc.c  */
#line 13595 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), NULL, ROLE_NONE);
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
          }
    break;

  case 2370:
/* Line 1792 of yacc.c  */
#line 13600 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), NULL, ROLE_ALL);
            Lex->sql_command= SQLCOM_ALTER_USER_DEFAULT_ROLE;
          }
    break;

  case 2371:
/* Line 1792 of yacc.c  */
#line 13605 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_set_role(ROLE_ALL, (yyvsp[(4) - (4)].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2372:
/* Line 1792 of yacc.c  */
#line 13612 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.user_list)= NULL; }
    break;

  case 2373:
/* Line 1792 of yacc.c  */
#line 13613 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.user_list)= (yyvsp[(2) - (2)].user_list); }
    break;

  case 2374:
/* Line 1792 of yacc.c  */
#line 13619 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[(1) - (2)].option_value_following_option_type),
                                                                          (yylsp[(1) - (2)]),
                                                                          (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2375:
/* Line 1792 of yacc.c  */
#line 13626 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[(2) - (2)].transaction_characteristics),
                                                                           (yylsp[(2) - (2)]));
          }
    break;

  case 2376:
/* Line 1792 of yacc.c  */
#line 13635 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= NULL; }
    break;

  case 2377:
/* Line 1792 of yacc.c  */
#line 13636 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= (yyvsp[(2) - (2)].option_value_list); }
    break;

  case 2378:
/* Line 1792 of yacc.c  */
#line 13642 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[(0) - (1)]), (yyvsp[(1) - (1)].node), (yylsp[(1) - (1)]));
          }
    break;

  case 2379:
/* Line 1792 of yacc.c  */
#line 13646 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[(1) - (3)].option_value_list), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].node), (yylsp[(3) - (3)]));
          }
    break;

  case 2380:
/* Line 1792 of yacc.c  */
#line 13654 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].option_value_following_option_type));
          }
    break;

  case 2381:
/* Line 1792 of yacc.c  */
#line 13657 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].option_value_no_option_type); }
    break;

  case 2382:
/* Line 1792 of yacc.c  */
#line 13661 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2383:
/* Line 1792 of yacc.c  */
#line 13662 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_PERSIST; }
    break;

  case 2384:
/* Line 1792 of yacc.c  */
#line 13663 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2385:
/* Line 1792 of yacc.c  */
#line 13664 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2386:
/* Line 1792 of yacc.c  */
#line 13668 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2387:
/* Line 1792 of yacc.c  */
#line 13669 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2388:
/* Line 1792 of yacc.c  */
#line 13670 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2389:
/* Line 1792 of yacc.c  */
#line 13671 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2390:
/* Line 1792 of yacc.c  */
#line 13675 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2391:
/* Line 1792 of yacc.c  */
#line 13676 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2392:
/* Line 1792 of yacc.c  */
#line 13677 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2393:
/* Line 1792 of yacc.c  */
#line 13678 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2394:
/* Line 1792 of yacc.c  */
#line 13682 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2395:
/* Line 1792 of yacc.c  */
#line 13683 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_PERSIST; }
    break;

  case 2396:
/* Line 1792 of yacc.c  */
#line 13684 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2397:
/* Line 1792 of yacc.c  */
#line 13685 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2398:
/* Line 1792 of yacc.c  */
#line 13686 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2399:
/* Line 1792 of yacc.c  */
#line 13692 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item));
          }
    break;

  case 2400:
/* Line 1792 of yacc.c  */
#line 13702 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item), (yylsp[(3) - (3)]));
          }
    break;

  case 2401:
/* Line 1792 of yacc.c  */
#line 13706 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item));
          }
    break;

  case 2402:
/* Line 1792 of yacc.c  */
#line 13711 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[(3) - (6)].var_type), (yyvsp[(4) - (6)].internal_variable_name), (yyvsp[(6) - (6)].item));
          }
    break;

  case 2403:
/* Line 1792 of yacc.c  */
#line 13715 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[(2) - (2)].charset));
          }
    break;

  case 2404:
/* Line 1792 of yacc.c  */
#line 13719 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[(2) - (3)]));
          }
    break;

  case 2405:
/* Line 1792 of yacc.c  */
#line 13726 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names_charset((yyvsp[(2) - (3)].charset), (yyvsp[(3) - (3)].charset));
          }
    break;

  case 2406:
/* Line 1792 of yacc.c  */
#line 13733 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2407:
/* Line 1792 of yacc.c  */
#line 13737 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2408:
/* Line 1792 of yacc.c  */
#line 13741 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2409:
/* Line 1792 of yacc.c  */
#line 13748 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].transaction_access_mode), (yyvsp[(2) - (2)].isolation_level));
          }
    break;

  case 2410:
/* Line 1792 of yacc.c  */
#line 13752 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].isolation_level), (yyvsp[(2) - (2)].transaction_access_mode));
          }
    break;

  case 2411:
/* Line 1792 of yacc.c  */
#line 13759 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[(1) - (1)].num));
          }
    break;

  case 2412:
/* Line 1792 of yacc.c  */
#line 13765 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= NULL; }
    break;

  case 2413:
/* Line 1792 of yacc.c  */
#line 13766 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= (yyvsp[(2) - (2)].transaction_access_mode); }
    break;

  case 2414:
/* Line 1792 of yacc.c  */
#line 13771 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[(3) - (3)].tx_isolation));
          }
    break;

  case 2415:
/* Line 1792 of yacc.c  */
#line 13777 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= NULL; }
    break;

  case 2416:
/* Line 1792 of yacc.c  */
#line 13778 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= (yyvsp[(2) - (2)].isolation_level); }
    break;

  case 2417:
/* Line 1792 of yacc.c  */
#line 13782 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2418:
/* Line 1792 of yacc.c  */
#line 13783 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2419:
/* Line 1792 of yacc.c  */
#line 13787 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2420:
/* Line 1792 of yacc.c  */
#line 13788 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2421:
/* Line 1792 of yacc.c  */
#line 13789 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2422:
/* Line 1792 of yacc.c  */
#line 13790 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2423:
/* Line 1792 of yacc.c  */
#line 13795 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2425:
/* Line 1792 of yacc.c  */
#line 13804 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 2426:
/* Line 1792 of yacc.c  */
#line 13806 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON",  2, system_charset_info);
          }
    break;

  case 2427:
/* Line 1792 of yacc.c  */
#line 13810 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
    break;

  case 2428:
/* Line 1792 of yacc.c  */
#line 13814 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
    break;

  case 2429:
/* Line 1792 of yacc.c  */
#line 13823 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2430:
/* Line 1792 of yacc.c  */
#line 13834 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2435:
/* Line 1792 of yacc.c  */
#line 13849 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
    break;

  case 2436:
/* Line 1792 of yacc.c  */
#line 13876 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2437:
/* Line 1792 of yacc.c  */
#line 13877 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2438:
/* Line 1792 of yacc.c  */
#line 13879 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2439:
/* Line 1792 of yacc.c  */
#line 13883 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2440:
/* Line 1792 of yacc.c  */
#line 13888 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2441:
/* Line 1792 of yacc.c  */
#line 13899 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2442:
/* Line 1792 of yacc.c  */
#line 13905 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.statement)= NEW_PTN PT_shutdown();
          }
    break;

  case 2443:
/* Line 1792 of yacc.c  */
#line 13913 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.statement)= NEW_PTN PT_alter_instance((yyvsp[(3) - (3)].alter_instance_action));
          }
    break;

  case 2444:
/* Line 1792 of yacc.c  */
#line 13920 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(2) - (4)].lex_str).str, "INNODB"))
            {
              (yyval.alter_instance_action)= ROTATE_INNODB_MASTER_KEY;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[(2) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2445:
/* Line 1792 of yacc.c  */
#line 13939 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2446:
/* Line 1792 of yacc.c  */
#line 13955 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2447:
/* Line 1792 of yacc.c  */
#line 13973 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                     /* #4 */
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= NEW_PTN Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select()->select_limit= one;
            lex->current_select()->offset_limit= 0;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2448:
/* Line 1792 of yacc.c  */
#line 13993 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item) != NULL)
              ITEMIZE((yyvsp[(6) - (7)].item), &(yyvsp[(6) - (7)].item));
            Select->set_where_cond((yyvsp[(6) - (7)].item));

            if ((yyvsp[(7) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(7) - (7)].limit_clause));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= NEW_PTN Sql_cmd_handler_read((yyvsp[(5) - (7)].ha_read_mode),
                                  lex->ident.str, lex->handler_insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2449:
/* Line 1792 of yacc.c  */
#line 14020 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[(1) - (1)].ha_read_mode); }
    break;

  case 2450:
/* Line 1792 of yacc.c  */
#line 14021 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); (yyval.ha_read_mode)=(yyvsp[(2) - (2)].ha_read_mode); }
    break;

  case 2451:
/* Line 1792 of yacc.c  */
#line 14025 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
    break;

  case 2452:
/* Line 1792 of yacc.c  */
#line 14026 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
    break;

  case 2453:
/* Line 1792 of yacc.c  */
#line 14030 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
    break;

  case 2454:
/* Line 1792 of yacc.c  */
#line 14031 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
    break;

  case 2455:
/* Line 1792 of yacc.c  */
#line 14032 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
    break;

  case 2456:
/* Line 1792 of yacc.c  */
#line 14033 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
    break;

  case 2457:
/* Line 1792 of yacc.c  */
#line 14035 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[(1) - (1)].ha_rkey_mode);
          }
    break;

  case 2458:
/* Line 1792 of yacc.c  */
#line 14039 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(4) - (5)].item_list2));
            Lex->handler_insert_list= &(yyvsp[(4) - (5)].item_list2)->value;
            (yyval.ha_read_mode)= enum_ha_read_modes::RKEY;
          }
    break;

  case 2459:
/* Line 1792 of yacc.c  */
#line 14047 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2460:
/* Line 1792 of yacc.c  */
#line 14048 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2461:
/* Line 1792 of yacc.c  */
#line 14049 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2462:
/* Line 1792 of yacc.c  */
#line 14050 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2463:
/* Line 1792 of yacc.c  */
#line 14051 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2464:
/* Line 1792 of yacc.c  */
#line 14057 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_REVOKE; }
    break;

  case 2465:
/* Line 1792 of yacc.c  */
#line 14058 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2466:
/* Line 1792 of yacc.c  */
#line 14060 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            PT_statement *tmp= NEW_PTN PT_revoke_roles((yyvsp[(2) - (4)].user_list), (yyvsp[(4) - (4)].user_list));
            MAKE_CMD(tmp);
          }
    break;

  case 2467:
/* Line 1792 of yacc.c  */
#line 14069 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
            lex->users_list= *(yyvsp[(6) - (6)].user_list);
          }
    break;

  case 2468:
/* Line 1792 of yacc.c  */
#line 14075 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
            lex->users_list= *(yyvsp[(6) - (6)].user_list);
          }
    break;

  case 2469:
/* Line 1792 of yacc.c  */
#line 14086 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
            lex->users_list= *(yyvsp[(6) - (6)].user_list);
          }
    break;

  case 2470:
/* Line 1792 of yacc.c  */
#line 14097 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[(7) - (7)].user_list);
          }
    break;

  case 2471:
/* Line 1792 of yacc.c  */
#line 14102 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list= *(yyvsp[(5) - (5)].user_list);
            lex->users_list.push_front ((yyvsp[(3) - (5)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2472:
/* Line 1792 of yacc.c  */
#line 14111 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_GRANT; }
    break;

  case 2473:
/* Line 1792 of yacc.c  */
#line 14112 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2474:
/* Line 1792 of yacc.c  */
#line 14114 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_GRANT_ROLE;
            PT_statement *tmp= NEW_PTN PT_grant_roles((yyvsp[(2) - (5)].user_list), (yyvsp[(4) - (5)].user_list), (yyvsp[(5) - (5)].is_not_empty));
            MAKE_CMD(tmp);
          }
    break;

  case 2475:
/* Line 1792 of yacc.c  */
#line 14124 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
    break;

  case 2476:
/* Line 1792 of yacc.c  */
#line 14130 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2477:
/* Line 1792 of yacc.c  */
#line 14141 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2478:
/* Line 1792 of yacc.c  */
#line 14151 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(6) - (6)].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list.push_front ((yyvsp[(3) - (6)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2481:
/* Line 1792 of yacc.c  */
#line 14167 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->grant == GLOBAL_ACLS &&
                lex->sql_command == SQLCOM_REVOKE)
              lex->sql_command= SQLCOM_REVOKE_ALL;
          }
    break;

  case 2482:
/* Line 1792 of yacc.c  */
#line 14174 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2487:
/* Line 1792 of yacc.c  */
#line 14192 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2488:
/* Line 1792 of yacc.c  */
#line 14193 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2489:
/* Line 1792 of yacc.c  */
#line 14195 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2490:
/* Line 1792 of yacc.c  */
#line 14196 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2491:
/* Line 1792 of yacc.c  */
#line 14198 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2492:
/* Line 1792 of yacc.c  */
#line 14199 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2493:
/* Line 1792 of yacc.c  */
#line 14201 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2494:
/* Line 1792 of yacc.c  */
#line 14202 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2495:
/* Line 1792 of yacc.c  */
#line 14203 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2496:
/* Line 1792 of yacc.c  */
#line 14204 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2497:
/* Line 1792 of yacc.c  */
#line 14205 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2498:
/* Line 1792 of yacc.c  */
#line 14206 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2499:
/* Line 1792 of yacc.c  */
#line 14207 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2500:
/* Line 1792 of yacc.c  */
#line 14208 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2501:
/* Line 1792 of yacc.c  */
#line 14209 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2502:
/* Line 1792 of yacc.c  */
#line 14210 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2503:
/* Line 1792 of yacc.c  */
#line 14211 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2504:
/* Line 1792 of yacc.c  */
#line 14212 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2505:
/* Line 1792 of yacc.c  */
#line 14213 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2506:
/* Line 1792 of yacc.c  */
#line 14214 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2507:
/* Line 1792 of yacc.c  */
#line 14215 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2508:
/* Line 1792 of yacc.c  */
#line 14216 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2509:
/* Line 1792 of yacc.c  */
#line 14217 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2510:
/* Line 1792 of yacc.c  */
#line 14218 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2511:
/* Line 1792 of yacc.c  */
#line 14219 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2512:
/* Line 1792 of yacc.c  */
#line 14220 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2513:
/* Line 1792 of yacc.c  */
#line 14221 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2514:
/* Line 1792 of yacc.c  */
#line 14222 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2515:
/* Line 1792 of yacc.c  */
#line 14223 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2516:
/* Line 1792 of yacc.c  */
#line 14224 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2517:
/* Line 1792 of yacc.c  */
#line 14225 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2518:
/* Line 1792 of yacc.c  */
#line 14226 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2519:
/* Line 1792 of yacc.c  */
#line 14227 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2520:
/* Line 1792 of yacc.c  */
#line 14228 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
    break;

  case 2521:
/* Line 1792 of yacc.c  */
#line 14229 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ROLE_ACL; }
    break;

  case 2522:
/* Line 1792 of yacc.c  */
#line 14230 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ROLE_ACL; }
    break;

  case 2523:
/* Line 1792 of yacc.c  */
#line 14234 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2524:
/* Line 1792 of yacc.c  */
#line 14235 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2525:
/* Line 1792 of yacc.c  */
#line 14239 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2526:
/* Line 1792 of yacc.c  */
#line 14240 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2529:
/* Line 1792 of yacc.c  */
#line 14250 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2530:
/* Line 1792 of yacc.c  */
#line 14260 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2531:
/* Line 1792 of yacc.c  */
#line 14270 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2532:
/* Line 1792 of yacc.c  */
#line 14283 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2533:
/* Line 1792 of yacc.c  */
#line 14297 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2534:
/* Line 1792 of yacc.c  */
#line 14309 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2535:
/* Line 1792 of yacc.c  */
#line 14321 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2536:
/* Line 1792 of yacc.c  */
#line 14333 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= new List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2537:
/* Line 1792 of yacc.c  */
#line 14339 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= (yyvsp[(1) - (3)].user_list);
            if ((yyval.user_list)->push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2538:
/* Line 1792 of yacc.c  */
#line 14348 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= new List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2539:
/* Line 1792 of yacc.c  */
#line 14354 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= (yyvsp[(1) - (3)].user_list);
            if ((yyval.user_list)->push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2540:
/* Line 1792 of yacc.c  */
#line 14363 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2541:
/* Line 1792 of yacc.c  */
#line 14368 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2542:
/* Line 1792 of yacc.c  */
#line 14376 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->auth.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->auth.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2543:
/* Line 1792 of yacc.c  */
#line 14384 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user);
            (yyvsp[(1) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(1) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(1) - (5)].lex_user)->uses_identified_by_password_clause= true;
            if (Lex->sql_command == SQLCOM_ALTER_USER)
            {
              my_syntax_error(YYTHD, ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
              push_deprecated_warn(YYTHD, "IDENTIFIED BY PASSWORD",
                                   "IDENTIFIED WITH <plugin> AS <hash>");
          }
    break;

  case 2544:
/* Line 1792 of yacc.c  */
#line 14399 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->plugin.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_with_clause= true;
          }
    break;

  case 2545:
/* Line 1792 of yacc.c  */
#line 14407 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_authentication_string_clause= true;
          }
    break;

  case 2546:
/* Line 1792 of yacc.c  */
#line 14417 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2547:
/* Line 1792 of yacc.c  */
#line 14428 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user);
            (yyvsp[(1) - (1)].lex_user)->auth= NULL_CSTR;
          }
    break;

  case 2548:
/* Line 1792 of yacc.c  */
#line 14436 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
    break;

  case 2552:
/* Line 1792 of yacc.c  */
#line 14450 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            String *new_str = NEW_PTN String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                             (yyvsp[(1) - (1)].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
    break;

  case 2554:
/* Line 1792 of yacc.c  */
#line 14480 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2555:
/* Line 1792 of yacc.c  */
#line 14484 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2556:
/* Line 1792 of yacc.c  */
#line 14488 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2557:
/* Line 1792 of yacc.c  */
#line 14492 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2558:
/* Line 1792 of yacc.c  */
#line 14498 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2560:
/* Line 1792 of yacc.c  */
#line 14503 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2561:
/* Line 1792 of yacc.c  */
#line 14504 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2562:
/* Line 1792 of yacc.c  */
#line 14508 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2563:
/* Line 1792 of yacc.c  */
#line 14509 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2564:
/* Line 1792 of yacc.c  */
#line 14513 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2565:
/* Line 1792 of yacc.c  */
#line 14515 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2566:
/* Line 1792 of yacc.c  */
#line 14521 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2567:
/* Line 1792 of yacc.c  */
#line 14527 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2568:
/* Line 1792 of yacc.c  */
#line 14533 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2569:
/* Line 1792 of yacc.c  */
#line 14542 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2570:
/* Line 1792 of yacc.c  */
#line 14547 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2571:
/* Line 1792 of yacc.c  */
#line 14551 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2572:
/* Line 1792 of yacc.c  */
#line 14552 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2573:
/* Line 1792 of yacc.c  */
#line 14557 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2574:
/* Line 1792 of yacc.c  */
#line 14558 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2575:
/* Line 1792 of yacc.c  */
#line 14559 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2576:
/* Line 1792 of yacc.c  */
#line 14564 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2577:
/* Line 1792 of yacc.c  */
#line 14565 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2578:
/* Line 1792 of yacc.c  */
#line 14566 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2579:
/* Line 1792 of yacc.c  */
#line 14570 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2580:
/* Line 1792 of yacc.c  */
#line 14571 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2581:
/* Line 1792 of yacc.c  */
#line 14576 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2582:
/* Line 1792 of yacc.c  */
#line 14588 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2583:
/* Line 1792 of yacc.c  */
#line 14598 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2584:
/* Line 1792 of yacc.c  */
#line 14607 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2585:
/* Line 1792 of yacc.c  */
#line 14616 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2586:
/* Line 1792 of yacc.c  */
#line 14629 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2587:
/* Line 1792 of yacc.c  */
#line 14630 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2588:
/* Line 1792 of yacc.c  */
#line 14631 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2591:
/* Line 1792 of yacc.c  */
#line 14644 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (1)].query_expression)->has_into_clause())
              YYTHD->syntax_error_at((yylsp[(1) - (1)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));

            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[(1) - (1)].query_expression));
          }
    break;

  case 2592:
/* Line 1792 of yacc.c  */
#line 14656 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
    break;

  case 2593:
/* Line 1792 of yacc.c  */
#line 14657 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
    break;

  case 2594:
/* Line 1792 of yacc.c  */
#line 14658 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
    break;

  case 2595:
/* Line 1792 of yacc.c  */
#line 14659 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
    break;

  case 2596:
/* Line 1792 of yacc.c  */
#line 14660 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
    break;

  case 2597:
/* Line 1792 of yacc.c  */
#line 14661 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
    break;

  case 2598:
/* Line 1792 of yacc.c  */
#line 14662 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_FOUND_ROWS; }
    break;

  case 2599:
/* Line 1792 of yacc.c  */
#line 14663 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_ALL; }
    break;

  case 2600:
/* Line 1792 of yacc.c  */
#line 14674 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2601:
/* Line 1792 of yacc.c  */
#line 14676 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2602:
/* Line 1792 of yacc.c  */
#line 14678 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2616:
/* Line 1792 of yacc.c  */
#line 14711 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2617:
/* Line 1792 of yacc.c  */
#line 14725 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2618:
/* Line 1792 of yacc.c  */
#line 14738 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2619:
/* Line 1792 of yacc.c  */
#line 14740 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2620:
/* Line 1792 of yacc.c  */
#line 14742 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2621:
/* Line 1792 of yacc.c  */
#line 14747 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
    break;

  case 2622:
/* Line 1792 of yacc.c  */
#line 14752 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2623:
/* Line 1792 of yacc.c  */
#line 14754 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2624:
/* Line 1792 of yacc.c  */
#line 14756 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
    break;

  case 2625:
/* Line 1792 of yacc.c  */
#line 14761 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2626:
/* Line 1792 of yacc.c  */
#line 14763 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2627:
/* Line 1792 of yacc.c  */
#line 14765 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2628:
/* Line 1792 of yacc.c  */
#line 14770 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
    break;

  case 2630:
/* Line 1792 of yacc.c  */
#line 14787 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2632:
/* Line 1792 of yacc.c  */
#line 14793 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(1) - (1)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2633:
/* Line 1792 of yacc.c  */
#line 14798 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(3) - (3)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2634:
/* Line 1792 of yacc.c  */
#line 14806 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[(1) - (2)].query_expression));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[(2) - (2)].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[(2) - (2)]).cpp.end - (yylsp[(1) - (2)]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[(1) - (2)]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
          }
    break;

  case 2635:
/* Line 1792 of yacc.c  */
#line 14858 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_NONE; }
    break;

  case 2636:
/* Line 1792 of yacc.c  */
#line 14859 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_CASCADED; }
    break;

  case 2637:
/* Line 1792 of yacc.c  */
#line 14860 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_CASCADED; }
    break;

  case 2638:
/* Line 1792 of yacc.c  */
#line 14861 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_LOCAL; }
    break;

  case 2639:
/* Line 1792 of yacc.c  */
#line 14872 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
    break;

  case 2640:
/* Line 1792 of yacc.c  */
#line 14874 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
    break;

  case 2641:
/* Line 1792 of yacc.c  */
#line 14879 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
    break;

  case 2642:
/* Line 1792 of yacc.c  */
#line 14885 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[(1) - (2)].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length };
            }
    break;

  case 2643:
/* Line 1792 of yacc.c  */
#line 14902 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[(2) - (10)].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[(3) - (10)].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[(4) - (10)].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[(10) - (10)].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[(10) - (10)].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[(1) - (10)]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[(6) - (10)]).cpp.start);
            lex->ident.length= (yylsp[(8) - (10)]).cpp.start - (yylsp[(6) - (10)]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[(2) - (10)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[(10) - (10)]).cpp.end);
          }
    break;

  case 2644:
/* Line 1792 of yacc.c  */
#line 14934 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (12)].table),
                                                    (LEX_STRING*) 0,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
    break;

  case 2645:
/* Line 1792 of yacc.c  */
#line 14971 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[(2) - (7)]).cpp.start;
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2646:
/* Line 1792 of yacc.c  */
#line 14989 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(2) - (6)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(2) - (6)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[(1) - (6)]).cpp.start;
            lex->udf.name = (yyvsp[(2) - (6)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(4) - (6)].num);
            lex->udf.dl=(yyvsp[(6) - (6)].lex_str).str;
          }
    break;

  case 2647:
/* Line 1792 of yacc.c  */
#line 15011 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->spname= (yyvsp[(2) - (3)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[(3) - (3)]).cpp.end);
          }
    break;

  case 2648:
/* Line 1792 of yacc.c  */
#line 15035 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(6) - (6)]).cpp.start);
          }
    break;

  case 2649:
/* Line 1792 of yacc.c  */
#line 15041 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[(9) - (10)].type));
            enum_field_types field_type= (yyvsp[(9) - (10)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(9) - (10)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(10) - (10)].charset)))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[(9) - (10)].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[(9) - (10)].type)->get_length(), (yyvsp[(9) - (10)].type)->get_dec(),
                                            (yyvsp[(9) - (10)].type)->get_type_flags(), NULL, NULL, &NULL_STR, 0,
                                            (yyvsp[(9) - (10)].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[(9) - (10)].type)->get_uint_geom_type(), NULL))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        field_type,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2650:
/* Line 1792 of yacc.c  */
#line 15081 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2651:
/* Line 1792 of yacc.c  */
#line 15089 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
    break;

  case 2652:
/* Line 1792 of yacc.c  */
#line 15148 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[(2) - (2)]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[(2) - (2)].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
    break;

  case 2653:
/* Line 1792 of yacc.c  */
#line 15168 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[(4) - (4)]).cpp.end);
          }
    break;

  case 2654:
/* Line 1792 of yacc.c  */
#line 15173 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(7) - (7)]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2655:
/* Line 1792 of yacc.c  */
#line 15181 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2656:
/* Line 1792 of yacc.c  */
#line 15189 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
    break;

  case 2657:
/* Line 1792 of yacc.c  */
#line 15203 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2658:
/* Line 1792 of yacc.c  */
#line 15208 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2659:
/* Line 1792 of yacc.c  */
#line 15213 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2660:
/* Line 1792 of yacc.c  */
#line 15218 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2661:
/* Line 1792 of yacc.c  */
#line 15223 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2662:
/* Line 1792 of yacc.c  */
#line 15228 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[(3) - (3)].is_not_empty));
          }
    break;

  case 2663:
/* Line 1792 of yacc.c  */
#line 15235 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2664:
/* Line 1792 of yacc.c  */
#line 15236 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2665:
/* Line 1792 of yacc.c  */
#line 15240 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
    break;

  case 2666:
/* Line 1792 of yacc.c  */
#line 15249 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2667:
/* Line 1792 of yacc.c  */
#line 15259 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            // check for overwflow of xid format id 
            bool format_id_overflow_detected= ((yyvsp[(5) - (5)].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2668:
/* Line 1792 of yacc.c  */
#line 15276 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2669:
/* Line 1792 of yacc.c  */
#line 15277 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2670:
/* Line 1792 of yacc.c  */
#line 15281 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2671:
/* Line 1792 of yacc.c  */
#line 15282 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_JOIN;        }
    break;

  case 2672:
/* Line 1792 of yacc.c  */
#line 15283 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_RESUME;      }
    break;

  case 2673:
/* Line 1792 of yacc.c  */
#line 15287 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2674:
/* Line 1792 of yacc.c  */
#line 15288 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
    break;

  case 2675:
/* Line 1792 of yacc.c  */
#line 15293 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2676:
/* Line 1792 of yacc.c  */
#line 15295 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_SUSPEND;     }
    break;

  case 2677:
/* Line 1792 of yacc.c  */
#line 15297 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
    break;

  case 2678:
/* Line 1792 of yacc.c  */
#line 15302 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_install_plugin((yyvsp[(3) - (5)].lex_str), (yyvsp[(5) - (5)].lex_str));
          }
    break;

  case 2679:
/* Line 1792 of yacc.c  */
#line 15308 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new Sql_cmd_install_component((yyvsp[(3) - (3)].lex_str_list));
          }
    break;

  case 2680:
/* Line 1792 of yacc.c  */
#line 15317 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_uninstall_plugin((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2681:
/* Line 1792 of yacc.c  */
#line 15323 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new Sql_cmd_uninstall_component((yyvsp[(3) - (3)].lex_str_list));
          }
    break;

  case 2682:
/* Line 1792 of yacc.c  */
#line 15332 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[(1) - (1)].lex_str)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2683:
/* Line 1792 of yacc.c  */
#line 15338 "/export/home/pb2/build/sb_0-20188954-1472128388.66/mysql-8.0.0-dmr-release-export-9931257_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_list)= (yyvsp[(1) - (3)].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[(3) - (3)].lex_str)))
              MYSQL_YYABORT; // OOM
          }
    break;


/* Line 1792 of yacc.c  */
#line 41178 "/export/home/pb2/build/sb_0-20188954-1472128388.66/dist_GPL/sql/sql_yacc.cc"
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, YYTHD);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD);
    }
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


