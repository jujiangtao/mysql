# 
# DROP-related tests which execution requires debug server.
#
--source include/have_debug.inc
--source include/have_debug_sync.inc

###########################################################################
--echo
--echo # --
--echo # -- Bug#43138: DROP DATABASE failure does not clean up message list.
--echo # --
--echo

--disable_warnings
DROP DATABASE IF EXISTS mysql_test;
--enable_warnings

--echo
CREATE DATABASE mysql_test;
CREATE TABLE mysql_test.t1(a INT);
CREATE TABLE mysql_test.t2(b INT);
CREATE TABLE mysql_test.t3(c INT);

--echo
SET SESSION DEBUG = "+d,bug43138";

--echo
--sorted_result
DROP DATABASE mysql_test;

--echo
SET SESSION DEBUG = "-d,bug43138";

--echo
--echo # --
--echo # -- End of Bug#43138.
--echo # --

###########################################################################

--echo #
--echo # Bug#21625393 : Assert condition (e->usage() == 1) failure in
--echo #                dd::cache::Shared_multi_map<T>::remove()
--echo #

--enable_connect_log

CREATE TABLE t1 (f1 INT);

SET DEBUG_SYNC='before_dropping_dd_object SIGNAL kill_query WAIT_FOR go';
--SEND DROP TABLE t1;

connect (con1, localhost, root,,);
SET DEBUG_SYNC='now WAIT_FOR kill_query';
SELECT ID FROM INFORMATION_SCHEMA.PROCESSLIST WHERE INFO LIKE "DROP TABLE%" INTO @thread_id;
KILL QUERY @thread_id;
SET DEBUG_SYNC='now SIGNAL go';

connection default;
# Bug#21966802 is makes DD operations immune to kill. So DROP TABLE statement
# will not be interrupted in this case. So commenting following statement.
#--error ER_QUERY_INTERRUPTED
--reap
# Without fix, following statement results in a assert condition failure with
# the debug build.
--error ER_BAD_TABLE_ERROR
DROP TABLE t1;

#cleanup
disconnect con1;
SET DEBUG_SYNC='RESET';
--disable_connect_log
