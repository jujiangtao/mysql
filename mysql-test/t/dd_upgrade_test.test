# This test scripts covers upgrade of tables, views, tablespaces,
# events, stored routines and triggers from 5.7 to 8.0.

--source include/not_embedded.inc

call mtr.add_suppression("Plugin * after shutdown");
call mtr.add_suppression(".* Native table .* has the wrong structure");
call mtr.add_suppression("Resizing redo log from");
call mtr.add_suppression("Starting to delete and rewrite log files");
call mtr.add_suppression("New log files created");
call mtr.add_suppression("Info table is not ready to be used.");
call mtr.add_suppression("must use supported storage engine");
call mtr.add_suppression("after shutdown");
call mtr.add_suppression("will be forced to shutdown");
call mtr.add_suppression("Table 'mysql.component' doesn't exist");
call mtr.add_suppression("ACL DDLs will not work unless mysql_upgrade is executed");
call mtr.add_suppression("table is missing or has an incorrect definition");
call mtr.add_suppression("is expected to be transactional");
call mtr.add_suppression("Upgrading redo log");

# Set different paths for --datadir
let $MYSQLD_DATADIR1 = $MYSQL_TMP_DIR/data57;

--echo # Stop DB server which was created by MTR default
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--shutdown_server
--source include/wait_until_disconnected.inc

--echo # Copy the remote tablespace & DB zip files from suite location to working location.
--copy_file $MYSQLTEST_VARDIR/std_data/data57.zip $MYSQL_TMP_DIR/data57.zip

--echo # Check that the file exists in the working folder.
--file_exists $MYSQL_TMP_DIR/data57.zip

--echo # Unzip the zip file.
--exec unzip -qo $MYSQL_TMP_DIR/data57.zip -d $MYSQL_TMP_DIR

# These files are added to test error scenario, delete from for upgrade testing.
--remove_file $MYSQL_TMP_DIR/data57/test/55_temporal.frm
--remove_file $MYSQL_TMP_DIR/data57/test/55_temporal.MYD
--remove_file $MYSQL_TMP_DIR/data57/test/55_temporal.MYI
# Remove myisam partitioned tables. There are used for negative testing.
--remove_files_wildcard $MYSQL_TMP_DIR/data57/partitions *
--rmdir $MYSQL_TMP_DIR/data57/partitions

--echo #Files in 'test' dir
--list_files $MYSQL_TMP_DIR/data57/

# Create a bootstrap file in temp location
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
--exec echo $MYSQL_TMP_DIR/bootstrap.log


--echo # Start the DB server.
--exec echo "restart: --show_compatibility_56=1 --innodb_undo_tablespaces=0 --datadir=$MYSQLD_DATADIR1" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc


--echo # Sanity Testing after Server start
CREATE SCHEMA test123;
CREATE TABLE test123.t1(a int);
INSERT INTO test123.t1 values(1);
SELECT * FROM test123.t1;
DROP SCHEMA test123;

--echo # Execute mysql_upgrade

--source include/mysql_upgrade_preparation.inc
--exec $MYSQL_UPGRADE --skip-verbose --force 2>&1
--source include/mysql_upgrade_cleanup.inc

SHOW DATABASES;
#Check for table
SHOW CREATE TABLE mysql.user;

SHOW CREATE TABLE mysql.innodb_table_stats;
SHOW CREATE TABLE mysql.innodb_index_stats;

SELECT NAME,LEN FROM INFORMATION_SCHEMA.INNODB_SYS_COLUMNS WHERE TABLE_ID IN
  (SELECT TABLE_ID FROM INFORMATION_SCHEMA.INNODB_SYS_TABLES WHERE NAME LIKE '%innodb_%_stats')
  AND NAME LIKE 'table_name';

SHOW CREATE TABLE test.t_compressed;
SHOW CREATE TABLE test.t_compressed2;
SHOW CREATE TABLE test.t_compressed3;
SHOW CREATE TABLE test.t_dynamic;
SHOW CREATE TABLE test.t_index;

SHOW CREATE TABLE test.vt2;
SELECT * FROM test.vt2;
SHOW CREATE TABLE test.t_gen_stored;
SHOW CREATE TABLE test.jemp;
SHOW CREATE TABLE test.t_gen_stored_myisam;
SHOW CREATE TABLE test.t_gen_stored_myisam2;
SHOW CREATE TABLE test.jemp_myisam;


SELECT TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE, ENGINE, VERSION, ROW_FORMAT
 FROM INFORMATION_SCHEMA.tables WHERE table_schema='test';
# Check for views
#Invalid view
SHOW CREATE VIEW aview.view_invalid;
#Valid views
SHOW CREATE VIEW aview.view_2;
SHOW CREATE VIEW aview.second_view;
SELECT * FROM aview.view_2;
SELECT * FROM aview.second_view;

SHOW CREATE VIEW aview.mixed_view;
SHOW CREATE VIEW aview.mixed_view2;
SELECT * FROM aview.mixed_view2;

#view with different definer
SHOW CREATE VIEW aview.view_user;
SHOW CREATE VIEW aview.view_user2;
#view with different character_set and connection collation
SHOW CREATE VIEW aview.view_character_set;


#Check for SP/SF
SHOW CREATE PROCEDURE sp.simpleproc;
SHOW CREATE PROCEDURE sp.proc_123;
SHOW CREATE PROCEDURE sp.proc_456;
SHOW CREATE FUNCTION sp.hello;
#Check for events
SHOW CREATE EVENT events.e_totals;
#Check for fulltext index
SHOW CREATE TABLE test.opening_lines;

# Check for General tablespace
SHOW CREATE TABLE tablespace.t2;
SHOW CREATE TABLE tablespace.t3;
SELECT * FROM tablespace.t3;
SHOW CREATE TABLE tablespace.t4;

#Check for table with blackhole engine
SHOW CREATE TABLE test.t_blackhole;

#Check for table with special character in name
SHOW CREATE TABLE `test`.`t_sc~!@#$%^&*(`;

#Check for JSON types
SHOW CREATE TABLE test.t_json;

#Check for geometry data types
SHOW CREATE TABLE test.geom;

#Check for Triggers. Operations on t1 inserts data in t2.
INSERT INTO triggers.t1 VALUES(1);
UPDATE triggers.t1 SET a=2 WHERE a=1;
SELECT * FROM triggers.t2;

SELECT TRIGGER_SCHEMA, TRIGGER_NAME, EVENT_MANIPULATION, ACTION_TIMING,
 ACTION_ORDER FROM INFORMATION_SCHEMA.TRIGGERS WHERE TRIGGER_SCHEMA='triggers';

--replace_column 7 #
SHOW CREATE TRIGGER triggers.trg_t1_after_insert_3;
--replace_column 7 #
SHOW CREATE TRIGGER triggers.trg1;

--replace_column 7 #
SHOW CREATE TRIGGER triggers.t1_bi;

#I_S query to check Foreign_keys
SELECT * FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE
 CONSTRAINT_SCHEMA='foreign_keys' ORDER BY CONSTRAINT_SCHEMA,CONSTRAINT_NAME;
--echo # Stop the server
--source include/shutdown_mysqld.inc

#Remove copied files
--remove_file $MYSQL_TMP_DIR/data57.zip

--force-rmdir $MYSQL_TMP_DIR/data57

--echo # Restart the server with default options.
--source include/start_mysqld.inc
