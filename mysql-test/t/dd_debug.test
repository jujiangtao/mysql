#
# Tests for data-dictionary implementation requiring debug build of server.
#

--source include/have_debug.inc
--source include/count_sessions.inc

###########################################################################

--echo ###################################################################
--echo #
--echo # Bug#20290768 - server crash in table_share_utils::fill_partitioning_from_dd
--echo #
--echo ###################################################################

SET GLOBAL DEBUG='+d,weak_object_impl_store_fail_before_store_children';
--error ER_UNKNOWN_ERROR
CREATE TABLE t1 (pk INT, col1 INT) ENGINE=InnoDB PARTITION BY KEY(pk) PARTITIONS 2;
SET GLOBAL DEBUG='-d,weak_object_impl_store_fail_before_store_children';

--echo # Without fix, following statement crashed.
CREATE TABLE t1 (pk INT, col1 INT) ENGINE=InnoDB PARTITION BY KEY(pk) PARTITIONS 2;
DROP TABLE t1;


--enable_connect_log

--echo ###################################################################
--echo #
--echo # WL#6378: New data dictionary.
--echo #
--echo # Provoke various error situations during DDL operations
--echo # on the dictionary objects.
--echo #
--echo # Note: Some of the error situations result in an inconsistency
--echo #       between the global data dictionary and the SE or the
--echo #       file system. These are known issues that will be
--echo #       addressed in WL#7743.
--echo #
--echo ###################################################################
--echo #

# InnoDB will complain when trying to drop a table which is not
# present in the SE.
call mtr.add_suppression("\\[ERROR\\] InnoDB: Table `test`.`t1` .*");

--echo # 1. Schemata
--echo # 1.1 Fail while storing dd object during create.

SET DEBUG= '+d, fail_while_storing_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
CREATE SCHEMA s1;
SET DEBUG= '-d, fail_while_storing_dd_object';
--echo # Do it for real.
CREATE SCHEMA s1;

--echo # 1.2a Fail while acquiring dd object during alter.

SET DEBUG= '+d, fail_while_acquiring_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
ALTER SCHEMA s1 DEFAULT COLLATE 'utf8_bin';
SET DEBUG= '-d, fail_while_acquiring_dd_object';

--echo # 1.2b Fail while storing  dd object during alter.

SET DEBUG= '+d, fail_while_storing_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
ALTER SCHEMA s1 DEFAULT COLLATE 'utf8_bin';
SET DEBUG= '-d, fail_while_acquiring_dd_object';

--echo # 1.3a Fail while acquiring dd object during drop.

--connect (con1, localhost, root,,)
SET DEBUG_SYNC= 'before_acquire_in_drop_schema SIGNAL before_acquire WAIT_FOR cont';
--send DROP SCHEMA s1

--connection default
SET DEBUG_SYNC= 'now WAIT_FOR before_acquire';
SET GLOBAL DEBUG= '+d, fail_while_acquiring_dd_object';
SET DEBUG_SYNC= 'now SIGNAL cont';

--connection con1
--error ER_LOCK_WAIT_TIMEOUT
--reap

--echo # Disconnect and cleanup.
--disconnect con1
--source include/wait_until_disconnected.inc
--connection default
SET DEBUG_SYNC= 'RESET';
SET GLOBAL DEBUG= '-d, fail_while_acquiring_dd_object';
--echo # Note: We are now left with an inconsistency
--echo #       between the file system and the dd.
--echo #       To get out of this, create a directory.
--let $MYSQLD_DATADIR= `select @@datadir`
--mkdir $MYSQLD_DATADIR/s1

--echo # 1.3b No schema found during drop.

SET DEBUG= '+d, pretend_no_schema_in_drop_schema';
--error ER_BAD_DB_ERROR
DROP SCHEMA s1;
SET DEBUG= '-d, pretend_no_schema_in_drop_schema';
--echo # Note: We are now left with an inconsistency
--echo #       between the file system and the dd.
--echo #       To get out of this, create a directory.
--mkdir $MYSQLD_DATADIR/s1

--echo # 1.3c Fail while dropping dd object during drop.

SET DEBUG= '+d, fail_while_dropping_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
DROP SCHEMA s1;
SET DEBUG= '-d, fail_while_dropping_dd_object';
--echo # Do it for real.
--echo # Note: The statement below fails, and the entry for
--echo #       s1 in mysql.schemata is still present. This
--echo #       will be addressed in WL#7743.
--error ER_DB_DROP_EXISTS
DROP SCHEMA s1;
SET SESSION debug= '+d,skip_dd_table_access_check';
SELECT COUNT(*) FROM mysql.schemata WHERE name LIKE 's1';

--echo # To get out of this, create a directory, then drop.
--mkdir $MYSQLD_DATADIR/s1
DROP SCHEMA s1;
SELECT COUNT(*) FROM mysql.schemata WHERE name LIKE 's1';
SET SESSION debug= '-d,skip_dd_table_access_check';

--echo ###################################################################
--echo #
--echo # 2. Tables
--echo # 2.1a Fail while storing dd object during create.

SET DEBUG= '+d, fail_while_storing_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
CREATE TABLE t1 (pk INT PRIMARY KEY);
SET DEBUG= '-d, fail_while_storing_dd_object';

--echo # 2.1b No tablespace object during create.

--error ER_TABLESPACE_MISSING_WITH_NAME
CREATE TABLE t1 (pk INT PRIMARY KEY) TABLESPACE no_such_tablespace;

--echo # 2.1c Fail while acquiring tablespace object during create.

--connect (con1, localhost, root,,)
SET DEBUG_SYNC= 'before_acquire_in_fill_dd_tablespace_id_or_name SIGNAL before_acquire WAIT_FOR cont';
--send CREATE TABLE t1 (pk INT PRIMARY KEY) TABLESPACE no_such_tablespace;

--connection default
SET DEBUG_SYNC= 'now WAIT_FOR before_acquire';
SET GLOBAL DEBUG= '+d, fail_while_acquiring_dd_object';
SET DEBUG_SYNC= 'now SIGNAL cont';

--connection con1
--error ER_LOCK_WAIT_TIMEOUT
--reap

--echo # Disconnect and cleanup.
--disconnect con1
--source include/wait_until_disconnected.inc
--connection default
SET DEBUG_SYNC= 'RESET';
SET GLOBAL DEBUG= '-d, fail_while_acquiring_dd_object';

--echo # Do it for real.
CREATE TABLE t1 (pk INT PRIMARY KEY);

--echo # 2.2 Fail while acquiring dd object during alter.

SET DEBUG= '+d, fail_while_acquiring_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
ALTER TABLE t1 ADD COLUMN c1 INT;
SET DEBUG= '-d, fail_while_acquiring_dd_object';

--echo # 2.3 Fail while dropping dd object during drop.

SET DEBUG= '+d, fail_while_dropping_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
DROP TABLE t1;
SET DEBUG= '-d, fail_while_dropping_dd_object';
--echo # Do it for real.
--echo # Note: The statement below fails, but the entry for t1
--echo #       in mysql.tables is removed.
--error ER_BAD_TABLE_ERROR
DROP TABLE t1;

--echo ###################################################################
--echo #
--echo # 3. Views
--echo # 3.1 Fail while storing dd object during create.

CREATE TABLE v1_base_table (pk INT PRIMARY KEY);
SET DEBUG= '+d, fail_while_storing_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
CREATE VIEW v1 AS SELECT * from v1_base_table;
SET DEBUG= '-d, fail_while_storing_dd_object';
--echo # Do it for real.
CREATE VIEW v1 AS SELECT pk from v1_base_table;

--echo # 3.2 Fail while acquiring dd object during alter.

SET DEBUG= '+d, fail_while_acquiring_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
ALTER VIEW v1 AS SELECT pk FROM t1;
SET DEBUG= '-d, fail_while_acquiring_dd_object';

--echo # 3.3 Fail while dropping dd object during drop.

SET DEBUG= '+d, fail_while_dropping_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
DROP VIEW v1;
SET DEBUG= '-d, fail_while_dropping_dd_object';
--echo # Do it for real.
DROP VIEW v1;
DROP TABLE v1_base_table;


--echo ###################################################################
--echo #
--echo # 4. Tablespaces

--echo # 4.1 Fail while storing dd object during create.

SET DEBUG= '+d, fail_while_storing_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
CREATE TABLESPACE ts1 ADD DATAFILE 'ts1.ibd';
SET DEBUG= '-d, fail_while_storing_dd_object';

--echo # Here, the global DD and InnoDB are out of sync. To get
--echo # out of this, we must do a drop, which fails since the
--echo # object does not exist in the DD, but which still
--echo # removes the tablespace from the SE.
--error ER_TABLESPACE_MISSING_WITH_NAME
DROP TABLESPACE ts1;

--echo # Then, we can do it for real.
CREATE TABLESPACE ts1 ADD DATAFILE 'ts1.ibd';

--echo # 4.2 Fail while acquiring dd object during alter:
--echo #     Skipped, since InnoDB does not suppoer
--echo #     ALTER TABLESPACE yet.

--echo # 4.3 Fail while dropping dd object during drop.

SET DEBUG= '+d, fail_while_dropping_dd_object';
--error ER_LOCK_WAIT_TIMEOUT
DROP TABLESPACE ts1;
SET DEBUG= '-d, fail_while_dropping_dd_object';

--echo # Do it for real.
--echo # Note: The statement below fails, and there is still an entry for
--echo #       ts1 in mysql.tablespaces.
--error ER_DROP_FILEGROUP_FAILED
DROP TABLESPACE ts1;
SET SESSION debug= '+d,skip_dd_table_access_check';
SELECT COUNT(*) FROM mysql.tablespaces WHERE name LIKE 'ts1';

--echo # To get around this, recreate the tablespace, which will fail,
--echo # yet also makes the global DD in sync with InnoDB. Then drop.
--error ER_TABLESPACE_EXISTS
CREATE TABLESPACE ts1 ADD DATAFILE 'ts1.ibd';
DROP TABLESPACE ts1;
SELECT COUNT(*) FROM mysql.tablespaces WHERE name LIKE 'ts1';
SET SESSION debug= '-d,skip_dd_table_access_check';

--echo ###################################################################

--disable_connect_log
--source include/wait_until_count_sessions.inc

###########################################################################
