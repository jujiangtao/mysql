###################################################################
#
# Bug#20290768 - server crash in table_share_utils::fill_partitioning_from_dd
#
###################################################################
SET GLOBAL DEBUG='+d,weak_object_impl_store_fail_before_store_children';
CREATE TABLE t1 (pk INT, col1 INT) ENGINE=InnoDB PARTITION BY KEY(pk) PARTITIONS 2;
ERROR HY000: Unknown error
SET GLOBAL DEBUG='-d,weak_object_impl_store_fail_before_store_children';
# Without fix, following statement crashed.
CREATE TABLE t1 (pk INT, col1 INT) ENGINE=InnoDB PARTITION BY KEY(pk) PARTITIONS 2;
DROP TABLE t1;
###################################################################
#
# WL#6378: New data dictionary.
#
# Provoke various error situations during DDL operations
# on the dictionary objects.
#
# Note: Some of the error situations result in an inconsistency
#       between the global data dictionary and the SE or the
#       file system. These are known issues that will be
#       addressed in WL#7743.
#
###################################################################
#
call mtr.add_suppression("\\[ERROR\\] InnoDB: Table `test`.`t1` .*");
# 1. Schemata
# 1.1 Fail while storing dd object during create.
SET DEBUG= '+d, fail_while_storing_dd_object';
CREATE SCHEMA s1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_storing_dd_object';
# Do it for real.
CREATE SCHEMA s1;
# 1.2a Fail while acquiring dd object during alter.
SET DEBUG= '+d, fail_while_acquiring_dd_object';
ALTER SCHEMA s1 DEFAULT COLLATE 'utf8_bin';
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_acquiring_dd_object';
# 1.2b Fail while storing  dd object during alter.
SET DEBUG= '+d, fail_while_storing_dd_object';
ALTER SCHEMA s1 DEFAULT COLLATE 'utf8_bin';
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_acquiring_dd_object';
# 1.3a Fail while acquiring dd object during drop.
connect  con1, localhost, root,,;
SET DEBUG_SYNC= 'before_acquire_in_drop_schema SIGNAL before_acquire WAIT_FOR cont';
DROP SCHEMA s1;
connection default;
SET DEBUG_SYNC= 'now WAIT_FOR before_acquire';
SET GLOBAL DEBUG= '+d, fail_while_acquiring_dd_object';
SET DEBUG_SYNC= 'now SIGNAL cont';
connection con1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
# Disconnect and cleanup.
disconnect con1;
connection default;
SET DEBUG_SYNC= 'RESET';
SET GLOBAL DEBUG= '-d, fail_while_acquiring_dd_object';
# Note: We are now left with an inconsistency
#       between the file system and the dd.
#       To get out of this, create a directory.
# 1.3b No schema found during drop.
SET DEBUG= '+d, pretend_no_schema_in_drop_schema';
DROP SCHEMA s1;
ERROR 42000: Unknown database 's1'
SET DEBUG= '-d, pretend_no_schema_in_drop_schema';
# Note: We are now left with an inconsistency
#       between the file system and the dd.
#       To get out of this, create a directory.
# 1.3c Fail while dropping dd object during drop.
SET DEBUG= '+d, fail_while_dropping_dd_object';
DROP SCHEMA s1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_dropping_dd_object';
# Do it for real.
# Note: The statement below fails, and the entry for
#       s1 in mysql.schemata is still present. This
#       will be addressed in WL#7743.
DROP SCHEMA s1;
ERROR HY000: Can't drop database 's1'; database doesn't exist
SET SESSION debug= '+d,skip_dd_table_access_check';
SELECT COUNT(*) FROM mysql.schemata WHERE name LIKE 's1';
COUNT(*)
1
# To get out of this, create a directory, then drop.
DROP SCHEMA s1;
SELECT COUNT(*) FROM mysql.schemata WHERE name LIKE 's1';
COUNT(*)
0
SET SESSION debug= '-d,skip_dd_table_access_check';
###################################################################
#
# 2. Tables
# 2.1a Fail while storing dd object during create.
SET DEBUG= '+d, fail_while_storing_dd_object';
CREATE TABLE t1 (pk INT PRIMARY KEY);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_storing_dd_object';
# 2.1b No tablespace object during create.
CREATE TABLE t1 (pk INT PRIMARY KEY) TABLESPACE no_such_tablespace;
ERROR HY000: Tablespace no_such_tablespace doesn't exist.
# 2.1c Fail while acquiring tablespace object during create.
connect  con1, localhost, root,,;
SET DEBUG_SYNC= 'before_acquire_in_fill_dd_tablespace_id_or_name SIGNAL before_acquire WAIT_FOR cont';
CREATE TABLE t1 (pk INT PRIMARY KEY) TABLESPACE no_such_tablespace;;
connection default;
SET DEBUG_SYNC= 'now WAIT_FOR before_acquire';
SET GLOBAL DEBUG= '+d, fail_while_acquiring_dd_object';
SET DEBUG_SYNC= 'now SIGNAL cont';
connection con1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
# Disconnect and cleanup.
disconnect con1;
connection default;
SET DEBUG_SYNC= 'RESET';
SET GLOBAL DEBUG= '-d, fail_while_acquiring_dd_object';
# Do it for real.
CREATE TABLE t1 (pk INT PRIMARY KEY);
# 2.2 Fail while acquiring dd object during alter.
SET DEBUG= '+d, fail_while_acquiring_dd_object';
ALTER TABLE t1 ADD COLUMN c1 INT;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_acquiring_dd_object';
# 2.3 Fail while dropping dd object during drop.
SET DEBUG= '+d, fail_while_dropping_dd_object';
DROP TABLE t1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_dropping_dd_object';
# Do it for real.
# Note: The statement below fails, but the entry for t1
#       in mysql.tables is removed.
DROP TABLE t1;
ERROR 42S02: Unknown table 'test.t1'
###################################################################
#
# 3. Views
# 3.1 Fail while storing dd object during create.
CREATE TABLE v1_base_table (pk INT PRIMARY KEY);
SET DEBUG= '+d, fail_while_storing_dd_object';
CREATE VIEW v1 AS SELECT * from v1_base_table;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_storing_dd_object';
# Do it for real.
CREATE VIEW v1 AS SELECT pk from v1_base_table;
# 3.2 Fail while acquiring dd object during alter.
SET DEBUG= '+d, fail_while_acquiring_dd_object';
ALTER VIEW v1 AS SELECT pk FROM t1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_acquiring_dd_object';
# 3.3 Fail while dropping dd object during drop.
SET DEBUG= '+d, fail_while_dropping_dd_object';
DROP VIEW v1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_dropping_dd_object';
# Do it for real.
DROP VIEW v1;
DROP TABLE v1_base_table;
###################################################################
#
# 4. Tablespaces
# 4.1 Fail while storing dd object during create.
SET DEBUG= '+d, fail_while_storing_dd_object';
CREATE TABLESPACE ts1 ADD DATAFILE 'ts1.ibd';
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_storing_dd_object';
# Here, the global DD and InnoDB are out of sync. To get
# out of this, we must do a drop, which fails since the
# object does not exist in the DD, but which still
# removes the tablespace from the SE.
DROP TABLESPACE ts1;
ERROR HY000: Tablespace ts1 doesn't exist.
# Then, we can do it for real.
CREATE TABLESPACE ts1 ADD DATAFILE 'ts1.ibd';
# 4.2 Fail while acquiring dd object during alter:
#     Skipped, since InnoDB does not suppoer
#     ALTER TABLESPACE yet.
# 4.3 Fail while dropping dd object during drop.
SET DEBUG= '+d, fail_while_dropping_dd_object';
DROP TABLESPACE ts1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET DEBUG= '-d, fail_while_dropping_dd_object';
# Do it for real.
# Note: The statement below fails, and there is still an entry for
#       ts1 in mysql.tablespaces.
DROP TABLESPACE ts1;
ERROR HY000: Failed to drop TABLESPACE ts1
SET SESSION debug= '+d,skip_dd_table_access_check';
SELECT COUNT(*) FROM mysql.tablespaces WHERE name LIKE 'ts1';
COUNT(*)
1
# To get around this, recreate the tablespace, which will fail,
# yet also makes the global DD in sync with InnoDB. Then drop.
CREATE TABLESPACE ts1 ADD DATAFILE 'ts1.ibd';
ERROR HY000: Tablespace 'ts1' exists.
DROP TABLESPACE ts1;
SELECT COUNT(*) FROM mysql.tablespaces WHERE name LIKE 'ts1';
COUNT(*)
0
SET SESSION debug= '-d,skip_dd_table_access_check';
###################################################################
